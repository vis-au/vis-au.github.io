/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/build/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./colorbrewer.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./colorbrewer.js":
/*!************************!*\
  !*** ./colorbrewer.js ***!
  \************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var remodel_vis__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! remodel-vis */ "./node_modules/remodel-vis/dist/index.js");
/* harmony import */ var remodel_vis__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(remodel_vis__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var vega_embed__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-embed */ "./node_modules/vega-embed/build/src/embed.js");
/* harmony import */ var d3_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-fetch */ "./node_modules/d3-fetch/src/index.js");
//
//
// LICENSE NOTICE:
// THIS FILE HAS BEEN MODIFIED AND THUS DIFFERS FROM THE ORIGINAL COLOR BREWER PROJECT
//
//





const colorEncodings =  ["color", "fill", "stroke"];

var schemeNames = {sequential: ["BuGn","BuPu","GnBu","OrRd","PuBu","PuBuGn","PuRd","RdPu","YlGn","YlGnBu","YlOrBr","YlOrRd"],
					singlehue:["Blues","Greens","Greys","Oranges","Purples","Reds"],
					diverging: ["BrBG","PiYG","PRGn","PuOr","RdBu","RdGy","RdYlBu","RdYlGn","Spectral"],
					qualitative: ["Accent","Dark2","Paired","Pastel1","Pastel2","Set1","Set2","Set3"] };

var selectedScheme = "BuGn",
	selectedEncoding = "color",
	selectedField = null,
	selectedView = null,
	importedTemplate = null,
	useInvertedScales = false,
	numClasses = 3;

const initialColorScheme = "GnBu";

const initialSchema = {
  "$schema": "https://vega.github.io/schema/vega-lite/v3.json",
  "data": {
    "name": "node320744",
    "url": "https://vega.github.io/editor/data/us-10m.json",
    "format": {
      "type": "topojson",
      "feature": "counties"
    }
  },
  "mark": "geoshape",
  "encoding": {
    "color": {
      "field": "rate",
      "type": "quantitative",
			"legend": null
    }
  },
  "transform": [
    {
      "lookup": "id",
      "from": {
        "data": {
          "url": "https://vega.github.io/editor/data/unemployment.tsv"
        },
        "key": "id",
        "fields": [
          "rate"
        ]
      }
    }
  ],
  "height": 500,
  "width": 700,
  "projection": {
    "type": "albersUsa"
  }
};
const initialField = "rate";

$("#num-classes").change(function(){
	setNumClasses($(this).val());
});
$(".scheme-type").change(function(){
	setSchemeType($(this).attr("id"));
});
$("#color-system").change(updateValues);
$("#layers input").change(layerChange);
$("#filters input").change(showSchemes);
$("#customField").change(function() {
	const customField = $(this).val();
	selectField(customField);
});
$("#invertScalesBox").change(function() {
	useInvertedScales = $(this).prop("checked");
	setScheme(selectedScheme || initialColorScheme);
});

$("#importVegaButton").click(function() {
	const jsonString = $("#vegaImport").val();
  const jsonObject = JSON.parse(jsonString);
	const parser = new remodel_vis__WEBPACK_IMPORTED_MODULE_0__["SpecParser"]();

	importedTemplate = parser.parse(jsonObject);
	selectedView = importedTemplate.getFlatHierarchy().filter(t => t instanceof remodel_vis__WEBPACK_IMPORTED_MODULE_0__["PlotTemplate"])[0];

	initVega();
  updateVegaSpec();
});

$("#transparency-slider").mousedown(function(){
	var max = $("#transparency-track").width();
	var handle = $(this);
	function handleMove(e){
		var l = Math.max(3,3+Math.min(e.pageX - $("#transparency-track").offset().left,max));
		handle.css("left",l);
		$("#county-map g").css("opacity",1-(l-4)/max);
	};
	function handleUp(){
		$(document).off( "mousemove",handleMove );
		$(document).off( "mouseup",handleUp );
	};
	$(document).on( "mousemove",handleMove );
	$(document).on( "mouseup",handleUp );
});

$("#road-color").spectrum({
	color: "#f33",
	showInput:true,
	change: function(color){
		if ( !$("#overlays").children().length ) return;
		$("#road-lines").css("stroke",color.toHexString());
	}
});
$("#city-color").spectrum({
	color: "#000",
	showInput:true,
	change: function(color){
		if ( !$("#overlays").children().length ) return;
		$("#cities").css("fill",color.toHexString());
	}
});
$("#border-color").spectrum({
	color: "#000",
	showInput:true,
	change: function(color){
		$("#county-map g").css("stroke",color.toHexString());
	}
});
$("#bg-color").spectrum({
	color: "#fff",
	showInput:true,
	change: function(color){
		$("#county-map rect").css("fill",color.toHexString());
	}
});

$("#terrain, #solid-color").change(function(){
	if ( $("#terrain").is(":checked") ){
		if ( !$("#terrain-img").length ) $("#map-container").prepend( $("<img id='terrain-img' src='map/terrain.jpg' />").css("left",-31).css("top",-58) );
		$("#county-map rect").css("opacity",0);
		if ( $("#transparency-slider").position().left < 4 ){
			$("#transparency-slider").css("left",$("#transparency-track").position().left + 43);
			$("#county-map g").css("opacity",.5);
		}
	} else {
		$("#county-map rect").css("opacity",1);
		if ( $("#transparency-slider").position().left == $("#transparency-track").position().left + 43 ){
			$("#transparency-slider").css("left",3);
			$("#county-map g").css("opacity",1);
		}
	}
});


function setNumClasses(n)
{
	numClasses = n;
	showSchemes();
}

var selectedSchemeType;
function setSchemeType(type)
{
	selectedSchemeType = type;

	$( "#num-classes option" ).removeAttr( "disabled" );
	switch( selectedSchemeType )
	{
		case "sequential":
			if( $( "#num-classes" ).val() >= 10 )
			{
				$( "#num-classes" ).val( 9 );
				numClasses = 9;
			}
			$( "#num-classes option[name=10], #num-classes option[name=11], #num-classes option[name=12]" ).attr( "disabled", "disabled" );
			break;
		case "diverging":
			if( $( "#num-classes" ).val() >= 12 )
			{
				$( "#num-classes" ).val( 11 );
				numClasses = 11;
			}
			$( "#num-classes option[name=12]" ).attr( "disabled", "disabled" );
			break;
	}
	showSchemes();
}

function showSchemes()
{
	$("#ramps").empty();
	for ( var i in schemeNames[selectedSchemeType]){
		if ( checkFilters(schemeNames[selectedSchemeType][i]) == false ) continue;
		var ramp = $("<div class='ramp "+schemeNames[selectedSchemeType][i]+"'></div>"),
			svg = "<svg width='15' height='75'>";
		for ( var n = 0; n < 5; n++ ){
			svg += "<rect fill="+colorbrewer[schemeNames[selectedSchemeType][i]][5][n]+" width='15' height='15' y='"+n*15+"'/>";
		}
		svg += "</svg>";
		$("#ramps").append(ramp.append(svg).click( function(){
			if ( $(this).hasClass("selected") ) return;
			setScheme( $(this).attr("class").substr(5) );
		}));
	}
	if ( selectedSchemeType == "sequential" ){
		$("#scheme1").css("width","160px");
		$("#multi").show().text("Multi-hue:");
		$("#scheme2").css("width","90px");
		$("#single").show().text("Single hue:");

		$("#singlehue").empty().css("display","inline-block");
		for ( i in schemeNames.singlehue){
			if ( checkFilters(schemeNames.singlehue[i]) == false ) continue;
			var ramp = $("<div class='ramp "+schemeNames.singlehue[i]+"'></div>"),
				svg = "<svg width='15' height='75'>";
			for ( var n = 0; n < 5; n++ ){
				svg += "<rect fill="+colorbrewer[schemeNames.singlehue[i]][5][n]+" width='15' height='15' y='"+n*15+"'/>";
			}
			svg += "</svg>";
			$("#singlehue").append(ramp.append(svg).click( function(){
				if ( $(this).hasClass("selected") ) return;
				setScheme( $(this).attr("class").substr(5) );
			}));
		}
	} else {
		$("#scheme1").css("width","100%");
		$("#multi").hide();
		$("#singlehue").empty();
		$("#single").hide();
	}

	$(".score-icon").show();
	$("#color-system").show();
	if ( $(".ramp."+selectedScheme)[0] ){
		setScheme( selectedScheme );
	} else if ( $("#ramps").children().length ) setScheme( $("#ramps .ramp:first-child").attr("class").substr(5) );
	else clearSchemes();
}

function clearSchemes()
{
	$("#counties g path").css("fill","#ccc");
	$("#color-chips").empty();
	$("#color-values").empty();
	$("#ramps").css("width","100%");
	$("#scheme-name").html("");
	$(".score-icon").hide();
	$("#color-system").hide();
	$("#ramps").append("<p>No color schemes match these criteria.</p><p>Please choose fewer data classes, a different data type, and/or fewer filtering options.</p>");
}

function updateVegaSpec()
{
	if (importedTemplate === null) {
		return;
	}

	const compiler = new remodel_vis__WEBPACK_IMPORTED_MODULE_0__["SpecCompiler"]();
	const spec = compiler.getVegaSpecification(importedTemplate);

	Object(vega_embed__WEBPACK_IMPORTED_MODULE_1__["default"])("#vega-container", spec);
}

function setScheme(s)
{
	$("#county-map g").removeClass(selectedScheme).addClass(s);
	$(".ramp.selected").removeClass("selected");
	selectedScheme = s;
	$(".ramp."+selectedScheme).addClass("selected");
	$("#scheme-name").html(numClasses+"-class "+selectedScheme);
	applyColors();
	drawColorChips();
	$("#permalink").val("http://colorbrewer2.org/?type="+selectedSchemeType+"&scheme="+selectedScheme+"&n="+numClasses);
	window.location.hash = "type="+selectedSchemeType+"&scheme="+selectedScheme+"&n="+numClasses;

	updateValues();

	var cssString = "";
	for ( var i = 0; i < numClasses; i ++ ){
		cssString += "."+selectedScheme+" .q"+i+"-"+numClasses+"{fill:" + colorbrewer[selectedScheme][numClasses][i] + "}";
		if ( i < numClasses - 1 ) cssString += " ";
	}
	$("#copy-css input").val(cssString);

  if (selectedView !== null) {
		const field = selectedField;
		const type = selectedSchemeType === "sequential" ? "quantitative" : selectedSchemeType === "diverging" ? "nominal" : "ordinal";
		const schemeColors = colorbrewer[selectedScheme][numClasses];
		let range = JSON.parse(JSON.stringify(schemeColors));

		if (useInvertedScales) {
			range = range.reverse();
		}

		const visualVariable = selectedEncoding;
		let encoding = selectedView.encodings.get(visualVariable);

		if (!encoding) {
			encoding = {};
		}
		encoding.field = field;
		encoding.type = type;
		encoding.scale = { range };

		selectedView.encodings.set(visualVariable, encoding);
  }

	updateVegaSpec();

	if (importedTemplate !== null) {
		const compiler = new remodel_vis__WEBPACK_IMPORTED_MODULE_0__["SpecCompiler"]();
		const spec = compiler.getVegaSpecification(importedTemplate);
		$("#vegaImport").val(JSON.stringify(spec, null, 2));
	}

	$(".score-icon").attr("class","score-icon");
	var f = checkColorblind(s);
	$("#blind-icon").addClass( !f ? "bad" : (f == 1 ? "ok" : "maybe") ).attr("title",numClasses+"-class "+selectedScheme + " is " + getWord(f)+"color blind friendly");
	f = checkCopy(s);
	$("#copy-icon").addClass( !f ? "bad" : (f == 1 ? "ok" : "maybe") ).attr("title",numClasses+"-class "+selectedScheme + " is " + getWord(f)+"photocopy friendly");
	f = checkScreen(s);
	$("#screen-icon").addClass( !f ? "bad" : (f == 1 ? "ok" : "maybe") ).attr("title",numClasses+"-class "+selectedScheme + " is " + getWord(f)+"LCD friendly");
	f = checkPrint(s);
	$("#print-icon").addClass( !f ? "bad" : (f == 1 ? "ok" : "maybe") ).attr("title",numClasses+"-class "+selectedScheme + " is " + getWord(f)+"print friendly");

	function getWord(w){
		if ( !w ) return "not ";
		if ( w == 1 ) return "";
		if ( w == 2 ) return "possibly not ";
	}
}

/* function getJSON()
{
	var jsonString = "[";
	for ( var i = 0; i < numClasses; i ++ ){
		jsonString += "'" + colorbrewer[selectedScheme][numClasses][i] + "'";
		if ( i < numClasses - 1 ) jsonString += ",";
	}
	jsonString += "]";

	return jsonString;
} */

function checkFilters(scheme,f)
{
	if ( !colorbrewer[scheme][numClasses] ) return false;
	if ( $("#blindcheck").is(":checked") && checkColorblind(scheme) != 1 ) return false;
	if ( $("#printcheck").is(":checked") && checkPrint(scheme) != 1 ) return false;
	if ( $("#copycheck").is(":checked") && checkCopy(scheme) != 1) return false;
	return true;
}
function checkColorblind(scheme)
{
	return colorbrewer[scheme].properties.blind.length > 1 ? colorbrewer[scheme].properties.blind[numClasses-3] : colorbrewer[scheme].properties.blind[0];
}
function checkPrint(scheme)
{
	return colorbrewer[scheme].properties.print.length > 1 ? colorbrewer[scheme].properties.print[numClasses-3] : colorbrewer[scheme].properties.print[0];
}
function checkCopy(scheme)
{
	return colorbrewer[scheme].properties.copy.length > 1 ? colorbrewer[scheme].properties.copy[numClasses-3] : colorbrewer[scheme].properties.copy[0];
}
function checkScreen(scheme)
{
	return colorbrewer[scheme].properties.screen.length > 1 ? colorbrewer[scheme].properties.screen[numClasses-3] : colorbrewer[scheme].properties.screen[0];
}

function applyColors()
{
	if ( !colorbrewer[selectedScheme][numClasses] ){
		$("#counties g path").css("fill","#ccc");
		return;
	}
	for ( var i = 0; i < numClasses; i++ ){
		if ( !$("#borderscheck").is(":checked") ) $("#county-map g .q"+i+"-"+numClasses).css("stroke",colorbrewer[selectedScheme][numClasses][i]);
		$(".q"+i+"-"+numClasses).css("fill",colorbrewer[selectedScheme][numClasses][i]);
	}
}

function drawColorChips()
{
	var svg = "<svg width='24' height='270'>";
	for ( var i = 0; i < numClasses; i++ ){
		svg += "<rect fill="+colorbrewer[selectedScheme][numClasses][i]+" width='24' height='"+Math.min(24,parseInt(265/numClasses))+"' y='"+i*Math.min(24,parseInt(265/numClasses))+"'/>";
	}
	$("#color-chips").empty().append(svg);
	updateValues();
}

function updateValues()
{
	$("#color-values").empty();
	var str = "";
	var s = $("#color-system").val().toLowerCase();
	var jsonString = "[";
	$("#color-chips rect").each(function(i){
		var val = ( s == "cmyk" ? getCMYK(selectedScheme,numClasses,i) : getColorDisplay($(this).css("fill")) );
		str += val + "\n";

		var jsonVal = getColorDisplay($(this).css("fill"));
		if ( s == "hex" ) {
			jsonString += "'" + jsonVal + "'";
		} else {
			jsonString += "'rgb(" + jsonVal + ")'";
		}
		if ( i < numClasses - 1 ) jsonString += ",";
	});
	jsonString += "]";
	str = str.replace( /\n$/, "" );

	$("#color-values").append("<textarea readonly style='line-height:"+Math.min(24,parseInt(265/numClasses))+"px; height:"+Math.min(24,parseInt(265/numClasses))*numClasses+"px'>"+str+"</textarea>");
	$( "#ase" ).attr( "href", "export/ase/" + selectedScheme + "_" + numClasses + ".ase" );
	$( "#gpl" ).attr( "href", "export/gpl/" + selectedScheme + "_" + numClasses + ".gpl" );
	$("#copy-json input").val(jsonString);
}

function getColorDisplay(c,s)
{
	if ( c.indexOf("#") != 0 ){
		var arr = c.replace(/[a-z()\s]/g,"").split(",");
		var rgb = {r:arr[0],g:arr[1],b:arr[2]};
	}
	s = s || $("#color-system").val().toLowerCase();
	if ( s=="hex" ){
		if ( rgb ) return rgbToHex(rgb.r,rgb.g,rgb.b);
		return c;
	}
	if ( s=="rgb" || s=="cmyk" ){
		if (!rgb) rgb = hexToRgb(c);
		return rgb.r + "," + rgb.g + "," + rgb.b;
	}

}
function getCMYK( scheme, classes, n ){
	return cmyk[scheme][classes][n].toString();
}

function selectEncoding(encoding) {
	selectedEncoding = encoding;
	renderVegaUI();
}

function renderActiveEncodings() {
	if (selectedView === null) {
		return;
	}

	const encodingsContainer = $("#encodings");
	encodingsContainer.empty();

	colorEncodings.forEach(encodingName => {
		const isSelected = encodingName === selectedEncoding ? "selectedEncoding" : "";
		const isActive = selectedView.encodings.has(encodingName) ? "activeEncoding" : "";
		const newEncoding = $(`<li class="encoding ${isActive} ${isSelected}">${encodingName}</li>`);
		newEncoding.click(() => selectEncoding(encodingName));
		encodingsContainer.append(newEncoding);
	});
}

function selectView(view) {
	selectedView = view;
	renderVegaUI();
}

function renderViews() {
	if (importedTemplate === null) {
		return;
	}

	const plotViews = importedTemplate.getFlatHierarchy()
		.filter(t => t instanceof remodel_vis__WEBPACK_IMPORTED_MODULE_0__["PlotTemplate"]);

	const viewsContainer = $("#views");
	viewsContainer.empty();

	plotViews.forEach(view => {
		const mark = typeof view.mark === "string" ? view.mark : view.mark.type;
		const isActive = view === selectedView ? "selectedView" : "";
		const newView = $(`<li class="view ${isActive}">${mark}</li>`);
		newView.click(() => selectView(view));
		viewsContainer.append(newView);
	});
}

function selectField(field) {
	selectedField = field;
	renderVegaUI();
}

function renderFields(fields) {
  const fieldsContainer = $("#fields");
	fieldsContainer.empty();

	fields.forEach(field => {
		const isSelected = field === selectedField ? "selectedField" : "";
		const newField = $(`<li class="field ${isSelected}">${field}</li>`);
		newField.click(() => selectField(field));
		fieldsContainer.append(newField);
	});
}

function getFields() {
	if (selectedView === null) {
		return;
	}

	let dataNode = null;

	if (selectedView.dataTransformationNode === null) {
		dataNode = importedTemplate.dataTransformationNode;
		if (dataNode instanceof remodel_vis__WEBPACK_IMPORTED_MODULE_0__["TransformNode"]) {
			dataNode = dataNode.getRootDatasetNode();
		}
	} else if (selectedView.dataTransformationNode instanceof remodel_vis__WEBPACK_IMPORTED_MODULE_0__["TransformNode"]) {
		dataNode = selectedView.dataTransformationNode.getRootDatasetNode();
	} else {
		dataNode = selectedView.dataTransformationNode;
  }

  if (dataNode instanceof remodel_vis__WEBPACK_IMPORTED_MODULE_0__["URLDatasetNode"]) {
    let promise = null;
    if (dataNode.url.indexOf(".csv") > -1) {
      promise = d3_fetch__WEBPACK_IMPORTED_MODULE_2__["csv"](dataNode.url);
    } else if (dataNode.url.indexOf(".json") > -1) {
      promise = d3_fetch__WEBPACK_IMPORTED_MODULE_2__["json"](dataNode.url);
    }

    promise
      .then(data => {
        const fields = Object.keys(data[0]);
        renderFields(fields);
      });
  } else {
    // check if transform or data node
    const fields = Object.keys(dataNode.values[0]);
    renderFields(fields);
  }
}

function renderVegaUI() {
	renderActiveEncodings();
	renderViews();
	getFields();
}

function loadDefaultSchema() {
  const jsonObject = initialSchema;
  const parser = new remodel_vis__WEBPACK_IMPORTED_MODULE_0__["SpecParser"]();

	importedTemplate = parser.parse(jsonObject);
  selectedView = importedTemplate.getFlatHierarchy().filter(t => t instanceof remodel_vis__WEBPACK_IMPORTED_MODULE_0__["PlotTemplate"])[0];
  selectedField = initialField;

  $("#vegaImport").val(JSON.stringify(initialSchema, null, 2));
	$("#customField").val(initialField);
	$("#ramps .ramp.selected").removeClass("selected");
}

function initVega() {
	renderVegaUI();
	updateVegaSpec();
}

function init()
{
	$("#map-container").css("background-image","none");
	var type = getParameterByName("type") || "sequential";
	var scheme = getParameterByName("scheme") || initialColorScheme;
	var n = getParameterByName("n") || 9;
	$("#"+type).prop("checked",true);
	$("#num-classes").val(n);
	setSchemeType(type);
	setNumClasses(n);
  setScheme(scheme);
  loadDefaultSchema();
	initVega();
}

init();

function layerChange()
{
	switch( $(this).attr("id") ){
		case "roadscheck":
		if ( $(this).is(":checked") ){
			if ( !$("#overlays").children().length )
				loadOverlays("roads");
			else
				$("#roads").show();
		} else {
			$("#roads").hide();
		}
		break;

		case "citiescheck":
		if ( $(this).is(":checked") ){
			if ( !$("#overlays").children().length )
				loadOverlays("cities");
			else
				$("#cities").show();
		} else {
			$("#cities").hide();
		}
		break;

		case "borderscheck":
		if ($(this).is(":checked")) $("#county-map g").children().css({"stroke":"inherit","stroke-width":"0.50"});
		else {
			var i=numClasses; while(i--){
				$("#county-map g .q"+i+"-"+numClasses).css({"stroke":colorbrewer[selectedScheme][numClasses][i],"stroke-width":"1"});
			}
		}
	}
}

function loadOverlays(o)
{
	$("#overlays").svg({
		loadURL: "map/overlays.svg",
		onLoad: function(){
			$("#overlays svg").attr("width",756).attr("height",581);
			if ( o == "cities" ) $("#roads").hide();
			else $("#cities").hide();
			$("#cities").css("fill",$("#city-color").spectrum("get").toHexString());
			$("#road-lines").css("stroke",$("#road-color").spectrum("get").toHexString());
		}
	});
}
$(".learn-more, #how, #credits, #downloads").click(function(e){
	e.stopPropagation();
	var page;
	switch( $(this).attr("id") ){
		case "number-learn-more":
		$("#learnmore-title").html("NUMBER OF DATA CLASSES");
		page = "number.html";
		break;

		case "schemes-learn-more":
		$("#learnmore-title").html("TYPES OF COLOR SCHEMES");
		page = "schemes.html";
		break;

		case "filters-learn-more":
		$("#learnmore-title").html("USABILITY ICONS");
		page = "usability.html";
		break;

		case "how":
		$("#learnmore-title").html("HOW TO USE: MAP DIAGNOSTICS");
		page = "howtouse.html";
		break;

		case "credits":
		$("#learnmore-title").html("CREDITS");
		page = "credits.html";
		break;

		case "downloads":
		$("#learnmore-title").html("DOWNLOADS");
		page = "downloads.html";
		break;

		case "context-learn-more":
		$("#learnmore-title").html("MAP CONTEXT and BACKGROUND");
		page = "context.html";
		break;
	}
	if ( page ){
		$("#learnmore #content").load("learnmore/"+page,function(){
			$("#learnmore").show().css("margin-top",($("#wrapper").height()/2-$("#learnmore").height()/2));
		});
		$("#mask").show();
	}
});
$("#learnmore #close, #mask").click(function(){
	$("#learnmore #content").empty();
	$("#learnmore, #mask").hide();
});

$( "#export #tab" ).toggle(
	function(){
		$( "#export" ).animate( { "left" : "265px" } );
	},
	function(){
		$( "#export" ).animate( { "left" : "-2px" } );
	})

function rgb2cmyk (r,g,b) {
	var computedC = 0;
	var computedM = 0;
	var computedY = 0;
	var computedK = 0;

	// BLACK
	if (r==0 && g==0 && b==0) {
	computedK = 1;
	return [0,0,0,100];
	}

	computedC = 1 - (r/255);
	computedM = 1 - (g/255);
	computedY = 1 - (b/255);

	var minCMY = Math.min(computedC,
			  Math.min(computedM,computedY));
	computedC = (computedC - minCMY) / (1 - minCMY) ;
	computedM = (computedM - minCMY) / (1 - minCMY) ;
	computedY = (computedY - minCMY) / (1 - minCMY) ;
	computedK = minCMY;

	return [Math.round(computedC*100),Math.round(computedM*100),Math.round(computedY*100),Math.round(computedK*100)];
}
function rgbToHex(r, g, b) {
    return "#" + ( (1 << 24) | (r << 16) | (g << 8) | b ).toString(16).slice(1);
}
function hexToRgb(hex) {
    var result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
    return result ? {
        r: parseInt(result[1], 16),
        g: parseInt(result[2], 16),
        b: parseInt(result[3], 16)
    } : null;
}

function getParameterByName(name)
{
  name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");
  var regexS = "[\\?&#]" + name + "=([^&#]*)";
  var regex = new RegExp(regexS);
  var results = regex.exec(window.location.href);
  if(results == null)
    return null;
  else
    return decodeURIComponent(results[1].replace(/\+/g, " "));
}


/***/ }),

/***/ "./node_modules/base64-js/index.js":
/*!*****************************************!*\
  !*** ./node_modules/base64-js/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function getLens (b64) {
  var len = b64.length

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // Trim off extra bytes after placeholder bytes are found
  // See: https://github.com/beatgammit/base64-js/issues/42
  var validLen = b64.indexOf('=')
  if (validLen === -1) validLen = len

  var placeHoldersLen = validLen === len
    ? 0
    : 4 - (validLen % 4)

  return [validLen, placeHoldersLen]
}

// base64 is 4/3 + up to two characters of the original data
function byteLength (b64) {
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function _byteLength (b64, validLen, placeHoldersLen) {
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function toByteArray (b64) {
  var tmp
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]

  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))

  var curByte = 0

  // if there are placeholders, only get up to the last complete 4 chars
  var len = placeHoldersLen > 0
    ? validLen - 4
    : validLen

  for (var i = 0; i < len; i += 4) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 18) |
      (revLookup[b64.charCodeAt(i + 1)] << 12) |
      (revLookup[b64.charCodeAt(i + 2)] << 6) |
      revLookup[b64.charCodeAt(i + 3)]
    arr[curByte++] = (tmp >> 16) & 0xFF
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 2) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 2) |
      (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 1) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 10) |
      (revLookup[b64.charCodeAt(i + 1)] << 4) |
      (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] +
    lookup[num >> 12 & 0x3F] +
    lookup[num >> 6 & 0x3F] +
    lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp =
      ((uint8[i] << 16) & 0xFF0000) +
      ((uint8[i + 1] << 8) & 0xFF00) +
      (uint8[i + 2] & 0xFF)
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(
      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)
    ))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    parts.push(
      lookup[tmp >> 2] +
      lookup[(tmp << 4) & 0x3F] +
      '=='
    )
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1]
    parts.push(
      lookup[tmp >> 10] +
      lookup[(tmp >> 4) & 0x3F] +
      lookup[(tmp << 2) & 0x3F] +
      '='
    )
  }

  return parts.join('')
}


/***/ }),

/***/ "./node_modules/buffer/index.js":
/*!**************************************!*\
  !*** ./node_modules/buffer/index.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */



var base64 = __webpack_require__(/*! base64-js */ "./node_modules/base64-js/index.js")
var ieee754 = __webpack_require__(/*! ieee754 */ "./node_modules/ieee754/index.js")
var isArray = __webpack_require__(/*! isarray */ "./node_modules/isarray/index.js")

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Use Object implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * Due to various browser bugs, sometimes the Object implementation will be used even
 * when the browser supports typed arrays.
 *
 * Note:
 *
 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
 *
 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
 *
 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
 *     incorrect length in some situations.

 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
 * get the Object implementation, which is slower but behaves correctly.
 */
Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined
  ? global.TYPED_ARRAY_SUPPORT
  : typedArraySupport()

/*
 * Export kMaxLength after typed array support is determined.
 */
exports.kMaxLength = kMaxLength()

function typedArraySupport () {
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}
    return arr.foo() === 42 && // typed array instances can be augmented
        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
  } catch (e) {
    return false
  }
}

function kMaxLength () {
  return Buffer.TYPED_ARRAY_SUPPORT
    ? 0x7fffffff
    : 0x3fffffff
}

function createBuffer (that, length) {
  if (kMaxLength() < length) {
    throw new RangeError('Invalid typed array length')
  }
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = new Uint8Array(length)
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    if (that === null) {
      that = new Buffer(length)
    }
    that.length = length
  }

  return that
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
    return new Buffer(arg, encodingOrOffset, length)
  }

  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new Error(
        'If encoding is specified then the first argument must be a string'
      )
    }
    return allocUnsafe(this, arg)
  }
  return from(this, arg, encodingOrOffset, length)
}

Buffer.poolSize = 8192 // not used by this implementation

// TODO: Legacy, not needed anymore. Remove in next major version.
Buffer._augment = function (arr) {
  arr.__proto__ = Buffer.prototype
  return arr
}

function from (that, value, encodingOrOffset, length) {
  if (typeof value === 'number') {
    throw new TypeError('"value" argument must not be a number')
  }

  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
    return fromArrayBuffer(that, value, encodingOrOffset, length)
  }

  if (typeof value === 'string') {
    return fromString(that, value, encodingOrOffset)
  }

  return fromObject(that, value)
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(null, value, encodingOrOffset, length)
}

if (Buffer.TYPED_ARRAY_SUPPORT) {
  Buffer.prototype.__proto__ = Uint8Array.prototype
  Buffer.__proto__ = Uint8Array
  if (typeof Symbol !== 'undefined' && Symbol.species &&
      Buffer[Symbol.species] === Buffer) {
    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
    Object.defineProperty(Buffer, Symbol.species, {
      value: null,
      configurable: true
    })
  }
}

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be a number')
  } else if (size < 0) {
    throw new RangeError('"size" argument must not be negative')
  }
}

function alloc (that, size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(that, size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(that, size).fill(fill, encoding)
      : createBuffer(that, size).fill(fill)
  }
  return createBuffer(that, size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(null, size, fill, encoding)
}

function allocUnsafe (that, size) {
  assertSize(size)
  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) {
    for (var i = 0; i < size; ++i) {
      that[i] = 0
    }
  }
  return that
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(null, size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(null, size)
}

function fromString (that, string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('"encoding" must be a valid string encoding')
  }

  var length = byteLength(string, encoding) | 0
  that = createBuffer(that, length)

  var actual = that.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    that = that.slice(0, actual)
  }

  return that
}

function fromArrayLike (that, array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  that = createBuffer(that, length)
  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

function fromArrayBuffer (that, array, byteOffset, length) {
  array.byteLength // this throws if `array` is not a valid ArrayBuffer

  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('\'offset\' is out of bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('\'length\' is out of bounds')
  }

  if (byteOffset === undefined && length === undefined) {
    array = new Uint8Array(array)
  } else if (length === undefined) {
    array = new Uint8Array(array, byteOffset)
  } else {
    array = new Uint8Array(array, byteOffset, length)
  }

  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = array
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    that = fromArrayLike(that, array)
  }
  return that
}

function fromObject (that, obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    that = createBuffer(that, len)

    if (that.length === 0) {
      return that
    }

    obj.copy(that, 0, 0, len)
    return that
  }

  if (obj) {
    if ((typeof ArrayBuffer !== 'undefined' &&
        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {
      if (typeof obj.length !== 'number' || isnan(obj.length)) {
        return createBuffer(that, 0)
      }
      return fromArrayLike(that, obj)
    }

    if (obj.type === 'Buffer' && isArray(obj.data)) {
      return fromArrayLike(that, obj.data)
    }
  }

  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
}

function checked (length) {
  // Note: cannot use `length < kMaxLength()` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= kMaxLength()) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return !!(b != null && b._isBuffer)
}

Buffer.compare = function compare (a, b) {
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError('Arguments must be Buffers')
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&
      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    string = '' + string
  }

  var len = string.length
  if (len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
      case undefined:
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) return utf8ToBytes(string).length // assume utf8
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
// Buffer instances.
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length | 0
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  if (this.length > 0) {
    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
    if (this.length > max) str += ' ... '
  }
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (!Buffer.isBuffer(target)) {
    throw new TypeError('Argument must be a Buffer')
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset  // Coerce to Number.
  if (isNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (Buffer.TYPED_ARRAY_SUPPORT &&
        typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  // must be an even number of digits
  var strLen = string.length
  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (isNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset | 0
    if (isFinite(length)) {
      length = length | 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  // legacy write(string, encoding, offset, length) - remove in v0.13
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
      : (firstByte > 0xBF) ? 2
      : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    newBuf = this.subarray(start, end)
    newBuf.__proto__ = Buffer.prototype
  } else {
    var sliceLen = end - start
    newBuf = new Buffer(sliceLen, undefined)
    for (var i = 0; i < sliceLen; ++i) {
      newBuf[i] = this[i + start]
    }
  }

  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  this[offset] = (value & 0xff)
  return offset + 1
}

function objectWriteUInt16 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
      (littleEndian ? i : 1 - i) * 8
  }
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

function objectWriteUInt32 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffffffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
  }
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset + 3] = (value >>> 24)
    this[offset + 2] = (value >>> 16)
    this[offset + 1] = (value >>> 8)
    this[offset] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
    this[offset + 2] = (value >>> 16)
    this[offset + 3] = (value >>> 24)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start
  var i

  if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
    // ascending copy from start
    for (i = 0; i < len; ++i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, start + len),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if (code < 256) {
        val = code
      }
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : utf8ToBytes(new Buffer(val, encoding).toString())
    var len = bytes.length
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function stringtrim (str) {
  if (str.trim) return str.trim()
  return str.replace(/^\s+|\s+$/g, '')
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

function isnan (val) {
  return val !== val // eslint-disable-line no-self-compare
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/clone/clone.js":
/*!*************************************!*\
  !*** ./node_modules/clone/clone.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {var clone = (function() {
'use strict';

function _instanceof(obj, type) {
  return type != null && obj instanceof type;
}

var nativeMap;
try {
  nativeMap = Map;
} catch(_) {
  // maybe a reference error because no `Map`. Give it a dummy value that no
  // value will ever be an instanceof.
  nativeMap = function() {};
}

var nativeSet;
try {
  nativeSet = Set;
} catch(_) {
  nativeSet = function() {};
}

var nativePromise;
try {
  nativePromise = Promise;
} catch(_) {
  nativePromise = function() {};
}

/**
 * Clones (copies) an Object using deep copying.
 *
 * This function supports circular references by default, but if you are certain
 * there are no circular references in your object, you can save some CPU time
 * by calling clone(obj, false).
 *
 * Caution: if `circular` is false and `parent` contains circular references,
 * your program may enter an infinite loop and crash.
 *
 * @param `parent` - the object to be cloned
 * @param `circular` - set to true if the object to be cloned may contain
 *    circular references. (optional - true by default)
 * @param `depth` - set to a number if the object is only to be cloned to
 *    a particular depth. (optional - defaults to Infinity)
 * @param `prototype` - sets the prototype to be used when cloning an object.
 *    (optional - defaults to parent prototype).
 * @param `includeNonEnumerable` - set to true if the non-enumerable properties
 *    should be cloned as well. Non-enumerable properties on the prototype
 *    chain will be ignored. (optional - false by default)
*/
function clone(parent, circular, depth, prototype, includeNonEnumerable) {
  if (typeof circular === 'object') {
    depth = circular.depth;
    prototype = circular.prototype;
    includeNonEnumerable = circular.includeNonEnumerable;
    circular = circular.circular;
  }
  // maintain two arrays for circular references, where corresponding parents
  // and children have the same index
  var allParents = [];
  var allChildren = [];

  var useBuffer = typeof Buffer != 'undefined';

  if (typeof circular == 'undefined')
    circular = true;

  if (typeof depth == 'undefined')
    depth = Infinity;

  // recurse this function so we don't reset allParents and allChildren
  function _clone(parent, depth) {
    // cloning null always returns null
    if (parent === null)
      return null;

    if (depth === 0)
      return parent;

    var child;
    var proto;
    if (typeof parent != 'object') {
      return parent;
    }

    if (_instanceof(parent, nativeMap)) {
      child = new nativeMap();
    } else if (_instanceof(parent, nativeSet)) {
      child = new nativeSet();
    } else if (_instanceof(parent, nativePromise)) {
      child = new nativePromise(function (resolve, reject) {
        parent.then(function(value) {
          resolve(_clone(value, depth - 1));
        }, function(err) {
          reject(_clone(err, depth - 1));
        });
      });
    } else if (clone.__isArray(parent)) {
      child = [];
    } else if (clone.__isRegExp(parent)) {
      child = new RegExp(parent.source, __getRegExpFlags(parent));
      if (parent.lastIndex) child.lastIndex = parent.lastIndex;
    } else if (clone.__isDate(parent)) {
      child = new Date(parent.getTime());
    } else if (useBuffer && Buffer.isBuffer(parent)) {
      if (Buffer.allocUnsafe) {
        // Node.js >= 4.5.0
        child = Buffer.allocUnsafe(parent.length);
      } else {
        // Older Node.js versions
        child = new Buffer(parent.length);
      }
      parent.copy(child);
      return child;
    } else if (_instanceof(parent, Error)) {
      child = Object.create(parent);
    } else {
      if (typeof prototype == 'undefined') {
        proto = Object.getPrototypeOf(parent);
        child = Object.create(proto);
      }
      else {
        child = Object.create(prototype);
        proto = prototype;
      }
    }

    if (circular) {
      var index = allParents.indexOf(parent);

      if (index != -1) {
        return allChildren[index];
      }
      allParents.push(parent);
      allChildren.push(child);
    }

    if (_instanceof(parent, nativeMap)) {
      parent.forEach(function(value, key) {
        var keyChild = _clone(key, depth - 1);
        var valueChild = _clone(value, depth - 1);
        child.set(keyChild, valueChild);
      });
    }
    if (_instanceof(parent, nativeSet)) {
      parent.forEach(function(value) {
        var entryChild = _clone(value, depth - 1);
        child.add(entryChild);
      });
    }

    for (var i in parent) {
      var attrs;
      if (proto) {
        attrs = Object.getOwnPropertyDescriptor(proto, i);
      }

      if (attrs && attrs.set == null) {
        continue;
      }
      child[i] = _clone(parent[i], depth - 1);
    }

    if (Object.getOwnPropertySymbols) {
      var symbols = Object.getOwnPropertySymbols(parent);
      for (var i = 0; i < symbols.length; i++) {
        // Don't need to worry about cloning a symbol because it is a primitive,
        // like a number or string.
        var symbol = symbols[i];
        var descriptor = Object.getOwnPropertyDescriptor(parent, symbol);
        if (descriptor && !descriptor.enumerable && !includeNonEnumerable) {
          continue;
        }
        child[symbol] = _clone(parent[symbol], depth - 1);
        if (!descriptor.enumerable) {
          Object.defineProperty(child, symbol, {
            enumerable: false
          });
        }
      }
    }

    if (includeNonEnumerable) {
      var allPropertyNames = Object.getOwnPropertyNames(parent);
      for (var i = 0; i < allPropertyNames.length; i++) {
        var propertyName = allPropertyNames[i];
        var descriptor = Object.getOwnPropertyDescriptor(parent, propertyName);
        if (descriptor && descriptor.enumerable) {
          continue;
        }
        child[propertyName] = _clone(parent[propertyName], depth - 1);
        Object.defineProperty(child, propertyName, {
          enumerable: false
        });
      }
    }

    return child;
  }

  return _clone(parent, depth);
}

/**
 * Simple flat clone using prototype, accepts only objects, usefull for property
 * override on FLAT configuration object (no nested props).
 *
 * USE WITH CAUTION! This may not behave as you wish if you do not know how this
 * works.
 */
clone.clonePrototype = function clonePrototype(parent) {
  if (parent === null)
    return null;

  var c = function () {};
  c.prototype = parent;
  return new c();
};

// private utility functions

function __objToStr(o) {
  return Object.prototype.toString.call(o);
}
clone.__objToStr = __objToStr;

function __isDate(o) {
  return typeof o === 'object' && __objToStr(o) === '[object Date]';
}
clone.__isDate = __isDate;

function __isArray(o) {
  return typeof o === 'object' && __objToStr(o) === '[object Array]';
}
clone.__isArray = __isArray;

function __isRegExp(o) {
  return typeof o === 'object' && __objToStr(o) === '[object RegExp]';
}
clone.__isRegExp = __isRegExp;

function __getRegExpFlags(re) {
  var flags = '';
  if (re.global) flags += 'g';
  if (re.ignoreCase) flags += 'i';
  if (re.multiline) flags += 'm';
  return flags;
}
clone.__getRegExpFlags = __getRegExpFlags;

return clone;
})();

if ( true && module.exports) {
  module.exports = clone;
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../buffer/index.js */ "./node_modules/buffer/index.js").Buffer))

/***/ }),

/***/ "./node_modules/d3-array/src/array.js":
/*!********************************************!*\
  !*** ./node_modules/d3-array/src/array.js ***!
  \********************************************/
/*! exports provided: slice, map */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "slice", function() { return slice; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "map", function() { return map; });
var array = Array.prototype;

var slice = array.slice;
var map = array.map;


/***/ }),

/***/ "./node_modules/d3-array/src/ascending.js":
/*!************************************************!*\
  !*** ./node_modules/d3-array/src/ascending.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(a, b) {
  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
});


/***/ }),

/***/ "./node_modules/d3-array/src/bin.js":
/*!******************************************!*\
  !*** ./node_modules/d3-array/src/bin.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./array.js */ "./node_modules/d3-array/src/array.js");
/* harmony import */ var _bisect_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bisect.js */ "./node_modules/d3-array/src/bisect.js");
/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./constant.js */ "./node_modules/d3-array/src/constant.js");
/* harmony import */ var _extent_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./extent.js */ "./node_modules/d3-array/src/extent.js");
/* harmony import */ var _identity_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./identity.js */ "./node_modules/d3-array/src/identity.js");
/* harmony import */ var _range_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./range.js */ "./node_modules/d3-array/src/range.js");
/* harmony import */ var _ticks_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ticks.js */ "./node_modules/d3-array/src/ticks.js");
/* harmony import */ var _threshold_sturges_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./threshold/sturges.js */ "./node_modules/d3-array/src/threshold/sturges.js");









/* harmony default export */ __webpack_exports__["default"] = (function() {
  var value = _identity_js__WEBPACK_IMPORTED_MODULE_4__["default"],
      domain = _extent_js__WEBPACK_IMPORTED_MODULE_3__["default"],
      threshold = _threshold_sturges_js__WEBPACK_IMPORTED_MODULE_7__["default"];

  function histogram(data) {
    if (!Array.isArray(data)) data = Array.from(data);

    var i,
        n = data.length,
        x,
        values = new Array(n);

    for (i = 0; i < n; ++i) {
      values[i] = value(data[i], i, data);
    }

    var xz = domain(values),
        x0 = xz[0],
        x1 = xz[1],
        tz = threshold(values, x0, x1);

    // Convert number of thresholds into uniform thresholds.
    if (!Array.isArray(tz)) {
      tz = Object(_ticks_js__WEBPACK_IMPORTED_MODULE_6__["tickStep"])(x0, x1, tz);
      tz = Object(_range_js__WEBPACK_IMPORTED_MODULE_5__["default"])(Math.ceil(x0 / tz) * tz, x1, tz); // exclusive
    }

    // Remove any thresholds outside the domain.
    var m = tz.length;
    while (tz[0] <= x0) tz.shift(), --m;
    while (tz[m - 1] > x1) tz.pop(), --m;

    var bins = new Array(m + 1),
        bin;

    // Initialize bins.
    for (i = 0; i <= m; ++i) {
      bin = bins[i] = [];
      bin.x0 = i > 0 ? tz[i - 1] : x0;
      bin.x1 = i < m ? tz[i] : x1;
    }

    // Assign data to bins by value, ignoring any outside the domain.
    for (i = 0; i < n; ++i) {
      x = values[i];
      if (x0 <= x && x <= x1) {
        bins[Object(_bisect_js__WEBPACK_IMPORTED_MODULE_1__["default"])(tz, x, 0, m)].push(data[i]);
      }
    }

    return bins;
  }

  histogram.value = function(_) {
    return arguments.length ? (value = typeof _ === "function" ? _ : Object(_constant_js__WEBPACK_IMPORTED_MODULE_2__["default"])(_), histogram) : value;
  };

  histogram.domain = function(_) {
    return arguments.length ? (domain = typeof _ === "function" ? _ : Object(_constant_js__WEBPACK_IMPORTED_MODULE_2__["default"])([_[0], _[1]]), histogram) : domain;
  };

  histogram.thresholds = function(_) {
    return arguments.length ? (threshold = typeof _ === "function" ? _ : Array.isArray(_) ? Object(_constant_js__WEBPACK_IMPORTED_MODULE_2__["default"])(_array_js__WEBPACK_IMPORTED_MODULE_0__["slice"].call(_)) : Object(_constant_js__WEBPACK_IMPORTED_MODULE_2__["default"])(_), histogram) : threshold;
  };

  return histogram;
});


/***/ }),

/***/ "./node_modules/d3-array/src/bisect.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-array/src/bisect.js ***!
  \*********************************************/
/*! exports provided: bisectRight, bisectLeft, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bisectRight", function() { return bisectRight; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bisectLeft", function() { return bisectLeft; });
/* harmony import */ var _ascending_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ascending.js */ "./node_modules/d3-array/src/ascending.js");
/* harmony import */ var _bisector_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bisector.js */ "./node_modules/d3-array/src/bisector.js");



var ascendingBisect = Object(_bisector_js__WEBPACK_IMPORTED_MODULE_1__["default"])(_ascending_js__WEBPACK_IMPORTED_MODULE_0__["default"]);
var bisectRight = ascendingBisect.right;
var bisectLeft = ascendingBisect.left;
/* harmony default export */ __webpack_exports__["default"] = (bisectRight);


/***/ }),

/***/ "./node_modules/d3-array/src/bisector.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-array/src/bisector.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ascending_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ascending.js */ "./node_modules/d3-array/src/ascending.js");


/* harmony default export */ __webpack_exports__["default"] = (function(compare) {
  if (compare.length === 1) compare = ascendingComparator(compare);
  return {
    left: function(a, x, lo, hi) {
      if (lo == null) lo = 0;
      if (hi == null) hi = a.length;
      while (lo < hi) {
        var mid = lo + hi >>> 1;
        if (compare(a[mid], x) < 0) lo = mid + 1;
        else hi = mid;
      }
      return lo;
    },
    right: function(a, x, lo, hi) {
      if (lo == null) lo = 0;
      if (hi == null) hi = a.length;
      while (lo < hi) {
        var mid = lo + hi >>> 1;
        if (compare(a[mid], x) > 0) hi = mid;
        else lo = mid + 1;
      }
      return lo;
    }
  };
});

function ascendingComparator(f) {
  return function(d, x) {
    return Object(_ascending_js__WEBPACK_IMPORTED_MODULE_0__["default"])(f(d), x);
  };
}


/***/ }),

/***/ "./node_modules/d3-array/src/constant.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-array/src/constant.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(x) {
  return function() {
    return x;
  };
});


/***/ }),

/***/ "./node_modules/d3-array/src/count.js":
/*!********************************************!*\
  !*** ./node_modules/d3-array/src/count.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return count; });
function count(values, valueof) {
  let count = 0;
  if (valueof === undefined) {
    for (const value of values) {
      if (value != null && value >= value) {
        ++count;
      }
    }
  } else {
    let index = -1;
    for (let value of values) {
      if ((value = valueof(value, ++index, values)) != null && value >= value) {
        ++count;
      }
    }
  }
  return count;
}


/***/ }),

/***/ "./node_modules/d3-array/src/cross.js":
/*!********************************************!*\
  !*** ./node_modules/d3-array/src/cross.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return cross; });
function length(array) {
  return array.length | 0;
}

function empty(length) {
  return !(length > 0);
}

function arrayify(values) {
  return typeof values !== "object" || "length" in values ? values : Array.from(values);
}

function reducer(reduce) {
  return values => reduce(...values);
}

function cross(...values) {
  const reduce = typeof values[values.length - 1] === "function" && reducer(values.pop());
  values = values.map(arrayify);
  const lengths = values.map(length);
  const j = values.length - 1;
  const index = new Array(j + 1).fill(0);
  const product = [];
  if (j < 0 || lengths.some(empty)) return product;
  while (true) {
    product.push(index.map((j, i) => values[i][j]));
    let i = j;
    while (++index[i] === lengths[i]) {
      if (i === 0) return reduce ? product.map(reduce) : product;
      index[i--] = 0;
    }
  }
}


/***/ }),

/***/ "./node_modules/d3-array/src/descending.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-array/src/descending.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(a, b) {
  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;
});


/***/ }),

/***/ "./node_modules/d3-array/src/deviation.js":
/*!************************************************!*\
  !*** ./node_modules/d3-array/src/deviation.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return deviation; });
/* harmony import */ var _variance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./variance.js */ "./node_modules/d3-array/src/variance.js");


function deviation(values, valueof) {
  const v = Object(_variance_js__WEBPACK_IMPORTED_MODULE_0__["default"])(values, valueof);
  return v ? Math.sqrt(v) : v;
}


/***/ }),

/***/ "./node_modules/d3-array/src/extent.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-array/src/extent.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(values, valueof) {
  let min;
  let max;
  if (valueof === undefined) {
    for (const value of values) {
      if (value != null) {
        if (min === undefined) {
          if (value >= value) min = max = value;
        } else {
          if (min > value) min = value;
          if (max < value) max = value;
        }
      }
    }
  } else {
    let index = -1;
    for (let value of values) {
      if ((value = valueof(value, ++index, values)) != null) {
        if (min === undefined) {
          if (value >= value) min = max = value;
        } else {
          if (min > value) min = value;
          if (max < value) max = value;
        }
      }
    }
  }
  return [min, max];
});


/***/ }),

/***/ "./node_modules/d3-array/src/group.js":
/*!********************************************!*\
  !*** ./node_modules/d3-array/src/group.js ***!
  \********************************************/
/*! exports provided: default, groups, rollup, rollups */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return group; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "groups", function() { return groups; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rollup", function() { return rollup; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rollups", function() { return rollups; });
/* harmony import */ var _identity_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./identity.js */ "./node_modules/d3-array/src/identity.js");


function group(values, ...keys) {
  return nest(values, _identity_js__WEBPACK_IMPORTED_MODULE_0__["default"], _identity_js__WEBPACK_IMPORTED_MODULE_0__["default"], keys);
}

function groups(values, ...keys) {
  return nest(values, Array.from, _identity_js__WEBPACK_IMPORTED_MODULE_0__["default"], keys);
}

function rollup(values, reduce, ...keys) {
  return nest(values, _identity_js__WEBPACK_IMPORTED_MODULE_0__["default"], reduce, keys);
}

function rollups(values, reduce, ...keys) {
  return nest(values, Array.from, reduce, keys);
}

function nest(values, map, reduce, keys) {
  return (function regroup(values, i) {
    if (i >= keys.length) return reduce(values);
    const groups = new Map();
    const keyof = keys[i++];
    let index = -1;
    for (const value of values) {
      const key = keyof(value, ++index, values);
      const group = groups.get(key);
      if (group) group.push(value);
      else groups.set(key, [value]);
    }
    for (const [key, values] of groups) {
      groups.set(key, regroup(values, i));
    }
    return map(groups);
  })(values, 0);
}


/***/ }),

/***/ "./node_modules/d3-array/src/identity.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-array/src/identity.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(x) {
  return x;
});


/***/ }),

/***/ "./node_modules/d3-array/src/index.js":
/*!********************************************!*\
  !*** ./node_modules/d3-array/src/index.js ***!
  \********************************************/
/*! exports provided: bisect, bisectRight, bisectLeft, ascending, bisector, count, cross, descending, deviation, extent, group, groups, rollup, rollups, bin, histogram, thresholdFreedmanDiaconis, thresholdScott, thresholdSturges, max, maxIndex, mean, median, merge, min, minIndex, pairs, permute, quantile, quickselect, range, least, leastIndex, scan, shuffle, sum, ticks, tickIncrement, tickStep, transpose, variance, zip */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _bisect_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bisect.js */ "./node_modules/d3-array/src/bisect.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bisect", function() { return _bisect_js__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bisectRight", function() { return _bisect_js__WEBPACK_IMPORTED_MODULE_0__["bisectRight"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bisectLeft", function() { return _bisect_js__WEBPACK_IMPORTED_MODULE_0__["bisectLeft"]; });

/* harmony import */ var _ascending_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ascending.js */ "./node_modules/d3-array/src/ascending.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ascending", function() { return _ascending_js__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _bisector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bisector.js */ "./node_modules/d3-array/src/bisector.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bisector", function() { return _bisector_js__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _count_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./count.js */ "./node_modules/d3-array/src/count.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "count", function() { return _count_js__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _cross_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./cross.js */ "./node_modules/d3-array/src/cross.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cross", function() { return _cross_js__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _descending_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./descending.js */ "./node_modules/d3-array/src/descending.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "descending", function() { return _descending_js__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _deviation_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./deviation.js */ "./node_modules/d3-array/src/deviation.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "deviation", function() { return _deviation_js__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony import */ var _extent_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./extent.js */ "./node_modules/d3-array/src/extent.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "extent", function() { return _extent_js__WEBPACK_IMPORTED_MODULE_7__["default"]; });

/* harmony import */ var _group_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./group.js */ "./node_modules/d3-array/src/group.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "group", function() { return _group_js__WEBPACK_IMPORTED_MODULE_8__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "groups", function() { return _group_js__WEBPACK_IMPORTED_MODULE_8__["groups"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "rollup", function() { return _group_js__WEBPACK_IMPORTED_MODULE_8__["rollup"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "rollups", function() { return _group_js__WEBPACK_IMPORTED_MODULE_8__["rollups"]; });

/* harmony import */ var _bin_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./bin.js */ "./node_modules/d3-array/src/bin.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bin", function() { return _bin_js__WEBPACK_IMPORTED_MODULE_9__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "histogram", function() { return _bin_js__WEBPACK_IMPORTED_MODULE_9__["default"]; });

/* harmony import */ var _threshold_freedmanDiaconis_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./threshold/freedmanDiaconis.js */ "./node_modules/d3-array/src/threshold/freedmanDiaconis.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "thresholdFreedmanDiaconis", function() { return _threshold_freedmanDiaconis_js__WEBPACK_IMPORTED_MODULE_10__["default"]; });

/* harmony import */ var _threshold_scott_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./threshold/scott.js */ "./node_modules/d3-array/src/threshold/scott.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "thresholdScott", function() { return _threshold_scott_js__WEBPACK_IMPORTED_MODULE_11__["default"]; });

/* harmony import */ var _threshold_sturges_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./threshold/sturges.js */ "./node_modules/d3-array/src/threshold/sturges.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "thresholdSturges", function() { return _threshold_sturges_js__WEBPACK_IMPORTED_MODULE_12__["default"]; });

/* harmony import */ var _max_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./max.js */ "./node_modules/d3-array/src/max.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "max", function() { return _max_js__WEBPACK_IMPORTED_MODULE_13__["default"]; });

/* harmony import */ var _maxIndex_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./maxIndex.js */ "./node_modules/d3-array/src/maxIndex.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "maxIndex", function() { return _maxIndex_js__WEBPACK_IMPORTED_MODULE_14__["default"]; });

/* harmony import */ var _mean_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./mean.js */ "./node_modules/d3-array/src/mean.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mean", function() { return _mean_js__WEBPACK_IMPORTED_MODULE_15__["default"]; });

/* harmony import */ var _median_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./median.js */ "./node_modules/d3-array/src/median.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "median", function() { return _median_js__WEBPACK_IMPORTED_MODULE_16__["default"]; });

/* harmony import */ var _merge_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./merge.js */ "./node_modules/d3-array/src/merge.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "merge", function() { return _merge_js__WEBPACK_IMPORTED_MODULE_17__["default"]; });

/* harmony import */ var _min_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./min.js */ "./node_modules/d3-array/src/min.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "min", function() { return _min_js__WEBPACK_IMPORTED_MODULE_18__["default"]; });

/* harmony import */ var _minIndex_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./minIndex.js */ "./node_modules/d3-array/src/minIndex.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "minIndex", function() { return _minIndex_js__WEBPACK_IMPORTED_MODULE_19__["default"]; });

/* harmony import */ var _pairs_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./pairs.js */ "./node_modules/d3-array/src/pairs.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pairs", function() { return _pairs_js__WEBPACK_IMPORTED_MODULE_20__["default"]; });

/* harmony import */ var _permute_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./permute.js */ "./node_modules/d3-array/src/permute.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "permute", function() { return _permute_js__WEBPACK_IMPORTED_MODULE_21__["default"]; });

/* harmony import */ var _quantile_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./quantile.js */ "./node_modules/d3-array/src/quantile.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "quantile", function() { return _quantile_js__WEBPACK_IMPORTED_MODULE_22__["default"]; });

/* harmony import */ var _quickselect_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./quickselect.js */ "./node_modules/d3-array/src/quickselect.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "quickselect", function() { return _quickselect_js__WEBPACK_IMPORTED_MODULE_23__["default"]; });

/* harmony import */ var _range_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./range.js */ "./node_modules/d3-array/src/range.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "range", function() { return _range_js__WEBPACK_IMPORTED_MODULE_24__["default"]; });

/* harmony import */ var _least_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./least.js */ "./node_modules/d3-array/src/least.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "least", function() { return _least_js__WEBPACK_IMPORTED_MODULE_25__["default"]; });

/* harmony import */ var _leastIndex_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./leastIndex.js */ "./node_modules/d3-array/src/leastIndex.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "leastIndex", function() { return _leastIndex_js__WEBPACK_IMPORTED_MODULE_26__["default"]; });

/* harmony import */ var _scan_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./scan.js */ "./node_modules/d3-array/src/scan.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scan", function() { return _scan_js__WEBPACK_IMPORTED_MODULE_27__["default"]; });

/* harmony import */ var _shuffle_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./shuffle.js */ "./node_modules/d3-array/src/shuffle.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "shuffle", function() { return _shuffle_js__WEBPACK_IMPORTED_MODULE_28__["default"]; });

/* harmony import */ var _sum_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./sum.js */ "./node_modules/d3-array/src/sum.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sum", function() { return _sum_js__WEBPACK_IMPORTED_MODULE_29__["default"]; });

/* harmony import */ var _ticks_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./ticks.js */ "./node_modules/d3-array/src/ticks.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ticks", function() { return _ticks_js__WEBPACK_IMPORTED_MODULE_30__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tickIncrement", function() { return _ticks_js__WEBPACK_IMPORTED_MODULE_30__["tickIncrement"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tickStep", function() { return _ticks_js__WEBPACK_IMPORTED_MODULE_30__["tickStep"]; });

/* harmony import */ var _transpose_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./transpose.js */ "./node_modules/d3-array/src/transpose.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "transpose", function() { return _transpose_js__WEBPACK_IMPORTED_MODULE_31__["default"]; });

/* harmony import */ var _variance_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./variance.js */ "./node_modules/d3-array/src/variance.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "variance", function() { return _variance_js__WEBPACK_IMPORTED_MODULE_32__["default"]; });

/* harmony import */ var _zip_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./zip.js */ "./node_modules/d3-array/src/zip.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "zip", function() { return _zip_js__WEBPACK_IMPORTED_MODULE_33__["default"]; });










 // Deprecated; use bin.

















 // Deprecated; use leastIndex.








/***/ }),

/***/ "./node_modules/d3-array/src/least.js":
/*!********************************************!*\
  !*** ./node_modules/d3-array/src/least.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return least; });
/* harmony import */ var _ascending_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ascending.js */ "./node_modules/d3-array/src/ascending.js");


function least(values, compare = _ascending_js__WEBPACK_IMPORTED_MODULE_0__["default"]) {
  let min;
  let defined = false;
  if (compare.length === 1) {
    let minValue;
    for (const element of values) {
      const value = compare(element);
      if (defined
          ? Object(_ascending_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value, minValue) < 0
          : Object(_ascending_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value, value) === 0) {
        min = element;
        minValue = value;
        defined = true;
      }
    }
  } else {
    for (const value of values) {
      if (defined
          ? compare(value, min) < 0
          : compare(value, value) === 0) {
        min = value;
        defined = true;
      }
    }
  }
  return min;
}


/***/ }),

/***/ "./node_modules/d3-array/src/leastIndex.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-array/src/leastIndex.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return leastIndex; });
/* harmony import */ var _ascending_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ascending.js */ "./node_modules/d3-array/src/ascending.js");


function leastIndex(values, compare = _ascending_js__WEBPACK_IMPORTED_MODULE_0__["default"]) {
  let min;
  let minIndex = -1;
  let index = -1;
  if (compare.length === 1) {
    for (const element of values) {
      ++index;
      const value = compare(element);
      if (minIndex < 0
          ? Object(_ascending_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value, value) === 0
          : Object(_ascending_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value, min) < 0) {
        min = value;
        minIndex = index;
      }
    }
  } else {
    for (const value of values) {
      ++index;
      if (minIndex < 0
          ? compare(value, value) === 0
          : compare(value, min) < 0) {
        min = value;
        minIndex = index;
      }
    }
  }
  return minIndex;
}


/***/ }),

/***/ "./node_modules/d3-array/src/max.js":
/*!******************************************!*\
  !*** ./node_modules/d3-array/src/max.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return max; });
function max(values, valueof) {
  let max;
  if (valueof === undefined) {
    for (const value of values) {
      if (value != null
          && (max < value || (max === undefined && value >= value))) {
        max = value;
      }
    }
  } else {
    let index = -1;
    for (let value of values) {
      if ((value = valueof(value, ++index, values)) != null
          && (max < value || (max === undefined && value >= value))) {
        max = value;
      }
    }
  }
  return max;
}


/***/ }),

/***/ "./node_modules/d3-array/src/maxIndex.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-array/src/maxIndex.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return maxIndex; });
function maxIndex(values, valueof) {
  let max;
  let maxIndex = -1;
  let index = -1;
  if (valueof === undefined) {
    for (const value of values) {
      ++index;
      if (value != null
          && (max < value || (max === undefined && value >= value))) {
        max = value, maxIndex = index;
      }
    }
  } else {
    for (let value of values) {
      if ((value = valueof(value, ++index, values)) != null
          && (max < value || (max === undefined && value >= value))) {
        max = value, maxIndex = index;
      }
    }
  }
  return maxIndex;
}


/***/ }),

/***/ "./node_modules/d3-array/src/mean.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-array/src/mean.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return mean; });
function mean(values, valueof) {
  let count = 0;
  let sum = 0;
  if (valueof === undefined) {
    for (let value of values) {
      if (value != null && (value = +value) >= value) {
        ++count, sum += value;
      }
    }
  } else {
    let index = -1;
    for (let value of values) {
      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {
        ++count, sum += value;
      }
    }
  }
  if (count) return sum / count;
}


/***/ }),

/***/ "./node_modules/d3-array/src/median.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-array/src/median.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _quantile_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./quantile.js */ "./node_modules/d3-array/src/quantile.js");
/* harmony import */ var _quickselect_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./quickselect.js */ "./node_modules/d3-array/src/quickselect.js");



function* numbers(values, valueof) {
  if (valueof === undefined) {
    for (let value of values) {
      if (value != null && (value = +value) >= value) {
        yield value;
      }
    }
  } else {
    let index = -1;
    for (let value of values) {
      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {
        yield value;
      }
    }
  }
}

/* harmony default export */ __webpack_exports__["default"] = (function(values, valueof) {
  values = Float64Array.from(numbers(values, valueof));
  if (!values.length) return;
  const n = values.length;
  const i = n >> 1;
  Object(_quickselect_js__WEBPACK_IMPORTED_MODULE_1__["default"])(values, i - 1, 0);
  if ((n & 1) === 0) Object(_quickselect_js__WEBPACK_IMPORTED_MODULE_1__["default"])(values, i, i);
  return Object(_quantile_js__WEBPACK_IMPORTED_MODULE_0__["default"])(values, 0.5);
});


/***/ }),

/***/ "./node_modules/d3-array/src/merge.js":
/*!********************************************!*\
  !*** ./node_modules/d3-array/src/merge.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return merge; });
function* flatten(arrays) {
  for (const array of arrays) {
    yield* array;
  }
}

function merge(arrays) {
  return Array.from(flatten(arrays));
}


/***/ }),

/***/ "./node_modules/d3-array/src/min.js":
/*!******************************************!*\
  !*** ./node_modules/d3-array/src/min.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return min; });
function min(values, valueof) {
  let min;
  if (valueof === undefined) {
    for (const value of values) {
      if (value != null
          && (min > value || (min === undefined && value >= value))) {
        min = value;
      }
    }
  } else {
    let index = -1;
    for (let value of values) {
      if ((value = valueof(value, ++index, values)) != null
          && (min > value || (min === undefined && value >= value))) {
        min = value;
      }
    }
  }
  return min;
}


/***/ }),

/***/ "./node_modules/d3-array/src/minIndex.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-array/src/minIndex.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return minIndex; });
function minIndex(values, valueof) {
  let min;
  let minIndex = -1;
  let index = -1;
  if (valueof === undefined) {
    for (const value of values) {
      ++index;
      if (value != null
          && (min > value || (min === undefined && value >= value))) {
        min = value, minIndex = index;
      }
    }
  } else {
    for (let value of values) {
      if ((value = valueof(value, ++index, values)) != null
          && (min > value || (min === undefined && value >= value))) {
        min = value, minIndex = index;
      }
    }
  }
  return minIndex;
}


/***/ }),

/***/ "./node_modules/d3-array/src/number.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-array/src/number.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(x) {
  return x === null ? NaN : +x;
});


/***/ }),

/***/ "./node_modules/d3-array/src/pairs.js":
/*!********************************************!*\
  !*** ./node_modules/d3-array/src/pairs.js ***!
  \********************************************/
/*! exports provided: default, pair */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return pairs; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pair", function() { return pair; });
function pairs(values, pairof = pair) {
  const pairs = [];
  let previous;
  let first = false;
  for (const value of values) {
    if (first) pairs.push(pairof(previous, value));
    previous = value;
    first = true;
  }
  return pairs;
}

function pair(a, b) {
  return [a, b];
}


/***/ }),

/***/ "./node_modules/d3-array/src/permute.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-array/src/permute.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(source, keys) {
  return Array.from(keys, key => source[key]);
});


/***/ }),

/***/ "./node_modules/d3-array/src/quantile.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-array/src/quantile.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return quantile; });
/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./number.js */ "./node_modules/d3-array/src/number.js");


function quantile(values, p, valueof = _number_js__WEBPACK_IMPORTED_MODULE_0__["default"]) {
  if (!(n = values.length)) return;
  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);
  if (p >= 1) return +valueof(values[n - 1], n - 1, values);
  var n,
      i = (n - 1) * p,
      i0 = Math.floor(i),
      value0 = +valueof(values[i0], i0, values),
      value1 = +valueof(values[i0 + 1], i0 + 1, values);
  return value0 + (value1 - value0) * (i - i0);
}


/***/ }),

/***/ "./node_modules/d3-array/src/quickselect.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-array/src/quickselect.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return quickselect; });
/* harmony import */ var _ascending_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ascending.js */ "./node_modules/d3-array/src/ascending.js");


// Based on https://github.com/mourner/quickselect
// ISC license, Copyright 2018 Vladimir Agafonkin.
function quickselect(array, k, left = 0, right = array.length - 1, compare = _ascending_js__WEBPACK_IMPORTED_MODULE_0__["default"]) {
  while (right > left) {
    if (right - left > 600) {
      const n = right - left + 1;
      const m = k - left + 1;
      const z = Math.log(n);
      const s = 0.5 * Math.exp(2 * z / 3);
      const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);
      const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));
      const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));
      quickselect(array, k, newLeft, newRight, compare);
    }

    const t = array[k];
    let i = left;
    let j = right;

    swap(array, left, k);
    if (compare(array[right], t) > 0) swap(array, left, right);

    while (i < j) {
      swap(array, i, j), ++i, --j;
      while (compare(array[i], t) < 0) ++i;
      while (compare(array[j], t) > 0) --j;
    }

    if (compare(array[left], t) === 0) swap(array, left, j);
    else ++j, swap(array, j, right);

    if (j <= k) left = j + 1;
    if (k <= j) right = j - 1;
  }
  return array;
}

function swap(array, i, j) {
  const t = array[i];
  array[i] = array[j];
  array[j] = t;
}


/***/ }),

/***/ "./node_modules/d3-array/src/range.js":
/*!********************************************!*\
  !*** ./node_modules/d3-array/src/range.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(start, stop, step) {
  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;

  var i = -1,
      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,
      range = new Array(n);

  while (++i < n) {
    range[i] = start + i * step;
  }

  return range;
});


/***/ }),

/***/ "./node_modules/d3-array/src/scan.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-array/src/scan.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return scan; });
/* harmony import */ var _leastIndex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./leastIndex.js */ "./node_modules/d3-array/src/leastIndex.js");


function scan(values, compare) {
  const index = Object(_leastIndex_js__WEBPACK_IMPORTED_MODULE_0__["default"])(values, compare);
  return index < 0 ? undefined : index;
}


/***/ }),

/***/ "./node_modules/d3-array/src/shuffle.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-array/src/shuffle.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return shuffle; });
function shuffle(array, i0 = 0, i1 = array.length) {
  var m = i1 - (i0 = +i0),
      t,
      i;

  while (m) {
    i = Math.random() * m-- | 0;
    t = array[m + i0];
    array[m + i0] = array[i + i0];
    array[i + i0] = t;
  }

  return array;
}


/***/ }),

/***/ "./node_modules/d3-array/src/sum.js":
/*!******************************************!*\
  !*** ./node_modules/d3-array/src/sum.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return sum; });
function sum(values, valueof) {
  let sum = 0;
  if (valueof === undefined) {
    for (let value of values) {
      if (value = +value) {
        sum += value;
      }
    }
  } else {
    let index = -1;
    for (let value of values) {
      if (value = +valueof(value, ++index, values)) {
        sum += value;
      }
    }
  }
  return sum;
}


/***/ }),

/***/ "./node_modules/d3-array/src/threshold/freedmanDiaconis.js":
/*!*****************************************************************!*\
  !*** ./node_modules/d3-array/src/threshold/freedmanDiaconis.js ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../array.js */ "./node_modules/d3-array/src/array.js");
/* harmony import */ var _ascending_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ascending.js */ "./node_modules/d3-array/src/ascending.js");
/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../number.js */ "./node_modules/d3-array/src/number.js");
/* harmony import */ var _quantile_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../quantile.js */ "./node_modules/d3-array/src/quantile.js");





/* harmony default export */ __webpack_exports__["default"] = (function(values, min, max) {
  values = _array_js__WEBPACK_IMPORTED_MODULE_0__["map"].call(values, _number_js__WEBPACK_IMPORTED_MODULE_2__["default"]).sort(_ascending_js__WEBPACK_IMPORTED_MODULE_1__["default"]);
  return Math.ceil((max - min) / (2 * (Object(_quantile_js__WEBPACK_IMPORTED_MODULE_3__["default"])(values, 0.75) - Object(_quantile_js__WEBPACK_IMPORTED_MODULE_3__["default"])(values, 0.25)) * Math.pow(values.length, -1 / 3)));
});


/***/ }),

/***/ "./node_modules/d3-array/src/threshold/scott.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-array/src/threshold/scott.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _deviation_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../deviation.js */ "./node_modules/d3-array/src/deviation.js");


/* harmony default export */ __webpack_exports__["default"] = (function(values, min, max) {
  return Math.ceil((max - min) / (3.5 * Object(_deviation_js__WEBPACK_IMPORTED_MODULE_0__["default"])(values) * Math.pow(values.length, -1 / 3)));
});


/***/ }),

/***/ "./node_modules/d3-array/src/threshold/sturges.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-array/src/threshold/sturges.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(values) {
  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;
});


/***/ }),

/***/ "./node_modules/d3-array/src/ticks.js":
/*!********************************************!*\
  !*** ./node_modules/d3-array/src/ticks.js ***!
  \********************************************/
/*! exports provided: default, tickIncrement, tickStep */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tickIncrement", function() { return tickIncrement; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tickStep", function() { return tickStep; });
var e10 = Math.sqrt(50),
    e5 = Math.sqrt(10),
    e2 = Math.sqrt(2);

/* harmony default export */ __webpack_exports__["default"] = (function(start, stop, count) {
  var reverse,
      i = -1,
      n,
      ticks,
      step;

  stop = +stop, start = +start, count = +count;
  if (start === stop && count > 0) return [start];
  if (reverse = stop < start) n = start, start = stop, stop = n;
  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];

  if (step > 0) {
    start = Math.ceil(start / step);
    stop = Math.floor(stop / step);
    ticks = new Array(n = Math.ceil(stop - start + 1));
    while (++i < n) ticks[i] = (start + i) * step;
  } else {
    start = Math.floor(start * step);
    stop = Math.ceil(stop * step);
    ticks = new Array(n = Math.ceil(start - stop + 1));
    while (++i < n) ticks[i] = (start - i) / step;
  }

  if (reverse) ticks.reverse();

  return ticks;
});

function tickIncrement(start, stop, count) {
  var step = (stop - start) / Math.max(0, count),
      power = Math.floor(Math.log(step) / Math.LN10),
      error = step / Math.pow(10, power);
  return power >= 0
      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)
      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);
}

function tickStep(start, stop, count) {
  var step0 = Math.abs(stop - start) / Math.max(0, count),
      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),
      error = step0 / step1;
  if (error >= e10) step1 *= 10;
  else if (error >= e5) step1 *= 5;
  else if (error >= e2) step1 *= 2;
  return stop < start ? -step1 : step1;
}


/***/ }),

/***/ "./node_modules/d3-array/src/transpose.js":
/*!************************************************!*\
  !*** ./node_modules/d3-array/src/transpose.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _min_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./min.js */ "./node_modules/d3-array/src/min.js");


/* harmony default export */ __webpack_exports__["default"] = (function(matrix) {
  if (!(n = matrix.length)) return [];
  for (var i = -1, m = Object(_min_js__WEBPACK_IMPORTED_MODULE_0__["default"])(matrix, length), transpose = new Array(m); ++i < m;) {
    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {
      row[j] = matrix[j][i];
    }
  }
  return transpose;
});

function length(d) {
  return d.length;
}


/***/ }),

/***/ "./node_modules/d3-array/src/variance.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-array/src/variance.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return variance; });
function variance(values, valueof) {
  let count = 0;
  let delta;
  let mean = 0;
  let sum = 0;
  if (valueof === undefined) {
    for (let value of values) {
      if (value != null && (value = +value) >= value) {
        delta = value - mean;
        mean += delta / ++count;
        sum += delta * (value - mean);
      }
    }
  } else {
    let index = -1;
    for (let value of values) {
      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {
        delta = value - mean;
        mean += delta / ++count;
        sum += delta * (value - mean);
      }
    }
  }
  if (count > 1) return sum / (count - 1);
}


/***/ }),

/***/ "./node_modules/d3-array/src/zip.js":
/*!******************************************!*\
  !*** ./node_modules/d3-array/src/zip.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _transpose_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./transpose.js */ "./node_modules/d3-array/src/transpose.js");


/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(_transpose_js__WEBPACK_IMPORTED_MODULE_0__["default"])(arguments);
});


/***/ }),

/***/ "./node_modules/d3-color/src/color.js":
/*!********************************************!*\
  !*** ./node_modules/d3-color/src/color.js ***!
  \********************************************/
/*! exports provided: Color, darker, brighter, default, rgbConvert, rgb, Rgb, hslConvert, hsl */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Color", function() { return Color; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "darker", function() { return darker; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "brighter", function() { return brighter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return color; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rgbConvert", function() { return rgbConvert; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rgb", function() { return rgb; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Rgb", function() { return Rgb; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hslConvert", function() { return hslConvert; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hsl", function() { return hsl; });
/* harmony import */ var _define__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./define */ "./node_modules/d3-color/src/define.js");


function Color() {}

var darker = 0.7;
var brighter = 1 / darker;

var reI = "\\s*([+-]?\\d+)\\s*",
    reN = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",
    reP = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",
    reHex3 = /^#([0-9a-f]{3})$/,
    reHex6 = /^#([0-9a-f]{6})$/,
    reRgbInteger = new RegExp("^rgb\\(" + [reI, reI, reI] + "\\)$"),
    reRgbPercent = new RegExp("^rgb\\(" + [reP, reP, reP] + "\\)$"),
    reRgbaInteger = new RegExp("^rgba\\(" + [reI, reI, reI, reN] + "\\)$"),
    reRgbaPercent = new RegExp("^rgba\\(" + [reP, reP, reP, reN] + "\\)$"),
    reHslPercent = new RegExp("^hsl\\(" + [reN, reP, reP] + "\\)$"),
    reHslaPercent = new RegExp("^hsla\\(" + [reN, reP, reP, reN] + "\\)$");

var named = {
  aliceblue: 0xf0f8ff,
  antiquewhite: 0xfaebd7,
  aqua: 0x00ffff,
  aquamarine: 0x7fffd4,
  azure: 0xf0ffff,
  beige: 0xf5f5dc,
  bisque: 0xffe4c4,
  black: 0x000000,
  blanchedalmond: 0xffebcd,
  blue: 0x0000ff,
  blueviolet: 0x8a2be2,
  brown: 0xa52a2a,
  burlywood: 0xdeb887,
  cadetblue: 0x5f9ea0,
  chartreuse: 0x7fff00,
  chocolate: 0xd2691e,
  coral: 0xff7f50,
  cornflowerblue: 0x6495ed,
  cornsilk: 0xfff8dc,
  crimson: 0xdc143c,
  cyan: 0x00ffff,
  darkblue: 0x00008b,
  darkcyan: 0x008b8b,
  darkgoldenrod: 0xb8860b,
  darkgray: 0xa9a9a9,
  darkgreen: 0x006400,
  darkgrey: 0xa9a9a9,
  darkkhaki: 0xbdb76b,
  darkmagenta: 0x8b008b,
  darkolivegreen: 0x556b2f,
  darkorange: 0xff8c00,
  darkorchid: 0x9932cc,
  darkred: 0x8b0000,
  darksalmon: 0xe9967a,
  darkseagreen: 0x8fbc8f,
  darkslateblue: 0x483d8b,
  darkslategray: 0x2f4f4f,
  darkslategrey: 0x2f4f4f,
  darkturquoise: 0x00ced1,
  darkviolet: 0x9400d3,
  deeppink: 0xff1493,
  deepskyblue: 0x00bfff,
  dimgray: 0x696969,
  dimgrey: 0x696969,
  dodgerblue: 0x1e90ff,
  firebrick: 0xb22222,
  floralwhite: 0xfffaf0,
  forestgreen: 0x228b22,
  fuchsia: 0xff00ff,
  gainsboro: 0xdcdcdc,
  ghostwhite: 0xf8f8ff,
  gold: 0xffd700,
  goldenrod: 0xdaa520,
  gray: 0x808080,
  green: 0x008000,
  greenyellow: 0xadff2f,
  grey: 0x808080,
  honeydew: 0xf0fff0,
  hotpink: 0xff69b4,
  indianred: 0xcd5c5c,
  indigo: 0x4b0082,
  ivory: 0xfffff0,
  khaki: 0xf0e68c,
  lavender: 0xe6e6fa,
  lavenderblush: 0xfff0f5,
  lawngreen: 0x7cfc00,
  lemonchiffon: 0xfffacd,
  lightblue: 0xadd8e6,
  lightcoral: 0xf08080,
  lightcyan: 0xe0ffff,
  lightgoldenrodyellow: 0xfafad2,
  lightgray: 0xd3d3d3,
  lightgreen: 0x90ee90,
  lightgrey: 0xd3d3d3,
  lightpink: 0xffb6c1,
  lightsalmon: 0xffa07a,
  lightseagreen: 0x20b2aa,
  lightskyblue: 0x87cefa,
  lightslategray: 0x778899,
  lightslategrey: 0x778899,
  lightsteelblue: 0xb0c4de,
  lightyellow: 0xffffe0,
  lime: 0x00ff00,
  limegreen: 0x32cd32,
  linen: 0xfaf0e6,
  magenta: 0xff00ff,
  maroon: 0x800000,
  mediumaquamarine: 0x66cdaa,
  mediumblue: 0x0000cd,
  mediumorchid: 0xba55d3,
  mediumpurple: 0x9370db,
  mediumseagreen: 0x3cb371,
  mediumslateblue: 0x7b68ee,
  mediumspringgreen: 0x00fa9a,
  mediumturquoise: 0x48d1cc,
  mediumvioletred: 0xc71585,
  midnightblue: 0x191970,
  mintcream: 0xf5fffa,
  mistyrose: 0xffe4e1,
  moccasin: 0xffe4b5,
  navajowhite: 0xffdead,
  navy: 0x000080,
  oldlace: 0xfdf5e6,
  olive: 0x808000,
  olivedrab: 0x6b8e23,
  orange: 0xffa500,
  orangered: 0xff4500,
  orchid: 0xda70d6,
  palegoldenrod: 0xeee8aa,
  palegreen: 0x98fb98,
  paleturquoise: 0xafeeee,
  palevioletred: 0xdb7093,
  papayawhip: 0xffefd5,
  peachpuff: 0xffdab9,
  peru: 0xcd853f,
  pink: 0xffc0cb,
  plum: 0xdda0dd,
  powderblue: 0xb0e0e6,
  purple: 0x800080,
  rebeccapurple: 0x663399,
  red: 0xff0000,
  rosybrown: 0xbc8f8f,
  royalblue: 0x4169e1,
  saddlebrown: 0x8b4513,
  salmon: 0xfa8072,
  sandybrown: 0xf4a460,
  seagreen: 0x2e8b57,
  seashell: 0xfff5ee,
  sienna: 0xa0522d,
  silver: 0xc0c0c0,
  skyblue: 0x87ceeb,
  slateblue: 0x6a5acd,
  slategray: 0x708090,
  slategrey: 0x708090,
  snow: 0xfffafa,
  springgreen: 0x00ff7f,
  steelblue: 0x4682b4,
  tan: 0xd2b48c,
  teal: 0x008080,
  thistle: 0xd8bfd8,
  tomato: 0xff6347,
  turquoise: 0x40e0d0,
  violet: 0xee82ee,
  wheat: 0xf5deb3,
  white: 0xffffff,
  whitesmoke: 0xf5f5f5,
  yellow: 0xffff00,
  yellowgreen: 0x9acd32
};

Object(_define__WEBPACK_IMPORTED_MODULE_0__["default"])(Color, color, {
  displayable: function() {
    return this.rgb().displayable();
  },
  hex: function() {
    return this.rgb().hex();
  },
  toString: function() {
    return this.rgb() + "";
  }
});

function color(format) {
  var m;
  format = (format + "").trim().toLowerCase();
  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00
      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000
      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)
      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)
      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)
      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)
      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)
      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)
      : named.hasOwnProperty(format) ? rgbn(named[format])
      : format === "transparent" ? new Rgb(NaN, NaN, NaN, 0)
      : null;
}

function rgbn(n) {
  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);
}

function rgba(r, g, b, a) {
  if (a <= 0) r = g = b = NaN;
  return new Rgb(r, g, b, a);
}

function rgbConvert(o) {
  if (!(o instanceof Color)) o = color(o);
  if (!o) return new Rgb;
  o = o.rgb();
  return new Rgb(o.r, o.g, o.b, o.opacity);
}

function rgb(r, g, b, opacity) {
  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);
}

function Rgb(r, g, b, opacity) {
  this.r = +r;
  this.g = +g;
  this.b = +b;
  this.opacity = +opacity;
}

Object(_define__WEBPACK_IMPORTED_MODULE_0__["default"])(Rgb, rgb, Object(_define__WEBPACK_IMPORTED_MODULE_0__["extend"])(Color, {
  brighter: function(k) {
    k = k == null ? brighter : Math.pow(brighter, k);
    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
  },
  darker: function(k) {
    k = k == null ? darker : Math.pow(darker, k);
    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
  },
  rgb: function() {
    return this;
  },
  displayable: function() {
    return (-0.5 <= this.r && this.r < 255.5)
        && (-0.5 <= this.g && this.g < 255.5)
        && (-0.5 <= this.b && this.b < 255.5)
        && (0 <= this.opacity && this.opacity <= 1);
  },
  hex: function() {
    return "#" + hex(this.r) + hex(this.g) + hex(this.b);
  },
  toString: function() {
    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));
    return (a === 1 ? "rgb(" : "rgba(")
        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + ", "
        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + ", "
        + Math.max(0, Math.min(255, Math.round(this.b) || 0))
        + (a === 1 ? ")" : ", " + a + ")");
  }
}));

function hex(value) {
  value = Math.max(0, Math.min(255, Math.round(value) || 0));
  return (value < 16 ? "0" : "") + value.toString(16);
}

function hsla(h, s, l, a) {
  if (a <= 0) h = s = l = NaN;
  else if (l <= 0 || l >= 1) h = s = NaN;
  else if (s <= 0) h = NaN;
  return new Hsl(h, s, l, a);
}

function hslConvert(o) {
  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);
  if (!(o instanceof Color)) o = color(o);
  if (!o) return new Hsl;
  if (o instanceof Hsl) return o;
  o = o.rgb();
  var r = o.r / 255,
      g = o.g / 255,
      b = o.b / 255,
      min = Math.min(r, g, b),
      max = Math.max(r, g, b),
      h = NaN,
      s = max - min,
      l = (max + min) / 2;
  if (s) {
    if (r === max) h = (g - b) / s + (g < b) * 6;
    else if (g === max) h = (b - r) / s + 2;
    else h = (r - g) / s + 4;
    s /= l < 0.5 ? max + min : 2 - max - min;
    h *= 60;
  } else {
    s = l > 0 && l < 1 ? 0 : h;
  }
  return new Hsl(h, s, l, o.opacity);
}

function hsl(h, s, l, opacity) {
  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);
}

function Hsl(h, s, l, opacity) {
  this.h = +h;
  this.s = +s;
  this.l = +l;
  this.opacity = +opacity;
}

Object(_define__WEBPACK_IMPORTED_MODULE_0__["default"])(Hsl, hsl, Object(_define__WEBPACK_IMPORTED_MODULE_0__["extend"])(Color, {
  brighter: function(k) {
    k = k == null ? brighter : Math.pow(brighter, k);
    return new Hsl(this.h, this.s, this.l * k, this.opacity);
  },
  darker: function(k) {
    k = k == null ? darker : Math.pow(darker, k);
    return new Hsl(this.h, this.s, this.l * k, this.opacity);
  },
  rgb: function() {
    var h = this.h % 360 + (this.h < 0) * 360,
        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,
        l = this.l,
        m2 = l + (l < 0.5 ? l : 1 - l) * s,
        m1 = 2 * l - m2;
    return new Rgb(
      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),
      hsl2rgb(h, m1, m2),
      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),
      this.opacity
    );
  },
  displayable: function() {
    return (0 <= this.s && this.s <= 1 || isNaN(this.s))
        && (0 <= this.l && this.l <= 1)
        && (0 <= this.opacity && this.opacity <= 1);
  }
}));

/* From FvD 13.37, CSS Color Module Level 3 */
function hsl2rgb(h, m1, m2) {
  return (h < 60 ? m1 + (m2 - m1) * h / 60
      : h < 180 ? m2
      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60
      : m1) * 255;
}


/***/ }),

/***/ "./node_modules/d3-color/src/cubehelix.js":
/*!************************************************!*\
  !*** ./node_modules/d3-color/src/cubehelix.js ***!
  \************************************************/
/*! exports provided: default, Cubehelix */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return cubehelix; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Cubehelix", function() { return Cubehelix; });
/* harmony import */ var _define__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./define */ "./node_modules/d3-color/src/define.js");
/* harmony import */ var _color__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./color */ "./node_modules/d3-color/src/color.js");
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./math */ "./node_modules/d3-color/src/math.js");




var A = -0.14861,
    B = +1.78277,
    C = -0.29227,
    D = -0.90649,
    E = +1.97294,
    ED = E * D,
    EB = E * B,
    BC_DA = B * C - D * A;

function cubehelixConvert(o) {
  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);
  if (!(o instanceof _color__WEBPACK_IMPORTED_MODULE_1__["Rgb"])) o = Object(_color__WEBPACK_IMPORTED_MODULE_1__["rgbConvert"])(o);
  var r = o.r / 255,
      g = o.g / 255,
      b = o.b / 255,
      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),
      bl = b - l,
      k = (E * (g - l) - C * bl) / D,
      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1
      h = s ? Math.atan2(k, bl) * _math__WEBPACK_IMPORTED_MODULE_2__["rad2deg"] - 120 : NaN;
  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);
}

function cubehelix(h, s, l, opacity) {
  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);
}

function Cubehelix(h, s, l, opacity) {
  this.h = +h;
  this.s = +s;
  this.l = +l;
  this.opacity = +opacity;
}

Object(_define__WEBPACK_IMPORTED_MODULE_0__["default"])(Cubehelix, cubehelix, Object(_define__WEBPACK_IMPORTED_MODULE_0__["extend"])(_color__WEBPACK_IMPORTED_MODULE_1__["Color"], {
  brighter: function(k) {
    k = k == null ? _color__WEBPACK_IMPORTED_MODULE_1__["brighter"] : Math.pow(_color__WEBPACK_IMPORTED_MODULE_1__["brighter"], k);
    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);
  },
  darker: function(k) {
    k = k == null ? _color__WEBPACK_IMPORTED_MODULE_1__["darker"] : Math.pow(_color__WEBPACK_IMPORTED_MODULE_1__["darker"], k);
    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);
  },
  rgb: function() {
    var h = isNaN(this.h) ? 0 : (this.h + 120) * _math__WEBPACK_IMPORTED_MODULE_2__["deg2rad"],
        l = +this.l,
        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),
        cosh = Math.cos(h),
        sinh = Math.sin(h);
    return new _color__WEBPACK_IMPORTED_MODULE_1__["Rgb"](
      255 * (l + a * (A * cosh + B * sinh)),
      255 * (l + a * (C * cosh + D * sinh)),
      255 * (l + a * (E * cosh)),
      this.opacity
    );
  }
}));


/***/ }),

/***/ "./node_modules/d3-color/src/define.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-color/src/define.js ***!
  \*********************************************/
/*! exports provided: default, extend */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony default export */ __webpack_exports__["default"] = (function(constructor, factory, prototype) {
  constructor.prototype = factory.prototype = prototype;
  prototype.constructor = constructor;
});

function extend(parent, definition) {
  var prototype = Object.create(parent.prototype);
  for (var key in definition) prototype[key] = definition[key];
  return prototype;
}


/***/ }),

/***/ "./node_modules/d3-color/src/index.js":
/*!********************************************!*\
  !*** ./node_modules/d3-color/src/index.js ***!
  \********************************************/
/*! exports provided: color, rgb, hsl, lab, hcl, lch, gray, cubehelix */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./color */ "./node_modules/d3-color/src/color.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "color", function() { return _color__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "rgb", function() { return _color__WEBPACK_IMPORTED_MODULE_0__["rgb"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "hsl", function() { return _color__WEBPACK_IMPORTED_MODULE_0__["hsl"]; });

/* harmony import */ var _lab__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lab */ "./node_modules/d3-color/src/lab.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "lab", function() { return _lab__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "hcl", function() { return _lab__WEBPACK_IMPORTED_MODULE_1__["hcl"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "lch", function() { return _lab__WEBPACK_IMPORTED_MODULE_1__["lch"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "gray", function() { return _lab__WEBPACK_IMPORTED_MODULE_1__["gray"]; });

/* harmony import */ var _cubehelix__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cubehelix */ "./node_modules/d3-color/src/cubehelix.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cubehelix", function() { return _cubehelix__WEBPACK_IMPORTED_MODULE_2__["default"]; });






/***/ }),

/***/ "./node_modules/d3-color/src/lab.js":
/*!******************************************!*\
  !*** ./node_modules/d3-color/src/lab.js ***!
  \******************************************/
/*! exports provided: gray, default, Lab, lch, hcl, Hcl */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "gray", function() { return gray; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return lab; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Lab", function() { return Lab; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "lch", function() { return lch; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hcl", function() { return hcl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Hcl", function() { return Hcl; });
/* harmony import */ var _define__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./define */ "./node_modules/d3-color/src/define.js");
/* harmony import */ var _color__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./color */ "./node_modules/d3-color/src/color.js");
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./math */ "./node_modules/d3-color/src/math.js");




// https://observablehq.com/@mbostock/lab-and-rgb
var K = 18,
    Xn = 0.96422,
    Yn = 1,
    Zn = 0.82521,
    t0 = 4 / 29,
    t1 = 6 / 29,
    t2 = 3 * t1 * t1,
    t3 = t1 * t1 * t1;

function labConvert(o) {
  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);
  if (o instanceof Hcl) return hcl2lab(o);
  if (!(o instanceof _color__WEBPACK_IMPORTED_MODULE_1__["Rgb"])) o = Object(_color__WEBPACK_IMPORTED_MODULE_1__["rgbConvert"])(o);
  var r = rgb2lrgb(o.r),
      g = rgb2lrgb(o.g),
      b = rgb2lrgb(o.b),
      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;
  if (r === g && g === b) x = z = y; else {
    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);
    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);
  }
  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);
}

function gray(l, opacity) {
  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);
}

function lab(l, a, b, opacity) {
  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);
}

function Lab(l, a, b, opacity) {
  this.l = +l;
  this.a = +a;
  this.b = +b;
  this.opacity = +opacity;
}

Object(_define__WEBPACK_IMPORTED_MODULE_0__["default"])(Lab, lab, Object(_define__WEBPACK_IMPORTED_MODULE_0__["extend"])(_color__WEBPACK_IMPORTED_MODULE_1__["Color"], {
  brighter: function(k) {
    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);
  },
  darker: function(k) {
    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);
  },
  rgb: function() {
    var y = (this.l + 16) / 116,
        x = isNaN(this.a) ? y : y + this.a / 500,
        z = isNaN(this.b) ? y : y - this.b / 200;
    x = Xn * lab2xyz(x);
    y = Yn * lab2xyz(y);
    z = Zn * lab2xyz(z);
    return new _color__WEBPACK_IMPORTED_MODULE_1__["Rgb"](
      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),
      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),
      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),
      this.opacity
    );
  }
}));

function xyz2lab(t) {
  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;
}

function lab2xyz(t) {
  return t > t1 ? t * t * t : t2 * (t - t0);
}

function lrgb2rgb(x) {
  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);
}

function rgb2lrgb(x) {
  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);
}

function hclConvert(o) {
  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);
  if (!(o instanceof Lab)) o = labConvert(o);
  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0 < o.l && o.l < 100 ? 0 : NaN, o.l, o.opacity);
  var h = Math.atan2(o.b, o.a) * _math__WEBPACK_IMPORTED_MODULE_2__["rad2deg"];
  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);
}

function lch(l, c, h, opacity) {
  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);
}

function hcl(h, c, l, opacity) {
  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);
}

function Hcl(h, c, l, opacity) {
  this.h = +h;
  this.c = +c;
  this.l = +l;
  this.opacity = +opacity;
}

function hcl2lab(o) {
  if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);
  var h = o.h * _math__WEBPACK_IMPORTED_MODULE_2__["deg2rad"];
  return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);
}

Object(_define__WEBPACK_IMPORTED_MODULE_0__["default"])(Hcl, hcl, Object(_define__WEBPACK_IMPORTED_MODULE_0__["extend"])(_color__WEBPACK_IMPORTED_MODULE_1__["Color"], {
  brighter: function(k) {
    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);
  },
  darker: function(k) {
    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);
  },
  rgb: function() {
    return hcl2lab(this).rgb();
  }
}));


/***/ }),

/***/ "./node_modules/d3-color/src/math.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-color/src/math.js ***!
  \*******************************************/
/*! exports provided: deg2rad, rad2deg */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "deg2rad", function() { return deg2rad; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rad2deg", function() { return rad2deg; });
var deg2rad = Math.PI / 180;
var rad2deg = 180 / Math.PI;


/***/ }),

/***/ "./node_modules/d3-contour/node_modules/d3-array/src/array.js":
/*!********************************************************************!*\
  !*** ./node_modules/d3-contour/node_modules/d3-array/src/array.js ***!
  \********************************************************************/
/*! exports provided: slice, map */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "slice", function() { return slice; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "map", function() { return map; });
var array = Array.prototype;

var slice = array.slice;
var map = array.map;


/***/ }),

/***/ "./node_modules/d3-contour/node_modules/d3-array/src/ascending.js":
/*!************************************************************************!*\
  !*** ./node_modules/d3-contour/node_modules/d3-array/src/ascending.js ***!
  \************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(a, b) {
  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
});


/***/ }),

/***/ "./node_modules/d3-contour/node_modules/d3-array/src/bisect.js":
/*!*********************************************************************!*\
  !*** ./node_modules/d3-contour/node_modules/d3-array/src/bisect.js ***!
  \*********************************************************************/
/*! exports provided: bisectRight, bisectLeft, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bisectRight", function() { return bisectRight; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bisectLeft", function() { return bisectLeft; });
/* harmony import */ var _ascending__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ascending */ "./node_modules/d3-contour/node_modules/d3-array/src/ascending.js");
/* harmony import */ var _bisector__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bisector */ "./node_modules/d3-contour/node_modules/d3-array/src/bisector.js");



var ascendingBisect = Object(_bisector__WEBPACK_IMPORTED_MODULE_1__["default"])(_ascending__WEBPACK_IMPORTED_MODULE_0__["default"]);
var bisectRight = ascendingBisect.right;
var bisectLeft = ascendingBisect.left;
/* harmony default export */ __webpack_exports__["default"] = (bisectRight);


/***/ }),

/***/ "./node_modules/d3-contour/node_modules/d3-array/src/bisector.js":
/*!***********************************************************************!*\
  !*** ./node_modules/d3-contour/node_modules/d3-array/src/bisector.js ***!
  \***********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ascending__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ascending */ "./node_modules/d3-contour/node_modules/d3-array/src/ascending.js");


/* harmony default export */ __webpack_exports__["default"] = (function(compare) {
  if (compare.length === 1) compare = ascendingComparator(compare);
  return {
    left: function(a, x, lo, hi) {
      if (lo == null) lo = 0;
      if (hi == null) hi = a.length;
      while (lo < hi) {
        var mid = lo + hi >>> 1;
        if (compare(a[mid], x) < 0) lo = mid + 1;
        else hi = mid;
      }
      return lo;
    },
    right: function(a, x, lo, hi) {
      if (lo == null) lo = 0;
      if (hi == null) hi = a.length;
      while (lo < hi) {
        var mid = lo + hi >>> 1;
        if (compare(a[mid], x) > 0) hi = mid;
        else lo = mid + 1;
      }
      return lo;
    }
  };
});

function ascendingComparator(f) {
  return function(d, x) {
    return Object(_ascending__WEBPACK_IMPORTED_MODULE_0__["default"])(f(d), x);
  };
}


/***/ }),

/***/ "./node_modules/d3-contour/node_modules/d3-array/src/constant.js":
/*!***********************************************************************!*\
  !*** ./node_modules/d3-contour/node_modules/d3-array/src/constant.js ***!
  \***********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(x) {
  return function() {
    return x;
  };
});


/***/ }),

/***/ "./node_modules/d3-contour/node_modules/d3-array/src/cross.js":
/*!********************************************************************!*\
  !*** ./node_modules/d3-contour/node_modules/d3-array/src/cross.js ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _pairs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pairs */ "./node_modules/d3-contour/node_modules/d3-array/src/pairs.js");


/* harmony default export */ __webpack_exports__["default"] = (function(values0, values1, reduce) {
  var n0 = values0.length,
      n1 = values1.length,
      values = new Array(n0 * n1),
      i0,
      i1,
      i,
      value0;

  if (reduce == null) reduce = _pairs__WEBPACK_IMPORTED_MODULE_0__["pair"];

  for (i0 = i = 0; i0 < n0; ++i0) {
    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {
      values[i] = reduce(value0, values1[i1]);
    }
  }

  return values;
});


/***/ }),

/***/ "./node_modules/d3-contour/node_modules/d3-array/src/descending.js":
/*!*************************************************************************!*\
  !*** ./node_modules/d3-contour/node_modules/d3-array/src/descending.js ***!
  \*************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(a, b) {
  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;
});


/***/ }),

/***/ "./node_modules/d3-contour/node_modules/d3-array/src/deviation.js":
/*!************************************************************************!*\
  !*** ./node_modules/d3-contour/node_modules/d3-array/src/deviation.js ***!
  \************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _variance__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./variance */ "./node_modules/d3-contour/node_modules/d3-array/src/variance.js");


/* harmony default export */ __webpack_exports__["default"] = (function(array, f) {
  var v = Object(_variance__WEBPACK_IMPORTED_MODULE_0__["default"])(array, f);
  return v ? Math.sqrt(v) : v;
});


/***/ }),

/***/ "./node_modules/d3-contour/node_modules/d3-array/src/extent.js":
/*!*********************************************************************!*\
  !*** ./node_modules/d3-contour/node_modules/d3-array/src/extent.js ***!
  \*********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(values, valueof) {
  var n = values.length,
      i = -1,
      value,
      min,
      max;

  if (valueof == null) {
    while (++i < n) { // Find the first comparable value.
      if ((value = values[i]) != null && value >= value) {
        min = max = value;
        while (++i < n) { // Compare the remaining values.
          if ((value = values[i]) != null) {
            if (min > value) min = value;
            if (max < value) max = value;
          }
        }
      }
    }
  }

  else {
    while (++i < n) { // Find the first comparable value.
      if ((value = valueof(values[i], i, values)) != null && value >= value) {
        min = max = value;
        while (++i < n) { // Compare the remaining values.
          if ((value = valueof(values[i], i, values)) != null) {
            if (min > value) min = value;
            if (max < value) max = value;
          }
        }
      }
    }
  }

  return [min, max];
});


/***/ }),

/***/ "./node_modules/d3-contour/node_modules/d3-array/src/histogram.js":
/*!************************************************************************!*\
  !*** ./node_modules/d3-contour/node_modules/d3-array/src/histogram.js ***!
  \************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./array */ "./node_modules/d3-contour/node_modules/d3-array/src/array.js");
/* harmony import */ var _bisect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bisect */ "./node_modules/d3-contour/node_modules/d3-array/src/bisect.js");
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./constant */ "./node_modules/d3-contour/node_modules/d3-array/src/constant.js");
/* harmony import */ var _extent__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./extent */ "./node_modules/d3-contour/node_modules/d3-array/src/extent.js");
/* harmony import */ var _identity__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./identity */ "./node_modules/d3-contour/node_modules/d3-array/src/identity.js");
/* harmony import */ var _range__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./range */ "./node_modules/d3-contour/node_modules/d3-array/src/range.js");
/* harmony import */ var _ticks__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ticks */ "./node_modules/d3-contour/node_modules/d3-array/src/ticks.js");
/* harmony import */ var _threshold_sturges__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./threshold/sturges */ "./node_modules/d3-contour/node_modules/d3-array/src/threshold/sturges.js");









/* harmony default export */ __webpack_exports__["default"] = (function() {
  var value = _identity__WEBPACK_IMPORTED_MODULE_4__["default"],
      domain = _extent__WEBPACK_IMPORTED_MODULE_3__["default"],
      threshold = _threshold_sturges__WEBPACK_IMPORTED_MODULE_7__["default"];

  function histogram(data) {
    var i,
        n = data.length,
        x,
        values = new Array(n);

    for (i = 0; i < n; ++i) {
      values[i] = value(data[i], i, data);
    }

    var xz = domain(values),
        x0 = xz[0],
        x1 = xz[1],
        tz = threshold(values, x0, x1);

    // Convert number of thresholds into uniform thresholds.
    if (!Array.isArray(tz)) {
      tz = Object(_ticks__WEBPACK_IMPORTED_MODULE_6__["tickStep"])(x0, x1, tz);
      tz = Object(_range__WEBPACK_IMPORTED_MODULE_5__["default"])(Math.ceil(x0 / tz) * tz, x1, tz); // exclusive
    }

    // Remove any thresholds outside the domain.
    var m = tz.length;
    while (tz[0] <= x0) tz.shift(), --m;
    while (tz[m - 1] > x1) tz.pop(), --m;

    var bins = new Array(m + 1),
        bin;

    // Initialize bins.
    for (i = 0; i <= m; ++i) {
      bin = bins[i] = [];
      bin.x0 = i > 0 ? tz[i - 1] : x0;
      bin.x1 = i < m ? tz[i] : x1;
    }

    // Assign data to bins by value, ignoring any outside the domain.
    for (i = 0; i < n; ++i) {
      x = values[i];
      if (x0 <= x && x <= x1) {
        bins[Object(_bisect__WEBPACK_IMPORTED_MODULE_1__["default"])(tz, x, 0, m)].push(data[i]);
      }
    }

    return bins;
  }

  histogram.value = function(_) {
    return arguments.length ? (value = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_2__["default"])(_), histogram) : value;
  };

  histogram.domain = function(_) {
    return arguments.length ? (domain = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_2__["default"])([_[0], _[1]]), histogram) : domain;
  };

  histogram.thresholds = function(_) {
    return arguments.length ? (threshold = typeof _ === "function" ? _ : Array.isArray(_) ? Object(_constant__WEBPACK_IMPORTED_MODULE_2__["default"])(_array__WEBPACK_IMPORTED_MODULE_0__["slice"].call(_)) : Object(_constant__WEBPACK_IMPORTED_MODULE_2__["default"])(_), histogram) : threshold;
  };

  return histogram;
});


/***/ }),

/***/ "./node_modules/d3-contour/node_modules/d3-array/src/identity.js":
/*!***********************************************************************!*\
  !*** ./node_modules/d3-contour/node_modules/d3-array/src/identity.js ***!
  \***********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(x) {
  return x;
});


/***/ }),

/***/ "./node_modules/d3-contour/node_modules/d3-array/src/index.js":
/*!********************************************************************!*\
  !*** ./node_modules/d3-contour/node_modules/d3-array/src/index.js ***!
  \********************************************************************/
/*! exports provided: bisect, bisectRight, bisectLeft, ascending, bisector, cross, descending, deviation, extent, histogram, thresholdFreedmanDiaconis, thresholdScott, thresholdSturges, max, mean, median, merge, min, pairs, permute, quantile, range, scan, shuffle, sum, ticks, tickIncrement, tickStep, transpose, variance, zip */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _bisect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bisect */ "./node_modules/d3-contour/node_modules/d3-array/src/bisect.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bisect", function() { return _bisect__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bisectRight", function() { return _bisect__WEBPACK_IMPORTED_MODULE_0__["bisectRight"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bisectLeft", function() { return _bisect__WEBPACK_IMPORTED_MODULE_0__["bisectLeft"]; });

/* harmony import */ var _ascending__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ascending */ "./node_modules/d3-contour/node_modules/d3-array/src/ascending.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ascending", function() { return _ascending__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _bisector__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bisector */ "./node_modules/d3-contour/node_modules/d3-array/src/bisector.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bisector", function() { return _bisector__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _cross__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./cross */ "./node_modules/d3-contour/node_modules/d3-array/src/cross.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cross", function() { return _cross__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _descending__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./descending */ "./node_modules/d3-contour/node_modules/d3-array/src/descending.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "descending", function() { return _descending__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _deviation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./deviation */ "./node_modules/d3-contour/node_modules/d3-array/src/deviation.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "deviation", function() { return _deviation__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _extent__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./extent */ "./node_modules/d3-contour/node_modules/d3-array/src/extent.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "extent", function() { return _extent__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony import */ var _histogram__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./histogram */ "./node_modules/d3-contour/node_modules/d3-array/src/histogram.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "histogram", function() { return _histogram__WEBPACK_IMPORTED_MODULE_7__["default"]; });

/* harmony import */ var _threshold_freedmanDiaconis__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./threshold/freedmanDiaconis */ "./node_modules/d3-contour/node_modules/d3-array/src/threshold/freedmanDiaconis.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "thresholdFreedmanDiaconis", function() { return _threshold_freedmanDiaconis__WEBPACK_IMPORTED_MODULE_8__["default"]; });

/* harmony import */ var _threshold_scott__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./threshold/scott */ "./node_modules/d3-contour/node_modules/d3-array/src/threshold/scott.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "thresholdScott", function() { return _threshold_scott__WEBPACK_IMPORTED_MODULE_9__["default"]; });

/* harmony import */ var _threshold_sturges__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./threshold/sturges */ "./node_modules/d3-contour/node_modules/d3-array/src/threshold/sturges.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "thresholdSturges", function() { return _threshold_sturges__WEBPACK_IMPORTED_MODULE_10__["default"]; });

/* harmony import */ var _max__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./max */ "./node_modules/d3-contour/node_modules/d3-array/src/max.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "max", function() { return _max__WEBPACK_IMPORTED_MODULE_11__["default"]; });

/* harmony import */ var _mean__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./mean */ "./node_modules/d3-contour/node_modules/d3-array/src/mean.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mean", function() { return _mean__WEBPACK_IMPORTED_MODULE_12__["default"]; });

/* harmony import */ var _median__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./median */ "./node_modules/d3-contour/node_modules/d3-array/src/median.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "median", function() { return _median__WEBPACK_IMPORTED_MODULE_13__["default"]; });

/* harmony import */ var _merge__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./merge */ "./node_modules/d3-contour/node_modules/d3-array/src/merge.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "merge", function() { return _merge__WEBPACK_IMPORTED_MODULE_14__["default"]; });

/* harmony import */ var _min__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./min */ "./node_modules/d3-contour/node_modules/d3-array/src/min.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "min", function() { return _min__WEBPACK_IMPORTED_MODULE_15__["default"]; });

/* harmony import */ var _pairs__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./pairs */ "./node_modules/d3-contour/node_modules/d3-array/src/pairs.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pairs", function() { return _pairs__WEBPACK_IMPORTED_MODULE_16__["default"]; });

/* harmony import */ var _permute__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./permute */ "./node_modules/d3-contour/node_modules/d3-array/src/permute.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "permute", function() { return _permute__WEBPACK_IMPORTED_MODULE_17__["default"]; });

/* harmony import */ var _quantile__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./quantile */ "./node_modules/d3-contour/node_modules/d3-array/src/quantile.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "quantile", function() { return _quantile__WEBPACK_IMPORTED_MODULE_18__["default"]; });

/* harmony import */ var _range__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./range */ "./node_modules/d3-contour/node_modules/d3-array/src/range.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "range", function() { return _range__WEBPACK_IMPORTED_MODULE_19__["default"]; });

/* harmony import */ var _scan__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./scan */ "./node_modules/d3-contour/node_modules/d3-array/src/scan.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scan", function() { return _scan__WEBPACK_IMPORTED_MODULE_20__["default"]; });

/* harmony import */ var _shuffle__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./shuffle */ "./node_modules/d3-contour/node_modules/d3-array/src/shuffle.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "shuffle", function() { return _shuffle__WEBPACK_IMPORTED_MODULE_21__["default"]; });

/* harmony import */ var _sum__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./sum */ "./node_modules/d3-contour/node_modules/d3-array/src/sum.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sum", function() { return _sum__WEBPACK_IMPORTED_MODULE_22__["default"]; });

/* harmony import */ var _ticks__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./ticks */ "./node_modules/d3-contour/node_modules/d3-array/src/ticks.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ticks", function() { return _ticks__WEBPACK_IMPORTED_MODULE_23__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tickIncrement", function() { return _ticks__WEBPACK_IMPORTED_MODULE_23__["tickIncrement"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tickStep", function() { return _ticks__WEBPACK_IMPORTED_MODULE_23__["tickStep"]; });

/* harmony import */ var _transpose__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./transpose */ "./node_modules/d3-contour/node_modules/d3-array/src/transpose.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "transpose", function() { return _transpose__WEBPACK_IMPORTED_MODULE_24__["default"]; });

/* harmony import */ var _variance__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./variance */ "./node_modules/d3-contour/node_modules/d3-array/src/variance.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "variance", function() { return _variance__WEBPACK_IMPORTED_MODULE_25__["default"]; });

/* harmony import */ var _zip__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./zip */ "./node_modules/d3-contour/node_modules/d3-array/src/zip.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "zip", function() { return _zip__WEBPACK_IMPORTED_MODULE_26__["default"]; });






























/***/ }),

/***/ "./node_modules/d3-contour/node_modules/d3-array/src/max.js":
/*!******************************************************************!*\
  !*** ./node_modules/d3-contour/node_modules/d3-array/src/max.js ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(values, valueof) {
  var n = values.length,
      i = -1,
      value,
      max;

  if (valueof == null) {
    while (++i < n) { // Find the first comparable value.
      if ((value = values[i]) != null && value >= value) {
        max = value;
        while (++i < n) { // Compare the remaining values.
          if ((value = values[i]) != null && value > max) {
            max = value;
          }
        }
      }
    }
  }

  else {
    while (++i < n) { // Find the first comparable value.
      if ((value = valueof(values[i], i, values)) != null && value >= value) {
        max = value;
        while (++i < n) { // Compare the remaining values.
          if ((value = valueof(values[i], i, values)) != null && value > max) {
            max = value;
          }
        }
      }
    }
  }

  return max;
});


/***/ }),

/***/ "./node_modules/d3-contour/node_modules/d3-array/src/mean.js":
/*!*******************************************************************!*\
  !*** ./node_modules/d3-contour/node_modules/d3-array/src/mean.js ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _number__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./number */ "./node_modules/d3-contour/node_modules/d3-array/src/number.js");


/* harmony default export */ __webpack_exports__["default"] = (function(values, valueof) {
  var n = values.length,
      m = n,
      i = -1,
      value,
      sum = 0;

  if (valueof == null) {
    while (++i < n) {
      if (!isNaN(value = Object(_number__WEBPACK_IMPORTED_MODULE_0__["default"])(values[i]))) sum += value;
      else --m;
    }
  }

  else {
    while (++i < n) {
      if (!isNaN(value = Object(_number__WEBPACK_IMPORTED_MODULE_0__["default"])(valueof(values[i], i, values)))) sum += value;
      else --m;
    }
  }

  if (m) return sum / m;
});


/***/ }),

/***/ "./node_modules/d3-contour/node_modules/d3-array/src/median.js":
/*!*********************************************************************!*\
  !*** ./node_modules/d3-contour/node_modules/d3-array/src/median.js ***!
  \*********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ascending__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ascending */ "./node_modules/d3-contour/node_modules/d3-array/src/ascending.js");
/* harmony import */ var _number__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./number */ "./node_modules/d3-contour/node_modules/d3-array/src/number.js");
/* harmony import */ var _quantile__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./quantile */ "./node_modules/d3-contour/node_modules/d3-array/src/quantile.js");




/* harmony default export */ __webpack_exports__["default"] = (function(values, valueof) {
  var n = values.length,
      i = -1,
      value,
      numbers = [];

  if (valueof == null) {
    while (++i < n) {
      if (!isNaN(value = Object(_number__WEBPACK_IMPORTED_MODULE_1__["default"])(values[i]))) {
        numbers.push(value);
      }
    }
  }

  else {
    while (++i < n) {
      if (!isNaN(value = Object(_number__WEBPACK_IMPORTED_MODULE_1__["default"])(valueof(values[i], i, values)))) {
        numbers.push(value);
      }
    }
  }

  return Object(_quantile__WEBPACK_IMPORTED_MODULE_2__["default"])(numbers.sort(_ascending__WEBPACK_IMPORTED_MODULE_0__["default"]), 0.5);
});


/***/ }),

/***/ "./node_modules/d3-contour/node_modules/d3-array/src/merge.js":
/*!********************************************************************!*\
  !*** ./node_modules/d3-contour/node_modules/d3-array/src/merge.js ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(arrays) {
  var n = arrays.length,
      m,
      i = -1,
      j = 0,
      merged,
      array;

  while (++i < n) j += arrays[i].length;
  merged = new Array(j);

  while (--n >= 0) {
    array = arrays[n];
    m = array.length;
    while (--m >= 0) {
      merged[--j] = array[m];
    }
  }

  return merged;
});


/***/ }),

/***/ "./node_modules/d3-contour/node_modules/d3-array/src/min.js":
/*!******************************************************************!*\
  !*** ./node_modules/d3-contour/node_modules/d3-array/src/min.js ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(values, valueof) {
  var n = values.length,
      i = -1,
      value,
      min;

  if (valueof == null) {
    while (++i < n) { // Find the first comparable value.
      if ((value = values[i]) != null && value >= value) {
        min = value;
        while (++i < n) { // Compare the remaining values.
          if ((value = values[i]) != null && min > value) {
            min = value;
          }
        }
      }
    }
  }

  else {
    while (++i < n) { // Find the first comparable value.
      if ((value = valueof(values[i], i, values)) != null && value >= value) {
        min = value;
        while (++i < n) { // Compare the remaining values.
          if ((value = valueof(values[i], i, values)) != null && min > value) {
            min = value;
          }
        }
      }
    }
  }

  return min;
});


/***/ }),

/***/ "./node_modules/d3-contour/node_modules/d3-array/src/number.js":
/*!*********************************************************************!*\
  !*** ./node_modules/d3-contour/node_modules/d3-array/src/number.js ***!
  \*********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(x) {
  return x === null ? NaN : +x;
});


/***/ }),

/***/ "./node_modules/d3-contour/node_modules/d3-array/src/pairs.js":
/*!********************************************************************!*\
  !*** ./node_modules/d3-contour/node_modules/d3-array/src/pairs.js ***!
  \********************************************************************/
/*! exports provided: default, pair */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pair", function() { return pair; });
/* harmony default export */ __webpack_exports__["default"] = (function(array, f) {
  if (f == null) f = pair;
  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);
  while (i < n) pairs[i] = f(p, p = array[++i]);
  return pairs;
});

function pair(a, b) {
  return [a, b];
}


/***/ }),

/***/ "./node_modules/d3-contour/node_modules/d3-array/src/permute.js":
/*!**********************************************************************!*\
  !*** ./node_modules/d3-contour/node_modules/d3-array/src/permute.js ***!
  \**********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(array, indexes) {
  var i = indexes.length, permutes = new Array(i);
  while (i--) permutes[i] = array[indexes[i]];
  return permutes;
});


/***/ }),

/***/ "./node_modules/d3-contour/node_modules/d3-array/src/quantile.js":
/*!***********************************************************************!*\
  !*** ./node_modules/d3-contour/node_modules/d3-array/src/quantile.js ***!
  \***********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _number__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./number */ "./node_modules/d3-contour/node_modules/d3-array/src/number.js");


/* harmony default export */ __webpack_exports__["default"] = (function(values, p, valueof) {
  if (valueof == null) valueof = _number__WEBPACK_IMPORTED_MODULE_0__["default"];
  if (!(n = values.length)) return;
  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);
  if (p >= 1) return +valueof(values[n - 1], n - 1, values);
  var n,
      i = (n - 1) * p,
      i0 = Math.floor(i),
      value0 = +valueof(values[i0], i0, values),
      value1 = +valueof(values[i0 + 1], i0 + 1, values);
  return value0 + (value1 - value0) * (i - i0);
});


/***/ }),

/***/ "./node_modules/d3-contour/node_modules/d3-array/src/range.js":
/*!********************************************************************!*\
  !*** ./node_modules/d3-contour/node_modules/d3-array/src/range.js ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(start, stop, step) {
  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;

  var i = -1,
      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,
      range = new Array(n);

  while (++i < n) {
    range[i] = start + i * step;
  }

  return range;
});


/***/ }),

/***/ "./node_modules/d3-contour/node_modules/d3-array/src/scan.js":
/*!*******************************************************************!*\
  !*** ./node_modules/d3-contour/node_modules/d3-array/src/scan.js ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ascending__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ascending */ "./node_modules/d3-contour/node_modules/d3-array/src/ascending.js");


/* harmony default export */ __webpack_exports__["default"] = (function(values, compare) {
  if (!(n = values.length)) return;
  var n,
      i = 0,
      j = 0,
      xi,
      xj = values[j];

  if (compare == null) compare = _ascending__WEBPACK_IMPORTED_MODULE_0__["default"];

  while (++i < n) {
    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {
      xj = xi, j = i;
    }
  }

  if (compare(xj, xj) === 0) return j;
});


/***/ }),

/***/ "./node_modules/d3-contour/node_modules/d3-array/src/shuffle.js":
/*!**********************************************************************!*\
  !*** ./node_modules/d3-contour/node_modules/d3-array/src/shuffle.js ***!
  \**********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(array, i0, i1) {
  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),
      t,
      i;

  while (m) {
    i = Math.random() * m-- | 0;
    t = array[m + i0];
    array[m + i0] = array[i + i0];
    array[i + i0] = t;
  }

  return array;
});


/***/ }),

/***/ "./node_modules/d3-contour/node_modules/d3-array/src/sum.js":
/*!******************************************************************!*\
  !*** ./node_modules/d3-contour/node_modules/d3-array/src/sum.js ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(values, valueof) {
  var n = values.length,
      i = -1,
      value,
      sum = 0;

  if (valueof == null) {
    while (++i < n) {
      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.
    }
  }

  else {
    while (++i < n) {
      if (value = +valueof(values[i], i, values)) sum += value;
    }
  }

  return sum;
});


/***/ }),

/***/ "./node_modules/d3-contour/node_modules/d3-array/src/threshold/freedmanDiaconis.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/d3-contour/node_modules/d3-array/src/threshold/freedmanDiaconis.js ***!
  \*****************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../array */ "./node_modules/d3-contour/node_modules/d3-array/src/array.js");
/* harmony import */ var _ascending__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ascending */ "./node_modules/d3-contour/node_modules/d3-array/src/ascending.js");
/* harmony import */ var _number__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../number */ "./node_modules/d3-contour/node_modules/d3-array/src/number.js");
/* harmony import */ var _quantile__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../quantile */ "./node_modules/d3-contour/node_modules/d3-array/src/quantile.js");





/* harmony default export */ __webpack_exports__["default"] = (function(values, min, max) {
  values = _array__WEBPACK_IMPORTED_MODULE_0__["map"].call(values, _number__WEBPACK_IMPORTED_MODULE_2__["default"]).sort(_ascending__WEBPACK_IMPORTED_MODULE_1__["default"]);
  return Math.ceil((max - min) / (2 * (Object(_quantile__WEBPACK_IMPORTED_MODULE_3__["default"])(values, 0.75) - Object(_quantile__WEBPACK_IMPORTED_MODULE_3__["default"])(values, 0.25)) * Math.pow(values.length, -1 / 3)));
});


/***/ }),

/***/ "./node_modules/d3-contour/node_modules/d3-array/src/threshold/scott.js":
/*!******************************************************************************!*\
  !*** ./node_modules/d3-contour/node_modules/d3-array/src/threshold/scott.js ***!
  \******************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _deviation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../deviation */ "./node_modules/d3-contour/node_modules/d3-array/src/deviation.js");


/* harmony default export */ __webpack_exports__["default"] = (function(values, min, max) {
  return Math.ceil((max - min) / (3.5 * Object(_deviation__WEBPACK_IMPORTED_MODULE_0__["default"])(values) * Math.pow(values.length, -1 / 3)));
});


/***/ }),

/***/ "./node_modules/d3-contour/node_modules/d3-array/src/threshold/sturges.js":
/*!********************************************************************************!*\
  !*** ./node_modules/d3-contour/node_modules/d3-array/src/threshold/sturges.js ***!
  \********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(values) {
  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;
});


/***/ }),

/***/ "./node_modules/d3-contour/node_modules/d3-array/src/ticks.js":
/*!********************************************************************!*\
  !*** ./node_modules/d3-contour/node_modules/d3-array/src/ticks.js ***!
  \********************************************************************/
/*! exports provided: default, tickIncrement, tickStep */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tickIncrement", function() { return tickIncrement; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tickStep", function() { return tickStep; });
var e10 = Math.sqrt(50),
    e5 = Math.sqrt(10),
    e2 = Math.sqrt(2);

/* harmony default export */ __webpack_exports__["default"] = (function(start, stop, count) {
  var reverse,
      i = -1,
      n,
      ticks,
      step;

  stop = +stop, start = +start, count = +count;
  if (start === stop && count > 0) return [start];
  if (reverse = stop < start) n = start, start = stop, stop = n;
  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];

  if (step > 0) {
    start = Math.ceil(start / step);
    stop = Math.floor(stop / step);
    ticks = new Array(n = Math.ceil(stop - start + 1));
    while (++i < n) ticks[i] = (start + i) * step;
  } else {
    start = Math.floor(start * step);
    stop = Math.ceil(stop * step);
    ticks = new Array(n = Math.ceil(start - stop + 1));
    while (++i < n) ticks[i] = (start - i) / step;
  }

  if (reverse) ticks.reverse();

  return ticks;
});

function tickIncrement(start, stop, count) {
  var step = (stop - start) / Math.max(0, count),
      power = Math.floor(Math.log(step) / Math.LN10),
      error = step / Math.pow(10, power);
  return power >= 0
      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)
      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);
}

function tickStep(start, stop, count) {
  var step0 = Math.abs(stop - start) / Math.max(0, count),
      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),
      error = step0 / step1;
  if (error >= e10) step1 *= 10;
  else if (error >= e5) step1 *= 5;
  else if (error >= e2) step1 *= 2;
  return stop < start ? -step1 : step1;
}


/***/ }),

/***/ "./node_modules/d3-contour/node_modules/d3-array/src/transpose.js":
/*!************************************************************************!*\
  !*** ./node_modules/d3-contour/node_modules/d3-array/src/transpose.js ***!
  \************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _min__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./min */ "./node_modules/d3-contour/node_modules/d3-array/src/min.js");


/* harmony default export */ __webpack_exports__["default"] = (function(matrix) {
  if (!(n = matrix.length)) return [];
  for (var i = -1, m = Object(_min__WEBPACK_IMPORTED_MODULE_0__["default"])(matrix, length), transpose = new Array(m); ++i < m;) {
    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {
      row[j] = matrix[j][i];
    }
  }
  return transpose;
});

function length(d) {
  return d.length;
}


/***/ }),

/***/ "./node_modules/d3-contour/node_modules/d3-array/src/variance.js":
/*!***********************************************************************!*\
  !*** ./node_modules/d3-contour/node_modules/d3-array/src/variance.js ***!
  \***********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _number__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./number */ "./node_modules/d3-contour/node_modules/d3-array/src/number.js");


/* harmony default export */ __webpack_exports__["default"] = (function(values, valueof) {
  var n = values.length,
      m = 0,
      i = -1,
      mean = 0,
      value,
      delta,
      sum = 0;

  if (valueof == null) {
    while (++i < n) {
      if (!isNaN(value = Object(_number__WEBPACK_IMPORTED_MODULE_0__["default"])(values[i]))) {
        delta = value - mean;
        mean += delta / ++m;
        sum += delta * (value - mean);
      }
    }
  }

  else {
    while (++i < n) {
      if (!isNaN(value = Object(_number__WEBPACK_IMPORTED_MODULE_0__["default"])(valueof(values[i], i, values)))) {
        delta = value - mean;
        mean += delta / ++m;
        sum += delta * (value - mean);
      }
    }
  }

  if (m > 1) return sum / (m - 1);
});


/***/ }),

/***/ "./node_modules/d3-contour/node_modules/d3-array/src/zip.js":
/*!******************************************************************!*\
  !*** ./node_modules/d3-contour/node_modules/d3-array/src/zip.js ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _transpose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./transpose */ "./node_modules/d3-contour/node_modules/d3-array/src/transpose.js");


/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(_transpose__WEBPACK_IMPORTED_MODULE_0__["default"])(arguments);
});


/***/ }),

/***/ "./node_modules/d3-contour/src/area.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-contour/src/area.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(ring) {
  var i = 0, n = ring.length, area = ring[n - 1][1] * ring[0][0] - ring[n - 1][0] * ring[0][1];
  while (++i < n) area += ring[i - 1][1] * ring[i][0] - ring[i - 1][0] * ring[i][1];
  return area;
});


/***/ }),

/***/ "./node_modules/d3-contour/src/array.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-contour/src/array.js ***!
  \**********************************************/
/*! exports provided: slice */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "slice", function() { return slice; });
var array = Array.prototype;

var slice = array.slice;


/***/ }),

/***/ "./node_modules/d3-contour/src/ascending.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-contour/src/ascending.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(a, b) {
  return a - b;
});


/***/ }),

/***/ "./node_modules/d3-contour/src/blur.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-contour/src/blur.js ***!
  \*********************************************/
/*! exports provided: blurX, blurY */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "blurX", function() { return blurX; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "blurY", function() { return blurY; });
// TODO Optimize edge cases.
// TODO Optimize index calculation.
// TODO Optimize arguments.
function blurX(source, target, r) {
  var n = source.width,
      m = source.height,
      w = (r << 1) + 1;
  for (var j = 0; j < m; ++j) {
    for (var i = 0, sr = 0; i < n + r; ++i) {
      if (i < n) {
        sr += source.data[i + j * n];
      }
      if (i >= r) {
        if (i >= w) {
          sr -= source.data[i - w + j * n];
        }
        target.data[i - r + j * n] = sr / Math.min(i + 1, n - 1 + w - i, w);
      }
    }
  }
}

// TODO Optimize edge cases.
// TODO Optimize index calculation.
// TODO Optimize arguments.
function blurY(source, target, r) {
  var n = source.width,
      m = source.height,
      w = (r << 1) + 1;
  for (var i = 0; i < n; ++i) {
    for (var j = 0, sr = 0; j < m + r; ++j) {
      if (j < m) {
        sr += source.data[i + j * n];
      }
      if (j >= r) {
        if (j >= w) {
          sr -= source.data[i + (j - w) * n];
        }
        target.data[i + (j - r) * n] = sr / Math.min(j + 1, m - 1 + w - j, w);
      }
    }
  }
}


/***/ }),

/***/ "./node_modules/d3-contour/src/constant.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-contour/src/constant.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(x) {
  return function() {
    return x;
  };
});


/***/ }),

/***/ "./node_modules/d3-contour/src/contains.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-contour/src/contains.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(ring, hole) {
  var i = -1, n = hole.length, c;
  while (++i < n) if (c = ringContains(ring, hole[i])) return c;
  return 0;
});

function ringContains(ring, point) {
  var x = point[0], y = point[1], contains = -1;
  for (var i = 0, n = ring.length, j = n - 1; i < n; j = i++) {
    var pi = ring[i], xi = pi[0], yi = pi[1], pj = ring[j], xj = pj[0], yj = pj[1];
    if (segmentContains(pi, pj, point)) return 0;
    if (((yi > y) !== (yj > y)) && ((x < (xj - xi) * (y - yi) / (yj - yi) + xi))) contains = -contains;
  }
  return contains;
}

function segmentContains(a, b, c) {
  var i; return collinear(a, b, c) && within(a[i = +(a[0] === b[0])], c[i], b[i]);
}

function collinear(a, b, c) {
  return (b[0] - a[0]) * (c[1] - a[1]) === (c[0] - a[0]) * (b[1] - a[1]);
}

function within(p, q, r) {
  return p <= q && q <= r || r <= q && q <= p;
}


/***/ }),

/***/ "./node_modules/d3-contour/src/contours.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-contour/src/contours.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-contour/node_modules/d3-array/src/index.js");
/* harmony import */ var _array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./array */ "./node_modules/d3-contour/src/array.js");
/* harmony import */ var _ascending__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ascending */ "./node_modules/d3-contour/src/ascending.js");
/* harmony import */ var _area__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./area */ "./node_modules/d3-contour/src/area.js");
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./constant */ "./node_modules/d3-contour/src/constant.js");
/* harmony import */ var _contains__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./contains */ "./node_modules/d3-contour/src/contains.js");
/* harmony import */ var _noop__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./noop */ "./node_modules/d3-contour/src/noop.js");








var cases = [
  [],
  [[[1.0, 1.5], [0.5, 1.0]]],
  [[[1.5, 1.0], [1.0, 1.5]]],
  [[[1.5, 1.0], [0.5, 1.0]]],
  [[[1.0, 0.5], [1.5, 1.0]]],
  [[[1.0, 1.5], [0.5, 1.0]], [[1.0, 0.5], [1.5, 1.0]]],
  [[[1.0, 0.5], [1.0, 1.5]]],
  [[[1.0, 0.5], [0.5, 1.0]]],
  [[[0.5, 1.0], [1.0, 0.5]]],
  [[[1.0, 1.5], [1.0, 0.5]]],
  [[[0.5, 1.0], [1.0, 0.5]], [[1.5, 1.0], [1.0, 1.5]]],
  [[[1.5, 1.0], [1.0, 0.5]]],
  [[[0.5, 1.0], [1.5, 1.0]]],
  [[[1.0, 1.5], [1.5, 1.0]]],
  [[[0.5, 1.0], [1.0, 1.5]]],
  []
];

/* harmony default export */ __webpack_exports__["default"] = (function() {
  var dx = 1,
      dy = 1,
      threshold = d3_array__WEBPACK_IMPORTED_MODULE_0__["thresholdSturges"],
      smooth = smoothLinear;

  function contours(values) {
    var tz = threshold(values);

    // Convert number of thresholds into uniform thresholds.
    if (!Array.isArray(tz)) {
      var domain = Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["extent"])(values), start = domain[0], stop = domain[1];
      tz = Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["tickStep"])(start, stop, tz);
      tz = Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["range"])(Math.floor(start / tz) * tz, Math.floor(stop / tz) * tz, tz);
    } else {
      tz = tz.slice().sort(_ascending__WEBPACK_IMPORTED_MODULE_2__["default"]);
    }

    return tz.map(function(value) {
      return contour(values, value);
    });
  }

  // Accumulate, smooth contour rings, assign holes to exterior rings.
  // Based on https://github.com/mbostock/shapefile/blob/v0.6.2/shp/polygon.js
  function contour(values, value) {
    var polygons = [],
        holes = [];

    isorings(values, value, function(ring) {
      smooth(ring, values, value);
      if (Object(_area__WEBPACK_IMPORTED_MODULE_3__["default"])(ring) > 0) polygons.push([ring]);
      else holes.push(ring);
    });

    holes.forEach(function(hole) {
      for (var i = 0, n = polygons.length, polygon; i < n; ++i) {
        if (Object(_contains__WEBPACK_IMPORTED_MODULE_5__["default"])((polygon = polygons[i])[0], hole) !== -1) {
          polygon.push(hole);
          return;
        }
      }
    });

    return {
      type: "MultiPolygon",
      value: value,
      coordinates: polygons
    };
  }

  // Marching squares with isolines stitched into rings.
  // Based on https://github.com/topojson/topojson-client/blob/v3.0.0/src/stitch.js
  function isorings(values, value, callback) {
    var fragmentByStart = new Array,
        fragmentByEnd = new Array,
        x, y, t0, t1, t2, t3;

    // Special case for the first row (y = -1, t2 = t3 = 0).
    x = y = -1;
    t1 = values[0] >= value;
    cases[t1 << 1].forEach(stitch);
    while (++x < dx - 1) {
      t0 = t1, t1 = values[x + 1] >= value;
      cases[t0 | t1 << 1].forEach(stitch);
    }
    cases[t1 << 0].forEach(stitch);

    // General case for the intermediate rows.
    while (++y < dy - 1) {
      x = -1;
      t1 = values[y * dx + dx] >= value;
      t2 = values[y * dx] >= value;
      cases[t1 << 1 | t2 << 2].forEach(stitch);
      while (++x < dx - 1) {
        t0 = t1, t1 = values[y * dx + dx + x + 1] >= value;
        t3 = t2, t2 = values[y * dx + x + 1] >= value;
        cases[t0 | t1 << 1 | t2 << 2 | t3 << 3].forEach(stitch);
      }
      cases[t1 | t2 << 3].forEach(stitch);
    }

    // Special case for the last row (y = dy - 1, t0 = t1 = 0).
    x = -1;
    t2 = values[y * dx] >= value;
    cases[t2 << 2].forEach(stitch);
    while (++x < dx - 1) {
      t3 = t2, t2 = values[y * dx + x + 1] >= value;
      cases[t2 << 2 | t3 << 3].forEach(stitch);
    }
    cases[t2 << 3].forEach(stitch);

    function stitch(line) {
      var start = [line[0][0] + x, line[0][1] + y],
          end = [line[1][0] + x, line[1][1] + y],
          startIndex = index(start),
          endIndex = index(end),
          f, g;
      if (f = fragmentByEnd[startIndex]) {
        if (g = fragmentByStart[endIndex]) {
          delete fragmentByEnd[f.end];
          delete fragmentByStart[g.start];
          if (f === g) {
            f.ring.push(end);
            callback(f.ring);
          } else {
            fragmentByStart[f.start] = fragmentByEnd[g.end] = {start: f.start, end: g.end, ring: f.ring.concat(g.ring)};
          }
        } else {
          delete fragmentByEnd[f.end];
          f.ring.push(end);
          fragmentByEnd[f.end = endIndex] = f;
        }
      } else if (f = fragmentByStart[endIndex]) {
        if (g = fragmentByEnd[startIndex]) {
          delete fragmentByStart[f.start];
          delete fragmentByEnd[g.end];
          if (f === g) {
            f.ring.push(end);
            callback(f.ring);
          } else {
            fragmentByStart[g.start] = fragmentByEnd[f.end] = {start: g.start, end: f.end, ring: g.ring.concat(f.ring)};
          }
        } else {
          delete fragmentByStart[f.start];
          f.ring.unshift(start);
          fragmentByStart[f.start = startIndex] = f;
        }
      } else {
        fragmentByStart[startIndex] = fragmentByEnd[endIndex] = {start: startIndex, end: endIndex, ring: [start, end]};
      }
    }
  }

  function index(point) {
    return point[0] * 2 + point[1] * (dx + 1) * 4;
  }

  function smoothLinear(ring, values, value) {
    ring.forEach(function(point) {
      var x = point[0],
          y = point[1],
          xt = x | 0,
          yt = y | 0,
          v0,
          v1 = values[yt * dx + xt];
      if (x > 0 && x < dx && xt === x) {
        v0 = values[yt * dx + xt - 1];
        point[0] = x + (value - v0) / (v1 - v0) - 0.5;
      }
      if (y > 0 && y < dy && yt === y) {
        v0 = values[(yt - 1) * dx + xt];
        point[1] = y + (value - v0) / (v1 - v0) - 0.5;
      }
    });
  }

  contours.contour = contour;

  contours.size = function(_) {
    if (!arguments.length) return [dx, dy];
    var _0 = Math.ceil(_[0]), _1 = Math.ceil(_[1]);
    if (!(_0 > 0) || !(_1 > 0)) throw new Error("invalid size");
    return dx = _0, dy = _1, contours;
  };

  contours.thresholds = function(_) {
    return arguments.length ? (threshold = typeof _ === "function" ? _ : Array.isArray(_) ? Object(_constant__WEBPACK_IMPORTED_MODULE_4__["default"])(_array__WEBPACK_IMPORTED_MODULE_1__["slice"].call(_)) : Object(_constant__WEBPACK_IMPORTED_MODULE_4__["default"])(_), contours) : threshold;
  };

  contours.smooth = function(_) {
    return arguments.length ? (smooth = _ ? smoothLinear : _noop__WEBPACK_IMPORTED_MODULE_6__["default"], contours) : smooth === smoothLinear;
  };

  return contours;
});


/***/ }),

/***/ "./node_modules/d3-contour/src/density.js":
/*!************************************************!*\
  !*** ./node_modules/d3-contour/src/density.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-contour/node_modules/d3-array/src/index.js");
/* harmony import */ var _array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./array */ "./node_modules/d3-contour/src/array.js");
/* harmony import */ var _blur__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./blur */ "./node_modules/d3-contour/src/blur.js");
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./constant */ "./node_modules/d3-contour/src/constant.js");
/* harmony import */ var _contours__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./contours */ "./node_modules/d3-contour/src/contours.js");






function defaultX(d) {
  return d[0];
}

function defaultY(d) {
  return d[1];
}

function defaultWeight() {
  return 1;
}

/* harmony default export */ __webpack_exports__["default"] = (function() {
  var x = defaultX,
      y = defaultY,
      weight = defaultWeight,
      dx = 960,
      dy = 500,
      r = 20, // blur radius
      k = 2, // log2(grid cell size)
      o = r * 3, // grid offset, to pad for blur
      n = (dx + o * 2) >> k, // grid width
      m = (dy + o * 2) >> k, // grid height
      threshold = Object(_constant__WEBPACK_IMPORTED_MODULE_3__["default"])(20);

  function density(data) {
    var values0 = new Float32Array(n * m),
        values1 = new Float32Array(n * m);

    data.forEach(function(d, i, data) {
      var xi = (+x(d, i, data) + o) >> k,
          yi = (+y(d, i, data) + o) >> k,
          wi = +weight(d, i, data);
      if (xi >= 0 && xi < n && yi >= 0 && yi < m) {
        values0[xi + yi * n] += wi;
      }
    });

    // TODO Optimize.
    Object(_blur__WEBPACK_IMPORTED_MODULE_2__["blurX"])({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);
    Object(_blur__WEBPACK_IMPORTED_MODULE_2__["blurY"])({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);
    Object(_blur__WEBPACK_IMPORTED_MODULE_2__["blurX"])({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);
    Object(_blur__WEBPACK_IMPORTED_MODULE_2__["blurY"])({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);
    Object(_blur__WEBPACK_IMPORTED_MODULE_2__["blurX"])({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);
    Object(_blur__WEBPACK_IMPORTED_MODULE_2__["blurY"])({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);

    var tz = threshold(values0);

    // Convert number of thresholds into uniform thresholds.
    if (!Array.isArray(tz)) {
      var stop = Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["max"])(values0);
      tz = Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["tickStep"])(0, stop, tz);
      tz = Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["range"])(0, Math.floor(stop / tz) * tz, tz);
      tz.shift();
    }

    return Object(_contours__WEBPACK_IMPORTED_MODULE_4__["default"])()
        .thresholds(tz)
        .size([n, m])
      (values0)
        .map(transform);
  }

  function transform(geometry) {
    geometry.value *= Math.pow(2, -2 * k); // Density in points per square pixel.
    geometry.coordinates.forEach(transformPolygon);
    return geometry;
  }

  function transformPolygon(coordinates) {
    coordinates.forEach(transformRing);
  }

  function transformRing(coordinates) {
    coordinates.forEach(transformPoint);
  }

  // TODO Optimize.
  function transformPoint(coordinates) {
    coordinates[0] = coordinates[0] * Math.pow(2, k) - o;
    coordinates[1] = coordinates[1] * Math.pow(2, k) - o;
  }

  function resize() {
    o = r * 3;
    n = (dx + o * 2) >> k;
    m = (dy + o * 2) >> k;
    return density;
  }

  density.x = function(_) {
    return arguments.length ? (x = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_3__["default"])(+_), density) : x;
  };

  density.y = function(_) {
    return arguments.length ? (y = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_3__["default"])(+_), density) : y;
  };

  density.weight = function(_) {
    return arguments.length ? (weight = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_3__["default"])(+_), density) : weight;
  };

  density.size = function(_) {
    if (!arguments.length) return [dx, dy];
    var _0 = Math.ceil(_[0]), _1 = Math.ceil(_[1]);
    if (!(_0 >= 0) && !(_0 >= 0)) throw new Error("invalid size");
    return dx = _0, dy = _1, resize();
  };

  density.cellSize = function(_) {
    if (!arguments.length) return 1 << k;
    if (!((_ = +_) >= 1)) throw new Error("invalid cell size");
    return k = Math.floor(Math.log(_) / Math.LN2), resize();
  };

  density.thresholds = function(_) {
    return arguments.length ? (threshold = typeof _ === "function" ? _ : Array.isArray(_) ? Object(_constant__WEBPACK_IMPORTED_MODULE_3__["default"])(_array__WEBPACK_IMPORTED_MODULE_1__["slice"].call(_)) : Object(_constant__WEBPACK_IMPORTED_MODULE_3__["default"])(_), density) : threshold;
  };

  density.bandwidth = function(_) {
    if (!arguments.length) return Math.sqrt(r * (r + 1));
    if (!((_ = +_) >= 0)) throw new Error("invalid bandwidth");
    return r = Math.round((Math.sqrt(4 * _ * _ + 1) - 1) / 2), resize();
  };

  return density;
});


/***/ }),

/***/ "./node_modules/d3-contour/src/index.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-contour/src/index.js ***!
  \**********************************************/
/*! exports provided: contours, contourDensity */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _contours__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./contours */ "./node_modules/d3-contour/src/contours.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "contours", function() { return _contours__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _density__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./density */ "./node_modules/d3-contour/src/density.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "contourDensity", function() { return _density__WEBPACK_IMPORTED_MODULE_1__["default"]; });





/***/ }),

/***/ "./node_modules/d3-contour/src/noop.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-contour/src/noop.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function() {});


/***/ }),

/***/ "./node_modules/d3-dispatch/src/dispatch.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-dispatch/src/dispatch.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var noop = {value: function() {}};

function dispatch() {
  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {
    if (!(t = arguments[i] + "") || (t in _)) throw new Error("illegal type: " + t);
    _[t] = [];
  }
  return new Dispatch(_);
}

function Dispatch(_) {
  this._ = _;
}

function parseTypenames(typenames, types) {
  return typenames.trim().split(/^|\s+/).map(function(t) {
    var name = "", i = t.indexOf(".");
    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);
    if (t && !types.hasOwnProperty(t)) throw new Error("unknown type: " + t);
    return {type: t, name: name};
  });
}

Dispatch.prototype = dispatch.prototype = {
  constructor: Dispatch,
  on: function(typename, callback) {
    var _ = this._,
        T = parseTypenames(typename + "", _),
        t,
        i = -1,
        n = T.length;

    // If no callback was specified, return the callback of the given type and name.
    if (arguments.length < 2) {
      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;
      return;
    }

    // If a type was specified, set the callback for the given type and name.
    // Otherwise, if a null callback was specified, remove callbacks of the given name.
    if (callback != null && typeof callback !== "function") throw new Error("invalid callback: " + callback);
    while (++i < n) {
      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);
      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);
    }

    return this;
  },
  copy: function() {
    var copy = {}, _ = this._;
    for (var t in _) copy[t] = _[t].slice();
    return new Dispatch(copy);
  },
  call: function(type, that) {
    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];
    if (!this._.hasOwnProperty(type)) throw new Error("unknown type: " + type);
    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);
  },
  apply: function(type, that, args) {
    if (!this._.hasOwnProperty(type)) throw new Error("unknown type: " + type);
    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);
  }
};

function get(type, name) {
  for (var i = 0, n = type.length, c; i < n; ++i) {
    if ((c = type[i]).name === name) {
      return c.value;
    }
  }
}

function set(type, name, callback) {
  for (var i = 0, n = type.length; i < n; ++i) {
    if (type[i].name === name) {
      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));
      break;
    }
  }
  if (callback != null) type.push({name: name, value: callback});
  return type;
}

/* harmony default export */ __webpack_exports__["default"] = (dispatch);


/***/ }),

/***/ "./node_modules/d3-dispatch/src/index.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-dispatch/src/index.js ***!
  \***********************************************/
/*! exports provided: dispatch */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _dispatch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dispatch */ "./node_modules/d3-dispatch/src/dispatch.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dispatch", function() { return _dispatch__WEBPACK_IMPORTED_MODULE_0__["default"]; });




/***/ }),

/***/ "./node_modules/d3-dsv/src/autoType.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-dsv/src/autoType.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return autoType; });
function autoType(object) {
  for (var key in object) {
    var value = object[key].trim(), number;
    if (!value) value = null;
    else if (value === "true") value = true;
    else if (value === "false") value = false;
    else if (value === "NaN") value = NaN;
    else if (!isNaN(number = +value)) value = number;
    else if (/^([-+]\d{2})?\d{4}(-\d{2}(-\d{2})?)?(T\d{2}:\d{2}(:\d{2}(\.\d{3})?)?(Z|[-+]\d{2}:\d{2})?)?$/.test(value)) value = new Date(value);
    else continue;
    object[key] = value;
  }
  return object;
}


/***/ }),

/***/ "./node_modules/d3-dsv/src/csv.js":
/*!****************************************!*\
  !*** ./node_modules/d3-dsv/src/csv.js ***!
  \****************************************/
/*! exports provided: csvParse, csvParseRows, csvFormat, csvFormatBody, csvFormatRows */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "csvParse", function() { return csvParse; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "csvParseRows", function() { return csvParseRows; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "csvFormat", function() { return csvFormat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "csvFormatBody", function() { return csvFormatBody; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "csvFormatRows", function() { return csvFormatRows; });
/* harmony import */ var _dsv__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dsv */ "./node_modules/d3-dsv/src/dsv.js");


var csv = Object(_dsv__WEBPACK_IMPORTED_MODULE_0__["default"])(",");

var csvParse = csv.parse;
var csvParseRows = csv.parseRows;
var csvFormat = csv.format;
var csvFormatBody = csv.formatBody;
var csvFormatRows = csv.formatRows;


/***/ }),

/***/ "./node_modules/d3-dsv/src/dsv.js":
/*!****************************************!*\
  !*** ./node_modules/d3-dsv/src/dsv.js ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var EOL = {},
    EOF = {},
    QUOTE = 34,
    NEWLINE = 10,
    RETURN = 13;

function objectConverter(columns) {
  return new Function("d", "return {" + columns.map(function(name, i) {
    return JSON.stringify(name) + ": d[" + i + "]";
  }).join(",") + "}");
}

function customConverter(columns, f) {
  var object = objectConverter(columns);
  return function(row, i) {
    return f(object(row), i, columns);
  };
}

// Compute unique columns in order of discovery.
function inferColumns(rows) {
  var columnSet = Object.create(null),
      columns = [];

  rows.forEach(function(row) {
    for (var column in row) {
      if (!(column in columnSet)) {
        columns.push(columnSet[column] = column);
      }
    }
  });

  return columns;
}

function pad(value, width) {
  var s = value + "", length = s.length;
  return length < width ? new Array(width - length + 1).join(0) + s : s;
}

function formatYear(year) {
  return year < 0 ? "-" + pad(-year, 6)
    : year > 9999 ? "+" + pad(year, 6)
    : pad(year, 4);
}

function formatDate(date) {
  var hours = date.getUTCHours(),
      minutes = date.getUTCMinutes(),
      seconds = date.getUTCSeconds(),
      milliseconds = date.getUTCMilliseconds();
  return isNaN(date) ? "Invalid Date"
      : formatYear(date.getUTCFullYear(), 4) + "-" + pad(date.getUTCMonth() + 1, 2) + "-" + pad(date.getUTCDate(), 2)
      + (milliseconds ? "T" + pad(hours, 2) + ":" + pad(minutes, 2) + ":" + pad(seconds, 2) + "." + pad(milliseconds, 3) + "Z"
      : seconds ? "T" + pad(hours, 2) + ":" + pad(minutes, 2) + ":" + pad(seconds, 2) + "Z"
      : minutes || hours ? "T" + pad(hours, 2) + ":" + pad(minutes, 2) + "Z"
      : "");
}

/* harmony default export */ __webpack_exports__["default"] = (function(delimiter) {
  var reFormat = new RegExp("[\"" + delimiter + "\n\r]"),
      DELIMITER = delimiter.charCodeAt(0);

  function parse(text, f) {
    var convert, columns, rows = parseRows(text, function(row, i) {
      if (convert) return convert(row, i - 1);
      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);
    });
    rows.columns = columns || [];
    return rows;
  }

  function parseRows(text, f) {
    var rows = [], // output rows
        N = text.length,
        I = 0, // current character index
        n = 0, // current line number
        t, // current token
        eof = N <= 0, // current token followed by EOF?
        eol = false; // current token followed by EOL?

    // Strip the trailing newline.
    if (text.charCodeAt(N - 1) === NEWLINE) --N;
    if (text.charCodeAt(N - 1) === RETURN) --N;

    function token() {
      if (eof) return EOF;
      if (eol) return eol = false, EOL;

      // Unescape quotes.
      var i, j = I, c;
      if (text.charCodeAt(j) === QUOTE) {
        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);
        if ((i = I) >= N) eof = true;
        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;
        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }
        return text.slice(j + 1, i - 1).replace(/""/g, "\"");
      }

      // Find next delimiter or newline.
      while (I < N) {
        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;
        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }
        else if (c !== DELIMITER) continue;
        return text.slice(j, i);
      }

      // Return last token before EOF.
      return eof = true, text.slice(j, N);
    }

    while ((t = token()) !== EOF) {
      var row = [];
      while (t !== EOL && t !== EOF) row.push(t), t = token();
      if (f && (row = f(row, n++)) == null) continue;
      rows.push(row);
    }

    return rows;
  }

  function preformatBody(rows, columns) {
    return rows.map(function(row) {
      return columns.map(function(column) {
        return formatValue(row[column]);
      }).join(delimiter);
    });
  }

  function format(rows, columns) {
    if (columns == null) columns = inferColumns(rows);
    return [columns.map(formatValue).join(delimiter)].concat(preformatBody(rows, columns)).join("\n");
  }

  function formatBody(rows, columns) {
    if (columns == null) columns = inferColumns(rows);
    return preformatBody(rows, columns).join("\n");
  }

  function formatRows(rows) {
    return rows.map(formatRow).join("\n");
  }

  function formatRow(row) {
    return row.map(formatValue).join(delimiter);
  }

  function formatValue(value) {
    return value == null ? ""
        : value instanceof Date ? formatDate(value)
        : reFormat.test(value += "") ? "\"" + value.replace(/"/g, "\"\"") + "\""
        : value;
  }

  return {
    parse: parse,
    parseRows: parseRows,
    format: format,
    formatBody: formatBody,
    formatRows: formatRows
  };
});


/***/ }),

/***/ "./node_modules/d3-dsv/src/index.js":
/*!******************************************!*\
  !*** ./node_modules/d3-dsv/src/index.js ***!
  \******************************************/
/*! exports provided: dsvFormat, csvParse, csvParseRows, csvFormat, csvFormatBody, csvFormatRows, tsvParse, tsvParseRows, tsvFormat, tsvFormatBody, tsvFormatRows, autoType */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _dsv__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dsv */ "./node_modules/d3-dsv/src/dsv.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dsvFormat", function() { return _dsv__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _csv__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./csv */ "./node_modules/d3-dsv/src/csv.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "csvParse", function() { return _csv__WEBPACK_IMPORTED_MODULE_1__["csvParse"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "csvParseRows", function() { return _csv__WEBPACK_IMPORTED_MODULE_1__["csvParseRows"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "csvFormat", function() { return _csv__WEBPACK_IMPORTED_MODULE_1__["csvFormat"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "csvFormatBody", function() { return _csv__WEBPACK_IMPORTED_MODULE_1__["csvFormatBody"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "csvFormatRows", function() { return _csv__WEBPACK_IMPORTED_MODULE_1__["csvFormatRows"]; });

/* harmony import */ var _tsv__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./tsv */ "./node_modules/d3-dsv/src/tsv.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tsvParse", function() { return _tsv__WEBPACK_IMPORTED_MODULE_2__["tsvParse"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tsvParseRows", function() { return _tsv__WEBPACK_IMPORTED_MODULE_2__["tsvParseRows"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tsvFormat", function() { return _tsv__WEBPACK_IMPORTED_MODULE_2__["tsvFormat"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tsvFormatBody", function() { return _tsv__WEBPACK_IMPORTED_MODULE_2__["tsvFormatBody"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tsvFormatRows", function() { return _tsv__WEBPACK_IMPORTED_MODULE_2__["tsvFormatRows"]; });

/* harmony import */ var _autoType__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./autoType */ "./node_modules/d3-dsv/src/autoType.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "autoType", function() { return _autoType__WEBPACK_IMPORTED_MODULE_3__["default"]; });







/***/ }),

/***/ "./node_modules/d3-dsv/src/tsv.js":
/*!****************************************!*\
  !*** ./node_modules/d3-dsv/src/tsv.js ***!
  \****************************************/
/*! exports provided: tsvParse, tsvParseRows, tsvFormat, tsvFormatBody, tsvFormatRows */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tsvParse", function() { return tsvParse; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tsvParseRows", function() { return tsvParseRows; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tsvFormat", function() { return tsvFormat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tsvFormatBody", function() { return tsvFormatBody; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tsvFormatRows", function() { return tsvFormatRows; });
/* harmony import */ var _dsv__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dsv */ "./node_modules/d3-dsv/src/dsv.js");


var tsv = Object(_dsv__WEBPACK_IMPORTED_MODULE_0__["default"])("\t");

var tsvParse = tsv.parse;
var tsvParseRows = tsv.parseRows;
var tsvFormat = tsv.format;
var tsvFormatBody = tsv.formatBody;
var tsvFormatRows = tsv.formatRows;


/***/ }),

/***/ "./node_modules/d3-fetch/src/blob.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-fetch/src/blob.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function responseBlob(response) {
  if (!response.ok) throw new Error(response.status + " " + response.statusText);
  return response.blob();
}

/* harmony default export */ __webpack_exports__["default"] = (function(input, init) {
  return fetch(input, init).then(responseBlob);
});


/***/ }),

/***/ "./node_modules/d3-fetch/src/buffer.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-fetch/src/buffer.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function responseArrayBuffer(response) {
  if (!response.ok) throw new Error(response.status + " " + response.statusText);
  return response.arrayBuffer();
}

/* harmony default export */ __webpack_exports__["default"] = (function(input, init) {
  return fetch(input, init).then(responseArrayBuffer);
});


/***/ }),

/***/ "./node_modules/d3-fetch/src/dsv.js":
/*!******************************************!*\
  !*** ./node_modules/d3-fetch/src/dsv.js ***!
  \******************************************/
/*! exports provided: default, csv, tsv */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return dsv; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "csv", function() { return csv; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tsv", function() { return tsv; });
/* harmony import */ var d3_dsv__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-dsv */ "./node_modules/d3-dsv/src/index.js");
/* harmony import */ var _text__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./text */ "./node_modules/d3-fetch/src/text.js");



function dsvParse(parse) {
  return function(input, init, row) {
    if (arguments.length === 2 && typeof init === "function") row = init, init = undefined;
    return Object(_text__WEBPACK_IMPORTED_MODULE_1__["default"])(input, init).then(function(response) {
      return parse(response, row);
    });
  };
}

function dsv(delimiter, input, init, row) {
  if (arguments.length === 3 && typeof init === "function") row = init, init = undefined;
  var format = Object(d3_dsv__WEBPACK_IMPORTED_MODULE_0__["dsvFormat"])(delimiter);
  return Object(_text__WEBPACK_IMPORTED_MODULE_1__["default"])(input, init).then(function(response) {
    return format.parse(response, row);
  });
}

var csv = dsvParse(d3_dsv__WEBPACK_IMPORTED_MODULE_0__["csvParse"]);
var tsv = dsvParse(d3_dsv__WEBPACK_IMPORTED_MODULE_0__["tsvParse"]);


/***/ }),

/***/ "./node_modules/d3-fetch/src/image.js":
/*!********************************************!*\
  !*** ./node_modules/d3-fetch/src/image.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(input, init) {
  return new Promise(function(resolve, reject) {
    var image = new Image;
    for (var key in init) image[key] = init[key];
    image.onerror = reject;
    image.onload = function() { resolve(image); };
    image.src = input;
  });
});


/***/ }),

/***/ "./node_modules/d3-fetch/src/index.js":
/*!********************************************!*\
  !*** ./node_modules/d3-fetch/src/index.js ***!
  \********************************************/
/*! exports provided: blob, buffer, dsv, csv, tsv, image, json, text, xml, html, svg */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _blob__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./blob */ "./node_modules/d3-fetch/src/blob.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "blob", function() { return _blob__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _buffer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./buffer */ "./node_modules/d3-fetch/src/buffer.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "buffer", function() { return _buffer__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _dsv__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dsv */ "./node_modules/d3-fetch/src/dsv.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dsv", function() { return _dsv__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "csv", function() { return _dsv__WEBPACK_IMPORTED_MODULE_2__["csv"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tsv", function() { return _dsv__WEBPACK_IMPORTED_MODULE_2__["tsv"]; });

/* harmony import */ var _image__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./image */ "./node_modules/d3-fetch/src/image.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "image", function() { return _image__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _json__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./json */ "./node_modules/d3-fetch/src/json.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "json", function() { return _json__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _text__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./text */ "./node_modules/d3-fetch/src/text.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "text", function() { return _text__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _xml__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./xml */ "./node_modules/d3-fetch/src/xml.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "xml", function() { return _xml__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "html", function() { return _xml__WEBPACK_IMPORTED_MODULE_6__["html"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "svg", function() { return _xml__WEBPACK_IMPORTED_MODULE_6__["svg"]; });










/***/ }),

/***/ "./node_modules/d3-fetch/src/json.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-fetch/src/json.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function responseJson(response) {
  if (!response.ok) throw new Error(response.status + " " + response.statusText);
  return response.json();
}

/* harmony default export */ __webpack_exports__["default"] = (function(input, init) {
  return fetch(input, init).then(responseJson);
});


/***/ }),

/***/ "./node_modules/d3-fetch/src/text.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-fetch/src/text.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function responseText(response) {
  if (!response.ok) throw new Error(response.status + " " + response.statusText);
  return response.text();
}

/* harmony default export */ __webpack_exports__["default"] = (function(input, init) {
  return fetch(input, init).then(responseText);
});


/***/ }),

/***/ "./node_modules/d3-fetch/src/xml.js":
/*!******************************************!*\
  !*** ./node_modules/d3-fetch/src/xml.js ***!
  \******************************************/
/*! exports provided: default, html, svg */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "html", function() { return html; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "svg", function() { return svg; });
/* harmony import */ var _text__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./text */ "./node_modules/d3-fetch/src/text.js");


function parser(type) {
  return function(input, init)  {
    return Object(_text__WEBPACK_IMPORTED_MODULE_0__["default"])(input, init).then(function(text) {
      return (new DOMParser).parseFromString(text, type);
    });
  };
}

/* harmony default export */ __webpack_exports__["default"] = (parser("application/xml"));

var html = parser("text/html");

var svg = parser("image/svg+xml");


/***/ }),

/***/ "./node_modules/d3-force/src/center.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-force/src/center.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(x, y) {
  var nodes;

  if (x == null) x = 0;
  if (y == null) y = 0;

  function force() {
    var i,
        n = nodes.length,
        node,
        sx = 0,
        sy = 0;

    for (i = 0; i < n; ++i) {
      node = nodes[i], sx += node.x, sy += node.y;
    }

    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {
      node = nodes[i], node.x -= sx, node.y -= sy;
    }
  }

  force.initialize = function(_) {
    nodes = _;
  };

  force.x = function(_) {
    return arguments.length ? (x = +_, force) : x;
  };

  force.y = function(_) {
    return arguments.length ? (y = +_, force) : y;
  };

  return force;
});


/***/ }),

/***/ "./node_modules/d3-force/src/collide.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-force/src/collide.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_quadtree__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-quadtree */ "./node_modules/d3-quadtree/src/index.js");
/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constant.js */ "./node_modules/d3-force/src/constant.js");
/* harmony import */ var _jiggle_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./jiggle.js */ "./node_modules/d3-force/src/jiggle.js");




function x(d) {
  return d.x + d.vx;
}

function y(d) {
  return d.y + d.vy;
}

/* harmony default export */ __webpack_exports__["default"] = (function(radius) {
  var nodes,
      radii,
      strength = 1,
      iterations = 1;

  if (typeof radius !== "function") radius = Object(_constant_js__WEBPACK_IMPORTED_MODULE_1__["default"])(radius == null ? 1 : +radius);

  function force() {
    var i, n = nodes.length,
        tree,
        node,
        xi,
        yi,
        ri,
        ri2;

    for (var k = 0; k < iterations; ++k) {
      tree = Object(d3_quadtree__WEBPACK_IMPORTED_MODULE_0__["quadtree"])(nodes, x, y).visitAfter(prepare);
      for (i = 0; i < n; ++i) {
        node = nodes[i];
        ri = radii[node.index], ri2 = ri * ri;
        xi = node.x + node.vx;
        yi = node.y + node.vy;
        tree.visit(apply);
      }
    }

    function apply(quad, x0, y0, x1, y1) {
      var data = quad.data, rj = quad.r, r = ri + rj;
      if (data) {
        if (data.index > node.index) {
          var x = xi - data.x - data.vx,
              y = yi - data.y - data.vy,
              l = x * x + y * y;
          if (l < r * r) {
            if (x === 0) x = Object(_jiggle_js__WEBPACK_IMPORTED_MODULE_2__["default"])(), l += x * x;
            if (y === 0) y = Object(_jiggle_js__WEBPACK_IMPORTED_MODULE_2__["default"])(), l += y * y;
            l = (r - (l = Math.sqrt(l))) / l * strength;
            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));
            node.vy += (y *= l) * r;
            data.vx -= x * (r = 1 - r);
            data.vy -= y * r;
          }
        }
        return;
      }
      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;
    }
  }

  function prepare(quad) {
    if (quad.data) return quad.r = radii[quad.data.index];
    for (var i = quad.r = 0; i < 4; ++i) {
      if (quad[i] && quad[i].r > quad.r) {
        quad.r = quad[i].r;
      }
    }
  }

  function initialize() {
    if (!nodes) return;
    var i, n = nodes.length, node;
    radii = new Array(n);
    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);
  }

  force.initialize = function(_) {
    nodes = _;
    initialize();
  };

  force.iterations = function(_) {
    return arguments.length ? (iterations = +_, force) : iterations;
  };

  force.strength = function(_) {
    return arguments.length ? (strength = +_, force) : strength;
  };

  force.radius = function(_) {
    return arguments.length ? (radius = typeof _ === "function" ? _ : Object(_constant_js__WEBPACK_IMPORTED_MODULE_1__["default"])(+_), initialize(), force) : radius;
  };

  return force;
});


/***/ }),

/***/ "./node_modules/d3-force/src/constant.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-force/src/constant.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(x) {
  return function() {
    return x;
  };
});


/***/ }),

/***/ "./node_modules/d3-force/src/index.js":
/*!********************************************!*\
  !*** ./node_modules/d3-force/src/index.js ***!
  \********************************************/
/*! exports provided: forceCenter, forceCollide, forceLink, forceManyBody, forceRadial, forceSimulation, forceX, forceY */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _center__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./center */ "./node_modules/d3-force/src/center.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "forceCenter", function() { return _center__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _collide__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./collide */ "./node_modules/d3-force/src/collide.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "forceCollide", function() { return _collide__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _link__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./link */ "./node_modules/d3-force/src/link.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "forceLink", function() { return _link__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _manyBody__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./manyBody */ "./node_modules/d3-force/src/manyBody.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "forceManyBody", function() { return _manyBody__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _radial__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./radial */ "./node_modules/d3-force/src/radial.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "forceRadial", function() { return _radial__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _simulation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./simulation */ "./node_modules/d3-force/src/simulation.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "forceSimulation", function() { return _simulation__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _x__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./x */ "./node_modules/d3-force/src/x.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "forceX", function() { return _x__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony import */ var _y__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./y */ "./node_modules/d3-force/src/y.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "forceY", function() { return _y__WEBPACK_IMPORTED_MODULE_7__["default"]; });











/***/ }),

/***/ "./node_modules/d3-force/src/jiggle.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-force/src/jiggle.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function() {
  return (Math.random() - 0.5) * 1e-6;
});


/***/ }),

/***/ "./node_modules/d3-force/src/link.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-force/src/link.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constant.js */ "./node_modules/d3-force/src/constant.js");
/* harmony import */ var _jiggle_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./jiggle.js */ "./node_modules/d3-force/src/jiggle.js");



function index(d) {
  return d.index;
}

function find(nodeById, nodeId) {
  var node = nodeById.get(nodeId);
  if (!node) throw new Error("missing: " + nodeId);
  return node;
}

/* harmony default export */ __webpack_exports__["default"] = (function(links) {
  var id = index,
      strength = defaultStrength,
      strengths,
      distance = Object(_constant_js__WEBPACK_IMPORTED_MODULE_0__["default"])(30),
      distances,
      nodes,
      count,
      bias,
      iterations = 1;

  if (links == null) links = [];

  function defaultStrength(link) {
    return 1 / Math.min(count[link.source.index], count[link.target.index]);
  }

  function force(alpha) {
    for (var k = 0, n = links.length; k < iterations; ++k) {
      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {
        link = links[i], source = link.source, target = link.target;
        x = target.x + target.vx - source.x - source.vx || Object(_jiggle_js__WEBPACK_IMPORTED_MODULE_1__["default"])();
        y = target.y + target.vy - source.y - source.vy || Object(_jiggle_js__WEBPACK_IMPORTED_MODULE_1__["default"])();
        l = Math.sqrt(x * x + y * y);
        l = (l - distances[i]) / l * alpha * strengths[i];
        x *= l, y *= l;
        target.vx -= x * (b = bias[i]);
        target.vy -= y * b;
        source.vx += x * (b = 1 - b);
        source.vy += y * b;
      }
    }
  }

  function initialize() {
    if (!nodes) return;

    var i,
        n = nodes.length,
        m = links.length,
        nodeById = new Map(nodes.map((d, i) => [id(d, i, nodes), d])),
        link;

    for (i = 0, count = new Array(n); i < m; ++i) {
      link = links[i], link.index = i;
      if (typeof link.source !== "object") link.source = find(nodeById, link.source);
      if (typeof link.target !== "object") link.target = find(nodeById, link.target);
      count[link.source.index] = (count[link.source.index] || 0) + 1;
      count[link.target.index] = (count[link.target.index] || 0) + 1;
    }

    for (i = 0, bias = new Array(m); i < m; ++i) {
      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);
    }

    strengths = new Array(m), initializeStrength();
    distances = new Array(m), initializeDistance();
  }

  function initializeStrength() {
    if (!nodes) return;

    for (var i = 0, n = links.length; i < n; ++i) {
      strengths[i] = +strength(links[i], i, links);
    }
  }

  function initializeDistance() {
    if (!nodes) return;

    for (var i = 0, n = links.length; i < n; ++i) {
      distances[i] = +distance(links[i], i, links);
    }
  }

  force.initialize = function(_) {
    nodes = _;
    initialize();
  };

  force.links = function(_) {
    return arguments.length ? (links = _, initialize(), force) : links;
  };

  force.id = function(_) {
    return arguments.length ? (id = _, force) : id;
  };

  force.iterations = function(_) {
    return arguments.length ? (iterations = +_, force) : iterations;
  };

  force.strength = function(_) {
    return arguments.length ? (strength = typeof _ === "function" ? _ : Object(_constant_js__WEBPACK_IMPORTED_MODULE_0__["default"])(+_), initializeStrength(), force) : strength;
  };

  force.distance = function(_) {
    return arguments.length ? (distance = typeof _ === "function" ? _ : Object(_constant_js__WEBPACK_IMPORTED_MODULE_0__["default"])(+_), initializeDistance(), force) : distance;
  };

  return force;
});


/***/ }),

/***/ "./node_modules/d3-force/src/manyBody.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-force/src/manyBody.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_quadtree__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-quadtree */ "./node_modules/d3-quadtree/src/index.js");
/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constant.js */ "./node_modules/d3-force/src/constant.js");
/* harmony import */ var _jiggle_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./jiggle.js */ "./node_modules/d3-force/src/jiggle.js");
/* harmony import */ var _simulation_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./simulation.js */ "./node_modules/d3-force/src/simulation.js");





/* harmony default export */ __webpack_exports__["default"] = (function() {
  var nodes,
      node,
      alpha,
      strength = Object(_constant_js__WEBPACK_IMPORTED_MODULE_1__["default"])(-30),
      strengths,
      distanceMin2 = 1,
      distanceMax2 = Infinity,
      theta2 = 0.81;

  function force(_) {
    var i, n = nodes.length, tree = Object(d3_quadtree__WEBPACK_IMPORTED_MODULE_0__["quadtree"])(nodes, _simulation_js__WEBPACK_IMPORTED_MODULE_3__["x"], _simulation_js__WEBPACK_IMPORTED_MODULE_3__["y"]).visitAfter(accumulate);
    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);
  }

  function initialize() {
    if (!nodes) return;
    var i, n = nodes.length, node;
    strengths = new Array(n);
    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);
  }

  function accumulate(quad) {
    var strength = 0, q, c, weight = 0, x, y, i;

    // For internal nodes, accumulate forces from child quadrants.
    if (quad.length) {
      for (x = y = i = 0; i < 4; ++i) {
        if ((q = quad[i]) && (c = Math.abs(q.value))) {
          strength += q.value, weight += c, x += c * q.x, y += c * q.y;
        }
      }
      quad.x = x / weight;
      quad.y = y / weight;
    }

    // For leaf nodes, accumulate forces from coincident quadrants.
    else {
      q = quad;
      q.x = q.data.x;
      q.y = q.data.y;
      do strength += strengths[q.data.index];
      while (q = q.next);
    }

    quad.value = strength;
  }

  function apply(quad, x1, _, x2) {
    if (!quad.value) return true;

    var x = quad.x - node.x,
        y = quad.y - node.y,
        w = x2 - x1,
        l = x * x + y * y;

    // Apply the Barnes-Hut approximation if possible.
    // Limit forces for very close nodes; randomize direction if coincident.
    if (w * w / theta2 < l) {
      if (l < distanceMax2) {
        if (x === 0) x = Object(_jiggle_js__WEBPACK_IMPORTED_MODULE_2__["default"])(), l += x * x;
        if (y === 0) y = Object(_jiggle_js__WEBPACK_IMPORTED_MODULE_2__["default"])(), l += y * y;
        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);
        node.vx += x * quad.value * alpha / l;
        node.vy += y * quad.value * alpha / l;
      }
      return true;
    }

    // Otherwise, process points directly.
    else if (quad.length || l >= distanceMax2) return;

    // Limit forces for very close nodes; randomize direction if coincident.
    if (quad.data !== node || quad.next) {
      if (x === 0) x = Object(_jiggle_js__WEBPACK_IMPORTED_MODULE_2__["default"])(), l += x * x;
      if (y === 0) y = Object(_jiggle_js__WEBPACK_IMPORTED_MODULE_2__["default"])(), l += y * y;
      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);
    }

    do if (quad.data !== node) {
      w = strengths[quad.data.index] * alpha / l;
      node.vx += x * w;
      node.vy += y * w;
    } while (quad = quad.next);
  }

  force.initialize = function(_) {
    nodes = _;
    initialize();
  };

  force.strength = function(_) {
    return arguments.length ? (strength = typeof _ === "function" ? _ : Object(_constant_js__WEBPACK_IMPORTED_MODULE_1__["default"])(+_), initialize(), force) : strength;
  };

  force.distanceMin = function(_) {
    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);
  };

  force.distanceMax = function(_) {
    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);
  };

  force.theta = function(_) {
    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);
  };

  return force;
});


/***/ }),

/***/ "./node_modules/d3-force/src/radial.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-force/src/radial.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constant.js */ "./node_modules/d3-force/src/constant.js");


/* harmony default export */ __webpack_exports__["default"] = (function(radius, x, y) {
  var nodes,
      strength = Object(_constant_js__WEBPACK_IMPORTED_MODULE_0__["default"])(0.1),
      strengths,
      radiuses;

  if (typeof radius !== "function") radius = Object(_constant_js__WEBPACK_IMPORTED_MODULE_0__["default"])(+radius);
  if (x == null) x = 0;
  if (y == null) y = 0;

  function force(alpha) {
    for (var i = 0, n = nodes.length; i < n; ++i) {
      var node = nodes[i],
          dx = node.x - x || 1e-6,
          dy = node.y - y || 1e-6,
          r = Math.sqrt(dx * dx + dy * dy),
          k = (radiuses[i] - r) * strengths[i] * alpha / r;
      node.vx += dx * k;
      node.vy += dy * k;
    }
  }

  function initialize() {
    if (!nodes) return;
    var i, n = nodes.length;
    strengths = new Array(n);
    radiuses = new Array(n);
    for (i = 0; i < n; ++i) {
      radiuses[i] = +radius(nodes[i], i, nodes);
      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);
    }
  }

  force.initialize = function(_) {
    nodes = _, initialize();
  };

  force.strength = function(_) {
    return arguments.length ? (strength = typeof _ === "function" ? _ : Object(_constant_js__WEBPACK_IMPORTED_MODULE_0__["default"])(+_), initialize(), force) : strength;
  };

  force.radius = function(_) {
    return arguments.length ? (radius = typeof _ === "function" ? _ : Object(_constant_js__WEBPACK_IMPORTED_MODULE_0__["default"])(+_), initialize(), force) : radius;
  };

  force.x = function(_) {
    return arguments.length ? (x = +_, force) : x;
  };

  force.y = function(_) {
    return arguments.length ? (y = +_, force) : y;
  };

  return force;
});


/***/ }),

/***/ "./node_modules/d3-force/src/simulation.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-force/src/simulation.js ***!
  \*************************************************/
/*! exports provided: x, y, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "x", function() { return x; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "y", function() { return y; });
/* harmony import */ var d3_dispatch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-dispatch */ "./node_modules/d3-dispatch/src/index.js");
/* harmony import */ var d3_timer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-timer */ "./node_modules/d3-timer/src/index.js");



function x(d) {
  return d.x;
}

function y(d) {
  return d.y;
}

var initialRadius = 10,
    initialAngle = Math.PI * (3 - Math.sqrt(5));

/* harmony default export */ __webpack_exports__["default"] = (function(nodes) {
  var simulation,
      alpha = 1,
      alphaMin = 0.001,
      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),
      alphaTarget = 0,
      velocityDecay = 0.6,
      forces = new Map(),
      stepper = Object(d3_timer__WEBPACK_IMPORTED_MODULE_1__["timer"])(step),
      event = Object(d3_dispatch__WEBPACK_IMPORTED_MODULE_0__["dispatch"])("tick", "end");

  if (nodes == null) nodes = [];

  function step() {
    tick();
    event.call("tick", simulation);
    if (alpha < alphaMin) {
      stepper.stop();
      event.call("end", simulation);
    }
  }

  function tick(iterations) {
    var i, n = nodes.length, node;

    if (iterations === undefined) iterations = 1;

    for (var k = 0; k < iterations; ++k) {
      alpha += (alphaTarget - alpha) * alphaDecay;

      forces.forEach(function(force) {
        force(alpha);
      });

      for (i = 0; i < n; ++i) {
        node = nodes[i];
        if (node.fx == null) node.x += node.vx *= velocityDecay;
        else node.x = node.fx, node.vx = 0;
        if (node.fy == null) node.y += node.vy *= velocityDecay;
        else node.y = node.fy, node.vy = 0;
      }
    }

    return simulation;
  }

  function initializeNodes() {
    for (var i = 0, n = nodes.length, node; i < n; ++i) {
      node = nodes[i], node.index = i;
      if (node.fx != null) node.x = node.fx;
      if (node.fy != null) node.y = node.fy;
      if (isNaN(node.x) || isNaN(node.y)) {
        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;
        node.x = radius * Math.cos(angle);
        node.y = radius * Math.sin(angle);
      }
      if (isNaN(node.vx) || isNaN(node.vy)) {
        node.vx = node.vy = 0;
      }
    }
  }

  function initializeForce(force) {
    if (force.initialize) force.initialize(nodes);
    return force;
  }

  initializeNodes();

  return simulation = {
    tick: tick,

    restart: function() {
      return stepper.restart(step), simulation;
    },

    stop: function() {
      return stepper.stop(), simulation;
    },

    nodes: function(_) {
      return arguments.length ? (nodes = _, initializeNodes(), forces.forEach(initializeForce), simulation) : nodes;
    },

    alpha: function(_) {
      return arguments.length ? (alpha = +_, simulation) : alpha;
    },

    alphaMin: function(_) {
      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;
    },

    alphaDecay: function(_) {
      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;
    },

    alphaTarget: function(_) {
      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;
    },

    velocityDecay: function(_) {
      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;
    },

    force: function(name, _) {
      return arguments.length > 1 ? ((_ == null ? forces.delete(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);
    },

    find: function(x, y, radius) {
      var i = 0,
          n = nodes.length,
          dx,
          dy,
          d2,
          node,
          closest;

      if (radius == null) radius = Infinity;
      else radius *= radius;

      for (i = 0; i < n; ++i) {
        node = nodes[i];
        dx = x - node.x;
        dy = y - node.y;
        d2 = dx * dx + dy * dy;
        if (d2 < radius) closest = node, radius = d2;
      }

      return closest;
    },

    on: function(name, _) {
      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);
    }
  };
});


/***/ }),

/***/ "./node_modules/d3-force/src/x.js":
/*!****************************************!*\
  !*** ./node_modules/d3-force/src/x.js ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constant.js */ "./node_modules/d3-force/src/constant.js");


/* harmony default export */ __webpack_exports__["default"] = (function(x) {
  var strength = Object(_constant_js__WEBPACK_IMPORTED_MODULE_0__["default"])(0.1),
      nodes,
      strengths,
      xz;

  if (typeof x !== "function") x = Object(_constant_js__WEBPACK_IMPORTED_MODULE_0__["default"])(x == null ? 0 : +x);

  function force(alpha) {
    for (var i = 0, n = nodes.length, node; i < n; ++i) {
      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;
    }
  }

  function initialize() {
    if (!nodes) return;
    var i, n = nodes.length;
    strengths = new Array(n);
    xz = new Array(n);
    for (i = 0; i < n; ++i) {
      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);
    }
  }

  force.initialize = function(_) {
    nodes = _;
    initialize();
  };

  force.strength = function(_) {
    return arguments.length ? (strength = typeof _ === "function" ? _ : Object(_constant_js__WEBPACK_IMPORTED_MODULE_0__["default"])(+_), initialize(), force) : strength;
  };

  force.x = function(_) {
    return arguments.length ? (x = typeof _ === "function" ? _ : Object(_constant_js__WEBPACK_IMPORTED_MODULE_0__["default"])(+_), initialize(), force) : x;
  };

  return force;
});


/***/ }),

/***/ "./node_modules/d3-force/src/y.js":
/*!****************************************!*\
  !*** ./node_modules/d3-force/src/y.js ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constant.js */ "./node_modules/d3-force/src/constant.js");


/* harmony default export */ __webpack_exports__["default"] = (function(y) {
  var strength = Object(_constant_js__WEBPACK_IMPORTED_MODULE_0__["default"])(0.1),
      nodes,
      strengths,
      yz;

  if (typeof y !== "function") y = Object(_constant_js__WEBPACK_IMPORTED_MODULE_0__["default"])(y == null ? 0 : +y);

  function force(alpha) {
    for (var i = 0, n = nodes.length, node; i < n; ++i) {
      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;
    }
  }

  function initialize() {
    if (!nodes) return;
    var i, n = nodes.length;
    strengths = new Array(n);
    yz = new Array(n);
    for (i = 0; i < n; ++i) {
      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);
    }
  }

  force.initialize = function(_) {
    nodes = _;
    initialize();
  };

  force.strength = function(_) {
    return arguments.length ? (strength = typeof _ === "function" ? _ : Object(_constant_js__WEBPACK_IMPORTED_MODULE_0__["default"])(+_), initialize(), force) : strength;
  };

  force.y = function(_) {
    return arguments.length ? (y = typeof _ === "function" ? _ : Object(_constant_js__WEBPACK_IMPORTED_MODULE_0__["default"])(+_), initialize(), force) : y;
  };

  return force;
});


/***/ }),

/***/ "./node_modules/d3-format/src/defaultLocale.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-format/src/defaultLocale.js ***!
  \*****************************************************/
/*! exports provided: format, formatPrefix, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "format", function() { return format; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "formatPrefix", function() { return formatPrefix; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return defaultLocale; });
/* harmony import */ var _locale__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./locale */ "./node_modules/d3-format/src/locale.js");


var locale;
var format;
var formatPrefix;

defaultLocale({
  decimal: ".",
  thousands: ",",
  grouping: [3],
  currency: ["$", ""]
});

function defaultLocale(definition) {
  locale = Object(_locale__WEBPACK_IMPORTED_MODULE_0__["default"])(definition);
  format = locale.format;
  formatPrefix = locale.formatPrefix;
  return locale;
}


/***/ }),

/***/ "./node_modules/d3-format/src/exponent.js":
/*!************************************************!*\
  !*** ./node_modules/d3-format/src/exponent.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _formatDecimal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./formatDecimal */ "./node_modules/d3-format/src/formatDecimal.js");


/* harmony default export */ __webpack_exports__["default"] = (function(x) {
  return x = Object(_formatDecimal__WEBPACK_IMPORTED_MODULE_0__["default"])(Math.abs(x)), x ? x[1] : NaN;
});


/***/ }),

/***/ "./node_modules/d3-format/src/formatDecimal.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-format/src/formatDecimal.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// Computes the decimal coefficient and exponent of the specified number x with
// significant digits p, where x is positive and p is in [1, 21] or undefined.
// For example, formatDecimal(1.23) returns ["123", 0].
/* harmony default export */ __webpack_exports__["default"] = (function(x, p) {
  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf("e")) < 0) return null; // NaN, ±Infinity
  var i, coefficient = x.slice(0, i);

  // The string returned by toExponential either has the form \d\.\d+e[-+]\d+
  // (e.g., 1.2e+3) or the form \de[-+]\d+ (e.g., 1e+3).
  return [
    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,
    +x.slice(i + 1)
  ];
});


/***/ }),

/***/ "./node_modules/d3-format/src/formatGroup.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-format/src/formatGroup.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(grouping, thousands) {
  return function(value, width) {
    var i = value.length,
        t = [],
        j = 0,
        g = grouping[0],
        length = 0;

    while (i > 0 && g > 0) {
      if (length + g + 1 > width) g = Math.max(1, width - length);
      t.push(value.substring(i -= g, i + g));
      if ((length += g + 1) > width) break;
      g = grouping[j = (j + 1) % grouping.length];
    }

    return t.reverse().join(thousands);
  };
});


/***/ }),

/***/ "./node_modules/d3-format/src/formatNumerals.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-format/src/formatNumerals.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(numerals) {
  return function(value) {
    return value.replace(/[0-9]/g, function(i) {
      return numerals[+i];
    });
  };
});


/***/ }),

/***/ "./node_modules/d3-format/src/formatPrefixAuto.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-format/src/formatPrefixAuto.js ***!
  \********************************************************/
/*! exports provided: prefixExponent, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "prefixExponent", function() { return prefixExponent; });
/* harmony import */ var _formatDecimal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./formatDecimal */ "./node_modules/d3-format/src/formatDecimal.js");


var prefixExponent;

/* harmony default export */ __webpack_exports__["default"] = (function(x, p) {
  var d = Object(_formatDecimal__WEBPACK_IMPORTED_MODULE_0__["default"])(x, p);
  if (!d) return x + "";
  var coefficient = d[0],
      exponent = d[1],
      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,
      n = coefficient.length;
  return i === n ? coefficient
      : i > n ? coefficient + new Array(i - n + 1).join("0")
      : i > 0 ? coefficient.slice(0, i) + "." + coefficient.slice(i)
      : "0." + new Array(1 - i).join("0") + Object(_formatDecimal__WEBPACK_IMPORTED_MODULE_0__["default"])(x, Math.max(0, p + i - 1))[0]; // less than 1y!
});


/***/ }),

/***/ "./node_modules/d3-format/src/formatRounded.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-format/src/formatRounded.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _formatDecimal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./formatDecimal */ "./node_modules/d3-format/src/formatDecimal.js");


/* harmony default export */ __webpack_exports__["default"] = (function(x, p) {
  var d = Object(_formatDecimal__WEBPACK_IMPORTED_MODULE_0__["default"])(x, p);
  if (!d) return x + "";
  var coefficient = d[0],
      exponent = d[1];
  return exponent < 0 ? "0." + new Array(-exponent).join("0") + coefficient
      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + "." + coefficient.slice(exponent + 1)
      : coefficient + new Array(exponent - coefficient.length + 2).join("0");
});


/***/ }),

/***/ "./node_modules/d3-format/src/formatSpecifier.js":
/*!*******************************************************!*\
  !*** ./node_modules/d3-format/src/formatSpecifier.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return formatSpecifier; });
// [[fill]align][sign][symbol][0][width][,][.precision][~][type]
var re = /^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;

function formatSpecifier(specifier) {
  return new FormatSpecifier(specifier);
}

formatSpecifier.prototype = FormatSpecifier.prototype; // instanceof

function FormatSpecifier(specifier) {
  if (!(match = re.exec(specifier))) throw new Error("invalid format: " + specifier);
  var match;
  this.fill = match[1] || " ";
  this.align = match[2] || ">";
  this.sign = match[3] || "-";
  this.symbol = match[4] || "";
  this.zero = !!match[5];
  this.width = match[6] && +match[6];
  this.comma = !!match[7];
  this.precision = match[8] && +match[8].slice(1);
  this.trim = !!match[9];
  this.type = match[10] || "";
}

FormatSpecifier.prototype.toString = function() {
  return this.fill
      + this.align
      + this.sign
      + this.symbol
      + (this.zero ? "0" : "")
      + (this.width == null ? "" : Math.max(1, this.width | 0))
      + (this.comma ? "," : "")
      + (this.precision == null ? "" : "." + Math.max(0, this.precision | 0))
      + (this.trim ? "~" : "")
      + this.type;
};


/***/ }),

/***/ "./node_modules/d3-format/src/formatTrim.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-format/src/formatTrim.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.
/* harmony default export */ __webpack_exports__["default"] = (function(s) {
  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {
    switch (s[i]) {
      case ".": i0 = i1 = i; break;
      case "0": if (i0 === 0) i0 = i; i1 = i; break;
      default: if (i0 > 0) { if (!+s[i]) break out; i0 = 0; } break;
    }
  }
  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;
});


/***/ }),

/***/ "./node_modules/d3-format/src/formatTypes.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-format/src/formatTypes.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _formatPrefixAuto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./formatPrefixAuto */ "./node_modules/d3-format/src/formatPrefixAuto.js");
/* harmony import */ var _formatRounded__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./formatRounded */ "./node_modules/d3-format/src/formatRounded.js");



/* harmony default export */ __webpack_exports__["default"] = ({
  "%": function(x, p) { return (x * 100).toFixed(p); },
  "b": function(x) { return Math.round(x).toString(2); },
  "c": function(x) { return x + ""; },
  "d": function(x) { return Math.round(x).toString(10); },
  "e": function(x, p) { return x.toExponential(p); },
  "f": function(x, p) { return x.toFixed(p); },
  "g": function(x, p) { return x.toPrecision(p); },
  "o": function(x) { return Math.round(x).toString(8); },
  "p": function(x, p) { return Object(_formatRounded__WEBPACK_IMPORTED_MODULE_1__["default"])(x * 100, p); },
  "r": _formatRounded__WEBPACK_IMPORTED_MODULE_1__["default"],
  "s": _formatPrefixAuto__WEBPACK_IMPORTED_MODULE_0__["default"],
  "X": function(x) { return Math.round(x).toString(16).toUpperCase(); },
  "x": function(x) { return Math.round(x).toString(16); }
});


/***/ }),

/***/ "./node_modules/d3-format/src/identity.js":
/*!************************************************!*\
  !*** ./node_modules/d3-format/src/identity.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(x) {
  return x;
});


/***/ }),

/***/ "./node_modules/d3-format/src/index.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-format/src/index.js ***!
  \*********************************************/
/*! exports provided: formatDefaultLocale, format, formatPrefix, formatLocale, formatSpecifier, precisionFixed, precisionPrefix, precisionRound */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _defaultLocale__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defaultLocale */ "./node_modules/d3-format/src/defaultLocale.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "formatDefaultLocale", function() { return _defaultLocale__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "format", function() { return _defaultLocale__WEBPACK_IMPORTED_MODULE_0__["format"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "formatPrefix", function() { return _defaultLocale__WEBPACK_IMPORTED_MODULE_0__["formatPrefix"]; });

/* harmony import */ var _locale__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./locale */ "./node_modules/d3-format/src/locale.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "formatLocale", function() { return _locale__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _formatSpecifier__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./formatSpecifier */ "./node_modules/d3-format/src/formatSpecifier.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "formatSpecifier", function() { return _formatSpecifier__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _precisionFixed__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./precisionFixed */ "./node_modules/d3-format/src/precisionFixed.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "precisionFixed", function() { return _precisionFixed__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _precisionPrefix__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./precisionPrefix */ "./node_modules/d3-format/src/precisionPrefix.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "precisionPrefix", function() { return _precisionPrefix__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _precisionRound__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./precisionRound */ "./node_modules/d3-format/src/precisionRound.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "precisionRound", function() { return _precisionRound__WEBPACK_IMPORTED_MODULE_5__["default"]; });









/***/ }),

/***/ "./node_modules/d3-format/src/locale.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-format/src/locale.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _exponent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./exponent */ "./node_modules/d3-format/src/exponent.js");
/* harmony import */ var _formatGroup__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./formatGroup */ "./node_modules/d3-format/src/formatGroup.js");
/* harmony import */ var _formatNumerals__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./formatNumerals */ "./node_modules/d3-format/src/formatNumerals.js");
/* harmony import */ var _formatSpecifier__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./formatSpecifier */ "./node_modules/d3-format/src/formatSpecifier.js");
/* harmony import */ var _formatTrim__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./formatTrim */ "./node_modules/d3-format/src/formatTrim.js");
/* harmony import */ var _formatTypes__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./formatTypes */ "./node_modules/d3-format/src/formatTypes.js");
/* harmony import */ var _formatPrefixAuto__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./formatPrefixAuto */ "./node_modules/d3-format/src/formatPrefixAuto.js");
/* harmony import */ var _identity__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./identity */ "./node_modules/d3-format/src/identity.js");









var prefixes = ["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"];

/* harmony default export */ __webpack_exports__["default"] = (function(locale) {
  var group = locale.grouping && locale.thousands ? Object(_formatGroup__WEBPACK_IMPORTED_MODULE_1__["default"])(locale.grouping, locale.thousands) : _identity__WEBPACK_IMPORTED_MODULE_7__["default"],
      currency = locale.currency,
      decimal = locale.decimal,
      numerals = locale.numerals ? Object(_formatNumerals__WEBPACK_IMPORTED_MODULE_2__["default"])(locale.numerals) : _identity__WEBPACK_IMPORTED_MODULE_7__["default"],
      percent = locale.percent || "%";

  function newFormat(specifier) {
    specifier = Object(_formatSpecifier__WEBPACK_IMPORTED_MODULE_3__["default"])(specifier);

    var fill = specifier.fill,
        align = specifier.align,
        sign = specifier.sign,
        symbol = specifier.symbol,
        zero = specifier.zero,
        width = specifier.width,
        comma = specifier.comma,
        precision = specifier.precision,
        trim = specifier.trim,
        type = specifier.type;

    // The "n" type is an alias for ",g".
    if (type === "n") comma = true, type = "g";

    // The "" type, and any invalid type, is an alias for ".12~g".
    else if (!_formatTypes__WEBPACK_IMPORTED_MODULE_5__["default"][type]) precision == null && (precision = 12), trim = true, type = "g";

    // If zero fill is specified, padding goes after sign and before digits.
    if (zero || (fill === "0" && align === "=")) zero = true, fill = "0", align = "=";

    // Compute the prefix and suffix.
    // For SI-prefix, the suffix is lazily computed.
    var prefix = symbol === "$" ? currency[0] : symbol === "#" && /[boxX]/.test(type) ? "0" + type.toLowerCase() : "",
        suffix = symbol === "$" ? currency[1] : /[%p]/.test(type) ? percent : "";

    // What format function should we use?
    // Is this an integer type?
    // Can this type generate exponential notation?
    var formatType = _formatTypes__WEBPACK_IMPORTED_MODULE_5__["default"][type],
        maybeSuffix = /[defgprs%]/.test(type);

    // Set the default precision if not specified,
    // or clamp the specified precision to the supported range.
    // For significant precision, it must be in [1, 21].
    // For fixed precision, it must be in [0, 20].
    precision = precision == null ? 6
        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))
        : Math.max(0, Math.min(20, precision));

    function format(value) {
      var valuePrefix = prefix,
          valueSuffix = suffix,
          i, n, c;

      if (type === "c") {
        valueSuffix = formatType(value) + valueSuffix;
        value = "";
      } else {
        value = +value;

        // Perform the initial formatting.
        var valueNegative = value < 0;
        value = formatType(Math.abs(value), precision);

        // Trim insignificant zeros.
        if (trim) value = Object(_formatTrim__WEBPACK_IMPORTED_MODULE_4__["default"])(value);

        // If a negative value rounds to zero during formatting, treat as positive.
        if (valueNegative && +value === 0) valueNegative = false;

        // Compute the prefix and suffix.
        valuePrefix = (valueNegative ? (sign === "(" ? sign : "-") : sign === "-" || sign === "(" ? "" : sign) + valuePrefix;
        valueSuffix = (type === "s" ? prefixes[8 + _formatPrefixAuto__WEBPACK_IMPORTED_MODULE_6__["prefixExponent"] / 3] : "") + valueSuffix + (valueNegative && sign === "(" ? ")" : "");

        // Break the formatted value into the integer “value” part that can be
        // grouped, and fractional or exponential “suffix” part that is not.
        if (maybeSuffix) {
          i = -1, n = value.length;
          while (++i < n) {
            if (c = value.charCodeAt(i), 48 > c || c > 57) {
              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;
              value = value.slice(0, i);
              break;
            }
          }
        }
      }

      // If the fill character is not "0", grouping is applied before padding.
      if (comma && !zero) value = group(value, Infinity);

      // Compute the padding.
      var length = valuePrefix.length + value.length + valueSuffix.length,
          padding = length < width ? new Array(width - length + 1).join(fill) : "";

      // If the fill character is "0", grouping is applied after padding.
      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = "";

      // Reconstruct the final output based on the desired alignment.
      switch (align) {
        case "<": value = valuePrefix + value + valueSuffix + padding; break;
        case "=": value = valuePrefix + padding + value + valueSuffix; break;
        case "^": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;
        default: value = padding + valuePrefix + value + valueSuffix; break;
      }

      return numerals(value);
    }

    format.toString = function() {
      return specifier + "";
    };

    return format;
  }

  function formatPrefix(specifier, value) {
    var f = newFormat((specifier = Object(_formatSpecifier__WEBPACK_IMPORTED_MODULE_3__["default"])(specifier), specifier.type = "f", specifier)),
        e = Math.max(-8, Math.min(8, Math.floor(Object(_exponent__WEBPACK_IMPORTED_MODULE_0__["default"])(value) / 3))) * 3,
        k = Math.pow(10, -e),
        prefix = prefixes[8 + e / 3];
    return function(value) {
      return f(k * value) + prefix;
    };
  }

  return {
    format: newFormat,
    formatPrefix: formatPrefix
  };
});


/***/ }),

/***/ "./node_modules/d3-format/src/precisionFixed.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-format/src/precisionFixed.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _exponent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./exponent */ "./node_modules/d3-format/src/exponent.js");


/* harmony default export */ __webpack_exports__["default"] = (function(step) {
  return Math.max(0, -Object(_exponent__WEBPACK_IMPORTED_MODULE_0__["default"])(Math.abs(step)));
});


/***/ }),

/***/ "./node_modules/d3-format/src/precisionPrefix.js":
/*!*******************************************************!*\
  !*** ./node_modules/d3-format/src/precisionPrefix.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _exponent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./exponent */ "./node_modules/d3-format/src/exponent.js");


/* harmony default export */ __webpack_exports__["default"] = (function(step, value) {
  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(Object(_exponent__WEBPACK_IMPORTED_MODULE_0__["default"])(value) / 3))) * 3 - Object(_exponent__WEBPACK_IMPORTED_MODULE_0__["default"])(Math.abs(step)));
});


/***/ }),

/***/ "./node_modules/d3-format/src/precisionRound.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-format/src/precisionRound.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _exponent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./exponent */ "./node_modules/d3-format/src/exponent.js");


/* harmony default export */ __webpack_exports__["default"] = (function(step, max) {
  step = Math.abs(step), max = Math.abs(max) - step;
  return Math.max(0, Object(_exponent__WEBPACK_IMPORTED_MODULE_0__["default"])(max) - Object(_exponent__WEBPACK_IMPORTED_MODULE_0__["default"])(step)) + 1;
});


/***/ }),

/***/ "./node_modules/d3-geo/node_modules/d3-array/src/array.js":
/*!****************************************************************!*\
  !*** ./node_modules/d3-geo/node_modules/d3-array/src/array.js ***!
  \****************************************************************/
/*! exports provided: slice, map */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "slice", function() { return slice; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "map", function() { return map; });
var array = Array.prototype;

var slice = array.slice;
var map = array.map;


/***/ }),

/***/ "./node_modules/d3-geo/node_modules/d3-array/src/ascending.js":
/*!********************************************************************!*\
  !*** ./node_modules/d3-geo/node_modules/d3-array/src/ascending.js ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(a, b) {
  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
});


/***/ }),

/***/ "./node_modules/d3-geo/node_modules/d3-array/src/bisect.js":
/*!*****************************************************************!*\
  !*** ./node_modules/d3-geo/node_modules/d3-array/src/bisect.js ***!
  \*****************************************************************/
/*! exports provided: bisectRight, bisectLeft, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bisectRight", function() { return bisectRight; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bisectLeft", function() { return bisectLeft; });
/* harmony import */ var _ascending__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ascending */ "./node_modules/d3-geo/node_modules/d3-array/src/ascending.js");
/* harmony import */ var _bisector__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bisector */ "./node_modules/d3-geo/node_modules/d3-array/src/bisector.js");



var ascendingBisect = Object(_bisector__WEBPACK_IMPORTED_MODULE_1__["default"])(_ascending__WEBPACK_IMPORTED_MODULE_0__["default"]);
var bisectRight = ascendingBisect.right;
var bisectLeft = ascendingBisect.left;
/* harmony default export */ __webpack_exports__["default"] = (bisectRight);


/***/ }),

/***/ "./node_modules/d3-geo/node_modules/d3-array/src/bisector.js":
/*!*******************************************************************!*\
  !*** ./node_modules/d3-geo/node_modules/d3-array/src/bisector.js ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ascending__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ascending */ "./node_modules/d3-geo/node_modules/d3-array/src/ascending.js");


/* harmony default export */ __webpack_exports__["default"] = (function(compare) {
  if (compare.length === 1) compare = ascendingComparator(compare);
  return {
    left: function(a, x, lo, hi) {
      if (lo == null) lo = 0;
      if (hi == null) hi = a.length;
      while (lo < hi) {
        var mid = lo + hi >>> 1;
        if (compare(a[mid], x) < 0) lo = mid + 1;
        else hi = mid;
      }
      return lo;
    },
    right: function(a, x, lo, hi) {
      if (lo == null) lo = 0;
      if (hi == null) hi = a.length;
      while (lo < hi) {
        var mid = lo + hi >>> 1;
        if (compare(a[mid], x) > 0) hi = mid;
        else lo = mid + 1;
      }
      return lo;
    }
  };
});

function ascendingComparator(f) {
  return function(d, x) {
    return Object(_ascending__WEBPACK_IMPORTED_MODULE_0__["default"])(f(d), x);
  };
}


/***/ }),

/***/ "./node_modules/d3-geo/node_modules/d3-array/src/constant.js":
/*!*******************************************************************!*\
  !*** ./node_modules/d3-geo/node_modules/d3-array/src/constant.js ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(x) {
  return function() {
    return x;
  };
});


/***/ }),

/***/ "./node_modules/d3-geo/node_modules/d3-array/src/cross.js":
/*!****************************************************************!*\
  !*** ./node_modules/d3-geo/node_modules/d3-array/src/cross.js ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _pairs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pairs */ "./node_modules/d3-geo/node_modules/d3-array/src/pairs.js");


/* harmony default export */ __webpack_exports__["default"] = (function(values0, values1, reduce) {
  var n0 = values0.length,
      n1 = values1.length,
      values = new Array(n0 * n1),
      i0,
      i1,
      i,
      value0;

  if (reduce == null) reduce = _pairs__WEBPACK_IMPORTED_MODULE_0__["pair"];

  for (i0 = i = 0; i0 < n0; ++i0) {
    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {
      values[i] = reduce(value0, values1[i1]);
    }
  }

  return values;
});


/***/ }),

/***/ "./node_modules/d3-geo/node_modules/d3-array/src/descending.js":
/*!*********************************************************************!*\
  !*** ./node_modules/d3-geo/node_modules/d3-array/src/descending.js ***!
  \*********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(a, b) {
  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;
});


/***/ }),

/***/ "./node_modules/d3-geo/node_modules/d3-array/src/deviation.js":
/*!********************************************************************!*\
  !*** ./node_modules/d3-geo/node_modules/d3-array/src/deviation.js ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _variance__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./variance */ "./node_modules/d3-geo/node_modules/d3-array/src/variance.js");


/* harmony default export */ __webpack_exports__["default"] = (function(array, f) {
  var v = Object(_variance__WEBPACK_IMPORTED_MODULE_0__["default"])(array, f);
  return v ? Math.sqrt(v) : v;
});


/***/ }),

/***/ "./node_modules/d3-geo/node_modules/d3-array/src/extent.js":
/*!*****************************************************************!*\
  !*** ./node_modules/d3-geo/node_modules/d3-array/src/extent.js ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(values, valueof) {
  var n = values.length,
      i = -1,
      value,
      min,
      max;

  if (valueof == null) {
    while (++i < n) { // Find the first comparable value.
      if ((value = values[i]) != null && value >= value) {
        min = max = value;
        while (++i < n) { // Compare the remaining values.
          if ((value = values[i]) != null) {
            if (min > value) min = value;
            if (max < value) max = value;
          }
        }
      }
    }
  }

  else {
    while (++i < n) { // Find the first comparable value.
      if ((value = valueof(values[i], i, values)) != null && value >= value) {
        min = max = value;
        while (++i < n) { // Compare the remaining values.
          if ((value = valueof(values[i], i, values)) != null) {
            if (min > value) min = value;
            if (max < value) max = value;
          }
        }
      }
    }
  }

  return [min, max];
});


/***/ }),

/***/ "./node_modules/d3-geo/node_modules/d3-array/src/histogram.js":
/*!********************************************************************!*\
  !*** ./node_modules/d3-geo/node_modules/d3-array/src/histogram.js ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./array */ "./node_modules/d3-geo/node_modules/d3-array/src/array.js");
/* harmony import */ var _bisect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bisect */ "./node_modules/d3-geo/node_modules/d3-array/src/bisect.js");
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./constant */ "./node_modules/d3-geo/node_modules/d3-array/src/constant.js");
/* harmony import */ var _extent__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./extent */ "./node_modules/d3-geo/node_modules/d3-array/src/extent.js");
/* harmony import */ var _identity__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./identity */ "./node_modules/d3-geo/node_modules/d3-array/src/identity.js");
/* harmony import */ var _range__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./range */ "./node_modules/d3-geo/node_modules/d3-array/src/range.js");
/* harmony import */ var _ticks__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ticks */ "./node_modules/d3-geo/node_modules/d3-array/src/ticks.js");
/* harmony import */ var _threshold_sturges__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./threshold/sturges */ "./node_modules/d3-geo/node_modules/d3-array/src/threshold/sturges.js");









/* harmony default export */ __webpack_exports__["default"] = (function() {
  var value = _identity__WEBPACK_IMPORTED_MODULE_4__["default"],
      domain = _extent__WEBPACK_IMPORTED_MODULE_3__["default"],
      threshold = _threshold_sturges__WEBPACK_IMPORTED_MODULE_7__["default"];

  function histogram(data) {
    var i,
        n = data.length,
        x,
        values = new Array(n);

    for (i = 0; i < n; ++i) {
      values[i] = value(data[i], i, data);
    }

    var xz = domain(values),
        x0 = xz[0],
        x1 = xz[1],
        tz = threshold(values, x0, x1);

    // Convert number of thresholds into uniform thresholds.
    if (!Array.isArray(tz)) {
      tz = Object(_ticks__WEBPACK_IMPORTED_MODULE_6__["tickStep"])(x0, x1, tz);
      tz = Object(_range__WEBPACK_IMPORTED_MODULE_5__["default"])(Math.ceil(x0 / tz) * tz, x1, tz); // exclusive
    }

    // Remove any thresholds outside the domain.
    var m = tz.length;
    while (tz[0] <= x0) tz.shift(), --m;
    while (tz[m - 1] > x1) tz.pop(), --m;

    var bins = new Array(m + 1),
        bin;

    // Initialize bins.
    for (i = 0; i <= m; ++i) {
      bin = bins[i] = [];
      bin.x0 = i > 0 ? tz[i - 1] : x0;
      bin.x1 = i < m ? tz[i] : x1;
    }

    // Assign data to bins by value, ignoring any outside the domain.
    for (i = 0; i < n; ++i) {
      x = values[i];
      if (x0 <= x && x <= x1) {
        bins[Object(_bisect__WEBPACK_IMPORTED_MODULE_1__["default"])(tz, x, 0, m)].push(data[i]);
      }
    }

    return bins;
  }

  histogram.value = function(_) {
    return arguments.length ? (value = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_2__["default"])(_), histogram) : value;
  };

  histogram.domain = function(_) {
    return arguments.length ? (domain = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_2__["default"])([_[0], _[1]]), histogram) : domain;
  };

  histogram.thresholds = function(_) {
    return arguments.length ? (threshold = typeof _ === "function" ? _ : Array.isArray(_) ? Object(_constant__WEBPACK_IMPORTED_MODULE_2__["default"])(_array__WEBPACK_IMPORTED_MODULE_0__["slice"].call(_)) : Object(_constant__WEBPACK_IMPORTED_MODULE_2__["default"])(_), histogram) : threshold;
  };

  return histogram;
});


/***/ }),

/***/ "./node_modules/d3-geo/node_modules/d3-array/src/identity.js":
/*!*******************************************************************!*\
  !*** ./node_modules/d3-geo/node_modules/d3-array/src/identity.js ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(x) {
  return x;
});


/***/ }),

/***/ "./node_modules/d3-geo/node_modules/d3-array/src/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/d3-geo/node_modules/d3-array/src/index.js ***!
  \****************************************************************/
/*! exports provided: bisect, bisectRight, bisectLeft, ascending, bisector, cross, descending, deviation, extent, histogram, thresholdFreedmanDiaconis, thresholdScott, thresholdSturges, max, mean, median, merge, min, pairs, permute, quantile, range, scan, shuffle, sum, ticks, tickIncrement, tickStep, transpose, variance, zip */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _bisect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bisect */ "./node_modules/d3-geo/node_modules/d3-array/src/bisect.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bisect", function() { return _bisect__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bisectRight", function() { return _bisect__WEBPACK_IMPORTED_MODULE_0__["bisectRight"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bisectLeft", function() { return _bisect__WEBPACK_IMPORTED_MODULE_0__["bisectLeft"]; });

/* harmony import */ var _ascending__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ascending */ "./node_modules/d3-geo/node_modules/d3-array/src/ascending.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ascending", function() { return _ascending__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _bisector__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bisector */ "./node_modules/d3-geo/node_modules/d3-array/src/bisector.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bisector", function() { return _bisector__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _cross__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./cross */ "./node_modules/d3-geo/node_modules/d3-array/src/cross.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cross", function() { return _cross__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _descending__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./descending */ "./node_modules/d3-geo/node_modules/d3-array/src/descending.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "descending", function() { return _descending__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _deviation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./deviation */ "./node_modules/d3-geo/node_modules/d3-array/src/deviation.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "deviation", function() { return _deviation__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _extent__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./extent */ "./node_modules/d3-geo/node_modules/d3-array/src/extent.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "extent", function() { return _extent__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony import */ var _histogram__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./histogram */ "./node_modules/d3-geo/node_modules/d3-array/src/histogram.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "histogram", function() { return _histogram__WEBPACK_IMPORTED_MODULE_7__["default"]; });

/* harmony import */ var _threshold_freedmanDiaconis__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./threshold/freedmanDiaconis */ "./node_modules/d3-geo/node_modules/d3-array/src/threshold/freedmanDiaconis.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "thresholdFreedmanDiaconis", function() { return _threshold_freedmanDiaconis__WEBPACK_IMPORTED_MODULE_8__["default"]; });

/* harmony import */ var _threshold_scott__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./threshold/scott */ "./node_modules/d3-geo/node_modules/d3-array/src/threshold/scott.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "thresholdScott", function() { return _threshold_scott__WEBPACK_IMPORTED_MODULE_9__["default"]; });

/* harmony import */ var _threshold_sturges__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./threshold/sturges */ "./node_modules/d3-geo/node_modules/d3-array/src/threshold/sturges.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "thresholdSturges", function() { return _threshold_sturges__WEBPACK_IMPORTED_MODULE_10__["default"]; });

/* harmony import */ var _max__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./max */ "./node_modules/d3-geo/node_modules/d3-array/src/max.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "max", function() { return _max__WEBPACK_IMPORTED_MODULE_11__["default"]; });

/* harmony import */ var _mean__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./mean */ "./node_modules/d3-geo/node_modules/d3-array/src/mean.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mean", function() { return _mean__WEBPACK_IMPORTED_MODULE_12__["default"]; });

/* harmony import */ var _median__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./median */ "./node_modules/d3-geo/node_modules/d3-array/src/median.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "median", function() { return _median__WEBPACK_IMPORTED_MODULE_13__["default"]; });

/* harmony import */ var _merge__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./merge */ "./node_modules/d3-geo/node_modules/d3-array/src/merge.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "merge", function() { return _merge__WEBPACK_IMPORTED_MODULE_14__["default"]; });

/* harmony import */ var _min__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./min */ "./node_modules/d3-geo/node_modules/d3-array/src/min.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "min", function() { return _min__WEBPACK_IMPORTED_MODULE_15__["default"]; });

/* harmony import */ var _pairs__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./pairs */ "./node_modules/d3-geo/node_modules/d3-array/src/pairs.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pairs", function() { return _pairs__WEBPACK_IMPORTED_MODULE_16__["default"]; });

/* harmony import */ var _permute__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./permute */ "./node_modules/d3-geo/node_modules/d3-array/src/permute.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "permute", function() { return _permute__WEBPACK_IMPORTED_MODULE_17__["default"]; });

/* harmony import */ var _quantile__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./quantile */ "./node_modules/d3-geo/node_modules/d3-array/src/quantile.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "quantile", function() { return _quantile__WEBPACK_IMPORTED_MODULE_18__["default"]; });

/* harmony import */ var _range__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./range */ "./node_modules/d3-geo/node_modules/d3-array/src/range.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "range", function() { return _range__WEBPACK_IMPORTED_MODULE_19__["default"]; });

/* harmony import */ var _scan__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./scan */ "./node_modules/d3-geo/node_modules/d3-array/src/scan.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scan", function() { return _scan__WEBPACK_IMPORTED_MODULE_20__["default"]; });

/* harmony import */ var _shuffle__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./shuffle */ "./node_modules/d3-geo/node_modules/d3-array/src/shuffle.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "shuffle", function() { return _shuffle__WEBPACK_IMPORTED_MODULE_21__["default"]; });

/* harmony import */ var _sum__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./sum */ "./node_modules/d3-geo/node_modules/d3-array/src/sum.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sum", function() { return _sum__WEBPACK_IMPORTED_MODULE_22__["default"]; });

/* harmony import */ var _ticks__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./ticks */ "./node_modules/d3-geo/node_modules/d3-array/src/ticks.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ticks", function() { return _ticks__WEBPACK_IMPORTED_MODULE_23__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tickIncrement", function() { return _ticks__WEBPACK_IMPORTED_MODULE_23__["tickIncrement"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tickStep", function() { return _ticks__WEBPACK_IMPORTED_MODULE_23__["tickStep"]; });

/* harmony import */ var _transpose__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./transpose */ "./node_modules/d3-geo/node_modules/d3-array/src/transpose.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "transpose", function() { return _transpose__WEBPACK_IMPORTED_MODULE_24__["default"]; });

/* harmony import */ var _variance__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./variance */ "./node_modules/d3-geo/node_modules/d3-array/src/variance.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "variance", function() { return _variance__WEBPACK_IMPORTED_MODULE_25__["default"]; });

/* harmony import */ var _zip__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./zip */ "./node_modules/d3-geo/node_modules/d3-array/src/zip.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "zip", function() { return _zip__WEBPACK_IMPORTED_MODULE_26__["default"]; });






























/***/ }),

/***/ "./node_modules/d3-geo/node_modules/d3-array/src/max.js":
/*!**************************************************************!*\
  !*** ./node_modules/d3-geo/node_modules/d3-array/src/max.js ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(values, valueof) {
  var n = values.length,
      i = -1,
      value,
      max;

  if (valueof == null) {
    while (++i < n) { // Find the first comparable value.
      if ((value = values[i]) != null && value >= value) {
        max = value;
        while (++i < n) { // Compare the remaining values.
          if ((value = values[i]) != null && value > max) {
            max = value;
          }
        }
      }
    }
  }

  else {
    while (++i < n) { // Find the first comparable value.
      if ((value = valueof(values[i], i, values)) != null && value >= value) {
        max = value;
        while (++i < n) { // Compare the remaining values.
          if ((value = valueof(values[i], i, values)) != null && value > max) {
            max = value;
          }
        }
      }
    }
  }

  return max;
});


/***/ }),

/***/ "./node_modules/d3-geo/node_modules/d3-array/src/mean.js":
/*!***************************************************************!*\
  !*** ./node_modules/d3-geo/node_modules/d3-array/src/mean.js ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _number__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./number */ "./node_modules/d3-geo/node_modules/d3-array/src/number.js");


/* harmony default export */ __webpack_exports__["default"] = (function(values, valueof) {
  var n = values.length,
      m = n,
      i = -1,
      value,
      sum = 0;

  if (valueof == null) {
    while (++i < n) {
      if (!isNaN(value = Object(_number__WEBPACK_IMPORTED_MODULE_0__["default"])(values[i]))) sum += value;
      else --m;
    }
  }

  else {
    while (++i < n) {
      if (!isNaN(value = Object(_number__WEBPACK_IMPORTED_MODULE_0__["default"])(valueof(values[i], i, values)))) sum += value;
      else --m;
    }
  }

  if (m) return sum / m;
});


/***/ }),

/***/ "./node_modules/d3-geo/node_modules/d3-array/src/median.js":
/*!*****************************************************************!*\
  !*** ./node_modules/d3-geo/node_modules/d3-array/src/median.js ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ascending__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ascending */ "./node_modules/d3-geo/node_modules/d3-array/src/ascending.js");
/* harmony import */ var _number__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./number */ "./node_modules/d3-geo/node_modules/d3-array/src/number.js");
/* harmony import */ var _quantile__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./quantile */ "./node_modules/d3-geo/node_modules/d3-array/src/quantile.js");




/* harmony default export */ __webpack_exports__["default"] = (function(values, valueof) {
  var n = values.length,
      i = -1,
      value,
      numbers = [];

  if (valueof == null) {
    while (++i < n) {
      if (!isNaN(value = Object(_number__WEBPACK_IMPORTED_MODULE_1__["default"])(values[i]))) {
        numbers.push(value);
      }
    }
  }

  else {
    while (++i < n) {
      if (!isNaN(value = Object(_number__WEBPACK_IMPORTED_MODULE_1__["default"])(valueof(values[i], i, values)))) {
        numbers.push(value);
      }
    }
  }

  return Object(_quantile__WEBPACK_IMPORTED_MODULE_2__["default"])(numbers.sort(_ascending__WEBPACK_IMPORTED_MODULE_0__["default"]), 0.5);
});


/***/ }),

/***/ "./node_modules/d3-geo/node_modules/d3-array/src/merge.js":
/*!****************************************************************!*\
  !*** ./node_modules/d3-geo/node_modules/d3-array/src/merge.js ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(arrays) {
  var n = arrays.length,
      m,
      i = -1,
      j = 0,
      merged,
      array;

  while (++i < n) j += arrays[i].length;
  merged = new Array(j);

  while (--n >= 0) {
    array = arrays[n];
    m = array.length;
    while (--m >= 0) {
      merged[--j] = array[m];
    }
  }

  return merged;
});


/***/ }),

/***/ "./node_modules/d3-geo/node_modules/d3-array/src/min.js":
/*!**************************************************************!*\
  !*** ./node_modules/d3-geo/node_modules/d3-array/src/min.js ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(values, valueof) {
  var n = values.length,
      i = -1,
      value,
      min;

  if (valueof == null) {
    while (++i < n) { // Find the first comparable value.
      if ((value = values[i]) != null && value >= value) {
        min = value;
        while (++i < n) { // Compare the remaining values.
          if ((value = values[i]) != null && min > value) {
            min = value;
          }
        }
      }
    }
  }

  else {
    while (++i < n) { // Find the first comparable value.
      if ((value = valueof(values[i], i, values)) != null && value >= value) {
        min = value;
        while (++i < n) { // Compare the remaining values.
          if ((value = valueof(values[i], i, values)) != null && min > value) {
            min = value;
          }
        }
      }
    }
  }

  return min;
});


/***/ }),

/***/ "./node_modules/d3-geo/node_modules/d3-array/src/number.js":
/*!*****************************************************************!*\
  !*** ./node_modules/d3-geo/node_modules/d3-array/src/number.js ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(x) {
  return x === null ? NaN : +x;
});


/***/ }),

/***/ "./node_modules/d3-geo/node_modules/d3-array/src/pairs.js":
/*!****************************************************************!*\
  !*** ./node_modules/d3-geo/node_modules/d3-array/src/pairs.js ***!
  \****************************************************************/
/*! exports provided: default, pair */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pair", function() { return pair; });
/* harmony default export */ __webpack_exports__["default"] = (function(array, f) {
  if (f == null) f = pair;
  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);
  while (i < n) pairs[i] = f(p, p = array[++i]);
  return pairs;
});

function pair(a, b) {
  return [a, b];
}


/***/ }),

/***/ "./node_modules/d3-geo/node_modules/d3-array/src/permute.js":
/*!******************************************************************!*\
  !*** ./node_modules/d3-geo/node_modules/d3-array/src/permute.js ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(array, indexes) {
  var i = indexes.length, permutes = new Array(i);
  while (i--) permutes[i] = array[indexes[i]];
  return permutes;
});


/***/ }),

/***/ "./node_modules/d3-geo/node_modules/d3-array/src/quantile.js":
/*!*******************************************************************!*\
  !*** ./node_modules/d3-geo/node_modules/d3-array/src/quantile.js ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _number__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./number */ "./node_modules/d3-geo/node_modules/d3-array/src/number.js");


/* harmony default export */ __webpack_exports__["default"] = (function(values, p, valueof) {
  if (valueof == null) valueof = _number__WEBPACK_IMPORTED_MODULE_0__["default"];
  if (!(n = values.length)) return;
  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);
  if (p >= 1) return +valueof(values[n - 1], n - 1, values);
  var n,
      i = (n - 1) * p,
      i0 = Math.floor(i),
      value0 = +valueof(values[i0], i0, values),
      value1 = +valueof(values[i0 + 1], i0 + 1, values);
  return value0 + (value1 - value0) * (i - i0);
});


/***/ }),

/***/ "./node_modules/d3-geo/node_modules/d3-array/src/range.js":
/*!****************************************************************!*\
  !*** ./node_modules/d3-geo/node_modules/d3-array/src/range.js ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(start, stop, step) {
  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;

  var i = -1,
      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,
      range = new Array(n);

  while (++i < n) {
    range[i] = start + i * step;
  }

  return range;
});


/***/ }),

/***/ "./node_modules/d3-geo/node_modules/d3-array/src/scan.js":
/*!***************************************************************!*\
  !*** ./node_modules/d3-geo/node_modules/d3-array/src/scan.js ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ascending__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ascending */ "./node_modules/d3-geo/node_modules/d3-array/src/ascending.js");


/* harmony default export */ __webpack_exports__["default"] = (function(values, compare) {
  if (!(n = values.length)) return;
  var n,
      i = 0,
      j = 0,
      xi,
      xj = values[j];

  if (compare == null) compare = _ascending__WEBPACK_IMPORTED_MODULE_0__["default"];

  while (++i < n) {
    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {
      xj = xi, j = i;
    }
  }

  if (compare(xj, xj) === 0) return j;
});


/***/ }),

/***/ "./node_modules/d3-geo/node_modules/d3-array/src/shuffle.js":
/*!******************************************************************!*\
  !*** ./node_modules/d3-geo/node_modules/d3-array/src/shuffle.js ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(array, i0, i1) {
  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),
      t,
      i;

  while (m) {
    i = Math.random() * m-- | 0;
    t = array[m + i0];
    array[m + i0] = array[i + i0];
    array[i + i0] = t;
  }

  return array;
});


/***/ }),

/***/ "./node_modules/d3-geo/node_modules/d3-array/src/sum.js":
/*!**************************************************************!*\
  !*** ./node_modules/d3-geo/node_modules/d3-array/src/sum.js ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(values, valueof) {
  var n = values.length,
      i = -1,
      value,
      sum = 0;

  if (valueof == null) {
    while (++i < n) {
      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.
    }
  }

  else {
    while (++i < n) {
      if (value = +valueof(values[i], i, values)) sum += value;
    }
  }

  return sum;
});


/***/ }),

/***/ "./node_modules/d3-geo/node_modules/d3-array/src/threshold/freedmanDiaconis.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/d3-geo/node_modules/d3-array/src/threshold/freedmanDiaconis.js ***!
  \*************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../array */ "./node_modules/d3-geo/node_modules/d3-array/src/array.js");
/* harmony import */ var _ascending__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ascending */ "./node_modules/d3-geo/node_modules/d3-array/src/ascending.js");
/* harmony import */ var _number__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../number */ "./node_modules/d3-geo/node_modules/d3-array/src/number.js");
/* harmony import */ var _quantile__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../quantile */ "./node_modules/d3-geo/node_modules/d3-array/src/quantile.js");





/* harmony default export */ __webpack_exports__["default"] = (function(values, min, max) {
  values = _array__WEBPACK_IMPORTED_MODULE_0__["map"].call(values, _number__WEBPACK_IMPORTED_MODULE_2__["default"]).sort(_ascending__WEBPACK_IMPORTED_MODULE_1__["default"]);
  return Math.ceil((max - min) / (2 * (Object(_quantile__WEBPACK_IMPORTED_MODULE_3__["default"])(values, 0.75) - Object(_quantile__WEBPACK_IMPORTED_MODULE_3__["default"])(values, 0.25)) * Math.pow(values.length, -1 / 3)));
});


/***/ }),

/***/ "./node_modules/d3-geo/node_modules/d3-array/src/threshold/scott.js":
/*!**************************************************************************!*\
  !*** ./node_modules/d3-geo/node_modules/d3-array/src/threshold/scott.js ***!
  \**************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _deviation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../deviation */ "./node_modules/d3-geo/node_modules/d3-array/src/deviation.js");


/* harmony default export */ __webpack_exports__["default"] = (function(values, min, max) {
  return Math.ceil((max - min) / (3.5 * Object(_deviation__WEBPACK_IMPORTED_MODULE_0__["default"])(values) * Math.pow(values.length, -1 / 3)));
});


/***/ }),

/***/ "./node_modules/d3-geo/node_modules/d3-array/src/threshold/sturges.js":
/*!****************************************************************************!*\
  !*** ./node_modules/d3-geo/node_modules/d3-array/src/threshold/sturges.js ***!
  \****************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(values) {
  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;
});


/***/ }),

/***/ "./node_modules/d3-geo/node_modules/d3-array/src/ticks.js":
/*!****************************************************************!*\
  !*** ./node_modules/d3-geo/node_modules/d3-array/src/ticks.js ***!
  \****************************************************************/
/*! exports provided: default, tickIncrement, tickStep */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tickIncrement", function() { return tickIncrement; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tickStep", function() { return tickStep; });
var e10 = Math.sqrt(50),
    e5 = Math.sqrt(10),
    e2 = Math.sqrt(2);

/* harmony default export */ __webpack_exports__["default"] = (function(start, stop, count) {
  var reverse,
      i = -1,
      n,
      ticks,
      step;

  stop = +stop, start = +start, count = +count;
  if (start === stop && count > 0) return [start];
  if (reverse = stop < start) n = start, start = stop, stop = n;
  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];

  if (step > 0) {
    start = Math.ceil(start / step);
    stop = Math.floor(stop / step);
    ticks = new Array(n = Math.ceil(stop - start + 1));
    while (++i < n) ticks[i] = (start + i) * step;
  } else {
    start = Math.floor(start * step);
    stop = Math.ceil(stop * step);
    ticks = new Array(n = Math.ceil(start - stop + 1));
    while (++i < n) ticks[i] = (start - i) / step;
  }

  if (reverse) ticks.reverse();

  return ticks;
});

function tickIncrement(start, stop, count) {
  var step = (stop - start) / Math.max(0, count),
      power = Math.floor(Math.log(step) / Math.LN10),
      error = step / Math.pow(10, power);
  return power >= 0
      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)
      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);
}

function tickStep(start, stop, count) {
  var step0 = Math.abs(stop - start) / Math.max(0, count),
      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),
      error = step0 / step1;
  if (error >= e10) step1 *= 10;
  else if (error >= e5) step1 *= 5;
  else if (error >= e2) step1 *= 2;
  return stop < start ? -step1 : step1;
}


/***/ }),

/***/ "./node_modules/d3-geo/node_modules/d3-array/src/transpose.js":
/*!********************************************************************!*\
  !*** ./node_modules/d3-geo/node_modules/d3-array/src/transpose.js ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _min__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./min */ "./node_modules/d3-geo/node_modules/d3-array/src/min.js");


/* harmony default export */ __webpack_exports__["default"] = (function(matrix) {
  if (!(n = matrix.length)) return [];
  for (var i = -1, m = Object(_min__WEBPACK_IMPORTED_MODULE_0__["default"])(matrix, length), transpose = new Array(m); ++i < m;) {
    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {
      row[j] = matrix[j][i];
    }
  }
  return transpose;
});

function length(d) {
  return d.length;
}


/***/ }),

/***/ "./node_modules/d3-geo/node_modules/d3-array/src/variance.js":
/*!*******************************************************************!*\
  !*** ./node_modules/d3-geo/node_modules/d3-array/src/variance.js ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _number__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./number */ "./node_modules/d3-geo/node_modules/d3-array/src/number.js");


/* harmony default export */ __webpack_exports__["default"] = (function(values, valueof) {
  var n = values.length,
      m = 0,
      i = -1,
      mean = 0,
      value,
      delta,
      sum = 0;

  if (valueof == null) {
    while (++i < n) {
      if (!isNaN(value = Object(_number__WEBPACK_IMPORTED_MODULE_0__["default"])(values[i]))) {
        delta = value - mean;
        mean += delta / ++m;
        sum += delta * (value - mean);
      }
    }
  }

  else {
    while (++i < n) {
      if (!isNaN(value = Object(_number__WEBPACK_IMPORTED_MODULE_0__["default"])(valueof(values[i], i, values)))) {
        delta = value - mean;
        mean += delta / ++m;
        sum += delta * (value - mean);
      }
    }
  }

  if (m > 1) return sum / (m - 1);
});


/***/ }),

/***/ "./node_modules/d3-geo/node_modules/d3-array/src/zip.js":
/*!**************************************************************!*\
  !*** ./node_modules/d3-geo/node_modules/d3-array/src/zip.js ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _transpose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./transpose */ "./node_modules/d3-geo/node_modules/d3-array/src/transpose.js");


/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(_transpose__WEBPACK_IMPORTED_MODULE_0__["default"])(arguments);
});


/***/ }),

/***/ "./node_modules/d3-geo/src/adder.js":
/*!******************************************!*\
  !*** ./node_modules/d3-geo/src/adder.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// Adds floating point numbers with twice the normal precision.
// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and
// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)
// 305–363 (1997).
// Code adapted from GeographicLib by Charles F. F. Karney,
// http://geographiclib.sourceforge.net/

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return new Adder;
});

function Adder() {
  this.reset();
}

Adder.prototype = {
  constructor: Adder,
  reset: function() {
    this.s = // rounded value
    this.t = 0; // exact error
  },
  add: function(y) {
    add(temp, y, this.t);
    add(this, temp.s, this.s);
    if (this.s) this.t += temp.t;
    else this.s = temp.t;
  },
  valueOf: function() {
    return this.s;
  }
};

var temp = new Adder;

function add(adder, a, b) {
  var x = adder.s = a + b,
      bv = x - a,
      av = x - bv;
  adder.t = (a - av) + (b - bv);
}


/***/ }),

/***/ "./node_modules/d3-geo/src/area.js":
/*!*****************************************!*\
  !*** ./node_modules/d3-geo/src/area.js ***!
  \*****************************************/
/*! exports provided: areaRingSum, areaStream, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "areaRingSum", function() { return areaRingSum; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "areaStream", function() { return areaStream; });
/* harmony import */ var _adder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./adder */ "./node_modules/d3-geo/src/adder.js");
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _noop__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./noop */ "./node_modules/d3-geo/src/noop.js");
/* harmony import */ var _stream__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./stream */ "./node_modules/d3-geo/src/stream.js");





var areaRingSum = Object(_adder__WEBPACK_IMPORTED_MODULE_0__["default"])();

var areaSum = Object(_adder__WEBPACK_IMPORTED_MODULE_0__["default"])(),
    lambda00,
    phi00,
    lambda0,
    cosPhi0,
    sinPhi0;

var areaStream = {
  point: _noop__WEBPACK_IMPORTED_MODULE_2__["default"],
  lineStart: _noop__WEBPACK_IMPORTED_MODULE_2__["default"],
  lineEnd: _noop__WEBPACK_IMPORTED_MODULE_2__["default"],
  polygonStart: function() {
    areaRingSum.reset();
    areaStream.lineStart = areaRingStart;
    areaStream.lineEnd = areaRingEnd;
  },
  polygonEnd: function() {
    var areaRing = +areaRingSum;
    areaSum.add(areaRing < 0 ? _math__WEBPACK_IMPORTED_MODULE_1__["tau"] + areaRing : areaRing);
    this.lineStart = this.lineEnd = this.point = _noop__WEBPACK_IMPORTED_MODULE_2__["default"];
  },
  sphere: function() {
    areaSum.add(_math__WEBPACK_IMPORTED_MODULE_1__["tau"]);
  }
};

function areaRingStart() {
  areaStream.point = areaPointFirst;
}

function areaRingEnd() {
  areaPoint(lambda00, phi00);
}

function areaPointFirst(lambda, phi) {
  areaStream.point = areaPoint;
  lambda00 = lambda, phi00 = phi;
  lambda *= _math__WEBPACK_IMPORTED_MODULE_1__["radians"], phi *= _math__WEBPACK_IMPORTED_MODULE_1__["radians"];
  lambda0 = lambda, cosPhi0 = Object(_math__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi = phi / 2 + _math__WEBPACK_IMPORTED_MODULE_1__["quarterPi"]), sinPhi0 = Object(_math__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi);
}

function areaPoint(lambda, phi) {
  lambda *= _math__WEBPACK_IMPORTED_MODULE_1__["radians"], phi *= _math__WEBPACK_IMPORTED_MODULE_1__["radians"];
  phi = phi / 2 + _math__WEBPACK_IMPORTED_MODULE_1__["quarterPi"]; // half the angular distance from south pole

  // Spherical excess E for a spherical triangle with vertices: south pole,
  // previous point, current point.  Uses a formula derived from Cagnoli’s
  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).
  var dLambda = lambda - lambda0,
      sdLambda = dLambda >= 0 ? 1 : -1,
      adLambda = sdLambda * dLambda,
      cosPhi = Object(_math__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi),
      sinPhi = Object(_math__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi),
      k = sinPhi0 * sinPhi,
      u = cosPhi0 * cosPhi + k * Object(_math__WEBPACK_IMPORTED_MODULE_1__["cos"])(adLambda),
      v = k * sdLambda * Object(_math__WEBPACK_IMPORTED_MODULE_1__["sin"])(adLambda);
  areaRingSum.add(Object(_math__WEBPACK_IMPORTED_MODULE_1__["atan2"])(v, u));

  // Advance the previous points.
  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;
}

/* harmony default export */ __webpack_exports__["default"] = (function(object) {
  areaSum.reset();
  Object(_stream__WEBPACK_IMPORTED_MODULE_3__["default"])(object, areaStream);
  return areaSum * 2;
});


/***/ }),

/***/ "./node_modules/d3-geo/src/bounds.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-geo/src/bounds.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _adder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./adder */ "./node_modules/d3-geo/src/adder.js");
/* harmony import */ var _area__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./area */ "./node_modules/d3-geo/src/area.js");
/* harmony import */ var _cartesian__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cartesian */ "./node_modules/d3-geo/src/cartesian.js");
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _stream__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./stream */ "./node_modules/d3-geo/src/stream.js");






var lambda0, phi0, lambda1, phi1, // bounds
    lambda2, // previous lambda-coordinate
    lambda00, phi00, // first point
    p0, // previous 3D point
    deltaSum = Object(_adder__WEBPACK_IMPORTED_MODULE_0__["default"])(),
    ranges,
    range;

var boundsStream = {
  point: boundsPoint,
  lineStart: boundsLineStart,
  lineEnd: boundsLineEnd,
  polygonStart: function() {
    boundsStream.point = boundsRingPoint;
    boundsStream.lineStart = boundsRingStart;
    boundsStream.lineEnd = boundsRingEnd;
    deltaSum.reset();
    _area__WEBPACK_IMPORTED_MODULE_1__["areaStream"].polygonStart();
  },
  polygonEnd: function() {
    _area__WEBPACK_IMPORTED_MODULE_1__["areaStream"].polygonEnd();
    boundsStream.point = boundsPoint;
    boundsStream.lineStart = boundsLineStart;
    boundsStream.lineEnd = boundsLineEnd;
    if (_area__WEBPACK_IMPORTED_MODULE_1__["areaRingSum"] < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);
    else if (deltaSum > _math__WEBPACK_IMPORTED_MODULE_3__["epsilon"]) phi1 = 90;
    else if (deltaSum < -_math__WEBPACK_IMPORTED_MODULE_3__["epsilon"]) phi0 = -90;
    range[0] = lambda0, range[1] = lambda1;
  },
  sphere: function() {
    lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);
  }
};

function boundsPoint(lambda, phi) {
  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);
  if (phi < phi0) phi0 = phi;
  if (phi > phi1) phi1 = phi;
}

function linePoint(lambda, phi) {
  var p = Object(_cartesian__WEBPACK_IMPORTED_MODULE_2__["cartesian"])([lambda * _math__WEBPACK_IMPORTED_MODULE_3__["radians"], phi * _math__WEBPACK_IMPORTED_MODULE_3__["radians"]]);
  if (p0) {
    var normal = Object(_cartesian__WEBPACK_IMPORTED_MODULE_2__["cartesianCross"])(p0, p),
        equatorial = [normal[1], -normal[0], 0],
        inflection = Object(_cartesian__WEBPACK_IMPORTED_MODULE_2__["cartesianCross"])(equatorial, normal);
    Object(_cartesian__WEBPACK_IMPORTED_MODULE_2__["cartesianNormalizeInPlace"])(inflection);
    inflection = Object(_cartesian__WEBPACK_IMPORTED_MODULE_2__["spherical"])(inflection);
    var delta = lambda - lambda2,
        sign = delta > 0 ? 1 : -1,
        lambdai = inflection[0] * _math__WEBPACK_IMPORTED_MODULE_3__["degrees"] * sign,
        phii,
        antimeridian = Object(_math__WEBPACK_IMPORTED_MODULE_3__["abs"])(delta) > 180;
    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {
      phii = inflection[1] * _math__WEBPACK_IMPORTED_MODULE_3__["degrees"];
      if (phii > phi1) phi1 = phii;
    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {
      phii = -inflection[1] * _math__WEBPACK_IMPORTED_MODULE_3__["degrees"];
      if (phii < phi0) phi0 = phii;
    } else {
      if (phi < phi0) phi0 = phi;
      if (phi > phi1) phi1 = phi;
    }
    if (antimeridian) {
      if (lambda < lambda2) {
        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;
      } else {
        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;
      }
    } else {
      if (lambda1 >= lambda0) {
        if (lambda < lambda0) lambda0 = lambda;
        if (lambda > lambda1) lambda1 = lambda;
      } else {
        if (lambda > lambda2) {
          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;
        } else {
          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;
        }
      }
    }
  } else {
    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);
  }
  if (phi < phi0) phi0 = phi;
  if (phi > phi1) phi1 = phi;
  p0 = p, lambda2 = lambda;
}

function boundsLineStart() {
  boundsStream.point = linePoint;
}

function boundsLineEnd() {
  range[0] = lambda0, range[1] = lambda1;
  boundsStream.point = boundsPoint;
  p0 = null;
}

function boundsRingPoint(lambda, phi) {
  if (p0) {
    var delta = lambda - lambda2;
    deltaSum.add(Object(_math__WEBPACK_IMPORTED_MODULE_3__["abs"])(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);
  } else {
    lambda00 = lambda, phi00 = phi;
  }
  _area__WEBPACK_IMPORTED_MODULE_1__["areaStream"].point(lambda, phi);
  linePoint(lambda, phi);
}

function boundsRingStart() {
  _area__WEBPACK_IMPORTED_MODULE_1__["areaStream"].lineStart();
}

function boundsRingEnd() {
  boundsRingPoint(lambda00, phi00);
  _area__WEBPACK_IMPORTED_MODULE_1__["areaStream"].lineEnd();
  if (Object(_math__WEBPACK_IMPORTED_MODULE_3__["abs"])(deltaSum) > _math__WEBPACK_IMPORTED_MODULE_3__["epsilon"]) lambda0 = -(lambda1 = 180);
  range[0] = lambda0, range[1] = lambda1;
  p0 = null;
}

// Finds the left-right distance between two longitudes.
// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want
// the distance between ±180° to be 360°.
function angle(lambda0, lambda1) {
  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;
}

function rangeCompare(a, b) {
  return a[0] - b[0];
}

function rangeContains(range, x) {
  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;
}

/* harmony default export */ __webpack_exports__["default"] = (function(feature) {
  var i, n, a, b, merged, deltaMax, delta;

  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);
  ranges = [];
  Object(_stream__WEBPACK_IMPORTED_MODULE_4__["default"])(feature, boundsStream);

  // First, sort ranges by their minimum longitudes.
  if (n = ranges.length) {
    ranges.sort(rangeCompare);

    // Then, merge any ranges that overlap.
    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {
      b = ranges[i];
      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {
        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];
        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];
      } else {
        merged.push(a = b);
      }
    }

    // Finally, find the largest gap between the merged ranges.
    // The final bounding box will be the inverse of this gap.
    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {
      b = merged[i];
      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];
    }
  }

  ranges = range = null;

  return lambda0 === Infinity || phi0 === Infinity
      ? [[NaN, NaN], [NaN, NaN]]
      : [[lambda0, phi0], [lambda1, phi1]];
});


/***/ }),

/***/ "./node_modules/d3-geo/src/cartesian.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-geo/src/cartesian.js ***!
  \**********************************************/
/*! exports provided: spherical, cartesian, cartesianDot, cartesianCross, cartesianAddInPlace, cartesianScale, cartesianNormalizeInPlace */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "spherical", function() { return spherical; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cartesian", function() { return cartesian; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cartesianDot", function() { return cartesianDot; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cartesianCross", function() { return cartesianCross; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cartesianAddInPlace", function() { return cartesianAddInPlace; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cartesianScale", function() { return cartesianScale; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cartesianNormalizeInPlace", function() { return cartesianNormalizeInPlace; });
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./math */ "./node_modules/d3-geo/src/math.js");


function spherical(cartesian) {
  return [Object(_math__WEBPACK_IMPORTED_MODULE_0__["atan2"])(cartesian[1], cartesian[0]), Object(_math__WEBPACK_IMPORTED_MODULE_0__["asin"])(cartesian[2])];
}

function cartesian(spherical) {
  var lambda = spherical[0], phi = spherical[1], cosPhi = Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(phi);
  return [cosPhi * Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(lambda), cosPhi * Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(lambda), Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(phi)];
}

function cartesianDot(a, b) {
  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];
}

function cartesianCross(a, b) {
  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];
}

// TODO return a
function cartesianAddInPlace(a, b) {
  a[0] += b[0], a[1] += b[1], a[2] += b[2];
}

function cartesianScale(vector, k) {
  return [vector[0] * k, vector[1] * k, vector[2] * k];
}

// TODO return d
function cartesianNormalizeInPlace(d) {
  var l = Object(_math__WEBPACK_IMPORTED_MODULE_0__["sqrt"])(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);
  d[0] /= l, d[1] /= l, d[2] /= l;
}


/***/ }),

/***/ "./node_modules/d3-geo/src/centroid.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-geo/src/centroid.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _noop__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./noop */ "./node_modules/d3-geo/src/noop.js");
/* harmony import */ var _stream__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./stream */ "./node_modules/d3-geo/src/stream.js");




var W0, W1,
    X0, Y0, Z0,
    X1, Y1, Z1,
    X2, Y2, Z2,
    lambda00, phi00, // first point
    x0, y0, z0; // previous point

var centroidStream = {
  sphere: _noop__WEBPACK_IMPORTED_MODULE_1__["default"],
  point: centroidPoint,
  lineStart: centroidLineStart,
  lineEnd: centroidLineEnd,
  polygonStart: function() {
    centroidStream.lineStart = centroidRingStart;
    centroidStream.lineEnd = centroidRingEnd;
  },
  polygonEnd: function() {
    centroidStream.lineStart = centroidLineStart;
    centroidStream.lineEnd = centroidLineEnd;
  }
};

// Arithmetic mean of Cartesian vectors.
function centroidPoint(lambda, phi) {
  lambda *= _math__WEBPACK_IMPORTED_MODULE_0__["radians"], phi *= _math__WEBPACK_IMPORTED_MODULE_0__["radians"];
  var cosPhi = Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(phi);
  centroidPointCartesian(cosPhi * Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(lambda), cosPhi * Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(lambda), Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(phi));
}

function centroidPointCartesian(x, y, z) {
  ++W0;
  X0 += (x - X0) / W0;
  Y0 += (y - Y0) / W0;
  Z0 += (z - Z0) / W0;
}

function centroidLineStart() {
  centroidStream.point = centroidLinePointFirst;
}

function centroidLinePointFirst(lambda, phi) {
  lambda *= _math__WEBPACK_IMPORTED_MODULE_0__["radians"], phi *= _math__WEBPACK_IMPORTED_MODULE_0__["radians"];
  var cosPhi = Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(phi);
  x0 = cosPhi * Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(lambda);
  y0 = cosPhi * Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(lambda);
  z0 = Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(phi);
  centroidStream.point = centroidLinePoint;
  centroidPointCartesian(x0, y0, z0);
}

function centroidLinePoint(lambda, phi) {
  lambda *= _math__WEBPACK_IMPORTED_MODULE_0__["radians"], phi *= _math__WEBPACK_IMPORTED_MODULE_0__["radians"];
  var cosPhi = Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(phi),
      x = cosPhi * Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(lambda),
      y = cosPhi * Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(lambda),
      z = Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(phi),
      w = Object(_math__WEBPACK_IMPORTED_MODULE_0__["atan2"])(Object(_math__WEBPACK_IMPORTED_MODULE_0__["sqrt"])((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);
  W1 += w;
  X1 += w * (x0 + (x0 = x));
  Y1 += w * (y0 + (y0 = y));
  Z1 += w * (z0 + (z0 = z));
  centroidPointCartesian(x0, y0, z0);
}

function centroidLineEnd() {
  centroidStream.point = centroidPoint;
}

// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,
// J. Applied Mechanics 42, 239 (1975).
function centroidRingStart() {
  centroidStream.point = centroidRingPointFirst;
}

function centroidRingEnd() {
  centroidRingPoint(lambda00, phi00);
  centroidStream.point = centroidPoint;
}

function centroidRingPointFirst(lambda, phi) {
  lambda00 = lambda, phi00 = phi;
  lambda *= _math__WEBPACK_IMPORTED_MODULE_0__["radians"], phi *= _math__WEBPACK_IMPORTED_MODULE_0__["radians"];
  centroidStream.point = centroidRingPoint;
  var cosPhi = Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(phi);
  x0 = cosPhi * Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(lambda);
  y0 = cosPhi * Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(lambda);
  z0 = Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(phi);
  centroidPointCartesian(x0, y0, z0);
}

function centroidRingPoint(lambda, phi) {
  lambda *= _math__WEBPACK_IMPORTED_MODULE_0__["radians"], phi *= _math__WEBPACK_IMPORTED_MODULE_0__["radians"];
  var cosPhi = Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(phi),
      x = cosPhi * Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(lambda),
      y = cosPhi * Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(lambda),
      z = Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(phi),
      cx = y0 * z - z0 * y,
      cy = z0 * x - x0 * z,
      cz = x0 * y - y0 * x,
      m = Object(_math__WEBPACK_IMPORTED_MODULE_0__["sqrt"])(cx * cx + cy * cy + cz * cz),
      w = Object(_math__WEBPACK_IMPORTED_MODULE_0__["asin"])(m), // line weight = angle
      v = m && -w / m; // area weight multiplier
  X2 += v * cx;
  Y2 += v * cy;
  Z2 += v * cz;
  W1 += w;
  X1 += w * (x0 + (x0 = x));
  Y1 += w * (y0 + (y0 = y));
  Z1 += w * (z0 + (z0 = z));
  centroidPointCartesian(x0, y0, z0);
}

/* harmony default export */ __webpack_exports__["default"] = (function(object) {
  W0 = W1 =
  X0 = Y0 = Z0 =
  X1 = Y1 = Z1 =
  X2 = Y2 = Z2 = 0;
  Object(_stream__WEBPACK_IMPORTED_MODULE_2__["default"])(object, centroidStream);

  var x = X2,
      y = Y2,
      z = Z2,
      m = x * x + y * y + z * z;

  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.
  if (m < _math__WEBPACK_IMPORTED_MODULE_0__["epsilon2"]) {
    x = X1, y = Y1, z = Z1;
    // If the feature has zero length, fall back to arithmetic mean of point vectors.
    if (W1 < _math__WEBPACK_IMPORTED_MODULE_0__["epsilon"]) x = X0, y = Y0, z = Z0;
    m = x * x + y * y + z * z;
    // If the feature still has an undefined ccentroid, then return.
    if (m < _math__WEBPACK_IMPORTED_MODULE_0__["epsilon2"]) return [NaN, NaN];
  }

  return [Object(_math__WEBPACK_IMPORTED_MODULE_0__["atan2"])(y, x) * _math__WEBPACK_IMPORTED_MODULE_0__["degrees"], Object(_math__WEBPACK_IMPORTED_MODULE_0__["asin"])(z / Object(_math__WEBPACK_IMPORTED_MODULE_0__["sqrt"])(m)) * _math__WEBPACK_IMPORTED_MODULE_0__["degrees"]];
});


/***/ }),

/***/ "./node_modules/d3-geo/src/circle.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-geo/src/circle.js ***!
  \*******************************************/
/*! exports provided: circleStream, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "circleStream", function() { return circleStream; });
/* harmony import */ var _cartesian__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cartesian */ "./node_modules/d3-geo/src/cartesian.js");
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constant */ "./node_modules/d3-geo/src/constant.js");
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _rotation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./rotation */ "./node_modules/d3-geo/src/rotation.js");





// Generates a circle centered at [0°, 0°], with a given radius and precision.
function circleStream(stream, radius, delta, direction, t0, t1) {
  if (!delta) return;
  var cosRadius = Object(_math__WEBPACK_IMPORTED_MODULE_2__["cos"])(radius),
      sinRadius = Object(_math__WEBPACK_IMPORTED_MODULE_2__["sin"])(radius),
      step = direction * delta;
  if (t0 == null) {
    t0 = radius + direction * _math__WEBPACK_IMPORTED_MODULE_2__["tau"];
    t1 = radius - step / 2;
  } else {
    t0 = circleRadius(cosRadius, t0);
    t1 = circleRadius(cosRadius, t1);
    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * _math__WEBPACK_IMPORTED_MODULE_2__["tau"];
  }
  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {
    point = Object(_cartesian__WEBPACK_IMPORTED_MODULE_0__["spherical"])([cosRadius, -sinRadius * Object(_math__WEBPACK_IMPORTED_MODULE_2__["cos"])(t), -sinRadius * Object(_math__WEBPACK_IMPORTED_MODULE_2__["sin"])(t)]);
    stream.point(point[0], point[1]);
  }
}

// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].
function circleRadius(cosRadius, point) {
  point = Object(_cartesian__WEBPACK_IMPORTED_MODULE_0__["cartesian"])(point), point[0] -= cosRadius;
  Object(_cartesian__WEBPACK_IMPORTED_MODULE_0__["cartesianNormalizeInPlace"])(point);
  var radius = Object(_math__WEBPACK_IMPORTED_MODULE_2__["acos"])(-point[1]);
  return ((-point[2] < 0 ? -radius : radius) + _math__WEBPACK_IMPORTED_MODULE_2__["tau"] - _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"]) % _math__WEBPACK_IMPORTED_MODULE_2__["tau"];
}

/* harmony default export */ __webpack_exports__["default"] = (function() {
  var center = Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])([0, 0]),
      radius = Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(90),
      precision = Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(6),
      ring,
      rotate,
      stream = {point: point};

  function point(x, y) {
    ring.push(x = rotate(x, y));
    x[0] *= _math__WEBPACK_IMPORTED_MODULE_2__["degrees"], x[1] *= _math__WEBPACK_IMPORTED_MODULE_2__["degrees"];
  }

  function circle() {
    var c = center.apply(this, arguments),
        r = radius.apply(this, arguments) * _math__WEBPACK_IMPORTED_MODULE_2__["radians"],
        p = precision.apply(this, arguments) * _math__WEBPACK_IMPORTED_MODULE_2__["radians"];
    ring = [];
    rotate = Object(_rotation__WEBPACK_IMPORTED_MODULE_3__["rotateRadians"])(-c[0] * _math__WEBPACK_IMPORTED_MODULE_2__["radians"], -c[1] * _math__WEBPACK_IMPORTED_MODULE_2__["radians"], 0).invert;
    circleStream(stream, r, p, 1);
    c = {type: "Polygon", coordinates: [ring]};
    ring = rotate = null;
    return c;
  }

  circle.center = function(_) {
    return arguments.length ? (center = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])([+_[0], +_[1]]), circle) : center;
  };

  circle.radius = function(_) {
    return arguments.length ? (radius = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(+_), circle) : radius;
  };

  circle.precision = function(_) {
    return arguments.length ? (precision = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(+_), circle) : precision;
  };

  return circle;
});


/***/ }),

/***/ "./node_modules/d3-geo/src/clip/antimeridian.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-geo/src/clip/antimeridian.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index */ "./node_modules/d3-geo/src/clip/index.js");
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");



/* harmony default export */ __webpack_exports__["default"] = (Object(_index__WEBPACK_IMPORTED_MODULE_0__["default"])(
  function() { return true; },
  clipAntimeridianLine,
  clipAntimeridianInterpolate,
  [-_math__WEBPACK_IMPORTED_MODULE_1__["pi"], -_math__WEBPACK_IMPORTED_MODULE_1__["halfPi"]]
));

// Takes a line and cuts into visible segments. Return values: 0 - there were
// intersections or the line was empty; 1 - no intersections; 2 - there were
// intersections, and the first and last segments should be rejoined.
function clipAntimeridianLine(stream) {
  var lambda0 = NaN,
      phi0 = NaN,
      sign0 = NaN,
      clean; // no intersections

  return {
    lineStart: function() {
      stream.lineStart();
      clean = 1;
    },
    point: function(lambda1, phi1) {
      var sign1 = lambda1 > 0 ? _math__WEBPACK_IMPORTED_MODULE_1__["pi"] : -_math__WEBPACK_IMPORTED_MODULE_1__["pi"],
          delta = Object(_math__WEBPACK_IMPORTED_MODULE_1__["abs"])(lambda1 - lambda0);
      if (Object(_math__WEBPACK_IMPORTED_MODULE_1__["abs"])(delta - _math__WEBPACK_IMPORTED_MODULE_1__["pi"]) < _math__WEBPACK_IMPORTED_MODULE_1__["epsilon"]) { // line crosses a pole
        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? _math__WEBPACK_IMPORTED_MODULE_1__["halfPi"] : -_math__WEBPACK_IMPORTED_MODULE_1__["halfPi"]);
        stream.point(sign0, phi0);
        stream.lineEnd();
        stream.lineStart();
        stream.point(sign1, phi0);
        stream.point(lambda1, phi0);
        clean = 0;
      } else if (sign0 !== sign1 && delta >= _math__WEBPACK_IMPORTED_MODULE_1__["pi"]) { // line crosses antimeridian
        if (Object(_math__WEBPACK_IMPORTED_MODULE_1__["abs"])(lambda0 - sign0) < _math__WEBPACK_IMPORTED_MODULE_1__["epsilon"]) lambda0 -= sign0 * _math__WEBPACK_IMPORTED_MODULE_1__["epsilon"]; // handle degeneracies
        if (Object(_math__WEBPACK_IMPORTED_MODULE_1__["abs"])(lambda1 - sign1) < _math__WEBPACK_IMPORTED_MODULE_1__["epsilon"]) lambda1 -= sign1 * _math__WEBPACK_IMPORTED_MODULE_1__["epsilon"];
        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);
        stream.point(sign0, phi0);
        stream.lineEnd();
        stream.lineStart();
        stream.point(sign1, phi0);
        clean = 0;
      }
      stream.point(lambda0 = lambda1, phi0 = phi1);
      sign0 = sign1;
    },
    lineEnd: function() {
      stream.lineEnd();
      lambda0 = phi0 = NaN;
    },
    clean: function() {
      return 2 - clean; // if intersections, rejoin first and last segments
    }
  };
}

function clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {
  var cosPhi0,
      cosPhi1,
      sinLambda0Lambda1 = Object(_math__WEBPACK_IMPORTED_MODULE_1__["sin"])(lambda0 - lambda1);
  return Object(_math__WEBPACK_IMPORTED_MODULE_1__["abs"])(sinLambda0Lambda1) > _math__WEBPACK_IMPORTED_MODULE_1__["epsilon"]
      ? Object(_math__WEBPACK_IMPORTED_MODULE_1__["atan"])((Object(_math__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi0) * (cosPhi1 = Object(_math__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi1)) * Object(_math__WEBPACK_IMPORTED_MODULE_1__["sin"])(lambda1)
          - Object(_math__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi1) * (cosPhi0 = Object(_math__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi0)) * Object(_math__WEBPACK_IMPORTED_MODULE_1__["sin"])(lambda0))
          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))
      : (phi0 + phi1) / 2;
}

function clipAntimeridianInterpolate(from, to, direction, stream) {
  var phi;
  if (from == null) {
    phi = direction * _math__WEBPACK_IMPORTED_MODULE_1__["halfPi"];
    stream.point(-_math__WEBPACK_IMPORTED_MODULE_1__["pi"], phi);
    stream.point(0, phi);
    stream.point(_math__WEBPACK_IMPORTED_MODULE_1__["pi"], phi);
    stream.point(_math__WEBPACK_IMPORTED_MODULE_1__["pi"], 0);
    stream.point(_math__WEBPACK_IMPORTED_MODULE_1__["pi"], -phi);
    stream.point(0, -phi);
    stream.point(-_math__WEBPACK_IMPORTED_MODULE_1__["pi"], -phi);
    stream.point(-_math__WEBPACK_IMPORTED_MODULE_1__["pi"], 0);
    stream.point(-_math__WEBPACK_IMPORTED_MODULE_1__["pi"], phi);
  } else if (Object(_math__WEBPACK_IMPORTED_MODULE_1__["abs"])(from[0] - to[0]) > _math__WEBPACK_IMPORTED_MODULE_1__["epsilon"]) {
    var lambda = from[0] < to[0] ? _math__WEBPACK_IMPORTED_MODULE_1__["pi"] : -_math__WEBPACK_IMPORTED_MODULE_1__["pi"];
    phi = direction * lambda / 2;
    stream.point(-lambda, phi);
    stream.point(0, phi);
    stream.point(lambda, phi);
  } else {
    stream.point(to[0], to[1]);
  }
}


/***/ }),

/***/ "./node_modules/d3-geo/src/clip/buffer.js":
/*!************************************************!*\
  !*** ./node_modules/d3-geo/src/clip/buffer.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _noop__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../noop */ "./node_modules/d3-geo/src/noop.js");


/* harmony default export */ __webpack_exports__["default"] = (function() {
  var lines = [],
      line;
  return {
    point: function(x, y) {
      line.push([x, y]);
    },
    lineStart: function() {
      lines.push(line = []);
    },
    lineEnd: _noop__WEBPACK_IMPORTED_MODULE_0__["default"],
    rejoin: function() {
      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));
    },
    result: function() {
      var result = lines;
      lines = [];
      line = null;
      return result;
    }
  };
});


/***/ }),

/***/ "./node_modules/d3-geo/src/clip/circle.js":
/*!************************************************!*\
  !*** ./node_modules/d3-geo/src/clip/circle.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _cartesian__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cartesian */ "./node_modules/d3-geo/src/cartesian.js");
/* harmony import */ var _circle__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../circle */ "./node_modules/d3-geo/src/circle.js");
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _pointEqual__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../pointEqual */ "./node_modules/d3-geo/src/pointEqual.js");
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./index */ "./node_modules/d3-geo/src/clip/index.js");






/* harmony default export */ __webpack_exports__["default"] = (function(radius) {
  var cr = Object(_math__WEBPACK_IMPORTED_MODULE_2__["cos"])(radius),
      delta = 6 * _math__WEBPACK_IMPORTED_MODULE_2__["radians"],
      smallRadius = cr > 0,
      notHemisphere = Object(_math__WEBPACK_IMPORTED_MODULE_2__["abs"])(cr) > _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"]; // TODO optimise for this common case

  function interpolate(from, to, direction, stream) {
    Object(_circle__WEBPACK_IMPORTED_MODULE_1__["circleStream"])(stream, radius, delta, direction, from, to);
  }

  function visible(lambda, phi) {
    return Object(_math__WEBPACK_IMPORTED_MODULE_2__["cos"])(lambda) * Object(_math__WEBPACK_IMPORTED_MODULE_2__["cos"])(phi) > cr;
  }

  // Takes a line and cuts into visible segments. Return values used for polygon
  // clipping: 0 - there were intersections or the line was empty; 1 - no
  // intersections 2 - there were intersections, and the first and last segments
  // should be rejoined.
  function clipLine(stream) {
    var point0, // previous point
        c0, // code for previous point
        v0, // visibility of previous point
        v00, // visibility of first point
        clean; // no intersections
    return {
      lineStart: function() {
        v00 = v0 = false;
        clean = 1;
      },
      point: function(lambda, phi) {
        var point1 = [lambda, phi],
            point2,
            v = visible(lambda, phi),
            c = smallRadius
              ? v ? 0 : code(lambda, phi)
              : v ? code(lambda + (lambda < 0 ? _math__WEBPACK_IMPORTED_MODULE_2__["pi"] : -_math__WEBPACK_IMPORTED_MODULE_2__["pi"]), phi) : 0;
        if (!point0 && (v00 = v0 = v)) stream.lineStart();
        // Handle degeneracies.
        // TODO ignore if not clipping polygons.
        if (v !== v0) {
          point2 = intersect(point0, point1);
          if (!point2 || Object(_pointEqual__WEBPACK_IMPORTED_MODULE_3__["default"])(point0, point2) || Object(_pointEqual__WEBPACK_IMPORTED_MODULE_3__["default"])(point1, point2)) {
            point1[0] += _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"];
            point1[1] += _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"];
            v = visible(point1[0], point1[1]);
          }
        }
        if (v !== v0) {
          clean = 0;
          if (v) {
            // outside going in
            stream.lineStart();
            point2 = intersect(point1, point0);
            stream.point(point2[0], point2[1]);
          } else {
            // inside going out
            point2 = intersect(point0, point1);
            stream.point(point2[0], point2[1]);
            stream.lineEnd();
          }
          point0 = point2;
        } else if (notHemisphere && point0 && smallRadius ^ v) {
          var t;
          // If the codes for two points are different, or are both zero,
          // and there this segment intersects with the small circle.
          if (!(c & c0) && (t = intersect(point1, point0, true))) {
            clean = 0;
            if (smallRadius) {
              stream.lineStart();
              stream.point(t[0][0], t[0][1]);
              stream.point(t[1][0], t[1][1]);
              stream.lineEnd();
            } else {
              stream.point(t[1][0], t[1][1]);
              stream.lineEnd();
              stream.lineStart();
              stream.point(t[0][0], t[0][1]);
            }
          }
        }
        if (v && (!point0 || !Object(_pointEqual__WEBPACK_IMPORTED_MODULE_3__["default"])(point0, point1))) {
          stream.point(point1[0], point1[1]);
        }
        point0 = point1, v0 = v, c0 = c;
      },
      lineEnd: function() {
        if (v0) stream.lineEnd();
        point0 = null;
      },
      // Rejoin first and last segments if there were intersections and the first
      // and last points were visible.
      clean: function() {
        return clean | ((v00 && v0) << 1);
      }
    };
  }

  // Intersects the great circle between a and b with the clip circle.
  function intersect(a, b, two) {
    var pa = Object(_cartesian__WEBPACK_IMPORTED_MODULE_0__["cartesian"])(a),
        pb = Object(_cartesian__WEBPACK_IMPORTED_MODULE_0__["cartesian"])(b);

    // We have two planes, n1.p = d1 and n2.p = d2.
    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).
    var n1 = [1, 0, 0], // normal
        n2 = Object(_cartesian__WEBPACK_IMPORTED_MODULE_0__["cartesianCross"])(pa, pb),
        n2n2 = Object(_cartesian__WEBPACK_IMPORTED_MODULE_0__["cartesianDot"])(n2, n2),
        n1n2 = n2[0], // cartesianDot(n1, n2),
        determinant = n2n2 - n1n2 * n1n2;

    // Two polar points.
    if (!determinant) return !two && a;

    var c1 =  cr * n2n2 / determinant,
        c2 = -cr * n1n2 / determinant,
        n1xn2 = Object(_cartesian__WEBPACK_IMPORTED_MODULE_0__["cartesianCross"])(n1, n2),
        A = Object(_cartesian__WEBPACK_IMPORTED_MODULE_0__["cartesianScale"])(n1, c1),
        B = Object(_cartesian__WEBPACK_IMPORTED_MODULE_0__["cartesianScale"])(n2, c2);
    Object(_cartesian__WEBPACK_IMPORTED_MODULE_0__["cartesianAddInPlace"])(A, B);

    // Solve |p(t)|^2 = 1.
    var u = n1xn2,
        w = Object(_cartesian__WEBPACK_IMPORTED_MODULE_0__["cartesianDot"])(A, u),
        uu = Object(_cartesian__WEBPACK_IMPORTED_MODULE_0__["cartesianDot"])(u, u),
        t2 = w * w - uu * (Object(_cartesian__WEBPACK_IMPORTED_MODULE_0__["cartesianDot"])(A, A) - 1);

    if (t2 < 0) return;

    var t = Object(_math__WEBPACK_IMPORTED_MODULE_2__["sqrt"])(t2),
        q = Object(_cartesian__WEBPACK_IMPORTED_MODULE_0__["cartesianScale"])(u, (-w - t) / uu);
    Object(_cartesian__WEBPACK_IMPORTED_MODULE_0__["cartesianAddInPlace"])(q, A);
    q = Object(_cartesian__WEBPACK_IMPORTED_MODULE_0__["spherical"])(q);

    if (!two) return q;

    // Two intersection points.
    var lambda0 = a[0],
        lambda1 = b[0],
        phi0 = a[1],
        phi1 = b[1],
        z;

    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;

    var delta = lambda1 - lambda0,
        polar = Object(_math__WEBPACK_IMPORTED_MODULE_2__["abs"])(delta - _math__WEBPACK_IMPORTED_MODULE_2__["pi"]) < _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"],
        meridian = polar || delta < _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"];

    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;

    // Check that the first point is between a and b.
    if (meridian
        ? polar
          ? phi0 + phi1 > 0 ^ q[1] < (Object(_math__WEBPACK_IMPORTED_MODULE_2__["abs"])(q[0] - lambda0) < _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"] ? phi0 : phi1)
          : phi0 <= q[1] && q[1] <= phi1
        : delta > _math__WEBPACK_IMPORTED_MODULE_2__["pi"] ^ (lambda0 <= q[0] && q[0] <= lambda1)) {
      var q1 = Object(_cartesian__WEBPACK_IMPORTED_MODULE_0__["cartesianScale"])(u, (-w + t) / uu);
      Object(_cartesian__WEBPACK_IMPORTED_MODULE_0__["cartesianAddInPlace"])(q1, A);
      return [q, Object(_cartesian__WEBPACK_IMPORTED_MODULE_0__["spherical"])(q1)];
    }
  }

  // Generates a 4-bit vector representing the location of a point relative to
  // the small circle's bounding box.
  function code(lambda, phi) {
    var r = smallRadius ? radius : _math__WEBPACK_IMPORTED_MODULE_2__["pi"] - radius,
        code = 0;
    if (lambda < -r) code |= 1; // left
    else if (lambda > r) code |= 2; // right
    if (phi < -r) code |= 4; // below
    else if (phi > r) code |= 8; // above
    return code;
  }

  return Object(_index__WEBPACK_IMPORTED_MODULE_4__["default"])(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-_math__WEBPACK_IMPORTED_MODULE_2__["pi"], radius - _math__WEBPACK_IMPORTED_MODULE_2__["pi"]]);
});


/***/ }),

/***/ "./node_modules/d3-geo/src/clip/extent.js":
/*!************************************************!*\
  !*** ./node_modules/d3-geo/src/clip/extent.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _rectangle__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rectangle */ "./node_modules/d3-geo/src/clip/rectangle.js");


/* harmony default export */ __webpack_exports__["default"] = (function() {
  var x0 = 0,
      y0 = 0,
      x1 = 960,
      y1 = 500,
      cache,
      cacheStream,
      clip;

  return clip = {
    stream: function(stream) {
      return cache && cacheStream === stream ? cache : cache = Object(_rectangle__WEBPACK_IMPORTED_MODULE_0__["default"])(x0, y0, x1, y1)(cacheStream = stream);
    },
    extent: function(_) {
      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];
    }
  };
});


/***/ }),

/***/ "./node_modules/d3-geo/src/clip/index.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-geo/src/clip/index.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _buffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./buffer */ "./node_modules/d3-geo/src/clip/buffer.js");
/* harmony import */ var _rejoin__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./rejoin */ "./node_modules/d3-geo/src/clip/rejoin.js");
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _polygonContains__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../polygonContains */ "./node_modules/d3-geo/src/polygonContains.js");
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-geo/node_modules/d3-array/src/index.js");






/* harmony default export */ __webpack_exports__["default"] = (function(pointVisible, clipLine, interpolate, start) {
  return function(sink) {
    var line = clipLine(sink),
        ringBuffer = Object(_buffer__WEBPACK_IMPORTED_MODULE_0__["default"])(),
        ringSink = clipLine(ringBuffer),
        polygonStarted = false,
        polygon,
        segments,
        ring;

    var clip = {
      point: point,
      lineStart: lineStart,
      lineEnd: lineEnd,
      polygonStart: function() {
        clip.point = pointRing;
        clip.lineStart = ringStart;
        clip.lineEnd = ringEnd;
        segments = [];
        polygon = [];
      },
      polygonEnd: function() {
        clip.point = point;
        clip.lineStart = lineStart;
        clip.lineEnd = lineEnd;
        segments = Object(d3_array__WEBPACK_IMPORTED_MODULE_4__["merge"])(segments);
        var startInside = Object(_polygonContains__WEBPACK_IMPORTED_MODULE_3__["default"])(polygon, start);
        if (segments.length) {
          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;
          Object(_rejoin__WEBPACK_IMPORTED_MODULE_1__["default"])(segments, compareIntersection, startInside, interpolate, sink);
        } else if (startInside) {
          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;
          sink.lineStart();
          interpolate(null, null, 1, sink);
          sink.lineEnd();
        }
        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;
        segments = polygon = null;
      },
      sphere: function() {
        sink.polygonStart();
        sink.lineStart();
        interpolate(null, null, 1, sink);
        sink.lineEnd();
        sink.polygonEnd();
      }
    };

    function point(lambda, phi) {
      if (pointVisible(lambda, phi)) sink.point(lambda, phi);
    }

    function pointLine(lambda, phi) {
      line.point(lambda, phi);
    }

    function lineStart() {
      clip.point = pointLine;
      line.lineStart();
    }

    function lineEnd() {
      clip.point = point;
      line.lineEnd();
    }

    function pointRing(lambda, phi) {
      ring.push([lambda, phi]);
      ringSink.point(lambda, phi);
    }

    function ringStart() {
      ringSink.lineStart();
      ring = [];
    }

    function ringEnd() {
      pointRing(ring[0][0], ring[0][1]);
      ringSink.lineEnd();

      var clean = ringSink.clean(),
          ringSegments = ringBuffer.result(),
          i, n = ringSegments.length, m,
          segment,
          point;

      ring.pop();
      polygon.push(ring);
      ring = null;

      if (!n) return;

      // No intersections.
      if (clean & 1) {
        segment = ringSegments[0];
        if ((m = segment.length - 1) > 0) {
          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;
          sink.lineStart();
          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);
          sink.lineEnd();
        }
        return;
      }

      // Rejoin connected segments.
      // TODO reuse ringBuffer.rejoin()?
      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));

      segments.push(ringSegments.filter(validSegment));
    }

    return clip;
  };
});

function validSegment(segment) {
  return segment.length > 1;
}

// Intersections are sorted along the clip edge. For both antimeridian cutting
// and circle clipping, the same comparison is used.
function compareIntersection(a, b) {
  return ((a = a.x)[0] < 0 ? a[1] - _math__WEBPACK_IMPORTED_MODULE_2__["halfPi"] - _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"] : _math__WEBPACK_IMPORTED_MODULE_2__["halfPi"] - a[1])
       - ((b = b.x)[0] < 0 ? b[1] - _math__WEBPACK_IMPORTED_MODULE_2__["halfPi"] - _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"] : _math__WEBPACK_IMPORTED_MODULE_2__["halfPi"] - b[1]);
}


/***/ }),

/***/ "./node_modules/d3-geo/src/clip/line.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-geo/src/clip/line.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(a, b, x0, y0, x1, y1) {
  var ax = a[0],
      ay = a[1],
      bx = b[0],
      by = b[1],
      t0 = 0,
      t1 = 1,
      dx = bx - ax,
      dy = by - ay,
      r;

  r = x0 - ax;
  if (!dx && r > 0) return;
  r /= dx;
  if (dx < 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  } else if (dx > 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  }

  r = x1 - ax;
  if (!dx && r < 0) return;
  r /= dx;
  if (dx < 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  } else if (dx > 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  }

  r = y0 - ay;
  if (!dy && r > 0) return;
  r /= dy;
  if (dy < 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  } else if (dy > 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  }

  r = y1 - ay;
  if (!dy && r < 0) return;
  r /= dy;
  if (dy < 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  } else if (dy > 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  }

  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;
  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;
  return true;
});


/***/ }),

/***/ "./node_modules/d3-geo/src/clip/rectangle.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-geo/src/clip/rectangle.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return clipRectangle; });
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _buffer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./buffer */ "./node_modules/d3-geo/src/clip/buffer.js");
/* harmony import */ var _line__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./line */ "./node_modules/d3-geo/src/clip/line.js");
/* harmony import */ var _rejoin__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./rejoin */ "./node_modules/d3-geo/src/clip/rejoin.js");
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-geo/node_modules/d3-array/src/index.js");






var clipMax = 1e9, clipMin = -clipMax;

// TODO Use d3-polygon’s polygonContains here for the ring check?
// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?

function clipRectangle(x0, y0, x1, y1) {

  function visible(x, y) {
    return x0 <= x && x <= x1 && y0 <= y && y <= y1;
  }

  function interpolate(from, to, direction, stream) {
    var a = 0, a1 = 0;
    if (from == null
        || (a = corner(from, direction)) !== (a1 = corner(to, direction))
        || comparePoint(from, to) < 0 ^ direction > 0) {
      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);
      while ((a = (a + direction + 4) % 4) !== a1);
    } else {
      stream.point(to[0], to[1]);
    }
  }

  function corner(p, direction) {
    return Object(_math__WEBPACK_IMPORTED_MODULE_0__["abs"])(p[0] - x0) < _math__WEBPACK_IMPORTED_MODULE_0__["epsilon"] ? direction > 0 ? 0 : 3
        : Object(_math__WEBPACK_IMPORTED_MODULE_0__["abs"])(p[0] - x1) < _math__WEBPACK_IMPORTED_MODULE_0__["epsilon"] ? direction > 0 ? 2 : 1
        : Object(_math__WEBPACK_IMPORTED_MODULE_0__["abs"])(p[1] - y0) < _math__WEBPACK_IMPORTED_MODULE_0__["epsilon"] ? direction > 0 ? 1 : 0
        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon
  }

  function compareIntersection(a, b) {
    return comparePoint(a.x, b.x);
  }

  function comparePoint(a, b) {
    var ca = corner(a, 1),
        cb = corner(b, 1);
    return ca !== cb ? ca - cb
        : ca === 0 ? b[1] - a[1]
        : ca === 1 ? a[0] - b[0]
        : ca === 2 ? a[1] - b[1]
        : b[0] - a[0];
  }

  return function(stream) {
    var activeStream = stream,
        bufferStream = Object(_buffer__WEBPACK_IMPORTED_MODULE_1__["default"])(),
        segments,
        polygon,
        ring,
        x__, y__, v__, // first point
        x_, y_, v_, // previous point
        first,
        clean;

    var clipStream = {
      point: point,
      lineStart: lineStart,
      lineEnd: lineEnd,
      polygonStart: polygonStart,
      polygonEnd: polygonEnd
    };

    function point(x, y) {
      if (visible(x, y)) activeStream.point(x, y);
    }

    function polygonInside() {
      var winding = 0;

      for (var i = 0, n = polygon.length; i < n; ++i) {
        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {
          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];
          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }
          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }
        }
      }

      return winding;
    }

    // Buffer geometry within a polygon and then clip it en masse.
    function polygonStart() {
      activeStream = bufferStream, segments = [], polygon = [], clean = true;
    }

    function polygonEnd() {
      var startInside = polygonInside(),
          cleanInside = clean && startInside,
          visible = (segments = Object(d3_array__WEBPACK_IMPORTED_MODULE_4__["merge"])(segments)).length;
      if (cleanInside || visible) {
        stream.polygonStart();
        if (cleanInside) {
          stream.lineStart();
          interpolate(null, null, 1, stream);
          stream.lineEnd();
        }
        if (visible) {
          Object(_rejoin__WEBPACK_IMPORTED_MODULE_3__["default"])(segments, compareIntersection, startInside, interpolate, stream);
        }
        stream.polygonEnd();
      }
      activeStream = stream, segments = polygon = ring = null;
    }

    function lineStart() {
      clipStream.point = linePoint;
      if (polygon) polygon.push(ring = []);
      first = true;
      v_ = false;
      x_ = y_ = NaN;
    }

    // TODO rather than special-case polygons, simply handle them separately.
    // Ideally, coincident intersection points should be jittered to avoid
    // clipping issues.
    function lineEnd() {
      if (segments) {
        linePoint(x__, y__);
        if (v__ && v_) bufferStream.rejoin();
        segments.push(bufferStream.result());
      }
      clipStream.point = point;
      if (v_) activeStream.lineEnd();
    }

    function linePoint(x, y) {
      var v = visible(x, y);
      if (polygon) ring.push([x, y]);
      if (first) {
        x__ = x, y__ = y, v__ = v;
        first = false;
        if (v) {
          activeStream.lineStart();
          activeStream.point(x, y);
        }
      } else {
        if (v && v_) activeStream.point(x, y);
        else {
          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],
              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];
          if (Object(_line__WEBPACK_IMPORTED_MODULE_2__["default"])(a, b, x0, y0, x1, y1)) {
            if (!v_) {
              activeStream.lineStart();
              activeStream.point(a[0], a[1]);
            }
            activeStream.point(b[0], b[1]);
            if (!v) activeStream.lineEnd();
            clean = false;
          } else if (v) {
            activeStream.lineStart();
            activeStream.point(x, y);
            clean = false;
          }
        }
      }
      x_ = x, y_ = y, v_ = v;
    }

    return clipStream;
  };
}


/***/ }),

/***/ "./node_modules/d3-geo/src/clip/rejoin.js":
/*!************************************************!*\
  !*** ./node_modules/d3-geo/src/clip/rejoin.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _pointEqual__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../pointEqual */ "./node_modules/d3-geo/src/pointEqual.js");


function Intersection(point, points, other, entry) {
  this.x = point;
  this.z = points;
  this.o = other; // another intersection
  this.e = entry; // is an entry?
  this.v = false; // visited
  this.n = this.p = null; // next & previous
}

// A generalized polygon clipping algorithm: given a polygon that has been cut
// into its visible line segments, and rejoins the segments by interpolating
// along the clip edge.
/* harmony default export */ __webpack_exports__["default"] = (function(segments, compareIntersection, startInside, interpolate, stream) {
  var subject = [],
      clip = [],
      i,
      n;

  segments.forEach(function(segment) {
    if ((n = segment.length - 1) <= 0) return;
    var n, p0 = segment[0], p1 = segment[n], x;

    // If the first and last points of a segment are coincident, then treat as a
    // closed ring. TODO if all rings are closed, then the winding order of the
    // exterior ring should be checked.
    if (Object(_pointEqual__WEBPACK_IMPORTED_MODULE_0__["default"])(p0, p1)) {
      stream.lineStart();
      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);
      stream.lineEnd();
      return;
    }

    subject.push(x = new Intersection(p0, segment, null, true));
    clip.push(x.o = new Intersection(p0, null, x, false));
    subject.push(x = new Intersection(p1, segment, null, false));
    clip.push(x.o = new Intersection(p1, null, x, true));
  });

  if (!subject.length) return;

  clip.sort(compareIntersection);
  link(subject);
  link(clip);

  for (i = 0, n = clip.length; i < n; ++i) {
    clip[i].e = startInside = !startInside;
  }

  var start = subject[0],
      points,
      point;

  while (1) {
    // Find first unvisited intersection.
    var current = start,
        isSubject = true;
    while (current.v) if ((current = current.n) === start) return;
    points = current.z;
    stream.lineStart();
    do {
      current.v = current.o.v = true;
      if (current.e) {
        if (isSubject) {
          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);
        } else {
          interpolate(current.x, current.n.x, 1, stream);
        }
        current = current.n;
      } else {
        if (isSubject) {
          points = current.p.z;
          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);
        } else {
          interpolate(current.x, current.p.x, -1, stream);
        }
        current = current.p;
      }
      current = current.o;
      points = current.z;
      isSubject = !isSubject;
    } while (!current.v);
    stream.lineEnd();
  }
});

function link(array) {
  if (!(n = array.length)) return;
  var n,
      i = 0,
      a = array[0],
      b;
  while (++i < n) {
    a.n = b = array[i];
    b.p = a;
    a = b;
  }
  a.n = b = array[0];
  b.p = a;
}


/***/ }),

/***/ "./node_modules/d3-geo/src/compose.js":
/*!********************************************!*\
  !*** ./node_modules/d3-geo/src/compose.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(a, b) {

  function compose(x, y) {
    return x = a(x, y), b(x[0], x[1]);
  }

  if (a.invert && b.invert) compose.invert = function(x, y) {
    return x = b.invert(x, y), x && a.invert(x[0], x[1]);
  };

  return compose;
});


/***/ }),

/***/ "./node_modules/d3-geo/src/constant.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-geo/src/constant.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(x) {
  return function() {
    return x;
  };
});


/***/ }),

/***/ "./node_modules/d3-geo/src/contains.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-geo/src/contains.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _polygonContains__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./polygonContains */ "./node_modules/d3-geo/src/polygonContains.js");
/* harmony import */ var _distance__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./distance */ "./node_modules/d3-geo/src/distance.js");
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./math */ "./node_modules/d3-geo/src/math.js");




var containsObjectType = {
  Feature: function(object, point) {
    return containsGeometry(object.geometry, point);
  },
  FeatureCollection: function(object, point) {
    var features = object.features, i = -1, n = features.length;
    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;
    return false;
  }
};

var containsGeometryType = {
  Sphere: function() {
    return true;
  },
  Point: function(object, point) {
    return containsPoint(object.coordinates, point);
  },
  MultiPoint: function(object, point) {
    var coordinates = object.coordinates, i = -1, n = coordinates.length;
    while (++i < n) if (containsPoint(coordinates[i], point)) return true;
    return false;
  },
  LineString: function(object, point) {
    return containsLine(object.coordinates, point);
  },
  MultiLineString: function(object, point) {
    var coordinates = object.coordinates, i = -1, n = coordinates.length;
    while (++i < n) if (containsLine(coordinates[i], point)) return true;
    return false;
  },
  Polygon: function(object, point) {
    return containsPolygon(object.coordinates, point);
  },
  MultiPolygon: function(object, point) {
    var coordinates = object.coordinates, i = -1, n = coordinates.length;
    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;
    return false;
  },
  GeometryCollection: function(object, point) {
    var geometries = object.geometries, i = -1, n = geometries.length;
    while (++i < n) if (containsGeometry(geometries[i], point)) return true;
    return false;
  }
};

function containsGeometry(geometry, point) {
  return geometry && containsGeometryType.hasOwnProperty(geometry.type)
      ? containsGeometryType[geometry.type](geometry, point)
      : false;
}

function containsPoint(coordinates, point) {
  return Object(_distance__WEBPACK_IMPORTED_MODULE_1__["default"])(coordinates, point) === 0;
}

function containsLine(coordinates, point) {
  var ao, bo, ab;
  for (var i = 0, n = coordinates.length; i < n; i++) {
    bo = Object(_distance__WEBPACK_IMPORTED_MODULE_1__["default"])(coordinates[i], point);
    if (bo === 0) return true;
    if (i > 0) {
      ab = Object(_distance__WEBPACK_IMPORTED_MODULE_1__["default"])(coordinates[i], coordinates[i - 1]);
      if (
        ab > 0 &&
        ao <= ab &&
        bo <= ab &&
        (ao + bo - ab) * (1 - Math.pow((ao - bo) / ab, 2)) < _math__WEBPACK_IMPORTED_MODULE_2__["epsilon2"] * ab
      )
        return true;
    }
    ao = bo;
  }
  return false;
}

function containsPolygon(coordinates, point) {
  return !!Object(_polygonContains__WEBPACK_IMPORTED_MODULE_0__["default"])(coordinates.map(ringRadians), pointRadians(point));
}

function ringRadians(ring) {
  return ring = ring.map(pointRadians), ring.pop(), ring;
}

function pointRadians(point) {
  return [point[0] * _math__WEBPACK_IMPORTED_MODULE_2__["radians"], point[1] * _math__WEBPACK_IMPORTED_MODULE_2__["radians"]];
}

/* harmony default export */ __webpack_exports__["default"] = (function(object, point) {
  return (object && containsObjectType.hasOwnProperty(object.type)
      ? containsObjectType[object.type]
      : containsGeometry)(object, point);
});


/***/ }),

/***/ "./node_modules/d3-geo/src/distance.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-geo/src/distance.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _length__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./length */ "./node_modules/d3-geo/src/length.js");


var coordinates = [null, null],
    object = {type: "LineString", coordinates: coordinates};

/* harmony default export */ __webpack_exports__["default"] = (function(a, b) {
  coordinates[0] = a;
  coordinates[1] = b;
  return Object(_length__WEBPACK_IMPORTED_MODULE_0__["default"])(object);
});


/***/ }),

/***/ "./node_modules/d3-geo/src/graticule.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-geo/src/graticule.js ***!
  \**********************************************/
/*! exports provided: default, graticule10 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return graticule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "graticule10", function() { return graticule10; });
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-geo/node_modules/d3-array/src/index.js");
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math */ "./node_modules/d3-geo/src/math.js");



function graticuleX(y0, y1, dy) {
  var y = Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["range"])(y0, y1 - _math__WEBPACK_IMPORTED_MODULE_1__["epsilon"], dy).concat(y1);
  return function(x) { return y.map(function(y) { return [x, y]; }); };
}

function graticuleY(x0, x1, dx) {
  var x = Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["range"])(x0, x1 - _math__WEBPACK_IMPORTED_MODULE_1__["epsilon"], dx).concat(x1);
  return function(y) { return x.map(function(x) { return [x, y]; }); };
}

function graticule() {
  var x1, x0, X1, X0,
      y1, y0, Y1, Y0,
      dx = 10, dy = dx, DX = 90, DY = 360,
      x, y, X, Y,
      precision = 2.5;

  function graticule() {
    return {type: "MultiLineString", coordinates: lines()};
  }

  function lines() {
    return Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["range"])(Object(_math__WEBPACK_IMPORTED_MODULE_1__["ceil"])(X0 / DX) * DX, X1, DX).map(X)
        .concat(Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["range"])(Object(_math__WEBPACK_IMPORTED_MODULE_1__["ceil"])(Y0 / DY) * DY, Y1, DY).map(Y))
        .concat(Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["range"])(Object(_math__WEBPACK_IMPORTED_MODULE_1__["ceil"])(x0 / dx) * dx, x1, dx).filter(function(x) { return Object(_math__WEBPACK_IMPORTED_MODULE_1__["abs"])(x % DX) > _math__WEBPACK_IMPORTED_MODULE_1__["epsilon"]; }).map(x))
        .concat(Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["range"])(Object(_math__WEBPACK_IMPORTED_MODULE_1__["ceil"])(y0 / dy) * dy, y1, dy).filter(function(y) { return Object(_math__WEBPACK_IMPORTED_MODULE_1__["abs"])(y % DY) > _math__WEBPACK_IMPORTED_MODULE_1__["epsilon"]; }).map(y));
  }

  graticule.lines = function() {
    return lines().map(function(coordinates) { return {type: "LineString", coordinates: coordinates}; });
  };

  graticule.outline = function() {
    return {
      type: "Polygon",
      coordinates: [
        X(X0).concat(
        Y(Y1).slice(1),
        X(X1).reverse().slice(1),
        Y(Y0).reverse().slice(1))
      ]
    };
  };

  graticule.extent = function(_) {
    if (!arguments.length) return graticule.extentMinor();
    return graticule.extentMajor(_).extentMinor(_);
  };

  graticule.extentMajor = function(_) {
    if (!arguments.length) return [[X0, Y0], [X1, Y1]];
    X0 = +_[0][0], X1 = +_[1][0];
    Y0 = +_[0][1], Y1 = +_[1][1];
    if (X0 > X1) _ = X0, X0 = X1, X1 = _;
    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;
    return graticule.precision(precision);
  };

  graticule.extentMinor = function(_) {
    if (!arguments.length) return [[x0, y0], [x1, y1]];
    x0 = +_[0][0], x1 = +_[1][0];
    y0 = +_[0][1], y1 = +_[1][1];
    if (x0 > x1) _ = x0, x0 = x1, x1 = _;
    if (y0 > y1) _ = y0, y0 = y1, y1 = _;
    return graticule.precision(precision);
  };

  graticule.step = function(_) {
    if (!arguments.length) return graticule.stepMinor();
    return graticule.stepMajor(_).stepMinor(_);
  };

  graticule.stepMajor = function(_) {
    if (!arguments.length) return [DX, DY];
    DX = +_[0], DY = +_[1];
    return graticule;
  };

  graticule.stepMinor = function(_) {
    if (!arguments.length) return [dx, dy];
    dx = +_[0], dy = +_[1];
    return graticule;
  };

  graticule.precision = function(_) {
    if (!arguments.length) return precision;
    precision = +_;
    x = graticuleX(y0, y1, 90);
    y = graticuleY(x0, x1, precision);
    X = graticuleX(Y0, Y1, 90);
    Y = graticuleY(X0, X1, precision);
    return graticule;
  };

  return graticule
      .extentMajor([[-180, -90 + _math__WEBPACK_IMPORTED_MODULE_1__["epsilon"]], [180, 90 - _math__WEBPACK_IMPORTED_MODULE_1__["epsilon"]]])
      .extentMinor([[-180, -80 - _math__WEBPACK_IMPORTED_MODULE_1__["epsilon"]], [180, 80 + _math__WEBPACK_IMPORTED_MODULE_1__["epsilon"]]]);
}

function graticule10() {
  return graticule()();
}


/***/ }),

/***/ "./node_modules/d3-geo/src/identity.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-geo/src/identity.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(x) {
  return x;
});


/***/ }),

/***/ "./node_modules/d3-geo/src/index.js":
/*!******************************************!*\
  !*** ./node_modules/d3-geo/src/index.js ***!
  \******************************************/
/*! exports provided: geoArea, geoBounds, geoCentroid, geoCircle, geoClipAntimeridian, geoClipCircle, geoClipExtent, geoClipRectangle, geoContains, geoDistance, geoGraticule, geoGraticule10, geoInterpolate, geoLength, geoPath, geoAlbers, geoAlbersUsa, geoAzimuthalEqualArea, geoAzimuthalEqualAreaRaw, geoAzimuthalEquidistant, geoAzimuthalEquidistantRaw, geoConicConformal, geoConicConformalRaw, geoConicEqualArea, geoConicEqualAreaRaw, geoConicEquidistant, geoConicEquidistantRaw, geoEqualEarth, geoEqualEarthRaw, geoEquirectangular, geoEquirectangularRaw, geoGnomonic, geoGnomonicRaw, geoIdentity, geoProjection, geoProjectionMutator, geoMercator, geoMercatorRaw, geoNaturalEarth1, geoNaturalEarth1Raw, geoOrthographic, geoOrthographicRaw, geoStereographic, geoStereographicRaw, geoTransverseMercator, geoTransverseMercatorRaw, geoRotation, geoStream, geoTransform */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _area__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./area */ "./node_modules/d3-geo/src/area.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoArea", function() { return _area__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _bounds__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bounds */ "./node_modules/d3-geo/src/bounds.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoBounds", function() { return _bounds__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _centroid__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./centroid */ "./node_modules/d3-geo/src/centroid.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoCentroid", function() { return _centroid__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _circle__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./circle */ "./node_modules/d3-geo/src/circle.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoCircle", function() { return _circle__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _clip_antimeridian__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./clip/antimeridian */ "./node_modules/d3-geo/src/clip/antimeridian.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoClipAntimeridian", function() { return _clip_antimeridian__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _clip_circle__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./clip/circle */ "./node_modules/d3-geo/src/clip/circle.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoClipCircle", function() { return _clip_circle__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _clip_extent__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./clip/extent */ "./node_modules/d3-geo/src/clip/extent.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoClipExtent", function() { return _clip_extent__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony import */ var _clip_rectangle__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./clip/rectangle */ "./node_modules/d3-geo/src/clip/rectangle.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoClipRectangle", function() { return _clip_rectangle__WEBPACK_IMPORTED_MODULE_7__["default"]; });

/* harmony import */ var _contains__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./contains */ "./node_modules/d3-geo/src/contains.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoContains", function() { return _contains__WEBPACK_IMPORTED_MODULE_8__["default"]; });

/* harmony import */ var _distance__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./distance */ "./node_modules/d3-geo/src/distance.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoDistance", function() { return _distance__WEBPACK_IMPORTED_MODULE_9__["default"]; });

/* harmony import */ var _graticule__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./graticule */ "./node_modules/d3-geo/src/graticule.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoGraticule", function() { return _graticule__WEBPACK_IMPORTED_MODULE_10__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoGraticule10", function() { return _graticule__WEBPACK_IMPORTED_MODULE_10__["graticule10"]; });

/* harmony import */ var _interpolate__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./interpolate */ "./node_modules/d3-geo/src/interpolate.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoInterpolate", function() { return _interpolate__WEBPACK_IMPORTED_MODULE_11__["default"]; });

/* harmony import */ var _length__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./length */ "./node_modules/d3-geo/src/length.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoLength", function() { return _length__WEBPACK_IMPORTED_MODULE_12__["default"]; });

/* harmony import */ var _path_index__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./path/index */ "./node_modules/d3-geo/src/path/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoPath", function() { return _path_index__WEBPACK_IMPORTED_MODULE_13__["default"]; });

/* harmony import */ var _projection_albers__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./projection/albers */ "./node_modules/d3-geo/src/projection/albers.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoAlbers", function() { return _projection_albers__WEBPACK_IMPORTED_MODULE_14__["default"]; });

/* harmony import */ var _projection_albersUsa__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./projection/albersUsa */ "./node_modules/d3-geo/src/projection/albersUsa.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoAlbersUsa", function() { return _projection_albersUsa__WEBPACK_IMPORTED_MODULE_15__["default"]; });

/* harmony import */ var _projection_azimuthalEqualArea__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./projection/azimuthalEqualArea */ "./node_modules/d3-geo/src/projection/azimuthalEqualArea.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoAzimuthalEqualArea", function() { return _projection_azimuthalEqualArea__WEBPACK_IMPORTED_MODULE_16__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoAzimuthalEqualAreaRaw", function() { return _projection_azimuthalEqualArea__WEBPACK_IMPORTED_MODULE_16__["azimuthalEqualAreaRaw"]; });

/* harmony import */ var _projection_azimuthalEquidistant__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./projection/azimuthalEquidistant */ "./node_modules/d3-geo/src/projection/azimuthalEquidistant.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoAzimuthalEquidistant", function() { return _projection_azimuthalEquidistant__WEBPACK_IMPORTED_MODULE_17__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoAzimuthalEquidistantRaw", function() { return _projection_azimuthalEquidistant__WEBPACK_IMPORTED_MODULE_17__["azimuthalEquidistantRaw"]; });

/* harmony import */ var _projection_conicConformal__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./projection/conicConformal */ "./node_modules/d3-geo/src/projection/conicConformal.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoConicConformal", function() { return _projection_conicConformal__WEBPACK_IMPORTED_MODULE_18__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoConicConformalRaw", function() { return _projection_conicConformal__WEBPACK_IMPORTED_MODULE_18__["conicConformalRaw"]; });

/* harmony import */ var _projection_conicEqualArea__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./projection/conicEqualArea */ "./node_modules/d3-geo/src/projection/conicEqualArea.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoConicEqualArea", function() { return _projection_conicEqualArea__WEBPACK_IMPORTED_MODULE_19__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoConicEqualAreaRaw", function() { return _projection_conicEqualArea__WEBPACK_IMPORTED_MODULE_19__["conicEqualAreaRaw"]; });

/* harmony import */ var _projection_conicEquidistant__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./projection/conicEquidistant */ "./node_modules/d3-geo/src/projection/conicEquidistant.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoConicEquidistant", function() { return _projection_conicEquidistant__WEBPACK_IMPORTED_MODULE_20__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoConicEquidistantRaw", function() { return _projection_conicEquidistant__WEBPACK_IMPORTED_MODULE_20__["conicEquidistantRaw"]; });

/* harmony import */ var _projection_equalEarth__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./projection/equalEarth */ "./node_modules/d3-geo/src/projection/equalEarth.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoEqualEarth", function() { return _projection_equalEarth__WEBPACK_IMPORTED_MODULE_21__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoEqualEarthRaw", function() { return _projection_equalEarth__WEBPACK_IMPORTED_MODULE_21__["equalEarthRaw"]; });

/* harmony import */ var _projection_equirectangular__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./projection/equirectangular */ "./node_modules/d3-geo/src/projection/equirectangular.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoEquirectangular", function() { return _projection_equirectangular__WEBPACK_IMPORTED_MODULE_22__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoEquirectangularRaw", function() { return _projection_equirectangular__WEBPACK_IMPORTED_MODULE_22__["equirectangularRaw"]; });

/* harmony import */ var _projection_gnomonic__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./projection/gnomonic */ "./node_modules/d3-geo/src/projection/gnomonic.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoGnomonic", function() { return _projection_gnomonic__WEBPACK_IMPORTED_MODULE_23__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoGnomonicRaw", function() { return _projection_gnomonic__WEBPACK_IMPORTED_MODULE_23__["gnomonicRaw"]; });

/* harmony import */ var _projection_identity__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./projection/identity */ "./node_modules/d3-geo/src/projection/identity.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoIdentity", function() { return _projection_identity__WEBPACK_IMPORTED_MODULE_24__["default"]; });

/* harmony import */ var _projection_index__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./projection/index */ "./node_modules/d3-geo/src/projection/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoProjection", function() { return _projection_index__WEBPACK_IMPORTED_MODULE_25__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoProjectionMutator", function() { return _projection_index__WEBPACK_IMPORTED_MODULE_25__["projectionMutator"]; });

/* harmony import */ var _projection_mercator__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./projection/mercator */ "./node_modules/d3-geo/src/projection/mercator.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoMercator", function() { return _projection_mercator__WEBPACK_IMPORTED_MODULE_26__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoMercatorRaw", function() { return _projection_mercator__WEBPACK_IMPORTED_MODULE_26__["mercatorRaw"]; });

/* harmony import */ var _projection_naturalEarth1__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./projection/naturalEarth1 */ "./node_modules/d3-geo/src/projection/naturalEarth1.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoNaturalEarth1", function() { return _projection_naturalEarth1__WEBPACK_IMPORTED_MODULE_27__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoNaturalEarth1Raw", function() { return _projection_naturalEarth1__WEBPACK_IMPORTED_MODULE_27__["naturalEarth1Raw"]; });

/* harmony import */ var _projection_orthographic__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./projection/orthographic */ "./node_modules/d3-geo/src/projection/orthographic.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoOrthographic", function() { return _projection_orthographic__WEBPACK_IMPORTED_MODULE_28__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoOrthographicRaw", function() { return _projection_orthographic__WEBPACK_IMPORTED_MODULE_28__["orthographicRaw"]; });

/* harmony import */ var _projection_stereographic__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./projection/stereographic */ "./node_modules/d3-geo/src/projection/stereographic.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoStereographic", function() { return _projection_stereographic__WEBPACK_IMPORTED_MODULE_29__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoStereographicRaw", function() { return _projection_stereographic__WEBPACK_IMPORTED_MODULE_29__["stereographicRaw"]; });

/* harmony import */ var _projection_transverseMercator__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./projection/transverseMercator */ "./node_modules/d3-geo/src/projection/transverseMercator.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoTransverseMercator", function() { return _projection_transverseMercator__WEBPACK_IMPORTED_MODULE_30__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoTransverseMercatorRaw", function() { return _projection_transverseMercator__WEBPACK_IMPORTED_MODULE_30__["transverseMercatorRaw"]; });

/* harmony import */ var _rotation__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./rotation */ "./node_modules/d3-geo/src/rotation.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoRotation", function() { return _rotation__WEBPACK_IMPORTED_MODULE_31__["default"]; });

/* harmony import */ var _stream__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./stream */ "./node_modules/d3-geo/src/stream.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoStream", function() { return _stream__WEBPACK_IMPORTED_MODULE_32__["default"]; });

/* harmony import */ var _transform__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./transform */ "./node_modules/d3-geo/src/transform.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoTransform", function() { return _transform__WEBPACK_IMPORTED_MODULE_33__["default"]; });







 // DEPRECATED! Use d3.geoIdentity().clipExtent(…).





























/***/ }),

/***/ "./node_modules/d3-geo/src/interpolate.js":
/*!************************************************!*\
  !*** ./node_modules/d3-geo/src/interpolate.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./math */ "./node_modules/d3-geo/src/math.js");


/* harmony default export */ __webpack_exports__["default"] = (function(a, b) {
  var x0 = a[0] * _math__WEBPACK_IMPORTED_MODULE_0__["radians"],
      y0 = a[1] * _math__WEBPACK_IMPORTED_MODULE_0__["radians"],
      x1 = b[0] * _math__WEBPACK_IMPORTED_MODULE_0__["radians"],
      y1 = b[1] * _math__WEBPACK_IMPORTED_MODULE_0__["radians"],
      cy0 = Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(y0),
      sy0 = Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(y0),
      cy1 = Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(y1),
      sy1 = Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(y1),
      kx0 = cy0 * Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(x0),
      ky0 = cy0 * Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(x0),
      kx1 = cy1 * Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(x1),
      ky1 = cy1 * Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(x1),
      d = 2 * Object(_math__WEBPACK_IMPORTED_MODULE_0__["asin"])(Object(_math__WEBPACK_IMPORTED_MODULE_0__["sqrt"])(Object(_math__WEBPACK_IMPORTED_MODULE_0__["haversin"])(y1 - y0) + cy0 * cy1 * Object(_math__WEBPACK_IMPORTED_MODULE_0__["haversin"])(x1 - x0))),
      k = Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(d);

  var interpolate = d ? function(t) {
    var B = Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(t *= d) / k,
        A = Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(d - t) / k,
        x = A * kx0 + B * kx1,
        y = A * ky0 + B * ky1,
        z = A * sy0 + B * sy1;
    return [
      Object(_math__WEBPACK_IMPORTED_MODULE_0__["atan2"])(y, x) * _math__WEBPACK_IMPORTED_MODULE_0__["degrees"],
      Object(_math__WEBPACK_IMPORTED_MODULE_0__["atan2"])(z, Object(_math__WEBPACK_IMPORTED_MODULE_0__["sqrt"])(x * x + y * y)) * _math__WEBPACK_IMPORTED_MODULE_0__["degrees"]
    ];
  } : function() {
    return [x0 * _math__WEBPACK_IMPORTED_MODULE_0__["degrees"], y0 * _math__WEBPACK_IMPORTED_MODULE_0__["degrees"]];
  };

  interpolate.distance = d;

  return interpolate;
});


/***/ }),

/***/ "./node_modules/d3-geo/src/length.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-geo/src/length.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _adder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./adder */ "./node_modules/d3-geo/src/adder.js");
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _noop__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./noop */ "./node_modules/d3-geo/src/noop.js");
/* harmony import */ var _stream__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./stream */ "./node_modules/d3-geo/src/stream.js");





var lengthSum = Object(_adder__WEBPACK_IMPORTED_MODULE_0__["default"])(),
    lambda0,
    sinPhi0,
    cosPhi0;

var lengthStream = {
  sphere: _noop__WEBPACK_IMPORTED_MODULE_2__["default"],
  point: _noop__WEBPACK_IMPORTED_MODULE_2__["default"],
  lineStart: lengthLineStart,
  lineEnd: _noop__WEBPACK_IMPORTED_MODULE_2__["default"],
  polygonStart: _noop__WEBPACK_IMPORTED_MODULE_2__["default"],
  polygonEnd: _noop__WEBPACK_IMPORTED_MODULE_2__["default"]
};

function lengthLineStart() {
  lengthStream.point = lengthPointFirst;
  lengthStream.lineEnd = lengthLineEnd;
}

function lengthLineEnd() {
  lengthStream.point = lengthStream.lineEnd = _noop__WEBPACK_IMPORTED_MODULE_2__["default"];
}

function lengthPointFirst(lambda, phi) {
  lambda *= _math__WEBPACK_IMPORTED_MODULE_1__["radians"], phi *= _math__WEBPACK_IMPORTED_MODULE_1__["radians"];
  lambda0 = lambda, sinPhi0 = Object(_math__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi), cosPhi0 = Object(_math__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi);
  lengthStream.point = lengthPoint;
}

function lengthPoint(lambda, phi) {
  lambda *= _math__WEBPACK_IMPORTED_MODULE_1__["radians"], phi *= _math__WEBPACK_IMPORTED_MODULE_1__["radians"];
  var sinPhi = Object(_math__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi),
      cosPhi = Object(_math__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi),
      delta = Object(_math__WEBPACK_IMPORTED_MODULE_1__["abs"])(lambda - lambda0),
      cosDelta = Object(_math__WEBPACK_IMPORTED_MODULE_1__["cos"])(delta),
      sinDelta = Object(_math__WEBPACK_IMPORTED_MODULE_1__["sin"])(delta),
      x = cosPhi * sinDelta,
      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,
      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;
  lengthSum.add(Object(_math__WEBPACK_IMPORTED_MODULE_1__["atan2"])(Object(_math__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(x * x + y * y), z));
  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;
}

/* harmony default export */ __webpack_exports__["default"] = (function(object) {
  lengthSum.reset();
  Object(_stream__WEBPACK_IMPORTED_MODULE_3__["default"])(object, lengthStream);
  return +lengthSum;
});


/***/ }),

/***/ "./node_modules/d3-geo/src/math.js":
/*!*****************************************!*\
  !*** ./node_modules/d3-geo/src/math.js ***!
  \*****************************************/
/*! exports provided: epsilon, epsilon2, pi, halfPi, quarterPi, tau, degrees, radians, abs, atan, atan2, cos, ceil, exp, floor, log, pow, sin, sign, sqrt, tan, acos, asin, haversin */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "epsilon", function() { return epsilon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "epsilon2", function() { return epsilon2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pi", function() { return pi; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "halfPi", function() { return halfPi; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "quarterPi", function() { return quarterPi; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tau", function() { return tau; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "degrees", function() { return degrees; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "radians", function() { return radians; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "abs", function() { return abs; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "atan", function() { return atan; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "atan2", function() { return atan2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cos", function() { return cos; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ceil", function() { return ceil; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "exp", function() { return exp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "floor", function() { return floor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "log", function() { return log; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pow", function() { return pow; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sin", function() { return sin; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sign", function() { return sign; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sqrt", function() { return sqrt; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tan", function() { return tan; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "acos", function() { return acos; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "asin", function() { return asin; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "haversin", function() { return haversin; });
var epsilon = 1e-6;
var epsilon2 = 1e-12;
var pi = Math.PI;
var halfPi = pi / 2;
var quarterPi = pi / 4;
var tau = pi * 2;

var degrees = 180 / pi;
var radians = pi / 180;

var abs = Math.abs;
var atan = Math.atan;
var atan2 = Math.atan2;
var cos = Math.cos;
var ceil = Math.ceil;
var exp = Math.exp;
var floor = Math.floor;
var log = Math.log;
var pow = Math.pow;
var sin = Math.sin;
var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };
var sqrt = Math.sqrt;
var tan = Math.tan;

function acos(x) {
  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);
}

function asin(x) {
  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);
}

function haversin(x) {
  return (x = sin(x / 2)) * x;
}


/***/ }),

/***/ "./node_modules/d3-geo/src/noop.js":
/*!*****************************************!*\
  !*** ./node_modules/d3-geo/src/noop.js ***!
  \*****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return noop; });
function noop() {}


/***/ }),

/***/ "./node_modules/d3-geo/src/path/area.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-geo/src/path/area.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _adder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../adder */ "./node_modules/d3-geo/src/adder.js");
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _noop__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../noop */ "./node_modules/d3-geo/src/noop.js");




var areaSum = Object(_adder__WEBPACK_IMPORTED_MODULE_0__["default"])(),
    areaRingSum = Object(_adder__WEBPACK_IMPORTED_MODULE_0__["default"])(),
    x00,
    y00,
    x0,
    y0;

var areaStream = {
  point: _noop__WEBPACK_IMPORTED_MODULE_2__["default"],
  lineStart: _noop__WEBPACK_IMPORTED_MODULE_2__["default"],
  lineEnd: _noop__WEBPACK_IMPORTED_MODULE_2__["default"],
  polygonStart: function() {
    areaStream.lineStart = areaRingStart;
    areaStream.lineEnd = areaRingEnd;
  },
  polygonEnd: function() {
    areaStream.lineStart = areaStream.lineEnd = areaStream.point = _noop__WEBPACK_IMPORTED_MODULE_2__["default"];
    areaSum.add(Object(_math__WEBPACK_IMPORTED_MODULE_1__["abs"])(areaRingSum));
    areaRingSum.reset();
  },
  result: function() {
    var area = areaSum / 2;
    areaSum.reset();
    return area;
  }
};

function areaRingStart() {
  areaStream.point = areaPointFirst;
}

function areaPointFirst(x, y) {
  areaStream.point = areaPoint;
  x00 = x0 = x, y00 = y0 = y;
}

function areaPoint(x, y) {
  areaRingSum.add(y0 * x - x0 * y);
  x0 = x, y0 = y;
}

function areaRingEnd() {
  areaPoint(x00, y00);
}

/* harmony default export */ __webpack_exports__["default"] = (areaStream);


/***/ }),

/***/ "./node_modules/d3-geo/src/path/bounds.js":
/*!************************************************!*\
  !*** ./node_modules/d3-geo/src/path/bounds.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _noop__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../noop */ "./node_modules/d3-geo/src/noop.js");


var x0 = Infinity,
    y0 = x0,
    x1 = -x0,
    y1 = x1;

var boundsStream = {
  point: boundsPoint,
  lineStart: _noop__WEBPACK_IMPORTED_MODULE_0__["default"],
  lineEnd: _noop__WEBPACK_IMPORTED_MODULE_0__["default"],
  polygonStart: _noop__WEBPACK_IMPORTED_MODULE_0__["default"],
  polygonEnd: _noop__WEBPACK_IMPORTED_MODULE_0__["default"],
  result: function() {
    var bounds = [[x0, y0], [x1, y1]];
    x1 = y1 = -(y0 = x0 = Infinity);
    return bounds;
  }
};

function boundsPoint(x, y) {
  if (x < x0) x0 = x;
  if (x > x1) x1 = x;
  if (y < y0) y0 = y;
  if (y > y1) y1 = y;
}

/* harmony default export */ __webpack_exports__["default"] = (boundsStream);


/***/ }),

/***/ "./node_modules/d3-geo/src/path/centroid.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-geo/src/path/centroid.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");


// TODO Enforce positive area for exterior, negative area for interior?

var X0 = 0,
    Y0 = 0,
    Z0 = 0,
    X1 = 0,
    Y1 = 0,
    Z1 = 0,
    X2 = 0,
    Y2 = 0,
    Z2 = 0,
    x00,
    y00,
    x0,
    y0;

var centroidStream = {
  point: centroidPoint,
  lineStart: centroidLineStart,
  lineEnd: centroidLineEnd,
  polygonStart: function() {
    centroidStream.lineStart = centroidRingStart;
    centroidStream.lineEnd = centroidRingEnd;
  },
  polygonEnd: function() {
    centroidStream.point = centroidPoint;
    centroidStream.lineStart = centroidLineStart;
    centroidStream.lineEnd = centroidLineEnd;
  },
  result: function() {
    var centroid = Z2 ? [X2 / Z2, Y2 / Z2]
        : Z1 ? [X1 / Z1, Y1 / Z1]
        : Z0 ? [X0 / Z0, Y0 / Z0]
        : [NaN, NaN];
    X0 = Y0 = Z0 =
    X1 = Y1 = Z1 =
    X2 = Y2 = Z2 = 0;
    return centroid;
  }
};

function centroidPoint(x, y) {
  X0 += x;
  Y0 += y;
  ++Z0;
}

function centroidLineStart() {
  centroidStream.point = centroidPointFirstLine;
}

function centroidPointFirstLine(x, y) {
  centroidStream.point = centroidPointLine;
  centroidPoint(x0 = x, y0 = y);
}

function centroidPointLine(x, y) {
  var dx = x - x0, dy = y - y0, z = Object(_math__WEBPACK_IMPORTED_MODULE_0__["sqrt"])(dx * dx + dy * dy);
  X1 += z * (x0 + x) / 2;
  Y1 += z * (y0 + y) / 2;
  Z1 += z;
  centroidPoint(x0 = x, y0 = y);
}

function centroidLineEnd() {
  centroidStream.point = centroidPoint;
}

function centroidRingStart() {
  centroidStream.point = centroidPointFirstRing;
}

function centroidRingEnd() {
  centroidPointRing(x00, y00);
}

function centroidPointFirstRing(x, y) {
  centroidStream.point = centroidPointRing;
  centroidPoint(x00 = x0 = x, y00 = y0 = y);
}

function centroidPointRing(x, y) {
  var dx = x - x0,
      dy = y - y0,
      z = Object(_math__WEBPACK_IMPORTED_MODULE_0__["sqrt"])(dx * dx + dy * dy);

  X1 += z * (x0 + x) / 2;
  Y1 += z * (y0 + y) / 2;
  Z1 += z;

  z = y0 * x - x0 * y;
  X2 += z * (x0 + x);
  Y2 += z * (y0 + y);
  Z2 += z * 3;
  centroidPoint(x0 = x, y0 = y);
}

/* harmony default export */ __webpack_exports__["default"] = (centroidStream);


/***/ }),

/***/ "./node_modules/d3-geo/src/path/context.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-geo/src/path/context.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return PathContext; });
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _noop__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../noop */ "./node_modules/d3-geo/src/noop.js");



function PathContext(context) {
  this._context = context;
}

PathContext.prototype = {
  _radius: 4.5,
  pointRadius: function(_) {
    return this._radius = _, this;
  },
  polygonStart: function() {
    this._line = 0;
  },
  polygonEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._point = 0;
  },
  lineEnd: function() {
    if (this._line === 0) this._context.closePath();
    this._point = NaN;
  },
  point: function(x, y) {
    switch (this._point) {
      case 0: {
        this._context.moveTo(x, y);
        this._point = 1;
        break;
      }
      case 1: {
        this._context.lineTo(x, y);
        break;
      }
      default: {
        this._context.moveTo(x + this._radius, y);
        this._context.arc(x, y, this._radius, 0, _math__WEBPACK_IMPORTED_MODULE_0__["tau"]);
        break;
      }
    }
  },
  result: _noop__WEBPACK_IMPORTED_MODULE_1__["default"]
};


/***/ }),

/***/ "./node_modules/d3-geo/src/path/index.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-geo/src/path/index.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _identity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../identity */ "./node_modules/d3-geo/src/identity.js");
/* harmony import */ var _stream__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../stream */ "./node_modules/d3-geo/src/stream.js");
/* harmony import */ var _area__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./area */ "./node_modules/d3-geo/src/path/area.js");
/* harmony import */ var _bounds__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./bounds */ "./node_modules/d3-geo/src/path/bounds.js");
/* harmony import */ var _centroid__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./centroid */ "./node_modules/d3-geo/src/path/centroid.js");
/* harmony import */ var _context__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./context */ "./node_modules/d3-geo/src/path/context.js");
/* harmony import */ var _measure__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./measure */ "./node_modules/d3-geo/src/path/measure.js");
/* harmony import */ var _string__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./string */ "./node_modules/d3-geo/src/path/string.js");









/* harmony default export */ __webpack_exports__["default"] = (function(projection, context) {
  var pointRadius = 4.5,
      projectionStream,
      contextStream;

  function path(object) {
    if (object) {
      if (typeof pointRadius === "function") contextStream.pointRadius(+pointRadius.apply(this, arguments));
      Object(_stream__WEBPACK_IMPORTED_MODULE_1__["default"])(object, projectionStream(contextStream));
    }
    return contextStream.result();
  }

  path.area = function(object) {
    Object(_stream__WEBPACK_IMPORTED_MODULE_1__["default"])(object, projectionStream(_area__WEBPACK_IMPORTED_MODULE_2__["default"]));
    return _area__WEBPACK_IMPORTED_MODULE_2__["default"].result();
  };

  path.measure = function(object) {
    Object(_stream__WEBPACK_IMPORTED_MODULE_1__["default"])(object, projectionStream(_measure__WEBPACK_IMPORTED_MODULE_6__["default"]));
    return _measure__WEBPACK_IMPORTED_MODULE_6__["default"].result();
  };

  path.bounds = function(object) {
    Object(_stream__WEBPACK_IMPORTED_MODULE_1__["default"])(object, projectionStream(_bounds__WEBPACK_IMPORTED_MODULE_3__["default"]));
    return _bounds__WEBPACK_IMPORTED_MODULE_3__["default"].result();
  };

  path.centroid = function(object) {
    Object(_stream__WEBPACK_IMPORTED_MODULE_1__["default"])(object, projectionStream(_centroid__WEBPACK_IMPORTED_MODULE_4__["default"]));
    return _centroid__WEBPACK_IMPORTED_MODULE_4__["default"].result();
  };

  path.projection = function(_) {
    return arguments.length ? (projectionStream = _ == null ? (projection = null, _identity__WEBPACK_IMPORTED_MODULE_0__["default"]) : (projection = _).stream, path) : projection;
  };

  path.context = function(_) {
    if (!arguments.length) return context;
    contextStream = _ == null ? (context = null, new _string__WEBPACK_IMPORTED_MODULE_7__["default"]) : new _context__WEBPACK_IMPORTED_MODULE_5__["default"](context = _);
    if (typeof pointRadius !== "function") contextStream.pointRadius(pointRadius);
    return path;
  };

  path.pointRadius = function(_) {
    if (!arguments.length) return pointRadius;
    pointRadius = typeof _ === "function" ? _ : (contextStream.pointRadius(+_), +_);
    return path;
  };

  return path.projection(projection).context(context);
});


/***/ }),

/***/ "./node_modules/d3-geo/src/path/measure.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-geo/src/path/measure.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _adder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../adder */ "./node_modules/d3-geo/src/adder.js");
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _noop__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../noop */ "./node_modules/d3-geo/src/noop.js");




var lengthSum = Object(_adder__WEBPACK_IMPORTED_MODULE_0__["default"])(),
    lengthRing,
    x00,
    y00,
    x0,
    y0;

var lengthStream = {
  point: _noop__WEBPACK_IMPORTED_MODULE_2__["default"],
  lineStart: function() {
    lengthStream.point = lengthPointFirst;
  },
  lineEnd: function() {
    if (lengthRing) lengthPoint(x00, y00);
    lengthStream.point = _noop__WEBPACK_IMPORTED_MODULE_2__["default"];
  },
  polygonStart: function() {
    lengthRing = true;
  },
  polygonEnd: function() {
    lengthRing = null;
  },
  result: function() {
    var length = +lengthSum;
    lengthSum.reset();
    return length;
  }
};

function lengthPointFirst(x, y) {
  lengthStream.point = lengthPoint;
  x00 = x0 = x, y00 = y0 = y;
}

function lengthPoint(x, y) {
  x0 -= x, y0 -= y;
  lengthSum.add(Object(_math__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(x0 * x0 + y0 * y0));
  x0 = x, y0 = y;
}

/* harmony default export */ __webpack_exports__["default"] = (lengthStream);


/***/ }),

/***/ "./node_modules/d3-geo/src/path/string.js":
/*!************************************************!*\
  !*** ./node_modules/d3-geo/src/path/string.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return PathString; });
function PathString() {
  this._string = [];
}

PathString.prototype = {
  _radius: 4.5,
  _circle: circle(4.5),
  pointRadius: function(_) {
    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;
    return this;
  },
  polygonStart: function() {
    this._line = 0;
  },
  polygonEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._point = 0;
  },
  lineEnd: function() {
    if (this._line === 0) this._string.push("Z");
    this._point = NaN;
  },
  point: function(x, y) {
    switch (this._point) {
      case 0: {
        this._string.push("M", x, ",", y);
        this._point = 1;
        break;
      }
      case 1: {
        this._string.push("L", x, ",", y);
        break;
      }
      default: {
        if (this._circle == null) this._circle = circle(this._radius);
        this._string.push("M", x, ",", y, this._circle);
        break;
      }
    }
  },
  result: function() {
    if (this._string.length) {
      var result = this._string.join("");
      this._string = [];
      return result;
    } else {
      return null;
    }
  }
};

function circle(radius) {
  return "m0," + radius
      + "a" + radius + "," + radius + " 0 1,1 0," + -2 * radius
      + "a" + radius + "," + radius + " 0 1,1 0," + 2 * radius
      + "z";
}


/***/ }),

/***/ "./node_modules/d3-geo/src/pointEqual.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-geo/src/pointEqual.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./math */ "./node_modules/d3-geo/src/math.js");


/* harmony default export */ __webpack_exports__["default"] = (function(a, b) {
  return Object(_math__WEBPACK_IMPORTED_MODULE_0__["abs"])(a[0] - b[0]) < _math__WEBPACK_IMPORTED_MODULE_0__["epsilon"] && Object(_math__WEBPACK_IMPORTED_MODULE_0__["abs"])(a[1] - b[1]) < _math__WEBPACK_IMPORTED_MODULE_0__["epsilon"];
});


/***/ }),

/***/ "./node_modules/d3-geo/src/polygonContains.js":
/*!****************************************************!*\
  !*** ./node_modules/d3-geo/src/polygonContains.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _adder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./adder */ "./node_modules/d3-geo/src/adder.js");
/* harmony import */ var _cartesian__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cartesian */ "./node_modules/d3-geo/src/cartesian.js");
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./math */ "./node_modules/d3-geo/src/math.js");




var sum = Object(_adder__WEBPACK_IMPORTED_MODULE_0__["default"])();

function longitude(point) {
  if (Object(_math__WEBPACK_IMPORTED_MODULE_2__["abs"])(point[0]) <= _math__WEBPACK_IMPORTED_MODULE_2__["pi"])
    return point[0];
  else
    return Object(_math__WEBPACK_IMPORTED_MODULE_2__["sign"])(point[0]) * ((Object(_math__WEBPACK_IMPORTED_MODULE_2__["abs"])(point[0]) + _math__WEBPACK_IMPORTED_MODULE_2__["pi"]) % _math__WEBPACK_IMPORTED_MODULE_2__["tau"] - _math__WEBPACK_IMPORTED_MODULE_2__["pi"]);
}

/* harmony default export */ __webpack_exports__["default"] = (function(polygon, point) {
  var lambda = longitude(point),
      phi = point[1],
      sinPhi = Object(_math__WEBPACK_IMPORTED_MODULE_2__["sin"])(phi),
      normal = [Object(_math__WEBPACK_IMPORTED_MODULE_2__["sin"])(lambda), -Object(_math__WEBPACK_IMPORTED_MODULE_2__["cos"])(lambda), 0],
      angle = 0,
      winding = 0;

  sum.reset();

  if (sinPhi === 1) phi = _math__WEBPACK_IMPORTED_MODULE_2__["halfPi"] + _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"];
  else if (sinPhi === -1) phi = -_math__WEBPACK_IMPORTED_MODULE_2__["halfPi"] - _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"];

  for (var i = 0, n = polygon.length; i < n; ++i) {
    if (!(m = (ring = polygon[i]).length)) continue;
    var ring,
        m,
        point0 = ring[m - 1],
        lambda0 = longitude(point0),
        phi0 = point0[1] / 2 + _math__WEBPACK_IMPORTED_MODULE_2__["quarterPi"],
        sinPhi0 = Object(_math__WEBPACK_IMPORTED_MODULE_2__["sin"])(phi0),
        cosPhi0 = Object(_math__WEBPACK_IMPORTED_MODULE_2__["cos"])(phi0);

    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {
      var point1 = ring[j],
          lambda1 = longitude(point1),
          phi1 = point1[1] / 2 + _math__WEBPACK_IMPORTED_MODULE_2__["quarterPi"],
          sinPhi1 = Object(_math__WEBPACK_IMPORTED_MODULE_2__["sin"])(phi1),
          cosPhi1 = Object(_math__WEBPACK_IMPORTED_MODULE_2__["cos"])(phi1),
          delta = lambda1 - lambda0,
          sign = delta >= 0 ? 1 : -1,
          absDelta = sign * delta,
          antimeridian = absDelta > _math__WEBPACK_IMPORTED_MODULE_2__["pi"],
          k = sinPhi0 * sinPhi1;

      sum.add(Object(_math__WEBPACK_IMPORTED_MODULE_2__["atan2"])(k * sign * Object(_math__WEBPACK_IMPORTED_MODULE_2__["sin"])(absDelta), cosPhi0 * cosPhi1 + k * Object(_math__WEBPACK_IMPORTED_MODULE_2__["cos"])(absDelta)));
      angle += antimeridian ? delta + sign * _math__WEBPACK_IMPORTED_MODULE_2__["tau"] : delta;

      // Are the longitudes either side of the point’s meridian (lambda),
      // and are the latitudes smaller than the parallel (phi)?
      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {
        var arc = Object(_cartesian__WEBPACK_IMPORTED_MODULE_1__["cartesianCross"])(Object(_cartesian__WEBPACK_IMPORTED_MODULE_1__["cartesian"])(point0), Object(_cartesian__WEBPACK_IMPORTED_MODULE_1__["cartesian"])(point1));
        Object(_cartesian__WEBPACK_IMPORTED_MODULE_1__["cartesianNormalizeInPlace"])(arc);
        var intersection = Object(_cartesian__WEBPACK_IMPORTED_MODULE_1__["cartesianCross"])(normal, arc);
        Object(_cartesian__WEBPACK_IMPORTED_MODULE_1__["cartesianNormalizeInPlace"])(intersection);
        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * Object(_math__WEBPACK_IMPORTED_MODULE_2__["asin"])(intersection[2]);
        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {
          winding += antimeridian ^ delta >= 0 ? 1 : -1;
        }
      }
    }
  }

  // First, determine whether the South pole is inside or outside:
  //
  // It is inside if:
  // * the polygon winds around it in a clockwise direction.
  // * the polygon does not (cumulatively) wind around it, but has a negative
  //   (counter-clockwise) area.
  //
  // Second, count the (signed) number of times a segment crosses a lambda
  // from the point to the South pole.  If it is zero, then the point is the
  // same side as the South pole.

  return (angle < -_math__WEBPACK_IMPORTED_MODULE_2__["epsilon"] || angle < _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"] && sum < -_math__WEBPACK_IMPORTED_MODULE_2__["epsilon"]) ^ (winding & 1);
});


/***/ }),

/***/ "./node_modules/d3-geo/src/projection/albers.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/albers.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _conicEqualArea__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./conicEqualArea */ "./node_modules/d3-geo/src/projection/conicEqualArea.js");


/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(_conicEqualArea__WEBPACK_IMPORTED_MODULE_0__["default"])()
      .parallels([29.5, 45.5])
      .scale(1070)
      .translate([480, 250])
      .rotate([96, 0])
      .center([-0.6, 38.7]);
});


/***/ }),

/***/ "./node_modules/d3-geo/src/projection/albersUsa.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/albersUsa.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _albers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./albers */ "./node_modules/d3-geo/src/projection/albers.js");
/* harmony import */ var _conicEqualArea__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./conicEqualArea */ "./node_modules/d3-geo/src/projection/conicEqualArea.js");
/* harmony import */ var _fit__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./fit */ "./node_modules/d3-geo/src/projection/fit.js");





// The projections must have mutually exclusive clip regions on the sphere,
// as this will avoid emitting interleaving lines and polygons.
function multiplex(streams) {
  var n = streams.length;
  return {
    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },
    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },
    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },
    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },
    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },
    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }
  };
}

// A composite projection for the United States, configured by default for
// 960×500. The projection also works quite well at 960×600 if you change the
// scale to 1285 and adjust the translate accordingly. The set of standard
// parallels for each region comes from USGS, which is published here:
// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers
/* harmony default export */ __webpack_exports__["default"] = (function() {
  var cache,
      cacheStream,
      lower48 = Object(_albers__WEBPACK_IMPORTED_MODULE_1__["default"])(), lower48Point,
      alaska = Object(_conicEqualArea__WEBPACK_IMPORTED_MODULE_2__["default"])().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338
      hawaii = Object(_conicEqualArea__WEBPACK_IMPORTED_MODULE_2__["default"])().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007
      point, pointStream = {point: function(x, y) { point = [x, y]; }};

  function albersUsa(coordinates) {
    var x = coordinates[0], y = coordinates[1];
    return point = null,
        (lower48Point.point(x, y), point)
        || (alaskaPoint.point(x, y), point)
        || (hawaiiPoint.point(x, y), point);
  }

  albersUsa.invert = function(coordinates) {
    var k = lower48.scale(),
        t = lower48.translate(),
        x = (coordinates[0] - t[0]) / k,
        y = (coordinates[1] - t[1]) / k;
    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska
        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii
        : lower48).invert(coordinates);
  };

  albersUsa.stream = function(stream) {
    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);
  };

  albersUsa.precision = function(_) {
    if (!arguments.length) return lower48.precision();
    lower48.precision(_), alaska.precision(_), hawaii.precision(_);
    return reset();
  };

  albersUsa.scale = function(_) {
    if (!arguments.length) return lower48.scale();
    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);
    return albersUsa.translate(lower48.translate());
  };

  albersUsa.translate = function(_) {
    if (!arguments.length) return lower48.translate();
    var k = lower48.scale(), x = +_[0], y = +_[1];

    lower48Point = lower48
        .translate(_)
        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])
        .stream(pointStream);

    alaskaPoint = alaska
        .translate([x - 0.307 * k, y + 0.201 * k])
        .clipExtent([[x - 0.425 * k + _math__WEBPACK_IMPORTED_MODULE_0__["epsilon"], y + 0.120 * k + _math__WEBPACK_IMPORTED_MODULE_0__["epsilon"]], [x - 0.214 * k - _math__WEBPACK_IMPORTED_MODULE_0__["epsilon"], y + 0.234 * k - _math__WEBPACK_IMPORTED_MODULE_0__["epsilon"]]])
        .stream(pointStream);

    hawaiiPoint = hawaii
        .translate([x - 0.205 * k, y + 0.212 * k])
        .clipExtent([[x - 0.214 * k + _math__WEBPACK_IMPORTED_MODULE_0__["epsilon"], y + 0.166 * k + _math__WEBPACK_IMPORTED_MODULE_0__["epsilon"]], [x - 0.115 * k - _math__WEBPACK_IMPORTED_MODULE_0__["epsilon"], y + 0.234 * k - _math__WEBPACK_IMPORTED_MODULE_0__["epsilon"]]])
        .stream(pointStream);

    return reset();
  };

  albersUsa.fitExtent = function(extent, object) {
    return Object(_fit__WEBPACK_IMPORTED_MODULE_3__["fitExtent"])(albersUsa, extent, object);
  };

  albersUsa.fitSize = function(size, object) {
    return Object(_fit__WEBPACK_IMPORTED_MODULE_3__["fitSize"])(albersUsa, size, object);
  };

  albersUsa.fitWidth = function(width, object) {
    return Object(_fit__WEBPACK_IMPORTED_MODULE_3__["fitWidth"])(albersUsa, width, object);
  };

  albersUsa.fitHeight = function(height, object) {
    return Object(_fit__WEBPACK_IMPORTED_MODULE_3__["fitHeight"])(albersUsa, height, object);
  };

  function reset() {
    cache = cacheStream = null;
    return albersUsa;
  }

  return albersUsa.scale(1070);
});


/***/ }),

/***/ "./node_modules/d3-geo/src/projection/azimuthal.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/azimuthal.js ***!
  \*********************************************************/
/*! exports provided: azimuthalRaw, azimuthalInvert */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "azimuthalRaw", function() { return azimuthalRaw; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "azimuthalInvert", function() { return azimuthalInvert; });
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");


function azimuthalRaw(scale) {
  return function(x, y) {
    var cx = Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(x),
        cy = Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(y),
        k = scale(cx * cy);
    return [
      k * cy * Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(x),
      k * Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(y)
    ];
  }
}

function azimuthalInvert(angle) {
  return function(x, y) {
    var z = Object(_math__WEBPACK_IMPORTED_MODULE_0__["sqrt"])(x * x + y * y),
        c = angle(z),
        sc = Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(c),
        cc = Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(c);
    return [
      Object(_math__WEBPACK_IMPORTED_MODULE_0__["atan2"])(x * sc, z * cc),
      Object(_math__WEBPACK_IMPORTED_MODULE_0__["asin"])(z && y * sc / z)
    ];
  }
}


/***/ }),

/***/ "./node_modules/d3-geo/src/projection/azimuthalEqualArea.js":
/*!******************************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/azimuthalEqualArea.js ***!
  \******************************************************************/
/*! exports provided: azimuthalEqualAreaRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "azimuthalEqualAreaRaw", function() { return azimuthalEqualAreaRaw; });
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _azimuthal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./azimuthal */ "./node_modules/d3-geo/src/projection/azimuthal.js");
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index */ "./node_modules/d3-geo/src/projection/index.js");




var azimuthalEqualAreaRaw = Object(_azimuthal__WEBPACK_IMPORTED_MODULE_1__["azimuthalRaw"])(function(cxcy) {
  return Object(_math__WEBPACK_IMPORTED_MODULE_0__["sqrt"])(2 / (1 + cxcy));
});

azimuthalEqualAreaRaw.invert = Object(_azimuthal__WEBPACK_IMPORTED_MODULE_1__["azimuthalInvert"])(function(z) {
  return 2 * Object(_math__WEBPACK_IMPORTED_MODULE_0__["asin"])(z / 2);
});

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(_index__WEBPACK_IMPORTED_MODULE_2__["default"])(azimuthalEqualAreaRaw)
      .scale(124.75)
      .clipAngle(180 - 1e-3);
});


/***/ }),

/***/ "./node_modules/d3-geo/src/projection/azimuthalEquidistant.js":
/*!********************************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/azimuthalEquidistant.js ***!
  \********************************************************************/
/*! exports provided: azimuthalEquidistantRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "azimuthalEquidistantRaw", function() { return azimuthalEquidistantRaw; });
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _azimuthal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./azimuthal */ "./node_modules/d3-geo/src/projection/azimuthal.js");
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index */ "./node_modules/d3-geo/src/projection/index.js");




var azimuthalEquidistantRaw = Object(_azimuthal__WEBPACK_IMPORTED_MODULE_1__["azimuthalRaw"])(function(c) {
  return (c = Object(_math__WEBPACK_IMPORTED_MODULE_0__["acos"])(c)) && c / Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(c);
});

azimuthalEquidistantRaw.invert = Object(_azimuthal__WEBPACK_IMPORTED_MODULE_1__["azimuthalInvert"])(function(z) {
  return z;
});

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(_index__WEBPACK_IMPORTED_MODULE_2__["default"])(azimuthalEquidistantRaw)
      .scale(79.4188)
      .clipAngle(180 - 1e-3);
});


/***/ }),

/***/ "./node_modules/d3-geo/src/projection/conic.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/conic.js ***!
  \*****************************************************/
/*! exports provided: conicProjection */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "conicProjection", function() { return conicProjection; });
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index */ "./node_modules/d3-geo/src/projection/index.js");



function conicProjection(projectAt) {
  var phi0 = 0,
      phi1 = _math__WEBPACK_IMPORTED_MODULE_0__["pi"] / 3,
      m = Object(_index__WEBPACK_IMPORTED_MODULE_1__["projectionMutator"])(projectAt),
      p = m(phi0, phi1);

  p.parallels = function(_) {
    return arguments.length ? m(phi0 = _[0] * _math__WEBPACK_IMPORTED_MODULE_0__["radians"], phi1 = _[1] * _math__WEBPACK_IMPORTED_MODULE_0__["radians"]) : [phi0 * _math__WEBPACK_IMPORTED_MODULE_0__["degrees"], phi1 * _math__WEBPACK_IMPORTED_MODULE_0__["degrees"]];
  };

  return p;
}


/***/ }),

/***/ "./node_modules/d3-geo/src/projection/conicConformal.js":
/*!**************************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/conicConformal.js ***!
  \**************************************************************/
/*! exports provided: conicConformalRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "conicConformalRaw", function() { return conicConformalRaw; });
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _conic__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./conic */ "./node_modules/d3-geo/src/projection/conic.js");
/* harmony import */ var _mercator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mercator */ "./node_modules/d3-geo/src/projection/mercator.js");




function tany(y) {
  return Object(_math__WEBPACK_IMPORTED_MODULE_0__["tan"])((_math__WEBPACK_IMPORTED_MODULE_0__["halfPi"] + y) / 2);
}

function conicConformalRaw(y0, y1) {
  var cy0 = Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(y0),
      n = y0 === y1 ? Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(y0) : Object(_math__WEBPACK_IMPORTED_MODULE_0__["log"])(cy0 / Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(y1)) / Object(_math__WEBPACK_IMPORTED_MODULE_0__["log"])(tany(y1) / tany(y0)),
      f = cy0 * Object(_math__WEBPACK_IMPORTED_MODULE_0__["pow"])(tany(y0), n) / n;

  if (!n) return _mercator__WEBPACK_IMPORTED_MODULE_2__["mercatorRaw"];

  function project(x, y) {
    if (f > 0) { if (y < -_math__WEBPACK_IMPORTED_MODULE_0__["halfPi"] + _math__WEBPACK_IMPORTED_MODULE_0__["epsilon"]) y = -_math__WEBPACK_IMPORTED_MODULE_0__["halfPi"] + _math__WEBPACK_IMPORTED_MODULE_0__["epsilon"]; }
    else { if (y > _math__WEBPACK_IMPORTED_MODULE_0__["halfPi"] - _math__WEBPACK_IMPORTED_MODULE_0__["epsilon"]) y = _math__WEBPACK_IMPORTED_MODULE_0__["halfPi"] - _math__WEBPACK_IMPORTED_MODULE_0__["epsilon"]; }
    var r = f / Object(_math__WEBPACK_IMPORTED_MODULE_0__["pow"])(tany(y), n);
    return [r * Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(n * x), f - r * Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(n * x)];
  }

  project.invert = function(x, y) {
    var fy = f - y, r = Object(_math__WEBPACK_IMPORTED_MODULE_0__["sign"])(n) * Object(_math__WEBPACK_IMPORTED_MODULE_0__["sqrt"])(x * x + fy * fy);
    return [Object(_math__WEBPACK_IMPORTED_MODULE_0__["atan2"])(x, Object(_math__WEBPACK_IMPORTED_MODULE_0__["abs"])(fy)) / n * Object(_math__WEBPACK_IMPORTED_MODULE_0__["sign"])(fy), 2 * Object(_math__WEBPACK_IMPORTED_MODULE_0__["atan"])(Object(_math__WEBPACK_IMPORTED_MODULE_0__["pow"])(f / r, 1 / n)) - _math__WEBPACK_IMPORTED_MODULE_0__["halfPi"]];
  };

  return project;
}

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(_conic__WEBPACK_IMPORTED_MODULE_1__["conicProjection"])(conicConformalRaw)
      .scale(109.5)
      .parallels([30, 30]);
});


/***/ }),

/***/ "./node_modules/d3-geo/src/projection/conicEqualArea.js":
/*!**************************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/conicEqualArea.js ***!
  \**************************************************************/
/*! exports provided: conicEqualAreaRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "conicEqualAreaRaw", function() { return conicEqualAreaRaw; });
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _conic__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./conic */ "./node_modules/d3-geo/src/projection/conic.js");
/* harmony import */ var _cylindricalEqualArea__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cylindricalEqualArea */ "./node_modules/d3-geo/src/projection/cylindricalEqualArea.js");




function conicEqualAreaRaw(y0, y1) {
  var sy0 = Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(y0), n = (sy0 + Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(y1)) / 2;

  // Are the parallels symmetrical around the Equator?
  if (Object(_math__WEBPACK_IMPORTED_MODULE_0__["abs"])(n) < _math__WEBPACK_IMPORTED_MODULE_0__["epsilon"]) return Object(_cylindricalEqualArea__WEBPACK_IMPORTED_MODULE_2__["cylindricalEqualAreaRaw"])(y0);

  var c = 1 + sy0 * (2 * n - sy0), r0 = Object(_math__WEBPACK_IMPORTED_MODULE_0__["sqrt"])(c) / n;

  function project(x, y) {
    var r = Object(_math__WEBPACK_IMPORTED_MODULE_0__["sqrt"])(c - 2 * n * Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(y)) / n;
    return [r * Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(x *= n), r0 - r * Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(x)];
  }

  project.invert = function(x, y) {
    var r0y = r0 - y;
    return [Object(_math__WEBPACK_IMPORTED_MODULE_0__["atan2"])(x, Object(_math__WEBPACK_IMPORTED_MODULE_0__["abs"])(r0y)) / n * Object(_math__WEBPACK_IMPORTED_MODULE_0__["sign"])(r0y), Object(_math__WEBPACK_IMPORTED_MODULE_0__["asin"])((c - (x * x + r0y * r0y) * n * n) / (2 * n))];
  };

  return project;
}

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(_conic__WEBPACK_IMPORTED_MODULE_1__["conicProjection"])(conicEqualAreaRaw)
      .scale(155.424)
      .center([0, 33.6442]);
});


/***/ }),

/***/ "./node_modules/d3-geo/src/projection/conicEquidistant.js":
/*!****************************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/conicEquidistant.js ***!
  \****************************************************************/
/*! exports provided: conicEquidistantRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "conicEquidistantRaw", function() { return conicEquidistantRaw; });
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _conic__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./conic */ "./node_modules/d3-geo/src/projection/conic.js");
/* harmony import */ var _equirectangular__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./equirectangular */ "./node_modules/d3-geo/src/projection/equirectangular.js");




function conicEquidistantRaw(y0, y1) {
  var cy0 = Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(y0),
      n = y0 === y1 ? Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(y0) : (cy0 - Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(y1)) / (y1 - y0),
      g = cy0 / n + y0;

  if (Object(_math__WEBPACK_IMPORTED_MODULE_0__["abs"])(n) < _math__WEBPACK_IMPORTED_MODULE_0__["epsilon"]) return _equirectangular__WEBPACK_IMPORTED_MODULE_2__["equirectangularRaw"];

  function project(x, y) {
    var gy = g - y, nx = n * x;
    return [gy * Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(nx), g - gy * Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(nx)];
  }

  project.invert = function(x, y) {
    var gy = g - y;
    return [Object(_math__WEBPACK_IMPORTED_MODULE_0__["atan2"])(x, Object(_math__WEBPACK_IMPORTED_MODULE_0__["abs"])(gy)) / n * Object(_math__WEBPACK_IMPORTED_MODULE_0__["sign"])(gy), g - Object(_math__WEBPACK_IMPORTED_MODULE_0__["sign"])(n) * Object(_math__WEBPACK_IMPORTED_MODULE_0__["sqrt"])(x * x + gy * gy)];
  };

  return project;
}

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(_conic__WEBPACK_IMPORTED_MODULE_1__["conicProjection"])(conicEquidistantRaw)
      .scale(131.154)
      .center([0, 13.9389]);
});


/***/ }),

/***/ "./node_modules/d3-geo/src/projection/cylindricalEqualArea.js":
/*!********************************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/cylindricalEqualArea.js ***!
  \********************************************************************/
/*! exports provided: cylindricalEqualAreaRaw */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cylindricalEqualAreaRaw", function() { return cylindricalEqualAreaRaw; });
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");


function cylindricalEqualAreaRaw(phi0) {
  var cosPhi0 = Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(phi0);

  function forward(lambda, phi) {
    return [lambda * cosPhi0, Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(phi) / cosPhi0];
  }

  forward.invert = function(x, y) {
    return [x / cosPhi0, Object(_math__WEBPACK_IMPORTED_MODULE_0__["asin"])(y * cosPhi0)];
  };

  return forward;
}


/***/ }),

/***/ "./node_modules/d3-geo/src/projection/equalEarth.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/equalEarth.js ***!
  \**********************************************************/
/*! exports provided: equalEarthRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "equalEarthRaw", function() { return equalEarthRaw; });
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.js */ "./node_modules/d3-geo/src/projection/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../math.js */ "./node_modules/d3-geo/src/math.js");



var A1 = 1.340264,
    A2 = -0.081106,
    A3 = 0.000893,
    A4 = 0.003796,
    M = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(3) / 2,
    iterations = 12;

function equalEarthRaw(lambda, phi) {
  var l = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["asin"])(M * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi)), l2 = l * l, l6 = l2 * l2 * l2;
  return [
    lambda * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))),
    l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))
  ];
}

equalEarthRaw.invert = function(x, y) {
  var l = y, l2 = l * l, l6 = l2 * l2 * l2;
  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {
    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;
    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);
    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;
    if (Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(delta) < _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon2"]) break;
  }
  return [
    M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(l),
    Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["asin"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(l) / M)
  ];
};

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(equalEarthRaw)
      .scale(177.158);
});


/***/ }),

/***/ "./node_modules/d3-geo/src/projection/equirectangular.js":
/*!***************************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/equirectangular.js ***!
  \***************************************************************/
/*! exports provided: equirectangularRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "equirectangularRaw", function() { return equirectangularRaw; });
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index */ "./node_modules/d3-geo/src/projection/index.js");


function equirectangularRaw(lambda, phi) {
  return [lambda, phi];
}

equirectangularRaw.invert = equirectangularRaw;

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(_index__WEBPACK_IMPORTED_MODULE_0__["default"])(equirectangularRaw)
      .scale(152.63);
});


/***/ }),

/***/ "./node_modules/d3-geo/src/projection/fit.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/fit.js ***!
  \***************************************************/
/*! exports provided: fitExtent, fitSize, fitWidth, fitHeight */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fitExtent", function() { return fitExtent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fitSize", function() { return fitSize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fitWidth", function() { return fitWidth; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fitHeight", function() { return fitHeight; });
/* harmony import */ var _stream__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../stream */ "./node_modules/d3-geo/src/stream.js");
/* harmony import */ var _path_bounds__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../path/bounds */ "./node_modules/d3-geo/src/path/bounds.js");



function fit(projection, fitBounds, object) {
  var clip = projection.clipExtent && projection.clipExtent();
  projection.scale(150).translate([0, 0]);
  if (clip != null) projection.clipExtent(null);
  Object(_stream__WEBPACK_IMPORTED_MODULE_0__["default"])(object, projection.stream(_path_bounds__WEBPACK_IMPORTED_MODULE_1__["default"]));
  fitBounds(_path_bounds__WEBPACK_IMPORTED_MODULE_1__["default"].result());
  if (clip != null) projection.clipExtent(clip);
  return projection;
}

function fitExtent(projection, extent, object) {
  return fit(projection, function(b) {
    var w = extent[1][0] - extent[0][0],
        h = extent[1][1] - extent[0][1],
        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),
        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,
        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;
    projection.scale(150 * k).translate([x, y]);
  }, object);
}

function fitSize(projection, size, object) {
  return fitExtent(projection, [[0, 0], size], object);
}

function fitWidth(projection, width, object) {
  return fit(projection, function(b) {
    var w = +width,
        k = w / (b[1][0] - b[0][0]),
        x = (w - k * (b[1][0] + b[0][0])) / 2,
        y = -k * b[0][1];
    projection.scale(150 * k).translate([x, y]);
  }, object);
}

function fitHeight(projection, height, object) {
  return fit(projection, function(b) {
    var h = +height,
        k = h / (b[1][1] - b[0][1]),
        x = -k * b[0][0],
        y = (h - k * (b[1][1] + b[0][1])) / 2;
    projection.scale(150 * k).translate([x, y]);
  }, object);
}


/***/ }),

/***/ "./node_modules/d3-geo/src/projection/gnomonic.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/gnomonic.js ***!
  \********************************************************/
/*! exports provided: gnomonicRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "gnomonicRaw", function() { return gnomonicRaw; });
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _azimuthal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./azimuthal */ "./node_modules/d3-geo/src/projection/azimuthal.js");
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index */ "./node_modules/d3-geo/src/projection/index.js");




function gnomonicRaw(x, y) {
  var cy = Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(y), k = Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(x) * cy;
  return [cy * Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(x) / k, Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(y) / k];
}

gnomonicRaw.invert = Object(_azimuthal__WEBPACK_IMPORTED_MODULE_1__["azimuthalInvert"])(_math__WEBPACK_IMPORTED_MODULE_0__["atan"]);

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(_index__WEBPACK_IMPORTED_MODULE_2__["default"])(gnomonicRaw)
      .scale(144.049)
      .clipAngle(60);
});


/***/ }),

/***/ "./node_modules/d3-geo/src/projection/identity.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/identity.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _clip_rectangle__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../clip/rectangle */ "./node_modules/d3-geo/src/clip/rectangle.js");
/* harmony import */ var _identity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../identity */ "./node_modules/d3-geo/src/identity.js");
/* harmony import */ var _transform__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../transform */ "./node_modules/d3-geo/src/transform.js");
/* harmony import */ var _fit__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./fit */ "./node_modules/d3-geo/src/projection/fit.js");





function scaleTranslate(kx, ky, tx, ty) {
  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? _identity__WEBPACK_IMPORTED_MODULE_1__["default"] : Object(_transform__WEBPACK_IMPORTED_MODULE_2__["transformer"])({
    point: function(x, y) {
      this.stream.point(x * kx + tx, y * ky + ty);
    }
  });
}

/* harmony default export */ __webpack_exports__["default"] = (function() {
  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = _identity__WEBPACK_IMPORTED_MODULE_1__["default"], // scale, translate and reflect
      x0 = null, y0, x1, y1, // clip extent
      postclip = _identity__WEBPACK_IMPORTED_MODULE_1__["default"],
      cache,
      cacheStream,
      projection;

  function reset() {
    cache = cacheStream = null;
    return projection;
  }

  return projection = {
    stream: function(stream) {
      return cache && cacheStream === stream ? cache : cache = transform(postclip(cacheStream = stream));
    },
    postclip: function(_) {
      return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;
    },
    clipExtent: function(_) {
      return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, _identity__WEBPACK_IMPORTED_MODULE_1__["default"]) : Object(_clip_rectangle__WEBPACK_IMPORTED_MODULE_0__["default"])(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];
    },
    scale: function(_) {
      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;
    },
    translate: function(_) {
      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];
    },
    reflectX: function(_) {
      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;
    },
    reflectY: function(_) {
      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;
    },
    fitExtent: function(extent, object) {
      return Object(_fit__WEBPACK_IMPORTED_MODULE_3__["fitExtent"])(projection, extent, object);
    },
    fitSize: function(size, object) {
      return Object(_fit__WEBPACK_IMPORTED_MODULE_3__["fitSize"])(projection, size, object);
    },
    fitWidth: function(width, object) {
      return Object(_fit__WEBPACK_IMPORTED_MODULE_3__["fitWidth"])(projection, width, object);
    },
    fitHeight: function(height, object) {
      return Object(_fit__WEBPACK_IMPORTED_MODULE_3__["fitHeight"])(projection, height, object);
    }
  };
});


/***/ }),

/***/ "./node_modules/d3-geo/src/projection/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/index.js ***!
  \*****************************************************/
/*! exports provided: default, projectionMutator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return projection; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "projectionMutator", function() { return projectionMutator; });
/* harmony import */ var _clip_antimeridian__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../clip/antimeridian */ "./node_modules/d3-geo/src/clip/antimeridian.js");
/* harmony import */ var _clip_circle__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../clip/circle */ "./node_modules/d3-geo/src/clip/circle.js");
/* harmony import */ var _clip_rectangle__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../clip/rectangle */ "./node_modules/d3-geo/src/clip/rectangle.js");
/* harmony import */ var _compose__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../compose */ "./node_modules/d3-geo/src/compose.js");
/* harmony import */ var _identity__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../identity */ "./node_modules/d3-geo/src/identity.js");
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _rotation__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../rotation */ "./node_modules/d3-geo/src/rotation.js");
/* harmony import */ var _transform__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../transform */ "./node_modules/d3-geo/src/transform.js");
/* harmony import */ var _fit__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./fit */ "./node_modules/d3-geo/src/projection/fit.js");
/* harmony import */ var _resample__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./resample */ "./node_modules/d3-geo/src/projection/resample.js");











var transformRadians = Object(_transform__WEBPACK_IMPORTED_MODULE_7__["transformer"])({
  point: function(x, y) {
    this.stream.point(x * _math__WEBPACK_IMPORTED_MODULE_5__["radians"], y * _math__WEBPACK_IMPORTED_MODULE_5__["radians"]);
  }
});

function transformRotate(rotate) {
  return Object(_transform__WEBPACK_IMPORTED_MODULE_7__["transformer"])({
    point: function(x, y) {
      var r = rotate(x, y);
      return this.stream.point(r[0], r[1]);
    }
  });
}

function scaleTranslate(k, dx, dy) {
  function transform(x, y) {
    return [dx + k * x, dy - k * y];
  }
  transform.invert = function(x, y) {
    return [(x - dx) / k, (dy - y) / k];
  };
  return transform;
}

function scaleTranslateRotate(k, dx, dy, alpha) {
  var cosAlpha = Object(_math__WEBPACK_IMPORTED_MODULE_5__["cos"])(alpha),
      sinAlpha = Object(_math__WEBPACK_IMPORTED_MODULE_5__["sin"])(alpha),
      a = cosAlpha * k,
      b = sinAlpha * k,
      ai = cosAlpha / k,
      bi = sinAlpha / k,
      ci = (sinAlpha * dy - cosAlpha * dx) / k,
      fi = (sinAlpha * dx + cosAlpha * dy) / k;
  function transform(x, y) {
    return [a * x - b * y + dx, dy - b * x - a * y];
  }
  transform.invert = function(x, y) {
    return [ai * x - bi * y + ci, fi - bi * x - ai * y];
  };
  return transform;
}

function projection(project) {
  return projectionMutator(function() { return project; })();
}

function projectionMutator(projectAt) {
  var project,
      k = 150, // scale
      x = 480, y = 250, // translate
      lambda = 0, phi = 0, // center
      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate
      alpha = 0, // post-rotate
      theta = null, preclip = _clip_antimeridian__WEBPACK_IMPORTED_MODULE_0__["default"], // pre-clip angle
      x0 = null, y0, x1, y1, postclip = _identity__WEBPACK_IMPORTED_MODULE_4__["default"], // post-clip extent
      delta2 = 0.5, // precision
      projectResample,
      projectTransform,
      projectRotateTransform,
      cache,
      cacheStream;

  function projection(point) {
    return projectRotateTransform(point[0] * _math__WEBPACK_IMPORTED_MODULE_5__["radians"], point[1] * _math__WEBPACK_IMPORTED_MODULE_5__["radians"]);
  }

  function invert(point) {
    point = projectRotateTransform.invert(point[0], point[1]);
    return point && [point[0] * _math__WEBPACK_IMPORTED_MODULE_5__["degrees"], point[1] * _math__WEBPACK_IMPORTED_MODULE_5__["degrees"]];
  }

  projection.stream = function(stream) {
    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));
  };

  projection.preclip = function(_) {
    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;
  };

  projection.postclip = function(_) {
    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;
  };

  projection.clipAngle = function(_) {
    return arguments.length ? (preclip = +_ ? Object(_clip_circle__WEBPACK_IMPORTED_MODULE_1__["default"])(theta = _ * _math__WEBPACK_IMPORTED_MODULE_5__["radians"]) : (theta = null, _clip_antimeridian__WEBPACK_IMPORTED_MODULE_0__["default"]), reset()) : theta * _math__WEBPACK_IMPORTED_MODULE_5__["degrees"];
  };

  projection.clipExtent = function(_) {
    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, _identity__WEBPACK_IMPORTED_MODULE_4__["default"]) : Object(_clip_rectangle__WEBPACK_IMPORTED_MODULE_2__["default"])(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];
  };

  projection.scale = function(_) {
    return arguments.length ? (k = +_, recenter()) : k;
  };

  projection.translate = function(_) {
    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];
  };

  projection.center = function(_) {
    return arguments.length ? (lambda = _[0] % 360 * _math__WEBPACK_IMPORTED_MODULE_5__["radians"], phi = _[1] % 360 * _math__WEBPACK_IMPORTED_MODULE_5__["radians"], recenter()) : [lambda * _math__WEBPACK_IMPORTED_MODULE_5__["degrees"], phi * _math__WEBPACK_IMPORTED_MODULE_5__["degrees"]];
  };

  projection.rotate = function(_) {
    return arguments.length ? (deltaLambda = _[0] % 360 * _math__WEBPACK_IMPORTED_MODULE_5__["radians"], deltaPhi = _[1] % 360 * _math__WEBPACK_IMPORTED_MODULE_5__["radians"], deltaGamma = _.length > 2 ? _[2] % 360 * _math__WEBPACK_IMPORTED_MODULE_5__["radians"] : 0, recenter()) : [deltaLambda * _math__WEBPACK_IMPORTED_MODULE_5__["degrees"], deltaPhi * _math__WEBPACK_IMPORTED_MODULE_5__["degrees"], deltaGamma * _math__WEBPACK_IMPORTED_MODULE_5__["degrees"]];
  };

  projection.angle = function(_) {
    return arguments.length ? (alpha = _ % 360 * _math__WEBPACK_IMPORTED_MODULE_5__["radians"], recenter()) : alpha * _math__WEBPACK_IMPORTED_MODULE_5__["degrees"];
  };

  projection.precision = function(_) {
    return arguments.length ? (projectResample = Object(_resample__WEBPACK_IMPORTED_MODULE_9__["default"])(projectTransform, delta2 = _ * _), reset()) : Object(_math__WEBPACK_IMPORTED_MODULE_5__["sqrt"])(delta2);
  };

  projection.fitExtent = function(extent, object) {
    return Object(_fit__WEBPACK_IMPORTED_MODULE_8__["fitExtent"])(projection, extent, object);
  };

  projection.fitSize = function(size, object) {
    return Object(_fit__WEBPACK_IMPORTED_MODULE_8__["fitSize"])(projection, size, object);
  };

  projection.fitWidth = function(width, object) {
    return Object(_fit__WEBPACK_IMPORTED_MODULE_8__["fitWidth"])(projection, width, object);
  };

  projection.fitHeight = function(height, object) {
    return Object(_fit__WEBPACK_IMPORTED_MODULE_8__["fitHeight"])(projection, height, object);
  };

  function recenter() {
    var center = scaleTranslateRotate(k, 0, 0, alpha).apply(null, project(lambda, phi)),
        transform = (alpha ? scaleTranslateRotate : scaleTranslate)(k, x - center[0], y - center[1], alpha);
    rotate = Object(_rotation__WEBPACK_IMPORTED_MODULE_6__["rotateRadians"])(deltaLambda, deltaPhi, deltaGamma);
    projectTransform = Object(_compose__WEBPACK_IMPORTED_MODULE_3__["default"])(project, transform);
    projectRotateTransform = Object(_compose__WEBPACK_IMPORTED_MODULE_3__["default"])(rotate, projectTransform);
    projectResample = Object(_resample__WEBPACK_IMPORTED_MODULE_9__["default"])(projectTransform, delta2);
    return reset();
  }

  function reset() {
    cache = cacheStream = null;
    return projection;
  }

  return function() {
    project = projectAt.apply(this, arguments);
    projection.invert = project.invert && invert;
    return recenter();
  };
}


/***/ }),

/***/ "./node_modules/d3-geo/src/projection/mercator.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/mercator.js ***!
  \********************************************************/
/*! exports provided: mercatorRaw, default, mercatorProjection */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mercatorRaw", function() { return mercatorRaw; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mercatorProjection", function() { return mercatorProjection; });
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _rotation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../rotation */ "./node_modules/d3-geo/src/rotation.js");
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index */ "./node_modules/d3-geo/src/projection/index.js");




function mercatorRaw(lambda, phi) {
  return [lambda, Object(_math__WEBPACK_IMPORTED_MODULE_0__["log"])(Object(_math__WEBPACK_IMPORTED_MODULE_0__["tan"])((_math__WEBPACK_IMPORTED_MODULE_0__["halfPi"] + phi) / 2))];
}

mercatorRaw.invert = function(x, y) {
  return [x, 2 * Object(_math__WEBPACK_IMPORTED_MODULE_0__["atan"])(Object(_math__WEBPACK_IMPORTED_MODULE_0__["exp"])(y)) - _math__WEBPACK_IMPORTED_MODULE_0__["halfPi"]];
};

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return mercatorProjection(mercatorRaw)
      .scale(961 / _math__WEBPACK_IMPORTED_MODULE_0__["tau"]);
});

function mercatorProjection(project) {
  var m = Object(_index__WEBPACK_IMPORTED_MODULE_2__["default"])(project),
      center = m.center,
      scale = m.scale,
      translate = m.translate,
      clipExtent = m.clipExtent,
      x0 = null, y0, x1, y1; // clip extent

  m.scale = function(_) {
    return arguments.length ? (scale(_), reclip()) : scale();
  };

  m.translate = function(_) {
    return arguments.length ? (translate(_), reclip()) : translate();
  };

  m.center = function(_) {
    return arguments.length ? (center(_), reclip()) : center();
  };

  m.clipExtent = function(_) {
    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];
  };

  function reclip() {
    var k = _math__WEBPACK_IMPORTED_MODULE_0__["pi"] * scale(),
        t = m(Object(_rotation__WEBPACK_IMPORTED_MODULE_1__["default"])(m.rotate()).invert([0, 0]));
    return clipExtent(x0 == null
        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw
        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]
        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);
  }

  return reclip();
}


/***/ }),

/***/ "./node_modules/d3-geo/src/projection/naturalEarth1.js":
/*!*************************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/naturalEarth1.js ***!
  \*************************************************************/
/*! exports provided: naturalEarth1Raw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "naturalEarth1Raw", function() { return naturalEarth1Raw; });
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index */ "./node_modules/d3-geo/src/projection/index.js");
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");



function naturalEarth1Raw(lambda, phi) {
  var phi2 = phi * phi, phi4 = phi2 * phi2;
  return [
    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),
    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))
  ];
}

naturalEarth1Raw.invert = function(x, y) {
  var phi = y, i = 25, delta;
  do {
    var phi2 = phi * phi, phi4 = phi2 * phi2;
    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /
        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));
  } while (Object(_math__WEBPACK_IMPORTED_MODULE_1__["abs"])(delta) > _math__WEBPACK_IMPORTED_MODULE_1__["epsilon"] && --i > 0);
  return [
    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),
    phi
  ];
};

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(_index__WEBPACK_IMPORTED_MODULE_0__["default"])(naturalEarth1Raw)
      .scale(175.295);
});


/***/ }),

/***/ "./node_modules/d3-geo/src/projection/orthographic.js":
/*!************************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/orthographic.js ***!
  \************************************************************/
/*! exports provided: orthographicRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "orthographicRaw", function() { return orthographicRaw; });
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _azimuthal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./azimuthal */ "./node_modules/d3-geo/src/projection/azimuthal.js");
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index */ "./node_modules/d3-geo/src/projection/index.js");




function orthographicRaw(x, y) {
  return [Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(y) * Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(x), Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(y)];
}

orthographicRaw.invert = Object(_azimuthal__WEBPACK_IMPORTED_MODULE_1__["azimuthalInvert"])(_math__WEBPACK_IMPORTED_MODULE_0__["asin"]);

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(_index__WEBPACK_IMPORTED_MODULE_2__["default"])(orthographicRaw)
      .scale(249.5)
      .clipAngle(90 + _math__WEBPACK_IMPORTED_MODULE_0__["epsilon"]);
});


/***/ }),

/***/ "./node_modules/d3-geo/src/projection/resample.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/resample.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _cartesian__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cartesian */ "./node_modules/d3-geo/src/cartesian.js");
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _transform__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../transform */ "./node_modules/d3-geo/src/transform.js");




var maxDepth = 16, // maximum depth of subdivision
    cosMinDistance = Object(_math__WEBPACK_IMPORTED_MODULE_1__["cos"])(30 * _math__WEBPACK_IMPORTED_MODULE_1__["radians"]); // cos(minimum angular distance)

/* harmony default export */ __webpack_exports__["default"] = (function(project, delta2) {
  return +delta2 ? resample(project, delta2) : resampleNone(project);
});

function resampleNone(project) {
  return Object(_transform__WEBPACK_IMPORTED_MODULE_2__["transformer"])({
    point: function(x, y) {
      x = project(x, y);
      this.stream.point(x[0], x[1]);
    }
  });
}

function resample(project, delta2) {

  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {
    var dx = x1 - x0,
        dy = y1 - y0,
        d2 = dx * dx + dy * dy;
    if (d2 > 4 * delta2 && depth--) {
      var a = a0 + a1,
          b = b0 + b1,
          c = c0 + c1,
          m = Object(_math__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(a * a + b * b + c * c),
          phi2 = Object(_math__WEBPACK_IMPORTED_MODULE_1__["asin"])(c /= m),
          lambda2 = Object(_math__WEBPACK_IMPORTED_MODULE_1__["abs"])(Object(_math__WEBPACK_IMPORTED_MODULE_1__["abs"])(c) - 1) < _math__WEBPACK_IMPORTED_MODULE_1__["epsilon"] || Object(_math__WEBPACK_IMPORTED_MODULE_1__["abs"])(lambda0 - lambda1) < _math__WEBPACK_IMPORTED_MODULE_1__["epsilon"] ? (lambda0 + lambda1) / 2 : Object(_math__WEBPACK_IMPORTED_MODULE_1__["atan2"])(b, a),
          p = project(lambda2, phi2),
          x2 = p[0],
          y2 = p[1],
          dx2 = x2 - x0,
          dy2 = y2 - y0,
          dz = dy * dx2 - dx * dy2;
      if (dz * dz / d2 > delta2 // perpendicular projected distance
          || Object(_math__WEBPACK_IMPORTED_MODULE_1__["abs"])((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end
          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance
        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);
        stream.point(x2, y2);
        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);
      }
    }
  }
  return function(stream) {
    var lambda00, x00, y00, a00, b00, c00, // first point
        lambda0, x0, y0, a0, b0, c0; // previous point

    var resampleStream = {
      point: point,
      lineStart: lineStart,
      lineEnd: lineEnd,
      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },
      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }
    };

    function point(x, y) {
      x = project(x, y);
      stream.point(x[0], x[1]);
    }

    function lineStart() {
      x0 = NaN;
      resampleStream.point = linePoint;
      stream.lineStart();
    }

    function linePoint(lambda, phi) {
      var c = Object(_cartesian__WEBPACK_IMPORTED_MODULE_0__["cartesian"])([lambda, phi]), p = project(lambda, phi);
      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);
      stream.point(x0, y0);
    }

    function lineEnd() {
      resampleStream.point = point;
      stream.lineEnd();
    }

    function ringStart() {
      lineStart();
      resampleStream.point = ringPoint;
      resampleStream.lineEnd = ringEnd;
    }

    function ringPoint(lambda, phi) {
      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;
      resampleStream.point = linePoint;
    }

    function ringEnd() {
      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);
      resampleStream.lineEnd = lineEnd;
      lineEnd();
    }

    return resampleStream;
  };
}


/***/ }),

/***/ "./node_modules/d3-geo/src/projection/stereographic.js":
/*!*************************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/stereographic.js ***!
  \*************************************************************/
/*! exports provided: stereographicRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "stereographicRaw", function() { return stereographicRaw; });
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _azimuthal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./azimuthal */ "./node_modules/d3-geo/src/projection/azimuthal.js");
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index */ "./node_modules/d3-geo/src/projection/index.js");




function stereographicRaw(x, y) {
  var cy = Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(y), k = 1 + Object(_math__WEBPACK_IMPORTED_MODULE_0__["cos"])(x) * cy;
  return [cy * Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(x) / k, Object(_math__WEBPACK_IMPORTED_MODULE_0__["sin"])(y) / k];
}

stereographicRaw.invert = Object(_azimuthal__WEBPACK_IMPORTED_MODULE_1__["azimuthalInvert"])(function(z) {
  return 2 * Object(_math__WEBPACK_IMPORTED_MODULE_0__["atan"])(z);
});

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(_index__WEBPACK_IMPORTED_MODULE_2__["default"])(stereographicRaw)
      .scale(250)
      .clipAngle(142);
});


/***/ }),

/***/ "./node_modules/d3-geo/src/projection/transverseMercator.js":
/*!******************************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/transverseMercator.js ***!
  \******************************************************************/
/*! exports provided: transverseMercatorRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transverseMercatorRaw", function() { return transverseMercatorRaw; });
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _mercator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mercator */ "./node_modules/d3-geo/src/projection/mercator.js");



function transverseMercatorRaw(lambda, phi) {
  return [Object(_math__WEBPACK_IMPORTED_MODULE_0__["log"])(Object(_math__WEBPACK_IMPORTED_MODULE_0__["tan"])((_math__WEBPACK_IMPORTED_MODULE_0__["halfPi"] + phi) / 2)), -lambda];
}

transverseMercatorRaw.invert = function(x, y) {
  return [-y, 2 * Object(_math__WEBPACK_IMPORTED_MODULE_0__["atan"])(Object(_math__WEBPACK_IMPORTED_MODULE_0__["exp"])(x)) - _math__WEBPACK_IMPORTED_MODULE_0__["halfPi"]];
};

/* harmony default export */ __webpack_exports__["default"] = (function() {
  var m = Object(_mercator__WEBPACK_IMPORTED_MODULE_1__["mercatorProjection"])(transverseMercatorRaw),
      center = m.center,
      rotate = m.rotate;

  m.center = function(_) {
    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);
  };

  m.rotate = function(_) {
    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);
  };

  return rotate([0, 0, 90])
      .scale(159.155);
});


/***/ }),

/***/ "./node_modules/d3-geo/src/rotation.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-geo/src/rotation.js ***!
  \*********************************************/
/*! exports provided: rotateRadians, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rotateRadians", function() { return rotateRadians; });
/* harmony import */ var _compose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./compose */ "./node_modules/d3-geo/src/compose.js");
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math */ "./node_modules/d3-geo/src/math.js");



function rotationIdentity(lambda, phi) {
  return [Object(_math__WEBPACK_IMPORTED_MODULE_1__["abs"])(lambda) > _math__WEBPACK_IMPORTED_MODULE_1__["pi"] ? lambda + Math.round(-lambda / _math__WEBPACK_IMPORTED_MODULE_1__["tau"]) * _math__WEBPACK_IMPORTED_MODULE_1__["tau"] : lambda, phi];
}

rotationIdentity.invert = rotationIdentity;

function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {
  return (deltaLambda %= _math__WEBPACK_IMPORTED_MODULE_1__["tau"]) ? (deltaPhi || deltaGamma ? Object(_compose__WEBPACK_IMPORTED_MODULE_0__["default"])(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))
    : rotationLambda(deltaLambda))
    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)
    : rotationIdentity);
}

function forwardRotationLambda(deltaLambda) {
  return function(lambda, phi) {
    return lambda += deltaLambda, [lambda > _math__WEBPACK_IMPORTED_MODULE_1__["pi"] ? lambda - _math__WEBPACK_IMPORTED_MODULE_1__["tau"] : lambda < -_math__WEBPACK_IMPORTED_MODULE_1__["pi"] ? lambda + _math__WEBPACK_IMPORTED_MODULE_1__["tau"] : lambda, phi];
  };
}

function rotationLambda(deltaLambda) {
  var rotation = forwardRotationLambda(deltaLambda);
  rotation.invert = forwardRotationLambda(-deltaLambda);
  return rotation;
}

function rotationPhiGamma(deltaPhi, deltaGamma) {
  var cosDeltaPhi = Object(_math__WEBPACK_IMPORTED_MODULE_1__["cos"])(deltaPhi),
      sinDeltaPhi = Object(_math__WEBPACK_IMPORTED_MODULE_1__["sin"])(deltaPhi),
      cosDeltaGamma = Object(_math__WEBPACK_IMPORTED_MODULE_1__["cos"])(deltaGamma),
      sinDeltaGamma = Object(_math__WEBPACK_IMPORTED_MODULE_1__["sin"])(deltaGamma);

  function rotation(lambda, phi) {
    var cosPhi = Object(_math__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi),
        x = Object(_math__WEBPACK_IMPORTED_MODULE_1__["cos"])(lambda) * cosPhi,
        y = Object(_math__WEBPACK_IMPORTED_MODULE_1__["sin"])(lambda) * cosPhi,
        z = Object(_math__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi),
        k = z * cosDeltaPhi + x * sinDeltaPhi;
    return [
      Object(_math__WEBPACK_IMPORTED_MODULE_1__["atan2"])(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),
      Object(_math__WEBPACK_IMPORTED_MODULE_1__["asin"])(k * cosDeltaGamma + y * sinDeltaGamma)
    ];
  }

  rotation.invert = function(lambda, phi) {
    var cosPhi = Object(_math__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi),
        x = Object(_math__WEBPACK_IMPORTED_MODULE_1__["cos"])(lambda) * cosPhi,
        y = Object(_math__WEBPACK_IMPORTED_MODULE_1__["sin"])(lambda) * cosPhi,
        z = Object(_math__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi),
        k = z * cosDeltaGamma - y * sinDeltaGamma;
    return [
      Object(_math__WEBPACK_IMPORTED_MODULE_1__["atan2"])(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),
      Object(_math__WEBPACK_IMPORTED_MODULE_1__["asin"])(k * cosDeltaPhi - x * sinDeltaPhi)
    ];
  };

  return rotation;
}

/* harmony default export */ __webpack_exports__["default"] = (function(rotate) {
  rotate = rotateRadians(rotate[0] * _math__WEBPACK_IMPORTED_MODULE_1__["radians"], rotate[1] * _math__WEBPACK_IMPORTED_MODULE_1__["radians"], rotate.length > 2 ? rotate[2] * _math__WEBPACK_IMPORTED_MODULE_1__["radians"] : 0);

  function forward(coordinates) {
    coordinates = rotate(coordinates[0] * _math__WEBPACK_IMPORTED_MODULE_1__["radians"], coordinates[1] * _math__WEBPACK_IMPORTED_MODULE_1__["radians"]);
    return coordinates[0] *= _math__WEBPACK_IMPORTED_MODULE_1__["degrees"], coordinates[1] *= _math__WEBPACK_IMPORTED_MODULE_1__["degrees"], coordinates;
  }

  forward.invert = function(coordinates) {
    coordinates = rotate.invert(coordinates[0] * _math__WEBPACK_IMPORTED_MODULE_1__["radians"], coordinates[1] * _math__WEBPACK_IMPORTED_MODULE_1__["radians"]);
    return coordinates[0] *= _math__WEBPACK_IMPORTED_MODULE_1__["degrees"], coordinates[1] *= _math__WEBPACK_IMPORTED_MODULE_1__["degrees"], coordinates;
  };

  return forward;
});


/***/ }),

/***/ "./node_modules/d3-geo/src/stream.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-geo/src/stream.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function streamGeometry(geometry, stream) {
  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {
    streamGeometryType[geometry.type](geometry, stream);
  }
}

var streamObjectType = {
  Feature: function(object, stream) {
    streamGeometry(object.geometry, stream);
  },
  FeatureCollection: function(object, stream) {
    var features = object.features, i = -1, n = features.length;
    while (++i < n) streamGeometry(features[i].geometry, stream);
  }
};

var streamGeometryType = {
  Sphere: function(object, stream) {
    stream.sphere();
  },
  Point: function(object, stream) {
    object = object.coordinates;
    stream.point(object[0], object[1], object[2]);
  },
  MultiPoint: function(object, stream) {
    var coordinates = object.coordinates, i = -1, n = coordinates.length;
    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);
  },
  LineString: function(object, stream) {
    streamLine(object.coordinates, stream, 0);
  },
  MultiLineString: function(object, stream) {
    var coordinates = object.coordinates, i = -1, n = coordinates.length;
    while (++i < n) streamLine(coordinates[i], stream, 0);
  },
  Polygon: function(object, stream) {
    streamPolygon(object.coordinates, stream);
  },
  MultiPolygon: function(object, stream) {
    var coordinates = object.coordinates, i = -1, n = coordinates.length;
    while (++i < n) streamPolygon(coordinates[i], stream);
  },
  GeometryCollection: function(object, stream) {
    var geometries = object.geometries, i = -1, n = geometries.length;
    while (++i < n) streamGeometry(geometries[i], stream);
  }
};

function streamLine(coordinates, stream, closed) {
  var i = -1, n = coordinates.length - closed, coordinate;
  stream.lineStart();
  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);
  stream.lineEnd();
}

function streamPolygon(coordinates, stream) {
  var i = -1, n = coordinates.length;
  stream.polygonStart();
  while (++i < n) streamLine(coordinates[i], stream, 1);
  stream.polygonEnd();
}

/* harmony default export */ __webpack_exports__["default"] = (function(object, stream) {
  if (object && streamObjectType.hasOwnProperty(object.type)) {
    streamObjectType[object.type](object, stream);
  } else {
    streamGeometry(object, stream);
  }
});


/***/ }),

/***/ "./node_modules/d3-geo/src/transform.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-geo/src/transform.js ***!
  \**********************************************/
/*! exports provided: default, transformer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transformer", function() { return transformer; });
/* harmony default export */ __webpack_exports__["default"] = (function(methods) {
  return {
    stream: transformer(methods)
  };
});

function transformer(methods) {
  return function(stream) {
    var s = new TransformStream;
    for (var key in methods) s[key] = methods[key];
    s.stream = stream;
    return s;
  };
}

function TransformStream() {}

TransformStream.prototype = {
  constructor: TransformStream,
  point: function(x, y) { this.stream.point(x, y); },
  sphere: function() { this.stream.sphere(); },
  lineStart: function() { this.stream.lineStart(); },
  lineEnd: function() { this.stream.lineEnd(); },
  polygonStart: function() { this.stream.polygonStart(); },
  polygonEnd: function() { this.stream.polygonEnd(); }
};


/***/ }),

/***/ "./node_modules/d3-hierarchy/src/accessors.js":
/*!****************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/accessors.js ***!
  \****************************************************/
/*! exports provided: optional, required */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "optional", function() { return optional; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "required", function() { return required; });
function optional(f) {
  return f == null ? null : required(f);
}

function required(f) {
  if (typeof f !== "function") throw new Error;
  return f;
}


/***/ }),

/***/ "./node_modules/d3-hierarchy/src/array.js":
/*!************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/array.js ***!
  \************************************************/
/*! exports provided: slice, shuffle */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "slice", function() { return slice; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shuffle", function() { return shuffle; });
var slice = Array.prototype.slice;

function shuffle(array) {
  var m = array.length,
      t,
      i;

  while (m) {
    i = Math.random() * m-- | 0;
    t = array[m];
    array[m] = array[i];
    array[i] = t;
  }

  return array;
}


/***/ }),

/***/ "./node_modules/d3-hierarchy/src/cluster.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/cluster.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function defaultSeparation(a, b) {
  return a.parent === b.parent ? 1 : 2;
}

function meanX(children) {
  return children.reduce(meanXReduce, 0) / children.length;
}

function meanXReduce(x, c) {
  return x + c.x;
}

function maxY(children) {
  return 1 + children.reduce(maxYReduce, 0);
}

function maxYReduce(y, c) {
  return Math.max(y, c.y);
}

function leafLeft(node) {
  var children;
  while (children = node.children) node = children[0];
  return node;
}

function leafRight(node) {
  var children;
  while (children = node.children) node = children[children.length - 1];
  return node;
}

/* harmony default export */ __webpack_exports__["default"] = (function() {
  var separation = defaultSeparation,
      dx = 1,
      dy = 1,
      nodeSize = false;

  function cluster(root) {
    var previousNode,
        x = 0;

    // First walk, computing the initial x & y values.
    root.eachAfter(function(node) {
      var children = node.children;
      if (children) {
        node.x = meanX(children);
        node.y = maxY(children);
      } else {
        node.x = previousNode ? x += separation(node, previousNode) : 0;
        node.y = 0;
        previousNode = node;
      }
    });

    var left = leafLeft(root),
        right = leafRight(root),
        x0 = left.x - separation(left, right) / 2,
        x1 = right.x + separation(right, left) / 2;

    // Second walk, normalizing x & y to the desired size.
    return root.eachAfter(nodeSize ? function(node) {
      node.x = (node.x - root.x) * dx;
      node.y = (root.y - node.y) * dy;
    } : function(node) {
      node.x = (node.x - x0) / (x1 - x0) * dx;
      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;
    });
  }

  cluster.separation = function(x) {
    return arguments.length ? (separation = x, cluster) : separation;
  };

  cluster.size = function(x) {
    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);
  };

  cluster.nodeSize = function(x) {
    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);
  };

  return cluster;
});


/***/ }),

/***/ "./node_modules/d3-hierarchy/src/constant.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/constant.js ***!
  \***************************************************/
/*! exports provided: constantZero, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "constantZero", function() { return constantZero; });
function constantZero() {
  return 0;
}

/* harmony default export */ __webpack_exports__["default"] = (function(x) {
  return function() {
    return x;
  };
});


/***/ }),

/***/ "./node_modules/d3-hierarchy/src/hierarchy/ancestors.js":
/*!**************************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/hierarchy/ancestors.js ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function() {
  var node = this, nodes = [node];
  while (node = node.parent) {
    nodes.push(node);
  }
  return nodes;
});


/***/ }),

/***/ "./node_modules/d3-hierarchy/src/hierarchy/count.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/hierarchy/count.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function count(node) {
  var sum = 0,
      children = node.children,
      i = children && children.length;
  if (!i) sum = 1;
  else while (--i >= 0) sum += children[i].value;
  node.value = sum;
}

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return this.eachAfter(count);
});


/***/ }),

/***/ "./node_modules/d3-hierarchy/src/hierarchy/descendants.js":
/*!****************************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/hierarchy/descendants.js ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function() {
  var nodes = [];
  this.each(function(node) {
    nodes.push(node);
  });
  return nodes;
});


/***/ }),

/***/ "./node_modules/d3-hierarchy/src/hierarchy/each.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/hierarchy/each.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(callback) {
  var node = this, current, next = [node], children, i, n;
  do {
    current = next.reverse(), next = [];
    while (node = current.pop()) {
      callback(node), children = node.children;
      if (children) for (i = 0, n = children.length; i < n; ++i) {
        next.push(children[i]);
      }
    }
  } while (next.length);
  return this;
});


/***/ }),

/***/ "./node_modules/d3-hierarchy/src/hierarchy/eachAfter.js":
/*!**************************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/hierarchy/eachAfter.js ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(callback) {
  var node = this, nodes = [node], next = [], children, i, n;
  while (node = nodes.pop()) {
    next.push(node), children = node.children;
    if (children) for (i = 0, n = children.length; i < n; ++i) {
      nodes.push(children[i]);
    }
  }
  while (node = next.pop()) {
    callback(node);
  }
  return this;
});


/***/ }),

/***/ "./node_modules/d3-hierarchy/src/hierarchy/eachBefore.js":
/*!***************************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/hierarchy/eachBefore.js ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(callback) {
  var node = this, nodes = [node], children, i;
  while (node = nodes.pop()) {
    callback(node), children = node.children;
    if (children) for (i = children.length - 1; i >= 0; --i) {
      nodes.push(children[i]);
    }
  }
  return this;
});


/***/ }),

/***/ "./node_modules/d3-hierarchy/src/hierarchy/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/hierarchy/index.js ***!
  \**********************************************************/
/*! exports provided: default, computeHeight, Node */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return hierarchy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "computeHeight", function() { return computeHeight; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Node", function() { return Node; });
/* harmony import */ var _count__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./count */ "./node_modules/d3-hierarchy/src/hierarchy/count.js");
/* harmony import */ var _each__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./each */ "./node_modules/d3-hierarchy/src/hierarchy/each.js");
/* harmony import */ var _eachBefore__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./eachBefore */ "./node_modules/d3-hierarchy/src/hierarchy/eachBefore.js");
/* harmony import */ var _eachAfter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./eachAfter */ "./node_modules/d3-hierarchy/src/hierarchy/eachAfter.js");
/* harmony import */ var _sum__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./sum */ "./node_modules/d3-hierarchy/src/hierarchy/sum.js");
/* harmony import */ var _sort__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./sort */ "./node_modules/d3-hierarchy/src/hierarchy/sort.js");
/* harmony import */ var _path__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./path */ "./node_modules/d3-hierarchy/src/hierarchy/path.js");
/* harmony import */ var _ancestors__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ancestors */ "./node_modules/d3-hierarchy/src/hierarchy/ancestors.js");
/* harmony import */ var _descendants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./descendants */ "./node_modules/d3-hierarchy/src/hierarchy/descendants.js");
/* harmony import */ var _leaves__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./leaves */ "./node_modules/d3-hierarchy/src/hierarchy/leaves.js");
/* harmony import */ var _links__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./links */ "./node_modules/d3-hierarchy/src/hierarchy/links.js");












function hierarchy(data, children) {
  var root = new Node(data),
      valued = +data.value && (root.value = data.value),
      node,
      nodes = [root],
      child,
      childs,
      i,
      n;

  if (children == null) children = defaultChildren;

  while (node = nodes.pop()) {
    if (valued) node.value = +node.data.value;
    if ((childs = children(node.data)) && (n = childs.length)) {
      node.children = new Array(n);
      for (i = n - 1; i >= 0; --i) {
        nodes.push(child = node.children[i] = new Node(childs[i]));
        child.parent = node;
        child.depth = node.depth + 1;
      }
    }
  }

  return root.eachBefore(computeHeight);
}

function node_copy() {
  return hierarchy(this).eachBefore(copyData);
}

function defaultChildren(d) {
  return d.children;
}

function copyData(node) {
  node.data = node.data.data;
}

function computeHeight(node) {
  var height = 0;
  do node.height = height;
  while ((node = node.parent) && (node.height < ++height));
}

function Node(data) {
  this.data = data;
  this.depth =
  this.height = 0;
  this.parent = null;
}

Node.prototype = hierarchy.prototype = {
  constructor: Node,
  count: _count__WEBPACK_IMPORTED_MODULE_0__["default"],
  each: _each__WEBPACK_IMPORTED_MODULE_1__["default"],
  eachAfter: _eachAfter__WEBPACK_IMPORTED_MODULE_3__["default"],
  eachBefore: _eachBefore__WEBPACK_IMPORTED_MODULE_2__["default"],
  sum: _sum__WEBPACK_IMPORTED_MODULE_4__["default"],
  sort: _sort__WEBPACK_IMPORTED_MODULE_5__["default"],
  path: _path__WEBPACK_IMPORTED_MODULE_6__["default"],
  ancestors: _ancestors__WEBPACK_IMPORTED_MODULE_7__["default"],
  descendants: _descendants__WEBPACK_IMPORTED_MODULE_8__["default"],
  leaves: _leaves__WEBPACK_IMPORTED_MODULE_9__["default"],
  links: _links__WEBPACK_IMPORTED_MODULE_10__["default"],
  copy: node_copy
};


/***/ }),

/***/ "./node_modules/d3-hierarchy/src/hierarchy/leaves.js":
/*!***********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/hierarchy/leaves.js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function() {
  var leaves = [];
  this.eachBefore(function(node) {
    if (!node.children) {
      leaves.push(node);
    }
  });
  return leaves;
});


/***/ }),

/***/ "./node_modules/d3-hierarchy/src/hierarchy/links.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/hierarchy/links.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function() {
  var root = this, links = [];
  root.each(function(node) {
    if (node !== root) { // Don’t include the root’s parent, if any.
      links.push({source: node.parent, target: node});
    }
  });
  return links;
});


/***/ }),

/***/ "./node_modules/d3-hierarchy/src/hierarchy/path.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/hierarchy/path.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(end) {
  var start = this,
      ancestor = leastCommonAncestor(start, end),
      nodes = [start];
  while (start !== ancestor) {
    start = start.parent;
    nodes.push(start);
  }
  var k = nodes.length;
  while (end !== ancestor) {
    nodes.splice(k, 0, end);
    end = end.parent;
  }
  return nodes;
});

function leastCommonAncestor(a, b) {
  if (a === b) return a;
  var aNodes = a.ancestors(),
      bNodes = b.ancestors(),
      c = null;
  a = aNodes.pop();
  b = bNodes.pop();
  while (a === b) {
    c = a;
    a = aNodes.pop();
    b = bNodes.pop();
  }
  return c;
}


/***/ }),

/***/ "./node_modules/d3-hierarchy/src/hierarchy/sort.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/hierarchy/sort.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(compare) {
  return this.eachBefore(function(node) {
    if (node.children) {
      node.children.sort(compare);
    }
  });
});


/***/ }),

/***/ "./node_modules/d3-hierarchy/src/hierarchy/sum.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/hierarchy/sum.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(value) {
  return this.eachAfter(function(node) {
    var sum = +value(node.data) || 0,
        children = node.children,
        i = children && children.length;
    while (--i >= 0) sum += children[i].value;
    node.value = sum;
  });
});


/***/ }),

/***/ "./node_modules/d3-hierarchy/src/index.js":
/*!************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/index.js ***!
  \************************************************/
/*! exports provided: cluster, hierarchy, pack, packSiblings, packEnclose, partition, stratify, tree, treemap, treemapBinary, treemapDice, treemapSlice, treemapSliceDice, treemapSquarify, treemapResquarify */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _cluster__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cluster */ "./node_modules/d3-hierarchy/src/cluster.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cluster", function() { return _cluster__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _hierarchy_index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./hierarchy/index */ "./node_modules/d3-hierarchy/src/hierarchy/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "hierarchy", function() { return _hierarchy_index__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _pack_index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pack/index */ "./node_modules/d3-hierarchy/src/pack/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pack", function() { return _pack_index__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _pack_siblings__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pack/siblings */ "./node_modules/d3-hierarchy/src/pack/siblings.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "packSiblings", function() { return _pack_siblings__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _pack_enclose__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./pack/enclose */ "./node_modules/d3-hierarchy/src/pack/enclose.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "packEnclose", function() { return _pack_enclose__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _partition__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./partition */ "./node_modules/d3-hierarchy/src/partition.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "partition", function() { return _partition__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _stratify__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./stratify */ "./node_modules/d3-hierarchy/src/stratify.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stratify", function() { return _stratify__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony import */ var _tree__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./tree */ "./node_modules/d3-hierarchy/src/tree.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tree", function() { return _tree__WEBPACK_IMPORTED_MODULE_7__["default"]; });

/* harmony import */ var _treemap_index__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./treemap/index */ "./node_modules/d3-hierarchy/src/treemap/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "treemap", function() { return _treemap_index__WEBPACK_IMPORTED_MODULE_8__["default"]; });

/* harmony import */ var _treemap_binary__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./treemap/binary */ "./node_modules/d3-hierarchy/src/treemap/binary.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "treemapBinary", function() { return _treemap_binary__WEBPACK_IMPORTED_MODULE_9__["default"]; });

/* harmony import */ var _treemap_dice__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./treemap/dice */ "./node_modules/d3-hierarchy/src/treemap/dice.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "treemapDice", function() { return _treemap_dice__WEBPACK_IMPORTED_MODULE_10__["default"]; });

/* harmony import */ var _treemap_slice__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./treemap/slice */ "./node_modules/d3-hierarchy/src/treemap/slice.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "treemapSlice", function() { return _treemap_slice__WEBPACK_IMPORTED_MODULE_11__["default"]; });

/* harmony import */ var _treemap_sliceDice__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./treemap/sliceDice */ "./node_modules/d3-hierarchy/src/treemap/sliceDice.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "treemapSliceDice", function() { return _treemap_sliceDice__WEBPACK_IMPORTED_MODULE_12__["default"]; });

/* harmony import */ var _treemap_squarify__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./treemap/squarify */ "./node_modules/d3-hierarchy/src/treemap/squarify.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "treemapSquarify", function() { return _treemap_squarify__WEBPACK_IMPORTED_MODULE_13__["default"]; });

/* harmony import */ var _treemap_resquarify__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./treemap/resquarify */ "./node_modules/d3-hierarchy/src/treemap/resquarify.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "treemapResquarify", function() { return _treemap_resquarify__WEBPACK_IMPORTED_MODULE_14__["default"]; });


















/***/ }),

/***/ "./node_modules/d3-hierarchy/src/pack/enclose.js":
/*!*******************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/pack/enclose.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../array */ "./node_modules/d3-hierarchy/src/array.js");


/* harmony default export */ __webpack_exports__["default"] = (function(circles) {
  var i = 0, n = (circles = Object(_array__WEBPACK_IMPORTED_MODULE_0__["shuffle"])(_array__WEBPACK_IMPORTED_MODULE_0__["slice"].call(circles))).length, B = [], p, e;

  while (i < n) {
    p = circles[i];
    if (e && enclosesWeak(e, p)) ++i;
    else e = encloseBasis(B = extendBasis(B, p)), i = 0;
  }

  return e;
});

function extendBasis(B, p) {
  var i, j;

  if (enclosesWeakAll(p, B)) return [p];

  // If we get here then B must have at least one element.
  for (i = 0; i < B.length; ++i) {
    if (enclosesNot(p, B[i])
        && enclosesWeakAll(encloseBasis2(B[i], p), B)) {
      return [B[i], p];
    }
  }

  // If we get here then B must have at least two elements.
  for (i = 0; i < B.length - 1; ++i) {
    for (j = i + 1; j < B.length; ++j) {
      if (enclosesNot(encloseBasis2(B[i], B[j]), p)
          && enclosesNot(encloseBasis2(B[i], p), B[j])
          && enclosesNot(encloseBasis2(B[j], p), B[i])
          && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {
        return [B[i], B[j], p];
      }
    }
  }

  // If we get here then something is very wrong.
  throw new Error;
}

function enclosesNot(a, b) {
  var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;
  return dr < 0 || dr * dr < dx * dx + dy * dy;
}

function enclosesWeak(a, b) {
  var dr = a.r - b.r + 1e-6, dx = b.x - a.x, dy = b.y - a.y;
  return dr > 0 && dr * dr > dx * dx + dy * dy;
}

function enclosesWeakAll(a, B) {
  for (var i = 0; i < B.length; ++i) {
    if (!enclosesWeak(a, B[i])) {
      return false;
    }
  }
  return true;
}

function encloseBasis(B) {
  switch (B.length) {
    case 1: return encloseBasis1(B[0]);
    case 2: return encloseBasis2(B[0], B[1]);
    case 3: return encloseBasis3(B[0], B[1], B[2]);
  }
}

function encloseBasis1(a) {
  return {
    x: a.x,
    y: a.y,
    r: a.r
  };
}

function encloseBasis2(a, b) {
  var x1 = a.x, y1 = a.y, r1 = a.r,
      x2 = b.x, y2 = b.y, r2 = b.r,
      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,
      l = Math.sqrt(x21 * x21 + y21 * y21);
  return {
    x: (x1 + x2 + x21 / l * r21) / 2,
    y: (y1 + y2 + y21 / l * r21) / 2,
    r: (l + r1 + r2) / 2
  };
}

function encloseBasis3(a, b, c) {
  var x1 = a.x, y1 = a.y, r1 = a.r,
      x2 = b.x, y2 = b.y, r2 = b.r,
      x3 = c.x, y3 = c.y, r3 = c.r,
      a2 = x1 - x2,
      a3 = x1 - x3,
      b2 = y1 - y2,
      b3 = y1 - y3,
      c2 = r2 - r1,
      c3 = r3 - r1,
      d1 = x1 * x1 + y1 * y1 - r1 * r1,
      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,
      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,
      ab = a3 * b2 - a2 * b3,
      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,
      xb = (b3 * c2 - b2 * c3) / ab,
      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,
      yb = (a2 * c3 - a3 * c2) / ab,
      A = xb * xb + yb * yb - 1,
      B = 2 * (r1 + xa * xb + ya * yb),
      C = xa * xa + ya * ya - r1 * r1,
      r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);
  return {
    x: x1 + xa + xb * r,
    y: y1 + ya + yb * r,
    r: r
  };
}


/***/ }),

/***/ "./node_modules/d3-hierarchy/src/pack/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/pack/index.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _siblings__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./siblings */ "./node_modules/d3-hierarchy/src/pack/siblings.js");
/* harmony import */ var _accessors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../accessors */ "./node_modules/d3-hierarchy/src/accessors.js");
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constant */ "./node_modules/d3-hierarchy/src/constant.js");




function defaultRadius(d) {
  return Math.sqrt(d.value);
}

/* harmony default export */ __webpack_exports__["default"] = (function() {
  var radius = null,
      dx = 1,
      dy = 1,
      padding = _constant__WEBPACK_IMPORTED_MODULE_2__["constantZero"];

  function pack(root) {
    root.x = dx / 2, root.y = dy / 2;
    if (radius) {
      root.eachBefore(radiusLeaf(radius))
          .eachAfter(packChildren(padding, 0.5))
          .eachBefore(translateChild(1));
    } else {
      root.eachBefore(radiusLeaf(defaultRadius))
          .eachAfter(packChildren(_constant__WEBPACK_IMPORTED_MODULE_2__["constantZero"], 1))
          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))
          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));
    }
    return root;
  }

  pack.radius = function(x) {
    return arguments.length ? (radius = Object(_accessors__WEBPACK_IMPORTED_MODULE_1__["optional"])(x), pack) : radius;
  };

  pack.size = function(x) {
    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];
  };

  pack.padding = function(x) {
    return arguments.length ? (padding = typeof x === "function" ? x : Object(_constant__WEBPACK_IMPORTED_MODULE_2__["default"])(+x), pack) : padding;
  };

  return pack;
});

function radiusLeaf(radius) {
  return function(node) {
    if (!node.children) {
      node.r = Math.max(0, +radius(node) || 0);
    }
  };
}

function packChildren(padding, k) {
  return function(node) {
    if (children = node.children) {
      var children,
          i,
          n = children.length,
          r = padding(node) * k || 0,
          e;

      if (r) for (i = 0; i < n; ++i) children[i].r += r;
      e = Object(_siblings__WEBPACK_IMPORTED_MODULE_0__["packEnclose"])(children);
      if (r) for (i = 0; i < n; ++i) children[i].r -= r;
      node.r = e + r;
    }
  };
}

function translateChild(k) {
  return function(node) {
    var parent = node.parent;
    node.r *= k;
    if (parent) {
      node.x = parent.x + k * node.x;
      node.y = parent.y + k * node.y;
    }
  };
}


/***/ }),

/***/ "./node_modules/d3-hierarchy/src/pack/siblings.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/pack/siblings.js ***!
  \********************************************************/
/*! exports provided: packEnclose, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "packEnclose", function() { return packEnclose; });
/* harmony import */ var _enclose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./enclose */ "./node_modules/d3-hierarchy/src/pack/enclose.js");


function place(b, a, c) {
  var dx = b.x - a.x, x, a2,
      dy = b.y - a.y, y, b2,
      d2 = dx * dx + dy * dy;
  if (d2) {
    a2 = a.r + c.r, a2 *= a2;
    b2 = b.r + c.r, b2 *= b2;
    if (a2 > b2) {
      x = (d2 + b2 - a2) / (2 * d2);
      y = Math.sqrt(Math.max(0, b2 / d2 - x * x));
      c.x = b.x - x * dx - y * dy;
      c.y = b.y - x * dy + y * dx;
    } else {
      x = (d2 + a2 - b2) / (2 * d2);
      y = Math.sqrt(Math.max(0, a2 / d2 - x * x));
      c.x = a.x + x * dx - y * dy;
      c.y = a.y + x * dy + y * dx;
    }
  } else {
    c.x = a.x + c.r;
    c.y = a.y;
  }
}

function intersects(a, b) {
  var dr = a.r + b.r - 1e-6, dx = b.x - a.x, dy = b.y - a.y;
  return dr > 0 && dr * dr > dx * dx + dy * dy;
}

function score(node) {
  var a = node._,
      b = node.next._,
      ab = a.r + b.r,
      dx = (a.x * b.r + b.x * a.r) / ab,
      dy = (a.y * b.r + b.y * a.r) / ab;
  return dx * dx + dy * dy;
}

function Node(circle) {
  this._ = circle;
  this.next = null;
  this.previous = null;
}

function packEnclose(circles) {
  if (!(n = circles.length)) return 0;

  var a, b, c, n, aa, ca, i, j, k, sj, sk;

  // Place the first circle.
  a = circles[0], a.x = 0, a.y = 0;
  if (!(n > 1)) return a.r;

  // Place the second circle.
  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;
  if (!(n > 2)) return a.r + b.r;

  // Place the third circle.
  place(b, a, c = circles[2]);

  // Initialize the front-chain using the first three circles a, b and c.
  a = new Node(a), b = new Node(b), c = new Node(c);
  a.next = c.previous = b;
  b.next = a.previous = c;
  c.next = b.previous = a;

  // Attempt to place each remaining circle…
  pack: for (i = 3; i < n; ++i) {
    place(a._, b._, c = circles[i]), c = new Node(c);

    // Find the closest intersecting circle on the front-chain, if any.
    // “Closeness” is determined by linear distance along the front-chain.
    // “Ahead” or “behind” is likewise determined by linear distance.
    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;
    do {
      if (sj <= sk) {
        if (intersects(j._, c._)) {
          b = j, a.next = b, b.previous = a, --i;
          continue pack;
        }
        sj += j._.r, j = j.next;
      } else {
        if (intersects(k._, c._)) {
          a = k, a.next = b, b.previous = a, --i;
          continue pack;
        }
        sk += k._.r, k = k.previous;
      }
    } while (j !== k.next);

    // Success! Insert the new circle c between a and b.
    c.previous = a, c.next = b, a.next = b.previous = b = c;

    // Compute the new closest circle pair to the centroid.
    aa = score(a);
    while ((c = c.next) !== b) {
      if ((ca = score(c)) < aa) {
        a = c, aa = ca;
      }
    }
    b = a.next;
  }

  // Compute the enclosing circle of the front chain.
  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = Object(_enclose__WEBPACK_IMPORTED_MODULE_0__["default"])(a);

  // Translate the circles to put the enclosing circle around the origin.
  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;

  return c.r;
}

/* harmony default export */ __webpack_exports__["default"] = (function(circles) {
  packEnclose(circles);
  return circles;
});


/***/ }),

/***/ "./node_modules/d3-hierarchy/src/partition.js":
/*!****************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/partition.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _treemap_round__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./treemap/round */ "./node_modules/d3-hierarchy/src/treemap/round.js");
/* harmony import */ var _treemap_dice__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./treemap/dice */ "./node_modules/d3-hierarchy/src/treemap/dice.js");



/* harmony default export */ __webpack_exports__["default"] = (function() {
  var dx = 1,
      dy = 1,
      padding = 0,
      round = false;

  function partition(root) {
    var n = root.height + 1;
    root.x0 =
    root.y0 = padding;
    root.x1 = dx;
    root.y1 = dy / n;
    root.eachBefore(positionNode(dy, n));
    if (round) root.eachBefore(_treemap_round__WEBPACK_IMPORTED_MODULE_0__["default"]);
    return root;
  }

  function positionNode(dy, n) {
    return function(node) {
      if (node.children) {
        Object(_treemap_dice__WEBPACK_IMPORTED_MODULE_1__["default"])(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);
      }
      var x0 = node.x0,
          y0 = node.y0,
          x1 = node.x1 - padding,
          y1 = node.y1 - padding;
      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;
      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;
      node.x0 = x0;
      node.y0 = y0;
      node.x1 = x1;
      node.y1 = y1;
    };
  }

  partition.round = function(x) {
    return arguments.length ? (round = !!x, partition) : round;
  };

  partition.size = function(x) {
    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];
  };

  partition.padding = function(x) {
    return arguments.length ? (padding = +x, partition) : padding;
  };

  return partition;
});


/***/ }),

/***/ "./node_modules/d3-hierarchy/src/stratify.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/stratify.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _accessors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./accessors */ "./node_modules/d3-hierarchy/src/accessors.js");
/* harmony import */ var _hierarchy_index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./hierarchy/index */ "./node_modules/d3-hierarchy/src/hierarchy/index.js");



var keyPrefix = "$", // Protect against keys like “__proto__”.
    preroot = {depth: -1},
    ambiguous = {};

function defaultId(d) {
  return d.id;
}

function defaultParentId(d) {
  return d.parentId;
}

/* harmony default export */ __webpack_exports__["default"] = (function() {
  var id = defaultId,
      parentId = defaultParentId;

  function stratify(data) {
    var d,
        i,
        n = data.length,
        root,
        parent,
        node,
        nodes = new Array(n),
        nodeId,
        nodeKey,
        nodeByKey = {};

    for (i = 0; i < n; ++i) {
      d = data[i], node = nodes[i] = new _hierarchy_index__WEBPACK_IMPORTED_MODULE_1__["Node"](d);
      if ((nodeId = id(d, i, data)) != null && (nodeId += "")) {
        nodeKey = keyPrefix + (node.id = nodeId);
        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;
      }
    }

    for (i = 0; i < n; ++i) {
      node = nodes[i], nodeId = parentId(data[i], i, data);
      if (nodeId == null || !(nodeId += "")) {
        if (root) throw new Error("multiple roots");
        root = node;
      } else {
        parent = nodeByKey[keyPrefix + nodeId];
        if (!parent) throw new Error("missing: " + nodeId);
        if (parent === ambiguous) throw new Error("ambiguous: " + nodeId);
        if (parent.children) parent.children.push(node);
        else parent.children = [node];
        node.parent = parent;
      }
    }

    if (!root) throw new Error("no root");
    root.parent = preroot;
    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(_hierarchy_index__WEBPACK_IMPORTED_MODULE_1__["computeHeight"]);
    root.parent = null;
    if (n > 0) throw new Error("cycle");

    return root;
  }

  stratify.id = function(x) {
    return arguments.length ? (id = Object(_accessors__WEBPACK_IMPORTED_MODULE_0__["required"])(x), stratify) : id;
  };

  stratify.parentId = function(x) {
    return arguments.length ? (parentId = Object(_accessors__WEBPACK_IMPORTED_MODULE_0__["required"])(x), stratify) : parentId;
  };

  return stratify;
});


/***/ }),

/***/ "./node_modules/d3-hierarchy/src/tree.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-hierarchy/src/tree.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _hierarchy_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hierarchy/index */ "./node_modules/d3-hierarchy/src/hierarchy/index.js");


function defaultSeparation(a, b) {
  return a.parent === b.parent ? 1 : 2;
}

// function radialSeparation(a, b) {
//   return (a.parent === b.parent ? 1 : 2) / a.depth;
// }

// This function is used to traverse the left contour of a subtree (or
// subforest). It returns the successor of v on this contour. This successor is
// either given by the leftmost child of v or by the thread of v. The function
// returns null if and only if v is on the highest level of its subtree.
function nextLeft(v) {
  var children = v.children;
  return children ? children[0] : v.t;
}

// This function works analogously to nextLeft.
function nextRight(v) {
  var children = v.children;
  return children ? children[children.length - 1] : v.t;
}

// Shifts the current subtree rooted at w+. This is done by increasing
// prelim(w+) and mod(w+) by shift.
function moveSubtree(wm, wp, shift) {
  var change = shift / (wp.i - wm.i);
  wp.c -= change;
  wp.s += shift;
  wm.c += change;
  wp.z += shift;
  wp.m += shift;
}

// All other shifts, applied to the smaller subtrees between w- and w+, are
// performed by this function. To prepare the shifts, we have to adjust
// change(w+), shift(w+), and change(w-).
function executeShifts(v) {
  var shift = 0,
      change = 0,
      children = v.children,
      i = children.length,
      w;
  while (--i >= 0) {
    w = children[i];
    w.z += shift;
    w.m += shift;
    shift += w.s + (change += w.c);
  }
}

// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,
// returns the specified (default) ancestor.
function nextAncestor(vim, v, ancestor) {
  return vim.a.parent === v.parent ? vim.a : ancestor;
}

function TreeNode(node, i) {
  this._ = node;
  this.parent = null;
  this.children = null;
  this.A = null; // default ancestor
  this.a = this; // ancestor
  this.z = 0; // prelim
  this.m = 0; // mod
  this.c = 0; // change
  this.s = 0; // shift
  this.t = null; // thread
  this.i = i; // number
}

TreeNode.prototype = Object.create(_hierarchy_index__WEBPACK_IMPORTED_MODULE_0__["Node"].prototype);

function treeRoot(root) {
  var tree = new TreeNode(root, 0),
      node,
      nodes = [tree],
      child,
      children,
      i,
      n;

  while (node = nodes.pop()) {
    if (children = node._.children) {
      node.children = new Array(n = children.length);
      for (i = n - 1; i >= 0; --i) {
        nodes.push(child = node.children[i] = new TreeNode(children[i], i));
        child.parent = node;
      }
    }
  }

  (tree.parent = new TreeNode(null, 0)).children = [tree];
  return tree;
}

// Node-link tree diagram using the Reingold-Tilford "tidy" algorithm
/* harmony default export */ __webpack_exports__["default"] = (function() {
  var separation = defaultSeparation,
      dx = 1,
      dy = 1,
      nodeSize = null;

  function tree(root) {
    var t = treeRoot(root);

    // Compute the layout using Buchheim et al.’s algorithm.
    t.eachAfter(firstWalk), t.parent.m = -t.z;
    t.eachBefore(secondWalk);

    // If a fixed node size is specified, scale x and y.
    if (nodeSize) root.eachBefore(sizeNode);

    // If a fixed tree size is specified, scale x and y based on the extent.
    // Compute the left-most, right-most, and depth-most nodes for extents.
    else {
      var left = root,
          right = root,
          bottom = root;
      root.eachBefore(function(node) {
        if (node.x < left.x) left = node;
        if (node.x > right.x) right = node;
        if (node.depth > bottom.depth) bottom = node;
      });
      var s = left === right ? 1 : separation(left, right) / 2,
          tx = s - left.x,
          kx = dx / (right.x + s + tx),
          ky = dy / (bottom.depth || 1);
      root.eachBefore(function(node) {
        node.x = (node.x + tx) * kx;
        node.y = node.depth * ky;
      });
    }

    return root;
  }

  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is
  // applied recursively to the children of v, as well as the function
  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the
  // node v is placed to the midpoint of its outermost children.
  function firstWalk(v) {
    var children = v.children,
        siblings = v.parent.children,
        w = v.i ? siblings[v.i - 1] : null;
    if (children) {
      executeShifts(v);
      var midpoint = (children[0].z + children[children.length - 1].z) / 2;
      if (w) {
        v.z = w.z + separation(v._, w._);
        v.m = v.z - midpoint;
      } else {
        v.z = midpoint;
      }
    } else if (w) {
      v.z = w.z + separation(v._, w._);
    }
    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);
  }

  // Computes all real x-coordinates by summing up the modifiers recursively.
  function secondWalk(v) {
    v._.x = v.z + v.parent.m;
    v.m += v.parent.m;
  }

  // The core of the algorithm. Here, a new subtree is combined with the
  // previous subtrees. Threads are used to traverse the inside and outside
  // contours of the left and right subtree up to the highest common level. The
  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the
  // superscript o means outside and i means inside, the subscript - means left
  // subtree and + means right subtree. For summing up the modifiers along the
  // contour, we use respective variables si+, si-, so-, and so+. Whenever two
  // nodes of the inside contours conflict, we compute the left one of the
  // greatest uncommon ancestors using the function ANCESTOR and call MOVE
  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.
  // Finally, we add a new thread (if necessary).
  function apportion(v, w, ancestor) {
    if (w) {
      var vip = v,
          vop = v,
          vim = w,
          vom = vip.parent.children[0],
          sip = vip.m,
          sop = vop.m,
          sim = vim.m,
          som = vom.m,
          shift;
      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {
        vom = nextLeft(vom);
        vop = nextRight(vop);
        vop.a = v;
        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);
        if (shift > 0) {
          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);
          sip += shift;
          sop += shift;
        }
        sim += vim.m;
        sip += vip.m;
        som += vom.m;
        sop += vop.m;
      }
      if (vim && !nextRight(vop)) {
        vop.t = vim;
        vop.m += sim - sop;
      }
      if (vip && !nextLeft(vom)) {
        vom.t = vip;
        vom.m += sip - som;
        ancestor = v;
      }
    }
    return ancestor;
  }

  function sizeNode(node) {
    node.x *= dx;
    node.y = node.depth * dy;
  }

  tree.separation = function(x) {
    return arguments.length ? (separation = x, tree) : separation;
  };

  tree.size = function(x) {
    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);
  };

  tree.nodeSize = function(x) {
    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);
  };

  return tree;
});


/***/ }),

/***/ "./node_modules/d3-hierarchy/src/treemap/binary.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/treemap/binary.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(parent, x0, y0, x1, y1) {
  var nodes = parent.children,
      i, n = nodes.length,
      sum, sums = new Array(n + 1);

  for (sums[0] = sum = i = 0; i < n; ++i) {
    sums[i + 1] = sum += nodes[i].value;
  }

  partition(0, n, parent.value, x0, y0, x1, y1);

  function partition(i, j, value, x0, y0, x1, y1) {
    if (i >= j - 1) {
      var node = nodes[i];
      node.x0 = x0, node.y0 = y0;
      node.x1 = x1, node.y1 = y1;
      return;
    }

    var valueOffset = sums[i],
        valueTarget = (value / 2) + valueOffset,
        k = i + 1,
        hi = j - 1;

    while (k < hi) {
      var mid = k + hi >>> 1;
      if (sums[mid] < valueTarget) k = mid + 1;
      else hi = mid;
    }

    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;

    var valueLeft = sums[k] - valueOffset,
        valueRight = value - valueLeft;

    if ((x1 - x0) > (y1 - y0)) {
      var xk = (x0 * valueRight + x1 * valueLeft) / value;
      partition(i, k, valueLeft, x0, y0, xk, y1);
      partition(k, j, valueRight, xk, y0, x1, y1);
    } else {
      var yk = (y0 * valueRight + y1 * valueLeft) / value;
      partition(i, k, valueLeft, x0, y0, x1, yk);
      partition(k, j, valueRight, x0, yk, x1, y1);
    }
  }
});


/***/ }),

/***/ "./node_modules/d3-hierarchy/src/treemap/dice.js":
/*!*******************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/treemap/dice.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(parent, x0, y0, x1, y1) {
  var nodes = parent.children,
      node,
      i = -1,
      n = nodes.length,
      k = parent.value && (x1 - x0) / parent.value;

  while (++i < n) {
    node = nodes[i], node.y0 = y0, node.y1 = y1;
    node.x0 = x0, node.x1 = x0 += node.value * k;
  }
});


/***/ }),

/***/ "./node_modules/d3-hierarchy/src/treemap/index.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/treemap/index.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _round__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./round */ "./node_modules/d3-hierarchy/src/treemap/round.js");
/* harmony import */ var _squarify__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./squarify */ "./node_modules/d3-hierarchy/src/treemap/squarify.js");
/* harmony import */ var _accessors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../accessors */ "./node_modules/d3-hierarchy/src/accessors.js");
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../constant */ "./node_modules/d3-hierarchy/src/constant.js");





/* harmony default export */ __webpack_exports__["default"] = (function() {
  var tile = _squarify__WEBPACK_IMPORTED_MODULE_1__["default"],
      round = false,
      dx = 1,
      dy = 1,
      paddingStack = [0],
      paddingInner = _constant__WEBPACK_IMPORTED_MODULE_3__["constantZero"],
      paddingTop = _constant__WEBPACK_IMPORTED_MODULE_3__["constantZero"],
      paddingRight = _constant__WEBPACK_IMPORTED_MODULE_3__["constantZero"],
      paddingBottom = _constant__WEBPACK_IMPORTED_MODULE_3__["constantZero"],
      paddingLeft = _constant__WEBPACK_IMPORTED_MODULE_3__["constantZero"];

  function treemap(root) {
    root.x0 =
    root.y0 = 0;
    root.x1 = dx;
    root.y1 = dy;
    root.eachBefore(positionNode);
    paddingStack = [0];
    if (round) root.eachBefore(_round__WEBPACK_IMPORTED_MODULE_0__["default"]);
    return root;
  }

  function positionNode(node) {
    var p = paddingStack[node.depth],
        x0 = node.x0 + p,
        y0 = node.y0 + p,
        x1 = node.x1 - p,
        y1 = node.y1 - p;
    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;
    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;
    node.x0 = x0;
    node.y0 = y0;
    node.x1 = x1;
    node.y1 = y1;
    if (node.children) {
      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;
      x0 += paddingLeft(node) - p;
      y0 += paddingTop(node) - p;
      x1 -= paddingRight(node) - p;
      y1 -= paddingBottom(node) - p;
      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;
      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;
      tile(node, x0, y0, x1, y1);
    }
  }

  treemap.round = function(x) {
    return arguments.length ? (round = !!x, treemap) : round;
  };

  treemap.size = function(x) {
    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];
  };

  treemap.tile = function(x) {
    return arguments.length ? (tile = Object(_accessors__WEBPACK_IMPORTED_MODULE_2__["required"])(x), treemap) : tile;
  };

  treemap.padding = function(x) {
    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();
  };

  treemap.paddingInner = function(x) {
    return arguments.length ? (paddingInner = typeof x === "function" ? x : Object(_constant__WEBPACK_IMPORTED_MODULE_3__["default"])(+x), treemap) : paddingInner;
  };

  treemap.paddingOuter = function(x) {
    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();
  };

  treemap.paddingTop = function(x) {
    return arguments.length ? (paddingTop = typeof x === "function" ? x : Object(_constant__WEBPACK_IMPORTED_MODULE_3__["default"])(+x), treemap) : paddingTop;
  };

  treemap.paddingRight = function(x) {
    return arguments.length ? (paddingRight = typeof x === "function" ? x : Object(_constant__WEBPACK_IMPORTED_MODULE_3__["default"])(+x), treemap) : paddingRight;
  };

  treemap.paddingBottom = function(x) {
    return arguments.length ? (paddingBottom = typeof x === "function" ? x : Object(_constant__WEBPACK_IMPORTED_MODULE_3__["default"])(+x), treemap) : paddingBottom;
  };

  treemap.paddingLeft = function(x) {
    return arguments.length ? (paddingLeft = typeof x === "function" ? x : Object(_constant__WEBPACK_IMPORTED_MODULE_3__["default"])(+x), treemap) : paddingLeft;
  };

  return treemap;
});


/***/ }),

/***/ "./node_modules/d3-hierarchy/src/treemap/resquarify.js":
/*!*************************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/treemap/resquarify.js ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _dice__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dice */ "./node_modules/d3-hierarchy/src/treemap/dice.js");
/* harmony import */ var _slice__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./slice */ "./node_modules/d3-hierarchy/src/treemap/slice.js");
/* harmony import */ var _squarify__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./squarify */ "./node_modules/d3-hierarchy/src/treemap/squarify.js");




/* harmony default export */ __webpack_exports__["default"] = ((function custom(ratio) {

  function resquarify(parent, x0, y0, x1, y1) {
    if ((rows = parent._squarify) && (rows.ratio === ratio)) {
      var rows,
          row,
          nodes,
          i,
          j = -1,
          n,
          m = rows.length,
          value = parent.value;

      while (++j < m) {
        row = rows[j], nodes = row.children;
        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;
        if (row.dice) Object(_dice__WEBPACK_IMPORTED_MODULE_0__["default"])(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);
        else Object(_slice__WEBPACK_IMPORTED_MODULE_1__["default"])(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);
        value -= row.value;
      }
    } else {
      parent._squarify = rows = Object(_squarify__WEBPACK_IMPORTED_MODULE_2__["squarifyRatio"])(ratio, parent, x0, y0, x1, y1);
      rows.ratio = ratio;
    }
  }

  resquarify.ratio = function(x) {
    return custom((x = +x) > 1 ? x : 1);
  };

  return resquarify;
})(_squarify__WEBPACK_IMPORTED_MODULE_2__["phi"]));


/***/ }),

/***/ "./node_modules/d3-hierarchy/src/treemap/round.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/treemap/round.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(node) {
  node.x0 = Math.round(node.x0);
  node.y0 = Math.round(node.y0);
  node.x1 = Math.round(node.x1);
  node.y1 = Math.round(node.y1);
});


/***/ }),

/***/ "./node_modules/d3-hierarchy/src/treemap/slice.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/treemap/slice.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(parent, x0, y0, x1, y1) {
  var nodes = parent.children,
      node,
      i = -1,
      n = nodes.length,
      k = parent.value && (y1 - y0) / parent.value;

  while (++i < n) {
    node = nodes[i], node.x0 = x0, node.x1 = x1;
    node.y0 = y0, node.y1 = y0 += node.value * k;
  }
});


/***/ }),

/***/ "./node_modules/d3-hierarchy/src/treemap/sliceDice.js":
/*!************************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/treemap/sliceDice.js ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _dice__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dice */ "./node_modules/d3-hierarchy/src/treemap/dice.js");
/* harmony import */ var _slice__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./slice */ "./node_modules/d3-hierarchy/src/treemap/slice.js");



/* harmony default export */ __webpack_exports__["default"] = (function(parent, x0, y0, x1, y1) {
  (parent.depth & 1 ? _slice__WEBPACK_IMPORTED_MODULE_1__["default"] : _dice__WEBPACK_IMPORTED_MODULE_0__["default"])(parent, x0, y0, x1, y1);
});


/***/ }),

/***/ "./node_modules/d3-hierarchy/src/treemap/squarify.js":
/*!***********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/treemap/squarify.js ***!
  \***********************************************************/
/*! exports provided: phi, squarifyRatio, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "phi", function() { return phi; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "squarifyRatio", function() { return squarifyRatio; });
/* harmony import */ var _dice__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dice */ "./node_modules/d3-hierarchy/src/treemap/dice.js");
/* harmony import */ var _slice__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./slice */ "./node_modules/d3-hierarchy/src/treemap/slice.js");



var phi = (1 + Math.sqrt(5)) / 2;

function squarifyRatio(ratio, parent, x0, y0, x1, y1) {
  var rows = [],
      nodes = parent.children,
      row,
      nodeValue,
      i0 = 0,
      i1 = 0,
      n = nodes.length,
      dx, dy,
      value = parent.value,
      sumValue,
      minValue,
      maxValue,
      newRatio,
      minRatio,
      alpha,
      beta;

  while (i0 < n) {
    dx = x1 - x0, dy = y1 - y0;

    // Find the next non-empty node.
    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);
    minValue = maxValue = sumValue;
    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);
    beta = sumValue * sumValue * alpha;
    minRatio = Math.max(maxValue / beta, beta / minValue);

    // Keep adding nodes while the aspect ratio maintains or improves.
    for (; i1 < n; ++i1) {
      sumValue += nodeValue = nodes[i1].value;
      if (nodeValue < minValue) minValue = nodeValue;
      if (nodeValue > maxValue) maxValue = nodeValue;
      beta = sumValue * sumValue * alpha;
      newRatio = Math.max(maxValue / beta, beta / minValue);
      if (newRatio > minRatio) { sumValue -= nodeValue; break; }
      minRatio = newRatio;
    }

    // Position and record the row orientation.
    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});
    if (row.dice) Object(_dice__WEBPACK_IMPORTED_MODULE_0__["default"])(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);
    else Object(_slice__WEBPACK_IMPORTED_MODULE_1__["default"])(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);
    value -= sumValue, i0 = i1;
  }

  return rows;
}

/* harmony default export */ __webpack_exports__["default"] = ((function custom(ratio) {

  function squarify(parent, x0, y0, x1, y1) {
    squarifyRatio(ratio, parent, x0, y0, x1, y1);
  }

  squarify.ratio = function(x) {
    return custom((x = +x) > 1 ? x : 1);
  };

  return squarify;
})(phi));


/***/ }),

/***/ "./node_modules/d3-interpolate/src/array.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-interpolate/src/array.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _value__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./value */ "./node_modules/d3-interpolate/src/value.js");


/* harmony default export */ __webpack_exports__["default"] = (function(a, b) {
  var nb = b ? b.length : 0,
      na = a ? Math.min(nb, a.length) : 0,
      x = new Array(na),
      c = new Array(nb),
      i;

  for (i = 0; i < na; ++i) x[i] = Object(_value__WEBPACK_IMPORTED_MODULE_0__["default"])(a[i], b[i]);
  for (; i < nb; ++i) c[i] = b[i];

  return function(t) {
    for (i = 0; i < na; ++i) c[i] = x[i](t);
    return c;
  };
});


/***/ }),

/***/ "./node_modules/d3-interpolate/src/basis.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-interpolate/src/basis.js ***!
  \**************************************************/
/*! exports provided: basis, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "basis", function() { return basis; });
function basis(t1, v0, v1, v2, v3) {
  var t2 = t1 * t1, t3 = t2 * t1;
  return ((1 - 3 * t1 + 3 * t2 - t3) * v0
      + (4 - 6 * t2 + 3 * t3) * v1
      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2
      + t3 * v3) / 6;
}

/* harmony default export */ __webpack_exports__["default"] = (function(values) {
  var n = values.length - 1;
  return function(t) {
    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),
        v1 = values[i],
        v2 = values[i + 1],
        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,
        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;
    return basis((t - i / n) * n, v0, v1, v2, v3);
  };
});


/***/ }),

/***/ "./node_modules/d3-interpolate/src/basisClosed.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-interpolate/src/basisClosed.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _basis__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./basis */ "./node_modules/d3-interpolate/src/basis.js");


/* harmony default export */ __webpack_exports__["default"] = (function(values) {
  var n = values.length;
  return function(t) {
    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),
        v0 = values[(i + n - 1) % n],
        v1 = values[i % n],
        v2 = values[(i + 1) % n],
        v3 = values[(i + 2) % n];
    return Object(_basis__WEBPACK_IMPORTED_MODULE_0__["basis"])((t - i / n) * n, v0, v1, v2, v3);
  };
});


/***/ }),

/***/ "./node_modules/d3-interpolate/src/color.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-interpolate/src/color.js ***!
  \**************************************************/
/*! exports provided: hue, gamma, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hue", function() { return hue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "gamma", function() { return gamma; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return nogamma; });
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constant */ "./node_modules/d3-interpolate/src/constant.js");


function linear(a, d) {
  return function(t) {
    return a + t * d;
  };
}

function exponential(a, b, y) {
  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {
    return Math.pow(a + t * b, y);
  };
}

function hue(a, b) {
  var d = b - a;
  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(isNaN(a) ? b : a);
}

function gamma(y) {
  return (y = +y) === 1 ? nogamma : function(a, b) {
    return b - a ? exponential(a, b, y) : Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(isNaN(a) ? b : a);
  };
}

function nogamma(a, b) {
  var d = b - a;
  return d ? linear(a, d) : Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(isNaN(a) ? b : a);
}


/***/ }),

/***/ "./node_modules/d3-interpolate/src/constant.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-interpolate/src/constant.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(x) {
  return function() {
    return x;
  };
});


/***/ }),

/***/ "./node_modules/d3-interpolate/src/cubehelix.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-interpolate/src/cubehelix.js ***!
  \******************************************************/
/*! exports provided: default, cubehelixLong */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cubehelixLong", function() { return cubehelixLong; });
/* harmony import */ var d3_color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-color */ "./node_modules/d3-color/src/index.js");
/* harmony import */ var _color__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./color */ "./node_modules/d3-interpolate/src/color.js");



function cubehelix(hue) {
  return (function cubehelixGamma(y) {
    y = +y;

    function cubehelix(start, end) {
      var h = hue((start = Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["cubehelix"])(start)).h, (end = Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["cubehelix"])(end)).h),
          s = Object(_color__WEBPACK_IMPORTED_MODULE_1__["default"])(start.s, end.s),
          l = Object(_color__WEBPACK_IMPORTED_MODULE_1__["default"])(start.l, end.l),
          opacity = Object(_color__WEBPACK_IMPORTED_MODULE_1__["default"])(start.opacity, end.opacity);
      return function(t) {
        start.h = h(t);
        start.s = s(t);
        start.l = l(Math.pow(t, y));
        start.opacity = opacity(t);
        return start + "";
      };
    }

    cubehelix.gamma = cubehelixGamma;

    return cubehelix;
  })(1);
}

/* harmony default export */ __webpack_exports__["default"] = (cubehelix(_color__WEBPACK_IMPORTED_MODULE_1__["hue"]));
var cubehelixLong = cubehelix(_color__WEBPACK_IMPORTED_MODULE_1__["default"]);


/***/ }),

/***/ "./node_modules/d3-interpolate/src/date.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-interpolate/src/date.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(a, b) {
  var d = new Date;
  return a = +a, b -= a, function(t) {
    return d.setTime(a + b * t), d;
  };
});


/***/ }),

/***/ "./node_modules/d3-interpolate/src/discrete.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-interpolate/src/discrete.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(range) {
  var n = range.length;
  return function(t) {
    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];
  };
});


/***/ }),

/***/ "./node_modules/d3-interpolate/src/hcl.js":
/*!************************************************!*\
  !*** ./node_modules/d3-interpolate/src/hcl.js ***!
  \************************************************/
/*! exports provided: default, hclLong */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hclLong", function() { return hclLong; });
/* harmony import */ var d3_color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-color */ "./node_modules/d3-color/src/index.js");
/* harmony import */ var _color__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./color */ "./node_modules/d3-interpolate/src/color.js");



function hcl(hue) {
  return function(start, end) {
    var h = hue((start = Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["hcl"])(start)).h, (end = Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["hcl"])(end)).h),
        c = Object(_color__WEBPACK_IMPORTED_MODULE_1__["default"])(start.c, end.c),
        l = Object(_color__WEBPACK_IMPORTED_MODULE_1__["default"])(start.l, end.l),
        opacity = Object(_color__WEBPACK_IMPORTED_MODULE_1__["default"])(start.opacity, end.opacity);
    return function(t) {
      start.h = h(t);
      start.c = c(t);
      start.l = l(t);
      start.opacity = opacity(t);
      return start + "";
    };
  }
}

/* harmony default export */ __webpack_exports__["default"] = (hcl(_color__WEBPACK_IMPORTED_MODULE_1__["hue"]));
var hclLong = hcl(_color__WEBPACK_IMPORTED_MODULE_1__["default"]);


/***/ }),

/***/ "./node_modules/d3-interpolate/src/hsl.js":
/*!************************************************!*\
  !*** ./node_modules/d3-interpolate/src/hsl.js ***!
  \************************************************/
/*! exports provided: default, hslLong */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hslLong", function() { return hslLong; });
/* harmony import */ var d3_color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-color */ "./node_modules/d3-color/src/index.js");
/* harmony import */ var _color__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./color */ "./node_modules/d3-interpolate/src/color.js");



function hsl(hue) {
  return function(start, end) {
    var h = hue((start = Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["hsl"])(start)).h, (end = Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["hsl"])(end)).h),
        s = Object(_color__WEBPACK_IMPORTED_MODULE_1__["default"])(start.s, end.s),
        l = Object(_color__WEBPACK_IMPORTED_MODULE_1__["default"])(start.l, end.l),
        opacity = Object(_color__WEBPACK_IMPORTED_MODULE_1__["default"])(start.opacity, end.opacity);
    return function(t) {
      start.h = h(t);
      start.s = s(t);
      start.l = l(t);
      start.opacity = opacity(t);
      return start + "";
    };
  }
}

/* harmony default export */ __webpack_exports__["default"] = (hsl(_color__WEBPACK_IMPORTED_MODULE_1__["hue"]));
var hslLong = hsl(_color__WEBPACK_IMPORTED_MODULE_1__["default"]);


/***/ }),

/***/ "./node_modules/d3-interpolate/src/hue.js":
/*!************************************************!*\
  !*** ./node_modules/d3-interpolate/src/hue.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./color */ "./node_modules/d3-interpolate/src/color.js");


/* harmony default export */ __webpack_exports__["default"] = (function(a, b) {
  var i = Object(_color__WEBPACK_IMPORTED_MODULE_0__["hue"])(+a, +b);
  return function(t) {
    var x = i(t);
    return x - 360 * Math.floor(x / 360);
  };
});


/***/ }),

/***/ "./node_modules/d3-interpolate/src/index.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-interpolate/src/index.js ***!
  \**************************************************/
/*! exports provided: interpolate, interpolateArray, interpolateBasis, interpolateBasisClosed, interpolateDate, interpolateDiscrete, interpolateHue, interpolateNumber, interpolateObject, interpolateRound, interpolateString, interpolateTransformCss, interpolateTransformSvg, interpolateZoom, interpolateRgb, interpolateRgbBasis, interpolateRgbBasisClosed, interpolateHsl, interpolateHslLong, interpolateLab, interpolateHcl, interpolateHclLong, interpolateCubehelix, interpolateCubehelixLong, piecewise, quantize */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _value__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./value */ "./node_modules/d3-interpolate/src/value.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolate", function() { return _value__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./array */ "./node_modules/d3-interpolate/src/array.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateArray", function() { return _array__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _basis__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./basis */ "./node_modules/d3-interpolate/src/basis.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateBasis", function() { return _basis__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _basisClosed__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./basisClosed */ "./node_modules/d3-interpolate/src/basisClosed.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateBasisClosed", function() { return _basisClosed__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _date__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./date */ "./node_modules/d3-interpolate/src/date.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateDate", function() { return _date__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _discrete__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./discrete */ "./node_modules/d3-interpolate/src/discrete.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateDiscrete", function() { return _discrete__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _hue__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./hue */ "./node_modules/d3-interpolate/src/hue.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateHue", function() { return _hue__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony import */ var _number__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./number */ "./node_modules/d3-interpolate/src/number.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateNumber", function() { return _number__WEBPACK_IMPORTED_MODULE_7__["default"]; });

/* harmony import */ var _object__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./object */ "./node_modules/d3-interpolate/src/object.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateObject", function() { return _object__WEBPACK_IMPORTED_MODULE_8__["default"]; });

/* harmony import */ var _round__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./round */ "./node_modules/d3-interpolate/src/round.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateRound", function() { return _round__WEBPACK_IMPORTED_MODULE_9__["default"]; });

/* harmony import */ var _string__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./string */ "./node_modules/d3-interpolate/src/string.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateString", function() { return _string__WEBPACK_IMPORTED_MODULE_10__["default"]; });

/* harmony import */ var _transform_index__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./transform/index */ "./node_modules/d3-interpolate/src/transform/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateTransformCss", function() { return _transform_index__WEBPACK_IMPORTED_MODULE_11__["interpolateTransformCss"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateTransformSvg", function() { return _transform_index__WEBPACK_IMPORTED_MODULE_11__["interpolateTransformSvg"]; });

/* harmony import */ var _zoom__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./zoom */ "./node_modules/d3-interpolate/src/zoom.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateZoom", function() { return _zoom__WEBPACK_IMPORTED_MODULE_12__["default"]; });

/* harmony import */ var _rgb__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./rgb */ "./node_modules/d3-interpolate/src/rgb.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateRgb", function() { return _rgb__WEBPACK_IMPORTED_MODULE_13__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateRgbBasis", function() { return _rgb__WEBPACK_IMPORTED_MODULE_13__["rgbBasis"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateRgbBasisClosed", function() { return _rgb__WEBPACK_IMPORTED_MODULE_13__["rgbBasisClosed"]; });

/* harmony import */ var _hsl__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./hsl */ "./node_modules/d3-interpolate/src/hsl.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateHsl", function() { return _hsl__WEBPACK_IMPORTED_MODULE_14__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateHslLong", function() { return _hsl__WEBPACK_IMPORTED_MODULE_14__["hslLong"]; });

/* harmony import */ var _lab__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./lab */ "./node_modules/d3-interpolate/src/lab.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateLab", function() { return _lab__WEBPACK_IMPORTED_MODULE_15__["default"]; });

/* harmony import */ var _hcl__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./hcl */ "./node_modules/d3-interpolate/src/hcl.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateHcl", function() { return _hcl__WEBPACK_IMPORTED_MODULE_16__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateHclLong", function() { return _hcl__WEBPACK_IMPORTED_MODULE_16__["hclLong"]; });

/* harmony import */ var _cubehelix__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./cubehelix */ "./node_modules/d3-interpolate/src/cubehelix.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateCubehelix", function() { return _cubehelix__WEBPACK_IMPORTED_MODULE_17__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateCubehelixLong", function() { return _cubehelix__WEBPACK_IMPORTED_MODULE_17__["cubehelixLong"]; });

/* harmony import */ var _piecewise__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./piecewise */ "./node_modules/d3-interpolate/src/piecewise.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "piecewise", function() { return _piecewise__WEBPACK_IMPORTED_MODULE_18__["default"]; });

/* harmony import */ var _quantize__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./quantize */ "./node_modules/d3-interpolate/src/quantize.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "quantize", function() { return _quantize__WEBPACK_IMPORTED_MODULE_19__["default"]; });























/***/ }),

/***/ "./node_modules/d3-interpolate/src/lab.js":
/*!************************************************!*\
  !*** ./node_modules/d3-interpolate/src/lab.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return lab; });
/* harmony import */ var d3_color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-color */ "./node_modules/d3-color/src/index.js");
/* harmony import */ var _color__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./color */ "./node_modules/d3-interpolate/src/color.js");



function lab(start, end) {
  var l = Object(_color__WEBPACK_IMPORTED_MODULE_1__["default"])((start = Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["lab"])(start)).l, (end = Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["lab"])(end)).l),
      a = Object(_color__WEBPACK_IMPORTED_MODULE_1__["default"])(start.a, end.a),
      b = Object(_color__WEBPACK_IMPORTED_MODULE_1__["default"])(start.b, end.b),
      opacity = Object(_color__WEBPACK_IMPORTED_MODULE_1__["default"])(start.opacity, end.opacity);
  return function(t) {
    start.l = l(t);
    start.a = a(t);
    start.b = b(t);
    start.opacity = opacity(t);
    return start + "";
  };
}


/***/ }),

/***/ "./node_modules/d3-interpolate/src/number.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-interpolate/src/number.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(a, b) {
  return a = +a, b -= a, function(t) {
    return a + b * t;
  };
});


/***/ }),

/***/ "./node_modules/d3-interpolate/src/object.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-interpolate/src/object.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _value__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./value */ "./node_modules/d3-interpolate/src/value.js");


/* harmony default export */ __webpack_exports__["default"] = (function(a, b) {
  var i = {},
      c = {},
      k;

  if (a === null || typeof a !== "object") a = {};
  if (b === null || typeof b !== "object") b = {};

  for (k in b) {
    if (k in a) {
      i[k] = Object(_value__WEBPACK_IMPORTED_MODULE_0__["default"])(a[k], b[k]);
    } else {
      c[k] = b[k];
    }
  }

  return function(t) {
    for (k in i) c[k] = i[k](t);
    return c;
  };
});


/***/ }),

/***/ "./node_modules/d3-interpolate/src/piecewise.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-interpolate/src/piecewise.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return piecewise; });
function piecewise(interpolate, values) {
  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);
  while (i < n) I[i] = interpolate(v, v = values[++i]);
  return function(t) {
    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));
    return I[i](t - i);
  };
}


/***/ }),

/***/ "./node_modules/d3-interpolate/src/quantize.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-interpolate/src/quantize.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(interpolator, n) {
  var samples = new Array(n);
  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));
  return samples;
});


/***/ }),

/***/ "./node_modules/d3-interpolate/src/rgb.js":
/*!************************************************!*\
  !*** ./node_modules/d3-interpolate/src/rgb.js ***!
  \************************************************/
/*! exports provided: default, rgbBasis, rgbBasisClosed */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rgbBasis", function() { return rgbBasis; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rgbBasisClosed", function() { return rgbBasisClosed; });
/* harmony import */ var d3_color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-color */ "./node_modules/d3-color/src/index.js");
/* harmony import */ var _basis__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./basis */ "./node_modules/d3-interpolate/src/basis.js");
/* harmony import */ var _basisClosed__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./basisClosed */ "./node_modules/d3-interpolate/src/basisClosed.js");
/* harmony import */ var _color__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./color */ "./node_modules/d3-interpolate/src/color.js");





/* harmony default export */ __webpack_exports__["default"] = ((function rgbGamma(y) {
  var color = Object(_color__WEBPACK_IMPORTED_MODULE_3__["gamma"])(y);

  function rgb(start, end) {
    var r = color((start = Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["rgb"])(start)).r, (end = Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["rgb"])(end)).r),
        g = color(start.g, end.g),
        b = color(start.b, end.b),
        opacity = Object(_color__WEBPACK_IMPORTED_MODULE_3__["default"])(start.opacity, end.opacity);
    return function(t) {
      start.r = r(t);
      start.g = g(t);
      start.b = b(t);
      start.opacity = opacity(t);
      return start + "";
    };
  }

  rgb.gamma = rgbGamma;

  return rgb;
})(1));

function rgbSpline(spline) {
  return function(colors) {
    var n = colors.length,
        r = new Array(n),
        g = new Array(n),
        b = new Array(n),
        i, color;
    for (i = 0; i < n; ++i) {
      color = Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["rgb"])(colors[i]);
      r[i] = color.r || 0;
      g[i] = color.g || 0;
      b[i] = color.b || 0;
    }
    r = spline(r);
    g = spline(g);
    b = spline(b);
    color.opacity = 1;
    return function(t) {
      color.r = r(t);
      color.g = g(t);
      color.b = b(t);
      return color + "";
    };
  };
}

var rgbBasis = rgbSpline(_basis__WEBPACK_IMPORTED_MODULE_1__["default"]);
var rgbBasisClosed = rgbSpline(_basisClosed__WEBPACK_IMPORTED_MODULE_2__["default"]);


/***/ }),

/***/ "./node_modules/d3-interpolate/src/round.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-interpolate/src/round.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(a, b) {
  return a = +a, b -= a, function(t) {
    return Math.round(a + b * t);
  };
});


/***/ }),

/***/ "./node_modules/d3-interpolate/src/string.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-interpolate/src/string.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _number__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./number */ "./node_modules/d3-interpolate/src/number.js");


var reA = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,
    reB = new RegExp(reA.source, "g");

function zero(b) {
  return function() {
    return b;
  };
}

function one(b) {
  return function(t) {
    return b(t) + "";
  };
}

/* harmony default export */ __webpack_exports__["default"] = (function(a, b) {
  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b
      am, // current match in a
      bm, // current match in b
      bs, // string preceding current number in b, if any
      i = -1, // index in s
      s = [], // string constants and placeholders
      q = []; // number interpolators

  // Coerce inputs to strings.
  a = a + "", b = b + "";

  // Interpolate pairs of numbers in a & b.
  while ((am = reA.exec(a))
      && (bm = reB.exec(b))) {
    if ((bs = bm.index) > bi) { // a string precedes the next number in b
      bs = b.slice(bi, bs);
      if (s[i]) s[i] += bs; // coalesce with previous string
      else s[++i] = bs;
    }
    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match
      if (s[i]) s[i] += bm; // coalesce with previous string
      else s[++i] = bm;
    } else { // interpolate non-matching numbers
      s[++i] = null;
      q.push({i: i, x: Object(_number__WEBPACK_IMPORTED_MODULE_0__["default"])(am, bm)});
    }
    bi = reB.lastIndex;
  }

  // Add remains of b.
  if (bi < b.length) {
    bs = b.slice(bi);
    if (s[i]) s[i] += bs; // coalesce with previous string
    else s[++i] = bs;
  }

  // Special optimization for only a single match.
  // Otherwise, interpolate each of the numbers and rejoin the string.
  return s.length < 2 ? (q[0]
      ? one(q[0].x)
      : zero(b))
      : (b = q.length, function(t) {
          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);
          return s.join("");
        });
});


/***/ }),

/***/ "./node_modules/d3-interpolate/src/transform/decompose.js":
/*!****************************************************************!*\
  !*** ./node_modules/d3-interpolate/src/transform/decompose.js ***!
  \****************************************************************/
/*! exports provided: identity, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "identity", function() { return identity; });
var degrees = 180 / Math.PI;

var identity = {
  translateX: 0,
  translateY: 0,
  rotate: 0,
  skewX: 0,
  scaleX: 1,
  scaleY: 1
};

/* harmony default export */ __webpack_exports__["default"] = (function(a, b, c, d, e, f) {
  var scaleX, scaleY, skewX;
  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;
  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;
  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;
  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;
  return {
    translateX: e,
    translateY: f,
    rotate: Math.atan2(b, a) * degrees,
    skewX: Math.atan(skewX) * degrees,
    scaleX: scaleX,
    scaleY: scaleY
  };
});


/***/ }),

/***/ "./node_modules/d3-interpolate/src/transform/index.js":
/*!************************************************************!*\
  !*** ./node_modules/d3-interpolate/src/transform/index.js ***!
  \************************************************************/
/*! exports provided: interpolateTransformCss, interpolateTransformSvg */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "interpolateTransformCss", function() { return interpolateTransformCss; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "interpolateTransformSvg", function() { return interpolateTransformSvg; });
/* harmony import */ var _number__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../number */ "./node_modules/d3-interpolate/src/number.js");
/* harmony import */ var _parse__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./parse */ "./node_modules/d3-interpolate/src/transform/parse.js");



function interpolateTransform(parse, pxComma, pxParen, degParen) {

  function pop(s) {
    return s.length ? s.pop() + " " : "";
  }

  function translate(xa, ya, xb, yb, s, q) {
    if (xa !== xb || ya !== yb) {
      var i = s.push("translate(", null, pxComma, null, pxParen);
      q.push({i: i - 4, x: Object(_number__WEBPACK_IMPORTED_MODULE_0__["default"])(xa, xb)}, {i: i - 2, x: Object(_number__WEBPACK_IMPORTED_MODULE_0__["default"])(ya, yb)});
    } else if (xb || yb) {
      s.push("translate(" + xb + pxComma + yb + pxParen);
    }
  }

  function rotate(a, b, s, q) {
    if (a !== b) {
      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path
      q.push({i: s.push(pop(s) + "rotate(", null, degParen) - 2, x: Object(_number__WEBPACK_IMPORTED_MODULE_0__["default"])(a, b)});
    } else if (b) {
      s.push(pop(s) + "rotate(" + b + degParen);
    }
  }

  function skewX(a, b, s, q) {
    if (a !== b) {
      q.push({i: s.push(pop(s) + "skewX(", null, degParen) - 2, x: Object(_number__WEBPACK_IMPORTED_MODULE_0__["default"])(a, b)});
    } else if (b) {
      s.push(pop(s) + "skewX(" + b + degParen);
    }
  }

  function scale(xa, ya, xb, yb, s, q) {
    if (xa !== xb || ya !== yb) {
      var i = s.push(pop(s) + "scale(", null, ",", null, ")");
      q.push({i: i - 4, x: Object(_number__WEBPACK_IMPORTED_MODULE_0__["default"])(xa, xb)}, {i: i - 2, x: Object(_number__WEBPACK_IMPORTED_MODULE_0__["default"])(ya, yb)});
    } else if (xb !== 1 || yb !== 1) {
      s.push(pop(s) + "scale(" + xb + "," + yb + ")");
    }
  }

  return function(a, b) {
    var s = [], // string constants and placeholders
        q = []; // number interpolators
    a = parse(a), b = parse(b);
    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);
    rotate(a.rotate, b.rotate, s, q);
    skewX(a.skewX, b.skewX, s, q);
    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);
    a = b = null; // gc
    return function(t) {
      var i = -1, n = q.length, o;
      while (++i < n) s[(o = q[i]).i] = o.x(t);
      return s.join("");
    };
  };
}

var interpolateTransformCss = interpolateTransform(_parse__WEBPACK_IMPORTED_MODULE_1__["parseCss"], "px, ", "px)", "deg)");
var interpolateTransformSvg = interpolateTransform(_parse__WEBPACK_IMPORTED_MODULE_1__["parseSvg"], ", ", ")", ")");


/***/ }),

/***/ "./node_modules/d3-interpolate/src/transform/parse.js":
/*!************************************************************!*\
  !*** ./node_modules/d3-interpolate/src/transform/parse.js ***!
  \************************************************************/
/*! exports provided: parseCss, parseSvg */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseCss", function() { return parseCss; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseSvg", function() { return parseSvg; });
/* harmony import */ var _decompose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./decompose */ "./node_modules/d3-interpolate/src/transform/decompose.js");


var cssNode,
    cssRoot,
    cssView,
    svgNode;

function parseCss(value) {
  if (value === "none") return _decompose__WEBPACK_IMPORTED_MODULE_0__["identity"];
  if (!cssNode) cssNode = document.createElement("DIV"), cssRoot = document.documentElement, cssView = document.defaultView;
  cssNode.style.transform = value;
  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue("transform");
  cssRoot.removeChild(cssNode);
  value = value.slice(7, -1).split(",");
  return Object(_decompose__WEBPACK_IMPORTED_MODULE_0__["default"])(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);
}

function parseSvg(value) {
  if (value == null) return _decompose__WEBPACK_IMPORTED_MODULE_0__["identity"];
  if (!svgNode) svgNode = document.createElementNS("http://www.w3.org/2000/svg", "g");
  svgNode.setAttribute("transform", value);
  if (!(value = svgNode.transform.baseVal.consolidate())) return _decompose__WEBPACK_IMPORTED_MODULE_0__["identity"];
  value = value.matrix;
  return Object(_decompose__WEBPACK_IMPORTED_MODULE_0__["default"])(value.a, value.b, value.c, value.d, value.e, value.f);
}


/***/ }),

/***/ "./node_modules/d3-interpolate/src/value.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-interpolate/src/value.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-color */ "./node_modules/d3-color/src/index.js");
/* harmony import */ var _rgb__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./rgb */ "./node_modules/d3-interpolate/src/rgb.js");
/* harmony import */ var _array__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./array */ "./node_modules/d3-interpolate/src/array.js");
/* harmony import */ var _date__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./date */ "./node_modules/d3-interpolate/src/date.js");
/* harmony import */ var _number__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./number */ "./node_modules/d3-interpolate/src/number.js");
/* harmony import */ var _object__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./object */ "./node_modules/d3-interpolate/src/object.js");
/* harmony import */ var _string__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./string */ "./node_modules/d3-interpolate/src/string.js");
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./constant */ "./node_modules/d3-interpolate/src/constant.js");









/* harmony default export */ __webpack_exports__["default"] = (function(a, b) {
  var t = typeof b, c;
  return b == null || t === "boolean" ? Object(_constant__WEBPACK_IMPORTED_MODULE_7__["default"])(b)
      : (t === "number" ? _number__WEBPACK_IMPORTED_MODULE_4__["default"]
      : t === "string" ? ((c = Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["color"])(b)) ? (b = c, _rgb__WEBPACK_IMPORTED_MODULE_1__["default"]) : _string__WEBPACK_IMPORTED_MODULE_6__["default"])
      : b instanceof d3_color__WEBPACK_IMPORTED_MODULE_0__["color"] ? _rgb__WEBPACK_IMPORTED_MODULE_1__["default"]
      : b instanceof Date ? _date__WEBPACK_IMPORTED_MODULE_3__["default"]
      : Array.isArray(b) ? _array__WEBPACK_IMPORTED_MODULE_2__["default"]
      : typeof b.valueOf !== "function" && typeof b.toString !== "function" || isNaN(b) ? _object__WEBPACK_IMPORTED_MODULE_5__["default"]
      : _number__WEBPACK_IMPORTED_MODULE_4__["default"])(a, b);
});


/***/ }),

/***/ "./node_modules/d3-interpolate/src/zoom.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-interpolate/src/zoom.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var rho = Math.SQRT2,
    rho2 = 2,
    rho4 = 4,
    epsilon2 = 1e-12;

function cosh(x) {
  return ((x = Math.exp(x)) + 1 / x) / 2;
}

function sinh(x) {
  return ((x = Math.exp(x)) - 1 / x) / 2;
}

function tanh(x) {
  return ((x = Math.exp(2 * x)) - 1) / (x + 1);
}

// p0 = [ux0, uy0, w0]
// p1 = [ux1, uy1, w1]
/* harmony default export */ __webpack_exports__["default"] = (function(p0, p1) {
  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],
      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],
      dx = ux1 - ux0,
      dy = uy1 - uy0,
      d2 = dx * dx + dy * dy,
      i,
      S;

  // Special case for u0 ≅ u1.
  if (d2 < epsilon2) {
    S = Math.log(w1 / w0) / rho;
    i = function(t) {
      return [
        ux0 + t * dx,
        uy0 + t * dy,
        w0 * Math.exp(rho * t * S)
      ];
    }
  }

  // General case.
  else {
    var d1 = Math.sqrt(d2),
        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),
        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),
        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),
        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);
    S = (r1 - r0) / rho;
    i = function(t) {
      var s = t * S,
          coshr0 = cosh(r0),
          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));
      return [
        ux0 + u * dx,
        uy0 + u * dy,
        w0 * coshr0 / cosh(rho * s + r0)
      ];
    }
  }

  i.duration = S * 1000;

  return i;
});


/***/ }),

/***/ "./node_modules/d3-path/src/index.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-path/src/index.js ***!
  \*******************************************/
/*! exports provided: path */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./path */ "./node_modules/d3-path/src/path.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "path", function() { return _path__WEBPACK_IMPORTED_MODULE_0__["default"]; });




/***/ }),

/***/ "./node_modules/d3-path/src/path.js":
/*!******************************************!*\
  !*** ./node_modules/d3-path/src/path.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var pi = Math.PI,
    tau = 2 * pi,
    epsilon = 1e-6,
    tauEpsilon = tau - epsilon;

function Path() {
  this._x0 = this._y0 = // start of current subpath
  this._x1 = this._y1 = null; // end of current subpath
  this._ = "";
}

function path() {
  return new Path;
}

Path.prototype = path.prototype = {
  constructor: Path,
  moveTo: function(x, y) {
    this._ += "M" + (this._x0 = this._x1 = +x) + "," + (this._y0 = this._y1 = +y);
  },
  closePath: function() {
    if (this._x1 !== null) {
      this._x1 = this._x0, this._y1 = this._y0;
      this._ += "Z";
    }
  },
  lineTo: function(x, y) {
    this._ += "L" + (this._x1 = +x) + "," + (this._y1 = +y);
  },
  quadraticCurveTo: function(x1, y1, x, y) {
    this._ += "Q" + (+x1) + "," + (+y1) + "," + (this._x1 = +x) + "," + (this._y1 = +y);
  },
  bezierCurveTo: function(x1, y1, x2, y2, x, y) {
    this._ += "C" + (+x1) + "," + (+y1) + "," + (+x2) + "," + (+y2) + "," + (this._x1 = +x) + "," + (this._y1 = +y);
  },
  arcTo: function(x1, y1, x2, y2, r) {
    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;
    var x0 = this._x1,
        y0 = this._y1,
        x21 = x2 - x1,
        y21 = y2 - y1,
        x01 = x0 - x1,
        y01 = y0 - y1,
        l01_2 = x01 * x01 + y01 * y01;

    // Is the radius negative? Error.
    if (r < 0) throw new Error("negative radius: " + r);

    // Is this path empty? Move to (x1,y1).
    if (this._x1 === null) {
      this._ += "M" + (this._x1 = x1) + "," + (this._y1 = y1);
    }

    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.
    else if (!(l01_2 > epsilon));

    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?
    // Equivalently, is (x1,y1) coincident with (x2,y2)?
    // Or, is the radius zero? Line to (x1,y1).
    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {
      this._ += "L" + (this._x1 = x1) + "," + (this._y1 = y1);
    }

    // Otherwise, draw an arc!
    else {
      var x20 = x2 - x0,
          y20 = y2 - y0,
          l21_2 = x21 * x21 + y21 * y21,
          l20_2 = x20 * x20 + y20 * y20,
          l21 = Math.sqrt(l21_2),
          l01 = Math.sqrt(l01_2),
          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),
          t01 = l / l01,
          t21 = l / l21;

      // If the start tangent is not coincident with (x0,y0), line to.
      if (Math.abs(t01 - 1) > epsilon) {
        this._ += "L" + (x1 + t01 * x01) + "," + (y1 + t01 * y01);
      }

      this._ += "A" + r + "," + r + ",0,0," + (+(y01 * x20 > x01 * y20)) + "," + (this._x1 = x1 + t21 * x21) + "," + (this._y1 = y1 + t21 * y21);
    }
  },
  arc: function(x, y, r, a0, a1, ccw) {
    x = +x, y = +y, r = +r;
    var dx = r * Math.cos(a0),
        dy = r * Math.sin(a0),
        x0 = x + dx,
        y0 = y + dy,
        cw = 1 ^ ccw,
        da = ccw ? a0 - a1 : a1 - a0;

    // Is the radius negative? Error.
    if (r < 0) throw new Error("negative radius: " + r);

    // Is this path empty? Move to (x0,y0).
    if (this._x1 === null) {
      this._ += "M" + x0 + "," + y0;
    }

    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).
    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {
      this._ += "L" + x0 + "," + y0;
    }

    // Is this arc empty? We’re done.
    if (!r) return;

    // Does the angle go the wrong way? Flip the direction.
    if (da < 0) da = da % tau + tau;

    // Is this a complete circle? Draw two arcs to complete the circle.
    if (da > tauEpsilon) {
      this._ += "A" + r + "," + r + ",0,1," + cw + "," + (x - dx) + "," + (y - dy) + "A" + r + "," + r + ",0,1," + cw + "," + (this._x1 = x0) + "," + (this._y1 = y0);
    }

    // Is this arc non-empty? Draw an arc!
    else if (da > epsilon) {
      this._ += "A" + r + "," + r + ",0," + (+(da >= pi)) + "," + cw + "," + (this._x1 = x + r * Math.cos(a1)) + "," + (this._y1 = y + r * Math.sin(a1));
    }
  },
  rect: function(x, y, w, h) {
    this._ += "M" + (this._x0 = this._x1 = +x) + "," + (this._y0 = this._y1 = +y) + "h" + (+w) + "v" + (+h) + "h" + (-w) + "Z";
  },
  toString: function() {
    return this._;
  }
};

/* harmony default export */ __webpack_exports__["default"] = (path);


/***/ }),

/***/ "./node_modules/d3-quadtree/src/add.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-quadtree/src/add.js ***!
  \*********************************************/
/*! exports provided: default, addAll */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addAll", function() { return addAll; });
/* harmony default export */ __webpack_exports__["default"] = (function(d) {
  var x = +this._x.call(null, d),
      y = +this._y.call(null, d);
  return add(this.cover(x, y), x, y, d);
});

function add(tree, x, y, d) {
  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points

  var parent,
      node = tree._root,
      leaf = {data: d},
      x0 = tree._x0,
      y0 = tree._y0,
      x1 = tree._x1,
      y1 = tree._y1,
      xm,
      ym,
      xp,
      yp,
      right,
      bottom,
      i,
      j;

  // If the tree is empty, initialize the root as a leaf.
  if (!node) return tree._root = leaf, tree;

  // Find the existing leaf for the new point, or add it.
  while (node.length) {
    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;
    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;
    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;
  }

  // Is the new point is exactly coincident with the existing point?
  xp = +tree._x.call(null, node.data);
  yp = +tree._y.call(null, node.data);
  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;

  // Otherwise, split the leaf node until the old and new point are separated.
  do {
    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);
    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;
    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;
  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));
  return parent[j] = node, parent[i] = leaf, tree;
}

function addAll(data) {
  var d, i, n = data.length,
      x,
      y,
      xz = new Array(n),
      yz = new Array(n),
      x0 = Infinity,
      y0 = Infinity,
      x1 = -Infinity,
      y1 = -Infinity;

  // Compute the points and their extent.
  for (i = 0; i < n; ++i) {
    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;
    xz[i] = x;
    yz[i] = y;
    if (x < x0) x0 = x;
    if (x > x1) x1 = x;
    if (y < y0) y0 = y;
    if (y > y1) y1 = y;
  }

  // If there were no (valid) points, abort.
  if (x0 > x1 || y0 > y1) return this;

  // Expand the tree to cover the new points.
  this.cover(x0, y0).cover(x1, y1);

  // Add the new points.
  for (i = 0; i < n; ++i) {
    add(this, xz[i], yz[i], data[i]);
  }

  return this;
}


/***/ }),

/***/ "./node_modules/d3-quadtree/src/cover.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-quadtree/src/cover.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(x, y) {
  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points

  var x0 = this._x0,
      y0 = this._y0,
      x1 = this._x1,
      y1 = this._y1;

  // If the quadtree has no extent, initialize them.
  // Integer extent are necessary so that if we later double the extent,
  // the existing quadrant boundaries don’t change due to floating point error!
  if (isNaN(x0)) {
    x1 = (x0 = Math.floor(x)) + 1;
    y1 = (y0 = Math.floor(y)) + 1;
  }

  // Otherwise, double repeatedly to cover.
  else {
    var z = x1 - x0,
        node = this._root,
        parent,
        i;

    while (x0 > x || x >= x1 || y0 > y || y >= y1) {
      i = (y < y0) << 1 | (x < x0);
      parent = new Array(4), parent[i] = node, node = parent, z *= 2;
      switch (i) {
        case 0: x1 = x0 + z, y1 = y0 + z; break;
        case 1: x0 = x1 - z, y1 = y0 + z; break;
        case 2: x1 = x0 + z, y0 = y1 - z; break;
        case 3: x0 = x1 - z, y0 = y1 - z; break;
      }
    }

    if (this._root && this._root.length) this._root = node;
  }

  this._x0 = x0;
  this._y0 = y0;
  this._x1 = x1;
  this._y1 = y1;
  return this;
});


/***/ }),

/***/ "./node_modules/d3-quadtree/src/data.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-quadtree/src/data.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function() {
  var data = [];
  this.visit(function(node) {
    if (!node.length) do data.push(node.data); while (node = node.next)
  });
  return data;
});


/***/ }),

/***/ "./node_modules/d3-quadtree/src/extent.js":
/*!************************************************!*\
  !*** ./node_modules/d3-quadtree/src/extent.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(_) {
  return arguments.length
      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])
      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];
});


/***/ }),

/***/ "./node_modules/d3-quadtree/src/find.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-quadtree/src/find.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _quad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./quad */ "./node_modules/d3-quadtree/src/quad.js");


/* harmony default export */ __webpack_exports__["default"] = (function(x, y, radius) {
  var data,
      x0 = this._x0,
      y0 = this._y0,
      x1,
      y1,
      x2,
      y2,
      x3 = this._x1,
      y3 = this._y1,
      quads = [],
      node = this._root,
      q,
      i;

  if (node) quads.push(new _quad__WEBPACK_IMPORTED_MODULE_0__["default"](node, x0, y0, x3, y3));
  if (radius == null) radius = Infinity;
  else {
    x0 = x - radius, y0 = y - radius;
    x3 = x + radius, y3 = y + radius;
    radius *= radius;
  }

  while (q = quads.pop()) {

    // Stop searching if this quadrant can’t contain a closer node.
    if (!(node = q.node)
        || (x1 = q.x0) > x3
        || (y1 = q.y0) > y3
        || (x2 = q.x1) < x0
        || (y2 = q.y1) < y0) continue;

    // Bisect the current quadrant.
    if (node.length) {
      var xm = (x1 + x2) / 2,
          ym = (y1 + y2) / 2;

      quads.push(
        new _quad__WEBPACK_IMPORTED_MODULE_0__["default"](node[3], xm, ym, x2, y2),
        new _quad__WEBPACK_IMPORTED_MODULE_0__["default"](node[2], x1, ym, xm, y2),
        new _quad__WEBPACK_IMPORTED_MODULE_0__["default"](node[1], xm, y1, x2, ym),
        new _quad__WEBPACK_IMPORTED_MODULE_0__["default"](node[0], x1, y1, xm, ym)
      );

      // Visit the closest quadrant first.
      if (i = (y >= ym) << 1 | (x >= xm)) {
        q = quads[quads.length - 1];
        quads[quads.length - 1] = quads[quads.length - 1 - i];
        quads[quads.length - 1 - i] = q;
      }
    }

    // Visit this point. (Visiting coincident points isn’t necessary!)
    else {
      var dx = x - +this._x.call(null, node.data),
          dy = y - +this._y.call(null, node.data),
          d2 = dx * dx + dy * dy;
      if (d2 < radius) {
        var d = Math.sqrt(radius = d2);
        x0 = x - d, y0 = y - d;
        x3 = x + d, y3 = y + d;
        data = node.data;
      }
    }
  }

  return data;
});


/***/ }),

/***/ "./node_modules/d3-quadtree/src/index.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-quadtree/src/index.js ***!
  \***********************************************/
/*! exports provided: quadtree */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _quadtree__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./quadtree */ "./node_modules/d3-quadtree/src/quadtree.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "quadtree", function() { return _quadtree__WEBPACK_IMPORTED_MODULE_0__["default"]; });




/***/ }),

/***/ "./node_modules/d3-quadtree/src/quad.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-quadtree/src/quad.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(node, x0, y0, x1, y1) {
  this.node = node;
  this.x0 = x0;
  this.y0 = y0;
  this.x1 = x1;
  this.y1 = y1;
});


/***/ }),

/***/ "./node_modules/d3-quadtree/src/quadtree.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-quadtree/src/quadtree.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return quadtree; });
/* harmony import */ var _add__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./add */ "./node_modules/d3-quadtree/src/add.js");
/* harmony import */ var _cover__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cover */ "./node_modules/d3-quadtree/src/cover.js");
/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./data */ "./node_modules/d3-quadtree/src/data.js");
/* harmony import */ var _extent__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./extent */ "./node_modules/d3-quadtree/src/extent.js");
/* harmony import */ var _find__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./find */ "./node_modules/d3-quadtree/src/find.js");
/* harmony import */ var _remove__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./remove */ "./node_modules/d3-quadtree/src/remove.js");
/* harmony import */ var _root__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./root */ "./node_modules/d3-quadtree/src/root.js");
/* harmony import */ var _size__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./size */ "./node_modules/d3-quadtree/src/size.js");
/* harmony import */ var _visit__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./visit */ "./node_modules/d3-quadtree/src/visit.js");
/* harmony import */ var _visitAfter__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./visitAfter */ "./node_modules/d3-quadtree/src/visitAfter.js");
/* harmony import */ var _x__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./x */ "./node_modules/d3-quadtree/src/x.js");
/* harmony import */ var _y__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./y */ "./node_modules/d3-quadtree/src/y.js");













function quadtree(nodes, x, y) {
  var tree = new Quadtree(x == null ? _x__WEBPACK_IMPORTED_MODULE_10__["defaultX"] : x, y == null ? _y__WEBPACK_IMPORTED_MODULE_11__["defaultY"] : y, NaN, NaN, NaN, NaN);
  return nodes == null ? tree : tree.addAll(nodes);
}

function Quadtree(x, y, x0, y0, x1, y1) {
  this._x = x;
  this._y = y;
  this._x0 = x0;
  this._y0 = y0;
  this._x1 = x1;
  this._y1 = y1;
  this._root = undefined;
}

function leaf_copy(leaf) {
  var copy = {data: leaf.data}, next = copy;
  while (leaf = leaf.next) next = next.next = {data: leaf.data};
  return copy;
}

var treeProto = quadtree.prototype = Quadtree.prototype;

treeProto.copy = function() {
  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),
      node = this._root,
      nodes,
      child;

  if (!node) return copy;

  if (!node.length) return copy._root = leaf_copy(node), copy;

  nodes = [{source: node, target: copy._root = new Array(4)}];
  while (node = nodes.pop()) {
    for (var i = 0; i < 4; ++i) {
      if (child = node.source[i]) {
        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});
        else node.target[i] = leaf_copy(child);
      }
    }
  }

  return copy;
};

treeProto.add = _add__WEBPACK_IMPORTED_MODULE_0__["default"];
treeProto.addAll = _add__WEBPACK_IMPORTED_MODULE_0__["addAll"];
treeProto.cover = _cover__WEBPACK_IMPORTED_MODULE_1__["default"];
treeProto.data = _data__WEBPACK_IMPORTED_MODULE_2__["default"];
treeProto.extent = _extent__WEBPACK_IMPORTED_MODULE_3__["default"];
treeProto.find = _find__WEBPACK_IMPORTED_MODULE_4__["default"];
treeProto.remove = _remove__WEBPACK_IMPORTED_MODULE_5__["default"];
treeProto.removeAll = _remove__WEBPACK_IMPORTED_MODULE_5__["removeAll"];
treeProto.root = _root__WEBPACK_IMPORTED_MODULE_6__["default"];
treeProto.size = _size__WEBPACK_IMPORTED_MODULE_7__["default"];
treeProto.visit = _visit__WEBPACK_IMPORTED_MODULE_8__["default"];
treeProto.visitAfter = _visitAfter__WEBPACK_IMPORTED_MODULE_9__["default"];
treeProto.x = _x__WEBPACK_IMPORTED_MODULE_10__["default"];
treeProto.y = _y__WEBPACK_IMPORTED_MODULE_11__["default"];


/***/ }),

/***/ "./node_modules/d3-quadtree/src/remove.js":
/*!************************************************!*\
  !*** ./node_modules/d3-quadtree/src/remove.js ***!
  \************************************************/
/*! exports provided: default, removeAll */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "removeAll", function() { return removeAll; });
/* harmony default export */ __webpack_exports__["default"] = (function(d) {
  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points

  var parent,
      node = this._root,
      retainer,
      previous,
      next,
      x0 = this._x0,
      y0 = this._y0,
      x1 = this._x1,
      y1 = this._y1,
      x,
      y,
      xm,
      ym,
      right,
      bottom,
      i,
      j;

  // If the tree is empty, initialize the root as a leaf.
  if (!node) return this;

  // Find the leaf node for the point.
  // While descending, also retain the deepest parent with a non-removed sibling.
  if (node.length) while (true) {
    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;
    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;
    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;
    if (!node.length) break;
    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;
  }

  // Find the point to remove.
  while (node.data !== d) if (!(previous = node, node = node.next)) return this;
  if (next = node.next) delete node.next;

  // If there are multiple coincident points, remove just the point.
  if (previous) return (next ? previous.next = next : delete previous.next), this;

  // If this is the root point, remove it.
  if (!parent) return this._root = next, this;

  // Remove this leaf.
  next ? parent[i] = next : delete parent[i];

  // If the parent now contains exactly one leaf, collapse superfluous parents.
  if ((node = parent[0] || parent[1] || parent[2] || parent[3])
      && node === (parent[3] || parent[2] || parent[1] || parent[0])
      && !node.length) {
    if (retainer) retainer[j] = node;
    else this._root = node;
  }

  return this;
});

function removeAll(data) {
  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);
  return this;
}


/***/ }),

/***/ "./node_modules/d3-quadtree/src/root.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-quadtree/src/root.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function() {
  return this._root;
});


/***/ }),

/***/ "./node_modules/d3-quadtree/src/size.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-quadtree/src/size.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function() {
  var size = 0;
  this.visit(function(node) {
    if (!node.length) do ++size; while (node = node.next)
  });
  return size;
});


/***/ }),

/***/ "./node_modules/d3-quadtree/src/visit.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-quadtree/src/visit.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _quad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./quad */ "./node_modules/d3-quadtree/src/quad.js");


/* harmony default export */ __webpack_exports__["default"] = (function(callback) {
  var quads = [], q, node = this._root, child, x0, y0, x1, y1;
  if (node) quads.push(new _quad__WEBPACK_IMPORTED_MODULE_0__["default"](node, this._x0, this._y0, this._x1, this._y1));
  while (q = quads.pop()) {
    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {
      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;
      if (child = node[3]) quads.push(new _quad__WEBPACK_IMPORTED_MODULE_0__["default"](child, xm, ym, x1, y1));
      if (child = node[2]) quads.push(new _quad__WEBPACK_IMPORTED_MODULE_0__["default"](child, x0, ym, xm, y1));
      if (child = node[1]) quads.push(new _quad__WEBPACK_IMPORTED_MODULE_0__["default"](child, xm, y0, x1, ym));
      if (child = node[0]) quads.push(new _quad__WEBPACK_IMPORTED_MODULE_0__["default"](child, x0, y0, xm, ym));
    }
  }
  return this;
});


/***/ }),

/***/ "./node_modules/d3-quadtree/src/visitAfter.js":
/*!****************************************************!*\
  !*** ./node_modules/d3-quadtree/src/visitAfter.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _quad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./quad */ "./node_modules/d3-quadtree/src/quad.js");


/* harmony default export */ __webpack_exports__["default"] = (function(callback) {
  var quads = [], next = [], q;
  if (this._root) quads.push(new _quad__WEBPACK_IMPORTED_MODULE_0__["default"](this._root, this._x0, this._y0, this._x1, this._y1));
  while (q = quads.pop()) {
    var node = q.node;
    if (node.length) {
      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;
      if (child = node[0]) quads.push(new _quad__WEBPACK_IMPORTED_MODULE_0__["default"](child, x0, y0, xm, ym));
      if (child = node[1]) quads.push(new _quad__WEBPACK_IMPORTED_MODULE_0__["default"](child, xm, y0, x1, ym));
      if (child = node[2]) quads.push(new _quad__WEBPACK_IMPORTED_MODULE_0__["default"](child, x0, ym, xm, y1));
      if (child = node[3]) quads.push(new _quad__WEBPACK_IMPORTED_MODULE_0__["default"](child, xm, ym, x1, y1));
    }
    next.push(q);
  }
  while (q = next.pop()) {
    callback(q.node, q.x0, q.y0, q.x1, q.y1);
  }
  return this;
});


/***/ }),

/***/ "./node_modules/d3-quadtree/src/x.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-quadtree/src/x.js ***!
  \*******************************************/
/*! exports provided: defaultX, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultX", function() { return defaultX; });
function defaultX(d) {
  return d[0];
}

/* harmony default export */ __webpack_exports__["default"] = (function(_) {
  return arguments.length ? (this._x = _, this) : this._x;
});


/***/ }),

/***/ "./node_modules/d3-quadtree/src/y.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-quadtree/src/y.js ***!
  \*******************************************/
/*! exports provided: defaultY, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultY", function() { return defaultY; });
function defaultY(d) {
  return d[1];
}

/* harmony default export */ __webpack_exports__["default"] = (function(_) {
  return arguments.length ? (this._y = _, this) : this._y;
});


/***/ }),

/***/ "./node_modules/d3-scale/src/band.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-scale/src/band.js ***!
  \*******************************************/
/*! exports provided: default, point */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return band; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "point", function() { return point; });
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");
/* harmony import */ var _init__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./init */ "./node_modules/d3-scale/src/init.js");
/* harmony import */ var _ordinal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ordinal */ "./node_modules/d3-scale/src/ordinal.js");




function band() {
  var scale = Object(_ordinal__WEBPACK_IMPORTED_MODULE_2__["default"])().unknown(undefined),
      domain = scale.domain,
      ordinalRange = scale.range,
      r0 = 0,
      r1 = 1,
      step,
      bandwidth,
      round = false,
      paddingInner = 0,
      paddingOuter = 0,
      align = 0.5;

  delete scale.unknown;

  function rescale() {
    var n = domain().length,
        reverse = r1 < r0,
        start = reverse ? r1 : r0,
        stop = reverse ? r0 : r1;
    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);
    if (round) step = Math.floor(step);
    start += (stop - start - step * (n - paddingInner)) * align;
    bandwidth = step * (1 - paddingInner);
    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);
    var values = Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["range"])(n).map(function(i) { return start + step * i; });
    return ordinalRange(reverse ? values.reverse() : values);
  }

  scale.domain = function(_) {
    return arguments.length ? (domain(_), rescale()) : domain();
  };

  scale.range = function(_) {
    return arguments.length ? ([r0, r1] = _, r0 = +r0, r1 = +r1, rescale()) : [r0, r1];
  };

  scale.rangeRound = function(_) {
    return [r0, r1] = _, r0 = +r0, r1 = +r1, round = true, rescale();
  };

  scale.bandwidth = function() {
    return bandwidth;
  };

  scale.step = function() {
    return step;
  };

  scale.round = function(_) {
    return arguments.length ? (round = !!_, rescale()) : round;
  };

  scale.padding = function(_) {
    return arguments.length ? (paddingInner = Math.min(1, paddingOuter = +_), rescale()) : paddingInner;
  };

  scale.paddingInner = function(_) {
    return arguments.length ? (paddingInner = Math.min(1, _), rescale()) : paddingInner;
  };

  scale.paddingOuter = function(_) {
    return arguments.length ? (paddingOuter = +_, rescale()) : paddingOuter;
  };

  scale.align = function(_) {
    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;
  };

  scale.copy = function() {
    return band(domain(), [r0, r1])
        .round(round)
        .paddingInner(paddingInner)
        .paddingOuter(paddingOuter)
        .align(align);
  };

  return _init__WEBPACK_IMPORTED_MODULE_1__["initRange"].apply(rescale(), arguments);
}

function pointish(scale) {
  var copy = scale.copy;

  scale.padding = scale.paddingOuter;
  delete scale.paddingInner;
  delete scale.paddingOuter;

  scale.copy = function() {
    return pointish(copy());
  };

  return scale;
}

function point() {
  return pointish(band.apply(null, arguments).paddingInner(1));
}


/***/ }),

/***/ "./node_modules/d3-scale/src/constant.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-scale/src/constant.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(x) {
  return function() {
    return x;
  };
});


/***/ }),

/***/ "./node_modules/d3-scale/src/continuous.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-scale/src/continuous.js ***!
  \*************************************************/
/*! exports provided: identity, copy, transformer, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "identity", function() { return identity; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "copy", function() { return copy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transformer", function() { return transformer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return continuous; });
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");
/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-interpolate */ "./node_modules/d3-interpolate/src/index.js");
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./constant */ "./node_modules/d3-scale/src/constant.js");
/* harmony import */ var _number__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./number */ "./node_modules/d3-scale/src/number.js");





var unit = [0, 1];

function identity(x) {
  return x;
}

function normalize(a, b) {
  return (b -= (a = +a))
      ? function(x) { return (x - a) / b; }
      : Object(_constant__WEBPACK_IMPORTED_MODULE_2__["default"])(isNaN(b) ? NaN : 0.5);
}

function clamper(domain) {
  var a = domain[0], b = domain[domain.length - 1], t;
  if (a > b) t = a, a = b, b = t;
  return function(x) { return Math.max(a, Math.min(b, x)); };
}

// normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].
// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].
function bimap(domain, range, interpolate) {
  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];
  if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);
  else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);
  return function(x) { return r0(d0(x)); };
}

function polymap(domain, range, interpolate) {
  var j = Math.min(domain.length, range.length) - 1,
      d = new Array(j),
      r = new Array(j),
      i = -1;

  // Reverse descending domains.
  if (domain[j] < domain[0]) {
    domain = domain.slice().reverse();
    range = range.slice().reverse();
  }

  while (++i < j) {
    d[i] = normalize(domain[i], domain[i + 1]);
    r[i] = interpolate(range[i], range[i + 1]);
  }

  return function(x) {
    var i = Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["bisect"])(domain, x, 1, j) - 1;
    return r[i](d[i](x));
  };
}

function copy(source, target) {
  return target
      .domain(source.domain())
      .range(source.range())
      .interpolate(source.interpolate())
      .clamp(source.clamp())
      .unknown(source.unknown());
}

function transformer() {
  var domain = unit,
      range = unit,
      interpolate = d3_interpolate__WEBPACK_IMPORTED_MODULE_1__["interpolate"],
      transform,
      untransform,
      unknown,
      clamp = identity,
      piecewise,
      output,
      input;

  function rescale() {
    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;
    output = input = null;
    return scale;
  }

  function scale(x) {
    return isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));
  }

  scale.invert = function(y) {
    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), d3_interpolate__WEBPACK_IMPORTED_MODULE_1__["interpolateNumber"])))(y)));
  };

  scale.domain = function(_) {
    return arguments.length ? (domain = Array.from(_, _number__WEBPACK_IMPORTED_MODULE_3__["default"]), clamp === identity || (clamp = clamper(domain)), rescale()) : domain.slice();
  };

  scale.range = function(_) {
    return arguments.length ? (range = Array.from(_), rescale()) : range.slice();
  };

  scale.rangeRound = function(_) {
    return range = Array.from(_), interpolate = d3_interpolate__WEBPACK_IMPORTED_MODULE_1__["interpolateRound"], rescale();
  };

  scale.clamp = function(_) {
    return arguments.length ? (clamp = _ ? clamper(domain) : identity, scale) : clamp !== identity;
  };

  scale.interpolate = function(_) {
    return arguments.length ? (interpolate = _, rescale()) : interpolate;
  };

  scale.unknown = function(_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  return function(t, u) {
    transform = t, untransform = u;
    return rescale();
  };
}

function continuous(transform, untransform) {
  return transformer()(transform, untransform);
}


/***/ }),

/***/ "./node_modules/d3-scale/src/diverging.js":
/*!************************************************!*\
  !*** ./node_modules/d3-scale/src/diverging.js ***!
  \************************************************/
/*! exports provided: default, divergingLog, divergingSymlog, divergingPow, divergingSqrt */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return diverging; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "divergingLog", function() { return divergingLog; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "divergingSymlog", function() { return divergingSymlog; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "divergingPow", function() { return divergingPow; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "divergingSqrt", function() { return divergingSqrt; });
/* harmony import */ var _continuous__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./continuous */ "./node_modules/d3-scale/src/continuous.js");
/* harmony import */ var _init__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./init */ "./node_modules/d3-scale/src/init.js");
/* harmony import */ var _linear__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./linear */ "./node_modules/d3-scale/src/linear.js");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./log */ "./node_modules/d3-scale/src/log.js");
/* harmony import */ var _sequential__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./sequential */ "./node_modules/d3-scale/src/sequential.js");
/* harmony import */ var _symlog__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./symlog */ "./node_modules/d3-scale/src/symlog.js");
/* harmony import */ var _pow__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./pow */ "./node_modules/d3-scale/src/pow.js");








function transformer() {
  var x0 = 0,
      x1 = 0.5,
      x2 = 1,
      t0,
      t1,
      t2,
      k10,
      k21,
      interpolator = _continuous__WEBPACK_IMPORTED_MODULE_0__["identity"],
      transform,
      clamp = false,
      unknown;

  function scale(x) {
    return isNaN(x = +x) ? unknown : (x = 0.5 + ((x = +transform(x)) - t1) * (x < t1 ? k10 : k21), interpolator(clamp ? Math.max(0, Math.min(1, x)) : x));
  }

  scale.domain = function(_) {
    return arguments.length ? ([x0, x1, x2] = _, t0 = transform(x0 = +x0), t1 = transform(x1 = +x1), t2 = transform(x2 = +x2), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1), scale) : [x0, x1, x2];
  };

  scale.clamp = function(_) {
    return arguments.length ? (clamp = !!_, scale) : clamp;
  };

  scale.interpolator = function(_) {
    return arguments.length ? (interpolator = _, scale) : interpolator;
  };

  scale.unknown = function(_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  return function(t) {
    transform = t, t0 = t(x0), t1 = t(x1), t2 = t(x2), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1);
    return scale;
  };
}

function diverging() {
  var scale = Object(_linear__WEBPACK_IMPORTED_MODULE_2__["linearish"])(transformer()(_continuous__WEBPACK_IMPORTED_MODULE_0__["identity"]));

  scale.copy = function() {
    return Object(_sequential__WEBPACK_IMPORTED_MODULE_4__["copy"])(scale, diverging());
  };

  return _init__WEBPACK_IMPORTED_MODULE_1__["initInterpolator"].apply(scale, arguments);
}

function divergingLog() {
  var scale = Object(_log__WEBPACK_IMPORTED_MODULE_3__["loggish"])(transformer()).domain([0.1, 1, 10]);

  scale.copy = function() {
    return Object(_sequential__WEBPACK_IMPORTED_MODULE_4__["copy"])(scale, divergingLog()).base(scale.base());
  };

  return _init__WEBPACK_IMPORTED_MODULE_1__["initInterpolator"].apply(scale, arguments);
}

function divergingSymlog() {
  var scale = Object(_symlog__WEBPACK_IMPORTED_MODULE_5__["symlogish"])(transformer());

  scale.copy = function() {
    return Object(_sequential__WEBPACK_IMPORTED_MODULE_4__["copy"])(scale, divergingSymlog()).constant(scale.constant());
  };

  return _init__WEBPACK_IMPORTED_MODULE_1__["initInterpolator"].apply(scale, arguments);
}

function divergingPow() {
  var scale = Object(_pow__WEBPACK_IMPORTED_MODULE_6__["powish"])(transformer());

  scale.copy = function() {
    return Object(_sequential__WEBPACK_IMPORTED_MODULE_4__["copy"])(scale, divergingPow()).exponent(scale.exponent());
  };

  return _init__WEBPACK_IMPORTED_MODULE_1__["initInterpolator"].apply(scale, arguments);
}

function divergingSqrt() {
  return divergingPow.apply(null, arguments).exponent(0.5);
}


/***/ }),

/***/ "./node_modules/d3-scale/src/identity.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-scale/src/identity.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return identity; });
/* harmony import */ var _linear__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./linear */ "./node_modules/d3-scale/src/linear.js");
/* harmony import */ var _number__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./number */ "./node_modules/d3-scale/src/number.js");



function identity(domain) {
  var unknown;

  function scale(x) {
    return isNaN(x = +x) ? unknown : x;
  }

  scale.invert = scale;

  scale.domain = scale.range = function(_) {
    return arguments.length ? (domain = Array.from(_, _number__WEBPACK_IMPORTED_MODULE_1__["default"]), scale) : domain.slice();
  };

  scale.unknown = function(_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  scale.copy = function() {
    return identity(domain).unknown(unknown);
  };

  domain = arguments.length ? Array.from(domain, _number__WEBPACK_IMPORTED_MODULE_1__["default"]) : [0, 1];

  return Object(_linear__WEBPACK_IMPORTED_MODULE_0__["linearish"])(scale);
}


/***/ }),

/***/ "./node_modules/d3-scale/src/index.js":
/*!********************************************!*\
  !*** ./node_modules/d3-scale/src/index.js ***!
  \********************************************/
/*! exports provided: scaleBand, scalePoint, scaleIdentity, scaleLinear, scaleLog, scaleSymlog, scaleOrdinal, scaleImplicit, scalePow, scaleSqrt, scaleQuantile, scaleQuantize, scaleThreshold, scaleTime, scaleUtc, scaleSequential, scaleSequentialLog, scaleSequentialPow, scaleSequentialSqrt, scaleSequentialSymlog, scaleSequentialQuantile, scaleDiverging, scaleDivergingLog, scaleDivergingPow, scaleDivergingSqrt, scaleDivergingSymlog, tickFormat */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _band__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./band */ "./node_modules/d3-scale/src/band.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleBand", function() { return _band__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scalePoint", function() { return _band__WEBPACK_IMPORTED_MODULE_0__["point"]; });

/* harmony import */ var _identity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./identity */ "./node_modules/d3-scale/src/identity.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleIdentity", function() { return _identity__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _linear__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./linear */ "./node_modules/d3-scale/src/linear.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleLinear", function() { return _linear__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./log */ "./node_modules/d3-scale/src/log.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleLog", function() { return _log__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _symlog__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./symlog */ "./node_modules/d3-scale/src/symlog.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleSymlog", function() { return _symlog__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _ordinal__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ordinal */ "./node_modules/d3-scale/src/ordinal.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleOrdinal", function() { return _ordinal__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleImplicit", function() { return _ordinal__WEBPACK_IMPORTED_MODULE_5__["implicit"]; });

/* harmony import */ var _pow__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./pow */ "./node_modules/d3-scale/src/pow.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scalePow", function() { return _pow__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleSqrt", function() { return _pow__WEBPACK_IMPORTED_MODULE_6__["sqrt"]; });

/* harmony import */ var _quantile__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./quantile */ "./node_modules/d3-scale/src/quantile.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleQuantile", function() { return _quantile__WEBPACK_IMPORTED_MODULE_7__["default"]; });

/* harmony import */ var _quantize__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./quantize */ "./node_modules/d3-scale/src/quantize.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleQuantize", function() { return _quantize__WEBPACK_IMPORTED_MODULE_8__["default"]; });

/* harmony import */ var _threshold__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./threshold */ "./node_modules/d3-scale/src/threshold.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleThreshold", function() { return _threshold__WEBPACK_IMPORTED_MODULE_9__["default"]; });

/* harmony import */ var _time__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./time */ "./node_modules/d3-scale/src/time.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleTime", function() { return _time__WEBPACK_IMPORTED_MODULE_10__["default"]; });

/* harmony import */ var _utcTime__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./utcTime */ "./node_modules/d3-scale/src/utcTime.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleUtc", function() { return _utcTime__WEBPACK_IMPORTED_MODULE_11__["default"]; });

/* harmony import */ var _sequential__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./sequential */ "./node_modules/d3-scale/src/sequential.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleSequential", function() { return _sequential__WEBPACK_IMPORTED_MODULE_12__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleSequentialLog", function() { return _sequential__WEBPACK_IMPORTED_MODULE_12__["sequentialLog"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleSequentialPow", function() { return _sequential__WEBPACK_IMPORTED_MODULE_12__["sequentialPow"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleSequentialSqrt", function() { return _sequential__WEBPACK_IMPORTED_MODULE_12__["sequentialSqrt"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleSequentialSymlog", function() { return _sequential__WEBPACK_IMPORTED_MODULE_12__["sequentialSymlog"]; });

/* harmony import */ var _sequentialQuantile__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./sequentialQuantile */ "./node_modules/d3-scale/src/sequentialQuantile.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleSequentialQuantile", function() { return _sequentialQuantile__WEBPACK_IMPORTED_MODULE_13__["default"]; });

/* harmony import */ var _diverging__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./diverging */ "./node_modules/d3-scale/src/diverging.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleDiverging", function() { return _diverging__WEBPACK_IMPORTED_MODULE_14__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleDivergingLog", function() { return _diverging__WEBPACK_IMPORTED_MODULE_14__["divergingLog"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleDivergingPow", function() { return _diverging__WEBPACK_IMPORTED_MODULE_14__["divergingPow"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleDivergingSqrt", function() { return _diverging__WEBPACK_IMPORTED_MODULE_14__["divergingSqrt"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleDivergingSymlog", function() { return _diverging__WEBPACK_IMPORTED_MODULE_14__["divergingSymlog"]; });

/* harmony import */ var _tickFormat__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./tickFormat */ "./node_modules/d3-scale/src/tickFormat.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tickFormat", function() { return _tickFormat__WEBPACK_IMPORTED_MODULE_15__["default"]; });


































/***/ }),

/***/ "./node_modules/d3-scale/src/init.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-scale/src/init.js ***!
  \*******************************************/
/*! exports provided: initRange, initInterpolator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initRange", function() { return initRange; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initInterpolator", function() { return initInterpolator; });
function initRange(domain, range) {
  switch (arguments.length) {
    case 0: break;
    case 1: this.range(domain); break;
    default: this.range(range).domain(domain); break;
  }
  return this;
}

function initInterpolator(domain, interpolator) {
  switch (arguments.length) {
    case 0: break;
    case 1: this.interpolator(domain); break;
    default: this.interpolator(interpolator).domain(domain); break;
  }
  return this;
}


/***/ }),

/***/ "./node_modules/d3-scale/src/linear.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-scale/src/linear.js ***!
  \*********************************************/
/*! exports provided: linearish, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "linearish", function() { return linearish; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return linear; });
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");
/* harmony import */ var _continuous__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./continuous */ "./node_modules/d3-scale/src/continuous.js");
/* harmony import */ var _init__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./init */ "./node_modules/d3-scale/src/init.js");
/* harmony import */ var _tickFormat__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./tickFormat */ "./node_modules/d3-scale/src/tickFormat.js");





function linearish(scale) {
  var domain = scale.domain;

  scale.ticks = function(count) {
    var d = domain();
    return Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["ticks"])(d[0], d[d.length - 1], count == null ? 10 : count);
  };

  scale.tickFormat = function(count, specifier) {
    var d = domain();
    return Object(_tickFormat__WEBPACK_IMPORTED_MODULE_3__["default"])(d[0], d[d.length - 1], count == null ? 10 : count, specifier);
  };

  scale.nice = function(count) {
    if (count == null) count = 10;

    var d = domain(),
        i0 = 0,
        i1 = d.length - 1,
        start = d[i0],
        stop = d[i1],
        step;

    if (stop < start) {
      step = start, start = stop, stop = step;
      step = i0, i0 = i1, i1 = step;
    }

    step = Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["tickIncrement"])(start, stop, count);

    if (step > 0) {
      start = Math.floor(start / step) * step;
      stop = Math.ceil(stop / step) * step;
      step = Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["tickIncrement"])(start, stop, count);
    } else if (step < 0) {
      start = Math.ceil(start * step) / step;
      stop = Math.floor(stop * step) / step;
      step = Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["tickIncrement"])(start, stop, count);
    }

    if (step > 0) {
      d[i0] = Math.floor(start / step) * step;
      d[i1] = Math.ceil(stop / step) * step;
      domain(d);
    } else if (step < 0) {
      d[i0] = Math.ceil(start * step) / step;
      d[i1] = Math.floor(stop * step) / step;
      domain(d);
    }

    return scale;
  };

  return scale;
}

function linear() {
  var scale = Object(_continuous__WEBPACK_IMPORTED_MODULE_1__["default"])(_continuous__WEBPACK_IMPORTED_MODULE_1__["identity"], _continuous__WEBPACK_IMPORTED_MODULE_1__["identity"]);

  scale.copy = function() {
    return Object(_continuous__WEBPACK_IMPORTED_MODULE_1__["copy"])(scale, linear());
  };

  _init__WEBPACK_IMPORTED_MODULE_2__["initRange"].apply(scale, arguments);

  return linearish(scale);
}


/***/ }),

/***/ "./node_modules/d3-scale/src/log.js":
/*!******************************************!*\
  !*** ./node_modules/d3-scale/src/log.js ***!
  \******************************************/
/*! exports provided: loggish, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loggish", function() { return loggish; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return log; });
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");
/* harmony import */ var d3_format__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-format */ "./node_modules/d3-format/src/index.js");
/* harmony import */ var _nice__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./nice */ "./node_modules/d3-scale/src/nice.js");
/* harmony import */ var _continuous__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./continuous */ "./node_modules/d3-scale/src/continuous.js");
/* harmony import */ var _init__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./init */ "./node_modules/d3-scale/src/init.js");






function transformLog(x) {
  return Math.log(x);
}

function transformExp(x) {
  return Math.exp(x);
}

function transformLogn(x) {
  return -Math.log(-x);
}

function transformExpn(x) {
  return -Math.exp(-x);
}

function pow10(x) {
  return isFinite(x) ? +("1e" + x) : x < 0 ? 0 : x;
}

function powp(base) {
  return base === 10 ? pow10
      : base === Math.E ? Math.exp
      : function(x) { return Math.pow(base, x); };
}

function logp(base) {
  return base === Math.E ? Math.log
      : base === 10 && Math.log10
      || base === 2 && Math.log2
      || (base = Math.log(base), function(x) { return Math.log(x) / base; });
}

function reflect(f) {
  return function(x) {
    return -f(-x);
  };
}

function loggish(transform) {
  var scale = transform(transformLog, transformExp),
      domain = scale.domain,
      base = 10,
      logs,
      pows;

  function rescale() {
    logs = logp(base), pows = powp(base);
    if (domain()[0] < 0) {
      logs = reflect(logs), pows = reflect(pows);
      transform(transformLogn, transformExpn);
    } else {
      transform(transformLog, transformExp);
    }
    return scale;
  }

  scale.base = function(_) {
    return arguments.length ? (base = +_, rescale()) : base;
  };

  scale.domain = function(_) {
    return arguments.length ? (domain(_), rescale()) : domain();
  };

  scale.ticks = function(count) {
    var d = domain(),
        u = d[0],
        v = d[d.length - 1],
        r;

    if (r = v < u) i = u, u = v, v = i;

    var i = logs(u),
        j = logs(v),
        p,
        k,
        t,
        n = count == null ? 10 : +count,
        z = [];

    if (!(base % 1) && j - i < n) {
      i = Math.round(i) - 1, j = Math.round(j) + 1;
      if (u > 0) for (; i < j; ++i) {
        for (k = 1, p = pows(i); k < base; ++k) {
          t = p * k;
          if (t < u) continue;
          if (t > v) break;
          z.push(t);
        }
      } else for (; i < j; ++i) {
        for (k = base - 1, p = pows(i); k >= 1; --k) {
          t = p * k;
          if (t < u) continue;
          if (t > v) break;
          z.push(t);
        }
      }
    } else {
      z = Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["ticks"])(i, j, Math.min(j - i, n)).map(pows);
    }

    return r ? z.reverse() : z;
  };

  scale.tickFormat = function(count, specifier) {
    if (specifier == null) specifier = base === 10 ? ".0e" : ",";
    if (typeof specifier !== "function") specifier = Object(d3_format__WEBPACK_IMPORTED_MODULE_1__["format"])(specifier);
    if (count === Infinity) return specifier;
    if (count == null) count = 10;
    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?
    return function(d) {
      var i = d / pows(Math.round(logs(d)));
      if (i * base < base - 0.5) i *= base;
      return i <= k ? specifier(d) : "";
    };
  };

  scale.nice = function() {
    return domain(Object(_nice__WEBPACK_IMPORTED_MODULE_2__["default"])(domain(), {
      floor: function(x) { return pows(Math.floor(logs(x))); },
      ceil: function(x) { return pows(Math.ceil(logs(x))); }
    }));
  };

  return scale;
}

function log() {
  var scale = loggish(Object(_continuous__WEBPACK_IMPORTED_MODULE_3__["transformer"])()).domain([1, 10]);

  scale.copy = function() {
    return Object(_continuous__WEBPACK_IMPORTED_MODULE_3__["copy"])(scale, log()).base(scale.base());
  };

  _init__WEBPACK_IMPORTED_MODULE_4__["initRange"].apply(scale, arguments);

  return scale;
}


/***/ }),

/***/ "./node_modules/d3-scale/src/nice.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-scale/src/nice.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(domain, interval) {
  domain = domain.slice();

  var i0 = 0,
      i1 = domain.length - 1,
      x0 = domain[i0],
      x1 = domain[i1],
      t;

  if (x1 < x0) {
    t = i0, i0 = i1, i1 = t;
    t = x0, x0 = x1, x1 = t;
  }

  domain[i0] = interval.floor(x0);
  domain[i1] = interval.ceil(x1);
  return domain;
});


/***/ }),

/***/ "./node_modules/d3-scale/src/number.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-scale/src/number.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(x) {
  return +x;
});


/***/ }),

/***/ "./node_modules/d3-scale/src/ordinal.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-scale/src/ordinal.js ***!
  \**********************************************/
/*! exports provided: implicit, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "implicit", function() { return implicit; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return ordinal; });
/* harmony import */ var _init__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./init */ "./node_modules/d3-scale/src/init.js");


const implicit = Symbol("implicit");

function ordinal() {
  var index = new Map(),
      domain = [],
      range = [],
      unknown = implicit;

  function scale(d) {
    var key = d + "", i = index.get(key);
    if (!i) {
      if (unknown !== implicit) return unknown;
      index.set(key, i = domain.push(d));
    }
    return range[(i - 1) % range.length];
  }

  scale.domain = function(_) {
    if (!arguments.length) return domain.slice();
    domain = [], index = new Map();
    for (const value of _) {
      const key = value + "";
      if (index.has(key)) continue;
      index.set(key, domain.push(value));
    }
    return scale;
  };

  scale.range = function(_) {
    return arguments.length ? (range = Array.from(_), scale) : range.slice();
  };

  scale.unknown = function(_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  scale.copy = function() {
    return ordinal(domain, range).unknown(unknown);
  };

  _init__WEBPACK_IMPORTED_MODULE_0__["initRange"].apply(scale, arguments);

  return scale;
}


/***/ }),

/***/ "./node_modules/d3-scale/src/pow.js":
/*!******************************************!*\
  !*** ./node_modules/d3-scale/src/pow.js ***!
  \******************************************/
/*! exports provided: powish, default, sqrt */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "powish", function() { return powish; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return pow; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sqrt", function() { return sqrt; });
/* harmony import */ var _linear__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./linear */ "./node_modules/d3-scale/src/linear.js");
/* harmony import */ var _continuous__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./continuous */ "./node_modules/d3-scale/src/continuous.js");
/* harmony import */ var _init__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./init */ "./node_modules/d3-scale/src/init.js");




function transformPow(exponent) {
  return function(x) {
    return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);
  };
}

function transformSqrt(x) {
  return x < 0 ? -Math.sqrt(-x) : Math.sqrt(x);
}

function transformSquare(x) {
  return x < 0 ? -x * x : x * x;
}

function powish(transform) {
  var scale = transform(_continuous__WEBPACK_IMPORTED_MODULE_1__["identity"], _continuous__WEBPACK_IMPORTED_MODULE_1__["identity"]),
      exponent = 1;

  function rescale() {
    return exponent === 1 ? transform(_continuous__WEBPACK_IMPORTED_MODULE_1__["identity"], _continuous__WEBPACK_IMPORTED_MODULE_1__["identity"])
        : exponent === 0.5 ? transform(transformSqrt, transformSquare)
        : transform(transformPow(exponent), transformPow(1 / exponent));
  }

  scale.exponent = function(_) {
    return arguments.length ? (exponent = +_, rescale()) : exponent;
  };

  return Object(_linear__WEBPACK_IMPORTED_MODULE_0__["linearish"])(scale);
}

function pow() {
  var scale = powish(Object(_continuous__WEBPACK_IMPORTED_MODULE_1__["transformer"])());

  scale.copy = function() {
    return Object(_continuous__WEBPACK_IMPORTED_MODULE_1__["copy"])(scale, pow()).exponent(scale.exponent());
  };

  _init__WEBPACK_IMPORTED_MODULE_2__["initRange"].apply(scale, arguments);

  return scale;
}

function sqrt() {
  return pow.apply(null, arguments).exponent(0.5);
}


/***/ }),

/***/ "./node_modules/d3-scale/src/quantile.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-scale/src/quantile.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return quantile; });
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");
/* harmony import */ var _init__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./init */ "./node_modules/d3-scale/src/init.js");



function quantile() {
  var domain = [],
      range = [],
      thresholds = [],
      unknown;

  function rescale() {
    var i = 0, n = Math.max(1, range.length);
    thresholds = new Array(n - 1);
    while (++i < n) thresholds[i - 1] = Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["quantile"])(domain, i / n);
    return scale;
  }

  function scale(x) {
    return isNaN(x = +x) ? unknown : range[Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["bisect"])(thresholds, x)];
  }

  scale.invertExtent = function(y) {
    var i = range.indexOf(y);
    return i < 0 ? [NaN, NaN] : [
      i > 0 ? thresholds[i - 1] : domain[0],
      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]
    ];
  };

  scale.domain = function(_) {
    if (!arguments.length) return domain.slice();
    domain = [];
    for (let d of _) if (d != null && !isNaN(d = +d)) domain.push(d);
    domain.sort(d3_array__WEBPACK_IMPORTED_MODULE_0__["ascending"]);
    return rescale();
  };

  scale.range = function(_) {
    return arguments.length ? (range = Array.from(_), rescale()) : range.slice();
  };

  scale.unknown = function(_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  scale.quantiles = function() {
    return thresholds.slice();
  };

  scale.copy = function() {
    return quantile()
        .domain(domain)
        .range(range)
        .unknown(unknown);
  };

  return _init__WEBPACK_IMPORTED_MODULE_1__["initRange"].apply(scale, arguments);
}


/***/ }),

/***/ "./node_modules/d3-scale/src/quantize.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-scale/src/quantize.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return quantize; });
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");
/* harmony import */ var _linear__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./linear */ "./node_modules/d3-scale/src/linear.js");
/* harmony import */ var _init__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./init */ "./node_modules/d3-scale/src/init.js");




function quantize() {
  var x0 = 0,
      x1 = 1,
      n = 1,
      domain = [0.5],
      range = [0, 1],
      unknown;

  function scale(x) {
    return x <= x ? range[Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["bisect"])(domain, x, 0, n)] : unknown;
  }

  function rescale() {
    var i = -1;
    domain = new Array(n);
    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);
    return scale;
  }

  scale.domain = function(_) {
    return arguments.length ? ([x0, x1] = _, x0 = +x0, x1 = +x1, rescale()) : [x0, x1];
  };

  scale.range = function(_) {
    return arguments.length ? (n = (range = Array.from(_)).length - 1, rescale()) : range.slice();
  };

  scale.invertExtent = function(y) {
    var i = range.indexOf(y);
    return i < 0 ? [NaN, NaN]
        : i < 1 ? [x0, domain[0]]
        : i >= n ? [domain[n - 1], x1]
        : [domain[i - 1], domain[i]];
  };

  scale.unknown = function(_) {
    return arguments.length ? (unknown = _, scale) : scale;
  };

  scale.thresholds = function() {
    return domain.slice();
  };

  scale.copy = function() {
    return quantize()
        .domain([x0, x1])
        .range(range)
        .unknown(unknown);
  };

  return _init__WEBPACK_IMPORTED_MODULE_2__["initRange"].apply(Object(_linear__WEBPACK_IMPORTED_MODULE_1__["linearish"])(scale), arguments);
}


/***/ }),

/***/ "./node_modules/d3-scale/src/sequential.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-scale/src/sequential.js ***!
  \*************************************************/
/*! exports provided: copy, default, sequentialLog, sequentialSymlog, sequentialPow, sequentialSqrt */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "copy", function() { return copy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return sequential; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sequentialLog", function() { return sequentialLog; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sequentialSymlog", function() { return sequentialSymlog; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sequentialPow", function() { return sequentialPow; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sequentialSqrt", function() { return sequentialSqrt; });
/* harmony import */ var _continuous__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./continuous */ "./node_modules/d3-scale/src/continuous.js");
/* harmony import */ var _init__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./init */ "./node_modules/d3-scale/src/init.js");
/* harmony import */ var _linear__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./linear */ "./node_modules/d3-scale/src/linear.js");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./log */ "./node_modules/d3-scale/src/log.js");
/* harmony import */ var _symlog__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./symlog */ "./node_modules/d3-scale/src/symlog.js");
/* harmony import */ var _pow__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./pow */ "./node_modules/d3-scale/src/pow.js");







function transformer() {
  var x0 = 0,
      x1 = 1,
      t0,
      t1,
      k10,
      transform,
      interpolator = _continuous__WEBPACK_IMPORTED_MODULE_0__["identity"],
      clamp = false,
      unknown;

  function scale(x) {
    return isNaN(x = +x) ? unknown : interpolator(k10 === 0 ? 0.5 : (x = (transform(x) - t0) * k10, clamp ? Math.max(0, Math.min(1, x)) : x));
  }

  scale.domain = function(_) {
    return arguments.length ? ([x0, x1] = _, t0 = transform(x0 = +x0), t1 = transform(x1 = +x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0), scale) : [x0, x1];
  };

  scale.clamp = function(_) {
    return arguments.length ? (clamp = !!_, scale) : clamp;
  };

  scale.interpolator = function(_) {
    return arguments.length ? (interpolator = _, scale) : interpolator;
  };

  scale.unknown = function(_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  return function(t) {
    transform = t, t0 = t(x0), t1 = t(x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0);
    return scale;
  };
}

function copy(source, target) {
  return target
      .domain(source.domain())
      .interpolator(source.interpolator())
      .clamp(source.clamp())
      .unknown(source.unknown());
}

function sequential() {
  var scale = Object(_linear__WEBPACK_IMPORTED_MODULE_2__["linearish"])(transformer()(_continuous__WEBPACK_IMPORTED_MODULE_0__["identity"]));

  scale.copy = function() {
    return copy(scale, sequential());
  };

  return _init__WEBPACK_IMPORTED_MODULE_1__["initInterpolator"].apply(scale, arguments);
}

function sequentialLog() {
  var scale = Object(_log__WEBPACK_IMPORTED_MODULE_3__["loggish"])(transformer()).domain([1, 10]);

  scale.copy = function() {
    return copy(scale, sequentialLog()).base(scale.base());
  };

  return _init__WEBPACK_IMPORTED_MODULE_1__["initInterpolator"].apply(scale, arguments);
}

function sequentialSymlog() {
  var scale = Object(_symlog__WEBPACK_IMPORTED_MODULE_4__["symlogish"])(transformer());

  scale.copy = function() {
    return copy(scale, sequentialSymlog()).constant(scale.constant());
  };

  return _init__WEBPACK_IMPORTED_MODULE_1__["initInterpolator"].apply(scale, arguments);
}

function sequentialPow() {
  var scale = Object(_pow__WEBPACK_IMPORTED_MODULE_5__["powish"])(transformer());

  scale.copy = function() {
    return copy(scale, sequentialPow()).exponent(scale.exponent());
  };

  return _init__WEBPACK_IMPORTED_MODULE_1__["initInterpolator"].apply(scale, arguments);
}

function sequentialSqrt() {
  return sequentialPow.apply(null, arguments).exponent(0.5);
}


/***/ }),

/***/ "./node_modules/d3-scale/src/sequentialQuantile.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-scale/src/sequentialQuantile.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return sequentialQuantile; });
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");
/* harmony import */ var _continuous__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./continuous */ "./node_modules/d3-scale/src/continuous.js");
/* harmony import */ var _init__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./init */ "./node_modules/d3-scale/src/init.js");




function sequentialQuantile() {
  var domain = [],
      interpolator = _continuous__WEBPACK_IMPORTED_MODULE_1__["identity"];

  function scale(x) {
    if (!isNaN(x = +x)) return interpolator((Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["bisect"])(domain, x) - 1) / (domain.length - 1));
  }

  scale.domain = function(_) {
    if (!arguments.length) return domain.slice();
    domain = [];
    for (let d of _) if (d != null && !isNaN(d = +d)) domain.push(d);
    domain.sort(d3_array__WEBPACK_IMPORTED_MODULE_0__["ascending"]);
    return scale;
  };

  scale.interpolator = function(_) {
    return arguments.length ? (interpolator = _, scale) : interpolator;
  };

  scale.copy = function() {
    return sequentialQuantile(interpolator).domain(domain);
  };

  return _init__WEBPACK_IMPORTED_MODULE_2__["initInterpolator"].apply(scale, arguments);
}


/***/ }),

/***/ "./node_modules/d3-scale/src/symlog.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-scale/src/symlog.js ***!
  \*********************************************/
/*! exports provided: symlogish, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "symlogish", function() { return symlogish; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return symlog; });
/* harmony import */ var _linear__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./linear */ "./node_modules/d3-scale/src/linear.js");
/* harmony import */ var _continuous__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./continuous */ "./node_modules/d3-scale/src/continuous.js");
/* harmony import */ var _init__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./init */ "./node_modules/d3-scale/src/init.js");




function transformSymlog(c) {
  return function(x) {
    return Math.sign(x) * Math.log1p(Math.abs(x / c));
  };
}

function transformSymexp(c) {
  return function(x) {
    return Math.sign(x) * Math.expm1(Math.abs(x)) * c;
  };
}

function symlogish(transform) {
  var c = 1, scale = transform(transformSymlog(c), transformSymexp(c));

  scale.constant = function(_) {
    return arguments.length ? transform(transformSymlog(c = +_), transformSymexp(c)) : c;
  };

  return Object(_linear__WEBPACK_IMPORTED_MODULE_0__["linearish"])(scale);
}

function symlog() {
  var scale = symlogish(Object(_continuous__WEBPACK_IMPORTED_MODULE_1__["transformer"])());

  scale.copy = function() {
    return Object(_continuous__WEBPACK_IMPORTED_MODULE_1__["copy"])(scale, symlog()).constant(scale.constant());
  };

  return _init__WEBPACK_IMPORTED_MODULE_2__["initRange"].apply(scale, arguments);
}


/***/ }),

/***/ "./node_modules/d3-scale/src/threshold.js":
/*!************************************************!*\
  !*** ./node_modules/d3-scale/src/threshold.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return threshold; });
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");
/* harmony import */ var _init__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./init */ "./node_modules/d3-scale/src/init.js");



function threshold() {
  var domain = [0.5],
      range = [0, 1],
      unknown,
      n = 1;

  function scale(x) {
    return x <= x ? range[Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["bisect"])(domain, x, 0, n)] : unknown;
  }

  scale.domain = function(_) {
    return arguments.length ? (domain = Array.from(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();
  };

  scale.range = function(_) {
    return arguments.length ? (range = Array.from(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();
  };

  scale.invertExtent = function(y) {
    var i = range.indexOf(y);
    return [domain[i - 1], domain[i]];
  };

  scale.unknown = function(_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  scale.copy = function() {
    return threshold()
        .domain(domain)
        .range(range)
        .unknown(unknown);
  };

  return _init__WEBPACK_IMPORTED_MODULE_1__["initRange"].apply(scale, arguments);
}


/***/ }),

/***/ "./node_modules/d3-scale/src/tickFormat.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-scale/src/tickFormat.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");
/* harmony import */ var d3_format__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-format */ "./node_modules/d3-format/src/index.js");



/* harmony default export */ __webpack_exports__["default"] = (function(start, stop, count, specifier) {
  var step = Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["tickStep"])(start, stop, count),
      precision;
  specifier = Object(d3_format__WEBPACK_IMPORTED_MODULE_1__["formatSpecifier"])(specifier == null ? ",f" : specifier);
  switch (specifier.type) {
    case "s": {
      var value = Math.max(Math.abs(start), Math.abs(stop));
      if (specifier.precision == null && !isNaN(precision = Object(d3_format__WEBPACK_IMPORTED_MODULE_1__["precisionPrefix"])(step, value))) specifier.precision = precision;
      return Object(d3_format__WEBPACK_IMPORTED_MODULE_1__["formatPrefix"])(specifier, value);
    }
    case "":
    case "e":
    case "g":
    case "p":
    case "r": {
      if (specifier.precision == null && !isNaN(precision = Object(d3_format__WEBPACK_IMPORTED_MODULE_1__["precisionRound"])(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === "e");
      break;
    }
    case "f":
    case "%": {
      if (specifier.precision == null && !isNaN(precision = Object(d3_format__WEBPACK_IMPORTED_MODULE_1__["precisionFixed"])(step))) specifier.precision = precision - (specifier.type === "%") * 2;
      break;
    }
  }
  return Object(d3_format__WEBPACK_IMPORTED_MODULE_1__["format"])(specifier);
});


/***/ }),

/***/ "./node_modules/d3-scale/src/time.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-scale/src/time.js ***!
  \*******************************************/
/*! exports provided: calendar, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "calendar", function() { return calendar; });
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");
/* harmony import */ var d3_time__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-time */ "./node_modules/d3-time/src/index.js");
/* harmony import */ var d3_time_format__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-time-format */ "./node_modules/d3-time-format/src/index.js");
/* harmony import */ var _continuous__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./continuous */ "./node_modules/d3-scale/src/continuous.js");
/* harmony import */ var _init__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./init */ "./node_modules/d3-scale/src/init.js");
/* harmony import */ var _nice__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./nice */ "./node_modules/d3-scale/src/nice.js");







var durationSecond = 1000,
    durationMinute = durationSecond * 60,
    durationHour = durationMinute * 60,
    durationDay = durationHour * 24,
    durationWeek = durationDay * 7,
    durationMonth = durationDay * 30,
    durationYear = durationDay * 365;

function date(t) {
  return new Date(t);
}

function number(t) {
  return t instanceof Date ? +t : +new Date(+t);
}

function calendar(year, month, week, day, hour, minute, second, millisecond, format) {
  var scale = Object(_continuous__WEBPACK_IMPORTED_MODULE_3__["default"])(_continuous__WEBPACK_IMPORTED_MODULE_3__["identity"], _continuous__WEBPACK_IMPORTED_MODULE_3__["identity"]),
      invert = scale.invert,
      domain = scale.domain;

  var formatMillisecond = format(".%L"),
      formatSecond = format(":%S"),
      formatMinute = format("%I:%M"),
      formatHour = format("%I %p"),
      formatDay = format("%a %d"),
      formatWeek = format("%b %d"),
      formatMonth = format("%B"),
      formatYear = format("%Y");

  var tickIntervals = [
    [second,  1,      durationSecond],
    [second,  5,  5 * durationSecond],
    [second, 15, 15 * durationSecond],
    [second, 30, 30 * durationSecond],
    [minute,  1,      durationMinute],
    [minute,  5,  5 * durationMinute],
    [minute, 15, 15 * durationMinute],
    [minute, 30, 30 * durationMinute],
    [  hour,  1,      durationHour  ],
    [  hour,  3,  3 * durationHour  ],
    [  hour,  6,  6 * durationHour  ],
    [  hour, 12, 12 * durationHour  ],
    [   day,  1,      durationDay   ],
    [   day,  2,  2 * durationDay   ],
    [  week,  1,      durationWeek  ],
    [ month,  1,      durationMonth ],
    [ month,  3,  3 * durationMonth ],
    [  year,  1,      durationYear  ]
  ];

  function tickFormat(date) {
    return (second(date) < date ? formatMillisecond
        : minute(date) < date ? formatSecond
        : hour(date) < date ? formatMinute
        : day(date) < date ? formatHour
        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)
        : year(date) < date ? formatMonth
        : formatYear)(date);
  }

  function tickInterval(interval, start, stop, step) {
    if (interval == null) interval = 10;

    // If a desired tick count is specified, pick a reasonable tick interval
    // based on the extent of the domain and a rough estimate of tick size.
    // Otherwise, assume interval is already a time interval and use it.
    if (typeof interval === "number") {
      var target = Math.abs(stop - start) / interval,
          i = Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["bisector"])(function(i) { return i[2]; }).right(tickIntervals, target);
      if (i === tickIntervals.length) {
        step = Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["tickStep"])(start / durationYear, stop / durationYear, interval);
        interval = year;
      } else if (i) {
        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];
        step = i[1];
        interval = i[0];
      } else {
        step = Math.max(Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["tickStep"])(start, stop, interval), 1);
        interval = millisecond;
      }
    }

    return step == null ? interval : interval.every(step);
  }

  scale.invert = function(y) {
    return new Date(invert(y));
  };

  scale.domain = function(_) {
    return arguments.length ? domain(Array.from(_, number)) : domain().map(date);
  };

  scale.ticks = function(interval, step) {
    var d = domain(),
        t0 = d[0],
        t1 = d[d.length - 1],
        r = t1 < t0,
        t;
    if (r) t = t0, t0 = t1, t1 = t;
    t = tickInterval(interval, t0, t1, step);
    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop
    return r ? t.reverse() : t;
  };

  scale.tickFormat = function(count, specifier) {
    return specifier == null ? tickFormat : format(specifier);
  };

  scale.nice = function(interval, step) {
    var d = domain();
    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))
        ? domain(Object(_nice__WEBPACK_IMPORTED_MODULE_5__["default"])(d, interval))
        : scale;
  };

  scale.copy = function() {
    return Object(_continuous__WEBPACK_IMPORTED_MODULE_3__["copy"])(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));
  };

  return scale;
}

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return _init__WEBPACK_IMPORTED_MODULE_4__["initRange"].apply(calendar(d3_time__WEBPACK_IMPORTED_MODULE_1__["timeYear"], d3_time__WEBPACK_IMPORTED_MODULE_1__["timeMonth"], d3_time__WEBPACK_IMPORTED_MODULE_1__["timeWeek"], d3_time__WEBPACK_IMPORTED_MODULE_1__["timeDay"], d3_time__WEBPACK_IMPORTED_MODULE_1__["timeHour"], d3_time__WEBPACK_IMPORTED_MODULE_1__["timeMinute"], d3_time__WEBPACK_IMPORTED_MODULE_1__["timeSecond"], d3_time__WEBPACK_IMPORTED_MODULE_1__["timeMillisecond"], d3_time_format__WEBPACK_IMPORTED_MODULE_2__["timeFormat"]).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]), arguments);
});


/***/ }),

/***/ "./node_modules/d3-scale/src/utcTime.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-scale/src/utcTime.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _time__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./time */ "./node_modules/d3-scale/src/time.js");
/* harmony import */ var d3_time_format__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-time-format */ "./node_modules/d3-time-format/src/index.js");
/* harmony import */ var d3_time__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-time */ "./node_modules/d3-time/src/index.js");
/* harmony import */ var _init__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./init */ "./node_modules/d3-scale/src/init.js");





/* harmony default export */ __webpack_exports__["default"] = (function() {
  return _init__WEBPACK_IMPORTED_MODULE_3__["initRange"].apply(Object(_time__WEBPACK_IMPORTED_MODULE_0__["calendar"])(d3_time__WEBPACK_IMPORTED_MODULE_2__["utcYear"], d3_time__WEBPACK_IMPORTED_MODULE_2__["utcMonth"], d3_time__WEBPACK_IMPORTED_MODULE_2__["utcWeek"], d3_time__WEBPACK_IMPORTED_MODULE_2__["utcDay"], d3_time__WEBPACK_IMPORTED_MODULE_2__["utcHour"], d3_time__WEBPACK_IMPORTED_MODULE_2__["utcMinute"], d3_time__WEBPACK_IMPORTED_MODULE_2__["utcSecond"], d3_time__WEBPACK_IMPORTED_MODULE_2__["utcMillisecond"], d3_time_format__WEBPACK_IMPORTED_MODULE_1__["utcFormat"]).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]), arguments);
});


/***/ }),

/***/ "./node_modules/d3-selection/src/constant.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-selection/src/constant.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(x) {
  return function() {
    return x;
  };
});


/***/ }),

/***/ "./node_modules/d3-selection/src/create.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-selection/src/create.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _creator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./creator */ "./node_modules/d3-selection/src/creator.js");
/* harmony import */ var _select__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./select */ "./node_modules/d3-selection/src/select.js");



/* harmony default export */ __webpack_exports__["default"] = (function(name) {
  return Object(_select__WEBPACK_IMPORTED_MODULE_1__["default"])(Object(_creator__WEBPACK_IMPORTED_MODULE_0__["default"])(name).call(document.documentElement));
});


/***/ }),

/***/ "./node_modules/d3-selection/src/creator.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-selection/src/creator.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _namespace__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./namespace */ "./node_modules/d3-selection/src/namespace.js");
/* harmony import */ var _namespaces__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./namespaces */ "./node_modules/d3-selection/src/namespaces.js");



function creatorInherit(name) {
  return function() {
    var document = this.ownerDocument,
        uri = this.namespaceURI;
    return uri === _namespaces__WEBPACK_IMPORTED_MODULE_1__["xhtml"] && document.documentElement.namespaceURI === _namespaces__WEBPACK_IMPORTED_MODULE_1__["xhtml"]
        ? document.createElement(name)
        : document.createElementNS(uri, name);
  };
}

function creatorFixed(fullname) {
  return function() {
    return this.ownerDocument.createElementNS(fullname.space, fullname.local);
  };
}

/* harmony default export */ __webpack_exports__["default"] = (function(name) {
  var fullname = Object(_namespace__WEBPACK_IMPORTED_MODULE_0__["default"])(name);
  return (fullname.local
      ? creatorFixed
      : creatorInherit)(fullname);
});


/***/ }),

/***/ "./node_modules/d3-selection/src/index.js":
/*!************************************************!*\
  !*** ./node_modules/d3-selection/src/index.js ***!
  \************************************************/
/*! exports provided: create, creator, local, matcher, mouse, namespace, namespaces, clientPoint, select, selectAll, selection, selector, selectorAll, style, touch, touches, window, event, customEvent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _create__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./create */ "./node_modules/d3-selection/src/create.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "create", function() { return _create__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _creator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./creator */ "./node_modules/d3-selection/src/creator.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "creator", function() { return _creator__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _local__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./local */ "./node_modules/d3-selection/src/local.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "local", function() { return _local__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _matcher__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./matcher */ "./node_modules/d3-selection/src/matcher.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "matcher", function() { return _matcher__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _mouse__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./mouse */ "./node_modules/d3-selection/src/mouse.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mouse", function() { return _mouse__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _namespace__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./namespace */ "./node_modules/d3-selection/src/namespace.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "namespace", function() { return _namespace__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _namespaces__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./namespaces */ "./node_modules/d3-selection/src/namespaces.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "namespaces", function() { return _namespaces__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony import */ var _point__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./point */ "./node_modules/d3-selection/src/point.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "clientPoint", function() { return _point__WEBPACK_IMPORTED_MODULE_7__["default"]; });

/* harmony import */ var _select__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./select */ "./node_modules/d3-selection/src/select.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "select", function() { return _select__WEBPACK_IMPORTED_MODULE_8__["default"]; });

/* harmony import */ var _selectAll__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./selectAll */ "./node_modules/d3-selection/src/selectAll.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "selectAll", function() { return _selectAll__WEBPACK_IMPORTED_MODULE_9__["default"]; });

/* harmony import */ var _selection_index__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./selection/index */ "./node_modules/d3-selection/src/selection/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "selection", function() { return _selection_index__WEBPACK_IMPORTED_MODULE_10__["default"]; });

/* harmony import */ var _selector__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./selector */ "./node_modules/d3-selection/src/selector.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "selector", function() { return _selector__WEBPACK_IMPORTED_MODULE_11__["default"]; });

/* harmony import */ var _selectorAll__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./selectorAll */ "./node_modules/d3-selection/src/selectorAll.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "selectorAll", function() { return _selectorAll__WEBPACK_IMPORTED_MODULE_12__["default"]; });

/* harmony import */ var _selection_style__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./selection/style */ "./node_modules/d3-selection/src/selection/style.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "style", function() { return _selection_style__WEBPACK_IMPORTED_MODULE_13__["styleValue"]; });

/* harmony import */ var _touch__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./touch */ "./node_modules/d3-selection/src/touch.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "touch", function() { return _touch__WEBPACK_IMPORTED_MODULE_14__["default"]; });

/* harmony import */ var _touches__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./touches */ "./node_modules/d3-selection/src/touches.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "touches", function() { return _touches__WEBPACK_IMPORTED_MODULE_15__["default"]; });

/* harmony import */ var _window__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./window */ "./node_modules/d3-selection/src/window.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "window", function() { return _window__WEBPACK_IMPORTED_MODULE_16__["default"]; });

/* harmony import */ var _selection_on__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./selection/on */ "./node_modules/d3-selection/src/selection/on.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "event", function() { return _selection_on__WEBPACK_IMPORTED_MODULE_17__["event"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "customEvent", function() { return _selection_on__WEBPACK_IMPORTED_MODULE_17__["customEvent"]; });





















/***/ }),

/***/ "./node_modules/d3-selection/src/local.js":
/*!************************************************!*\
  !*** ./node_modules/d3-selection/src/local.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return local; });
var nextId = 0;

function local() {
  return new Local;
}

function Local() {
  this._ = "@" + (++nextId).toString(36);
}

Local.prototype = local.prototype = {
  constructor: Local,
  get: function(node) {
    var id = this._;
    while (!(id in node)) if (!(node = node.parentNode)) return;
    return node[id];
  },
  set: function(node, value) {
    return node[this._] = value;
  },
  remove: function(node) {
    return this._ in node && delete node[this._];
  },
  toString: function() {
    return this._;
  }
};


/***/ }),

/***/ "./node_modules/d3-selection/src/matcher.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-selection/src/matcher.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(selector) {
  return function() {
    return this.matches(selector);
  };
});


/***/ }),

/***/ "./node_modules/d3-selection/src/mouse.js":
/*!************************************************!*\
  !*** ./node_modules/d3-selection/src/mouse.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _sourceEvent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sourceEvent */ "./node_modules/d3-selection/src/sourceEvent.js");
/* harmony import */ var _point__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./point */ "./node_modules/d3-selection/src/point.js");



/* harmony default export */ __webpack_exports__["default"] = (function(node) {
  var event = Object(_sourceEvent__WEBPACK_IMPORTED_MODULE_0__["default"])();
  if (event.changedTouches) event = event.changedTouches[0];
  return Object(_point__WEBPACK_IMPORTED_MODULE_1__["default"])(node, event);
});


/***/ }),

/***/ "./node_modules/d3-selection/src/namespace.js":
/*!****************************************************!*\
  !*** ./node_modules/d3-selection/src/namespace.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _namespaces__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./namespaces */ "./node_modules/d3-selection/src/namespaces.js");


/* harmony default export */ __webpack_exports__["default"] = (function(name) {
  var prefix = name += "", i = prefix.indexOf(":");
  if (i >= 0 && (prefix = name.slice(0, i)) !== "xmlns") name = name.slice(i + 1);
  return _namespaces__WEBPACK_IMPORTED_MODULE_0__["default"].hasOwnProperty(prefix) ? {space: _namespaces__WEBPACK_IMPORTED_MODULE_0__["default"][prefix], local: name} : name;
});


/***/ }),

/***/ "./node_modules/d3-selection/src/namespaces.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-selection/src/namespaces.js ***!
  \*****************************************************/
/*! exports provided: xhtml, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "xhtml", function() { return xhtml; });
var xhtml = "http://www.w3.org/1999/xhtml";

/* harmony default export */ __webpack_exports__["default"] = ({
  svg: "http://www.w3.org/2000/svg",
  xhtml: xhtml,
  xlink: "http://www.w3.org/1999/xlink",
  xml: "http://www.w3.org/XML/1998/namespace",
  xmlns: "http://www.w3.org/2000/xmlns/"
});


/***/ }),

/***/ "./node_modules/d3-selection/src/point.js":
/*!************************************************!*\
  !*** ./node_modules/d3-selection/src/point.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(node, event) {
  var svg = node.ownerSVGElement || node;

  if (svg.createSVGPoint) {
    var point = svg.createSVGPoint();
    point.x = event.clientX, point.y = event.clientY;
    point = point.matrixTransform(node.getScreenCTM().inverse());
    return [point.x, point.y];
  }

  var rect = node.getBoundingClientRect();
  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];
});


/***/ }),

/***/ "./node_modules/d3-selection/src/select.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-selection/src/select.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _selection_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./selection/index */ "./node_modules/d3-selection/src/selection/index.js");


/* harmony default export */ __webpack_exports__["default"] = (function(selector) {
  return typeof selector === "string"
      ? new _selection_index__WEBPACK_IMPORTED_MODULE_0__["Selection"]([[document.querySelector(selector)]], [document.documentElement])
      : new _selection_index__WEBPACK_IMPORTED_MODULE_0__["Selection"]([[selector]], _selection_index__WEBPACK_IMPORTED_MODULE_0__["root"]);
});


/***/ }),

/***/ "./node_modules/d3-selection/src/selectAll.js":
/*!****************************************************!*\
  !*** ./node_modules/d3-selection/src/selectAll.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _selection_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./selection/index */ "./node_modules/d3-selection/src/selection/index.js");


/* harmony default export */ __webpack_exports__["default"] = (function(selector) {
  return typeof selector === "string"
      ? new _selection_index__WEBPACK_IMPORTED_MODULE_0__["Selection"]([document.querySelectorAll(selector)], [document.documentElement])
      : new _selection_index__WEBPACK_IMPORTED_MODULE_0__["Selection"]([selector == null ? [] : selector], _selection_index__WEBPACK_IMPORTED_MODULE_0__["root"]);
});


/***/ }),

/***/ "./node_modules/d3-selection/src/selection/append.js":
/*!***********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/append.js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _creator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../creator */ "./node_modules/d3-selection/src/creator.js");


/* harmony default export */ __webpack_exports__["default"] = (function(name) {
  var create = typeof name === "function" ? name : Object(_creator__WEBPACK_IMPORTED_MODULE_0__["default"])(name);
  return this.select(function() {
    return this.appendChild(create.apply(this, arguments));
  });
});


/***/ }),

/***/ "./node_modules/d3-selection/src/selection/attr.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/attr.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _namespace__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../namespace */ "./node_modules/d3-selection/src/namespace.js");


function attrRemove(name) {
  return function() {
    this.removeAttribute(name);
  };
}

function attrRemoveNS(fullname) {
  return function() {
    this.removeAttributeNS(fullname.space, fullname.local);
  };
}

function attrConstant(name, value) {
  return function() {
    this.setAttribute(name, value);
  };
}

function attrConstantNS(fullname, value) {
  return function() {
    this.setAttributeNS(fullname.space, fullname.local, value);
  };
}

function attrFunction(name, value) {
  return function() {
    var v = value.apply(this, arguments);
    if (v == null) this.removeAttribute(name);
    else this.setAttribute(name, v);
  };
}

function attrFunctionNS(fullname, value) {
  return function() {
    var v = value.apply(this, arguments);
    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);
    else this.setAttributeNS(fullname.space, fullname.local, v);
  };
}

/* harmony default export */ __webpack_exports__["default"] = (function(name, value) {
  var fullname = Object(_namespace__WEBPACK_IMPORTED_MODULE_0__["default"])(name);

  if (arguments.length < 2) {
    var node = this.node();
    return fullname.local
        ? node.getAttributeNS(fullname.space, fullname.local)
        : node.getAttribute(fullname);
  }

  return this.each((value == null
      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === "function"
      ? (fullname.local ? attrFunctionNS : attrFunction)
      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));
});


/***/ }),

/***/ "./node_modules/d3-selection/src/selection/call.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/call.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function() {
  var callback = arguments[0];
  arguments[0] = this;
  callback.apply(null, arguments);
  return this;
});


/***/ }),

/***/ "./node_modules/d3-selection/src/selection/classed.js":
/*!************************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/classed.js ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function classArray(string) {
  return string.trim().split(/^|\s+/);
}

function classList(node) {
  return node.classList || new ClassList(node);
}

function ClassList(node) {
  this._node = node;
  this._names = classArray(node.getAttribute("class") || "");
}

ClassList.prototype = {
  add: function(name) {
    var i = this._names.indexOf(name);
    if (i < 0) {
      this._names.push(name);
      this._node.setAttribute("class", this._names.join(" "));
    }
  },
  remove: function(name) {
    var i = this._names.indexOf(name);
    if (i >= 0) {
      this._names.splice(i, 1);
      this._node.setAttribute("class", this._names.join(" "));
    }
  },
  contains: function(name) {
    return this._names.indexOf(name) >= 0;
  }
};

function classedAdd(node, names) {
  var list = classList(node), i = -1, n = names.length;
  while (++i < n) list.add(names[i]);
}

function classedRemove(node, names) {
  var list = classList(node), i = -1, n = names.length;
  while (++i < n) list.remove(names[i]);
}

function classedTrue(names) {
  return function() {
    classedAdd(this, names);
  };
}

function classedFalse(names) {
  return function() {
    classedRemove(this, names);
  };
}

function classedFunction(names, value) {
  return function() {
    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);
  };
}

/* harmony default export */ __webpack_exports__["default"] = (function(name, value) {
  var names = classArray(name + "");

  if (arguments.length < 2) {
    var list = classList(this.node()), i = -1, n = names.length;
    while (++i < n) if (!list.contains(names[i])) return false;
    return true;
  }

  return this.each((typeof value === "function"
      ? classedFunction : value
      ? classedTrue
      : classedFalse)(names, value));
});


/***/ }),

/***/ "./node_modules/d3-selection/src/selection/clone.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/clone.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function selection_cloneShallow() {
  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);
}

function selection_cloneDeep() {
  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);
}

/* harmony default export */ __webpack_exports__["default"] = (function(deep) {
  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);
});


/***/ }),

/***/ "./node_modules/d3-selection/src/selection/data.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/data.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index */ "./node_modules/d3-selection/src/selection/index.js");
/* harmony import */ var _enter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./enter */ "./node_modules/d3-selection/src/selection/enter.js");
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constant */ "./node_modules/d3-selection/src/constant.js");




var keyPrefix = "$"; // Protect against keys like “__proto__”.

function bindIndex(parent, group, enter, update, exit, data) {
  var i = 0,
      node,
      groupLength = group.length,
      dataLength = data.length;

  // Put any non-null nodes that fit into update.
  // Put any null nodes into enter.
  // Put any remaining data into enter.
  for (; i < dataLength; ++i) {
    if (node = group[i]) {
      node.__data__ = data[i];
      update[i] = node;
    } else {
      enter[i] = new _enter__WEBPACK_IMPORTED_MODULE_1__["EnterNode"](parent, data[i]);
    }
  }

  // Put any non-null nodes that don’t fit into exit.
  for (; i < groupLength; ++i) {
    if (node = group[i]) {
      exit[i] = node;
    }
  }
}

function bindKey(parent, group, enter, update, exit, data, key) {
  var i,
      node,
      nodeByKeyValue = {},
      groupLength = group.length,
      dataLength = data.length,
      keyValues = new Array(groupLength),
      keyValue;

  // Compute the key for each node.
  // If multiple nodes have the same key, the duplicates are added to exit.
  for (i = 0; i < groupLength; ++i) {
    if (node = group[i]) {
      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);
      if (keyValue in nodeByKeyValue) {
        exit[i] = node;
      } else {
        nodeByKeyValue[keyValue] = node;
      }
    }
  }

  // Compute the key for each datum.
  // If there a node associated with this key, join and add it to update.
  // If there is not (or the key is a duplicate), add it to enter.
  for (i = 0; i < dataLength; ++i) {
    keyValue = keyPrefix + key.call(parent, data[i], i, data);
    if (node = nodeByKeyValue[keyValue]) {
      update[i] = node;
      node.__data__ = data[i];
      nodeByKeyValue[keyValue] = null;
    } else {
      enter[i] = new _enter__WEBPACK_IMPORTED_MODULE_1__["EnterNode"](parent, data[i]);
    }
  }

  // Add any remaining nodes that were not bound to data to exit.
  for (i = 0; i < groupLength; ++i) {
    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {
      exit[i] = node;
    }
  }
}

/* harmony default export */ __webpack_exports__["default"] = (function(value, key) {
  if (!value) {
    data = new Array(this.size()), j = -1;
    this.each(function(d) { data[++j] = d; });
    return data;
  }

  var bind = key ? bindKey : bindIndex,
      parents = this._parents,
      groups = this._groups;

  if (typeof value !== "function") value = Object(_constant__WEBPACK_IMPORTED_MODULE_2__["default"])(value);

  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {
    var parent = parents[j],
        group = groups[j],
        groupLength = group.length,
        data = value.call(parent, parent && parent.__data__, j, parents),
        dataLength = data.length,
        enterGroup = enter[j] = new Array(dataLength),
        updateGroup = update[j] = new Array(dataLength),
        exitGroup = exit[j] = new Array(groupLength);

    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);

    // Now connect the enter nodes to their following update node, such that
    // appendChild can insert the materialized enter node before this node,
    // rather than at the end of the parent node.
    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {
      if (previous = enterGroup[i0]) {
        if (i0 >= i1) i1 = i0 + 1;
        while (!(next = updateGroup[i1]) && ++i1 < dataLength);
        previous._next = next || null;
      }
    }
  }

  update = new _index__WEBPACK_IMPORTED_MODULE_0__["Selection"](update, parents);
  update._enter = enter;
  update._exit = exit;
  return update;
});


/***/ }),

/***/ "./node_modules/d3-selection/src/selection/datum.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/datum.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(value) {
  return arguments.length
      ? this.property("__data__", value)
      : this.node().__data__;
});


/***/ }),

/***/ "./node_modules/d3-selection/src/selection/dispatch.js":
/*!*************************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/dispatch.js ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _window__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../window */ "./node_modules/d3-selection/src/window.js");


function dispatchEvent(node, type, params) {
  var window = Object(_window__WEBPACK_IMPORTED_MODULE_0__["default"])(node),
      event = window.CustomEvent;

  if (typeof event === "function") {
    event = new event(type, params);
  } else {
    event = window.document.createEvent("Event");
    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;
    else event.initEvent(type, false, false);
  }

  node.dispatchEvent(event);
}

function dispatchConstant(type, params) {
  return function() {
    return dispatchEvent(this, type, params);
  };
}

function dispatchFunction(type, params) {
  return function() {
    return dispatchEvent(this, type, params.apply(this, arguments));
  };
}

/* harmony default export */ __webpack_exports__["default"] = (function(type, params) {
  return this.each((typeof params === "function"
      ? dispatchFunction
      : dispatchConstant)(type, params));
});


/***/ }),

/***/ "./node_modules/d3-selection/src/selection/each.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/each.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(callback) {

  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {
    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {
      if (node = group[i]) callback.call(node, node.__data__, i, group);
    }
  }

  return this;
});


/***/ }),

/***/ "./node_modules/d3-selection/src/selection/empty.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/empty.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function() {
  return !this.node();
});


/***/ }),

/***/ "./node_modules/d3-selection/src/selection/enter.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/enter.js ***!
  \**********************************************************/
/*! exports provided: default, EnterNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EnterNode", function() { return EnterNode; });
/* harmony import */ var _sparse__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sparse */ "./node_modules/d3-selection/src/selection/sparse.js");
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index */ "./node_modules/d3-selection/src/selection/index.js");



/* harmony default export */ __webpack_exports__["default"] = (function() {
  return new _index__WEBPACK_IMPORTED_MODULE_1__["Selection"](this._enter || this._groups.map(_sparse__WEBPACK_IMPORTED_MODULE_0__["default"]), this._parents);
});

function EnterNode(parent, datum) {
  this.ownerDocument = parent.ownerDocument;
  this.namespaceURI = parent.namespaceURI;
  this._next = null;
  this._parent = parent;
  this.__data__ = datum;
}

EnterNode.prototype = {
  constructor: EnterNode,
  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },
  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },
  querySelector: function(selector) { return this._parent.querySelector(selector); },
  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }
};


/***/ }),

/***/ "./node_modules/d3-selection/src/selection/exit.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/exit.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _sparse__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sparse */ "./node_modules/d3-selection/src/selection/sparse.js");
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index */ "./node_modules/d3-selection/src/selection/index.js");



/* harmony default export */ __webpack_exports__["default"] = (function() {
  return new _index__WEBPACK_IMPORTED_MODULE_1__["Selection"](this._exit || this._groups.map(_sparse__WEBPACK_IMPORTED_MODULE_0__["default"]), this._parents);
});


/***/ }),

/***/ "./node_modules/d3-selection/src/selection/filter.js":
/*!***********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/filter.js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index */ "./node_modules/d3-selection/src/selection/index.js");
/* harmony import */ var _matcher__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../matcher */ "./node_modules/d3-selection/src/matcher.js");



/* harmony default export */ __webpack_exports__["default"] = (function(match) {
  if (typeof match !== "function") match = Object(_matcher__WEBPACK_IMPORTED_MODULE_1__["default"])(match);

  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {
      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {
        subgroup.push(node);
      }
    }
  }

  return new _index__WEBPACK_IMPORTED_MODULE_0__["Selection"](subgroups, this._parents);
});


/***/ }),

/***/ "./node_modules/d3-selection/src/selection/html.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/html.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function htmlRemove() {
  this.innerHTML = "";
}

function htmlConstant(value) {
  return function() {
    this.innerHTML = value;
  };
}

function htmlFunction(value) {
  return function() {
    var v = value.apply(this, arguments);
    this.innerHTML = v == null ? "" : v;
  };
}

/* harmony default export */ __webpack_exports__["default"] = (function(value) {
  return arguments.length
      ? this.each(value == null
          ? htmlRemove : (typeof value === "function"
          ? htmlFunction
          : htmlConstant)(value))
      : this.node().innerHTML;
});


/***/ }),

/***/ "./node_modules/d3-selection/src/selection/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/index.js ***!
  \**********************************************************/
/*! exports provided: root, Selection, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "root", function() { return root; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Selection", function() { return Selection; });
/* harmony import */ var _select__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./select */ "./node_modules/d3-selection/src/selection/select.js");
/* harmony import */ var _selectAll__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./selectAll */ "./node_modules/d3-selection/src/selection/selectAll.js");
/* harmony import */ var _filter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./filter */ "./node_modules/d3-selection/src/selection/filter.js");
/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./data */ "./node_modules/d3-selection/src/selection/data.js");
/* harmony import */ var _enter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./enter */ "./node_modules/d3-selection/src/selection/enter.js");
/* harmony import */ var _exit__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./exit */ "./node_modules/d3-selection/src/selection/exit.js");
/* harmony import */ var _join__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./join */ "./node_modules/d3-selection/src/selection/join.js");
/* harmony import */ var _merge__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./merge */ "./node_modules/d3-selection/src/selection/merge.js");
/* harmony import */ var _order__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./order */ "./node_modules/d3-selection/src/selection/order.js");
/* harmony import */ var _sort__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./sort */ "./node_modules/d3-selection/src/selection/sort.js");
/* harmony import */ var _call__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./call */ "./node_modules/d3-selection/src/selection/call.js");
/* harmony import */ var _nodes__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./nodes */ "./node_modules/d3-selection/src/selection/nodes.js");
/* harmony import */ var _node__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./node */ "./node_modules/d3-selection/src/selection/node.js");
/* harmony import */ var _size__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./size */ "./node_modules/d3-selection/src/selection/size.js");
/* harmony import */ var _empty__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./empty */ "./node_modules/d3-selection/src/selection/empty.js");
/* harmony import */ var _each__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./each */ "./node_modules/d3-selection/src/selection/each.js");
/* harmony import */ var _attr__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./attr */ "./node_modules/d3-selection/src/selection/attr.js");
/* harmony import */ var _style__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./style */ "./node_modules/d3-selection/src/selection/style.js");
/* harmony import */ var _property__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./property */ "./node_modules/d3-selection/src/selection/property.js");
/* harmony import */ var _classed__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./classed */ "./node_modules/d3-selection/src/selection/classed.js");
/* harmony import */ var _text__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./text */ "./node_modules/d3-selection/src/selection/text.js");
/* harmony import */ var _html__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./html */ "./node_modules/d3-selection/src/selection/html.js");
/* harmony import */ var _raise__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./raise */ "./node_modules/d3-selection/src/selection/raise.js");
/* harmony import */ var _lower__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./lower */ "./node_modules/d3-selection/src/selection/lower.js");
/* harmony import */ var _append__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./append */ "./node_modules/d3-selection/src/selection/append.js");
/* harmony import */ var _insert__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./insert */ "./node_modules/d3-selection/src/selection/insert.js");
/* harmony import */ var _remove__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./remove */ "./node_modules/d3-selection/src/selection/remove.js");
/* harmony import */ var _clone__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./clone */ "./node_modules/d3-selection/src/selection/clone.js");
/* harmony import */ var _datum__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./datum */ "./node_modules/d3-selection/src/selection/datum.js");
/* harmony import */ var _on__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./on */ "./node_modules/d3-selection/src/selection/on.js");
/* harmony import */ var _dispatch__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./dispatch */ "./node_modules/d3-selection/src/selection/dispatch.js");
































var root = [null];

function Selection(groups, parents) {
  this._groups = groups;
  this._parents = parents;
}

function selection() {
  return new Selection([[document.documentElement]], root);
}

Selection.prototype = selection.prototype = {
  constructor: Selection,
  select: _select__WEBPACK_IMPORTED_MODULE_0__["default"],
  selectAll: _selectAll__WEBPACK_IMPORTED_MODULE_1__["default"],
  filter: _filter__WEBPACK_IMPORTED_MODULE_2__["default"],
  data: _data__WEBPACK_IMPORTED_MODULE_3__["default"],
  enter: _enter__WEBPACK_IMPORTED_MODULE_4__["default"],
  exit: _exit__WEBPACK_IMPORTED_MODULE_5__["default"],
  join: _join__WEBPACK_IMPORTED_MODULE_6__["default"],
  merge: _merge__WEBPACK_IMPORTED_MODULE_7__["default"],
  order: _order__WEBPACK_IMPORTED_MODULE_8__["default"],
  sort: _sort__WEBPACK_IMPORTED_MODULE_9__["default"],
  call: _call__WEBPACK_IMPORTED_MODULE_10__["default"],
  nodes: _nodes__WEBPACK_IMPORTED_MODULE_11__["default"],
  node: _node__WEBPACK_IMPORTED_MODULE_12__["default"],
  size: _size__WEBPACK_IMPORTED_MODULE_13__["default"],
  empty: _empty__WEBPACK_IMPORTED_MODULE_14__["default"],
  each: _each__WEBPACK_IMPORTED_MODULE_15__["default"],
  attr: _attr__WEBPACK_IMPORTED_MODULE_16__["default"],
  style: _style__WEBPACK_IMPORTED_MODULE_17__["default"],
  property: _property__WEBPACK_IMPORTED_MODULE_18__["default"],
  classed: _classed__WEBPACK_IMPORTED_MODULE_19__["default"],
  text: _text__WEBPACK_IMPORTED_MODULE_20__["default"],
  html: _html__WEBPACK_IMPORTED_MODULE_21__["default"],
  raise: _raise__WEBPACK_IMPORTED_MODULE_22__["default"],
  lower: _lower__WEBPACK_IMPORTED_MODULE_23__["default"],
  append: _append__WEBPACK_IMPORTED_MODULE_24__["default"],
  insert: _insert__WEBPACK_IMPORTED_MODULE_25__["default"],
  remove: _remove__WEBPACK_IMPORTED_MODULE_26__["default"],
  clone: _clone__WEBPACK_IMPORTED_MODULE_27__["default"],
  datum: _datum__WEBPACK_IMPORTED_MODULE_28__["default"],
  on: _on__WEBPACK_IMPORTED_MODULE_29__["default"],
  dispatch: _dispatch__WEBPACK_IMPORTED_MODULE_30__["default"]
};

/* harmony default export */ __webpack_exports__["default"] = (selection);


/***/ }),

/***/ "./node_modules/d3-selection/src/selection/insert.js":
/*!***********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/insert.js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _creator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../creator */ "./node_modules/d3-selection/src/creator.js");
/* harmony import */ var _selector__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../selector */ "./node_modules/d3-selection/src/selector.js");



function constantNull() {
  return null;
}

/* harmony default export */ __webpack_exports__["default"] = (function(name, before) {
  var create = typeof name === "function" ? name : Object(_creator__WEBPACK_IMPORTED_MODULE_0__["default"])(name),
      select = before == null ? constantNull : typeof before === "function" ? before : Object(_selector__WEBPACK_IMPORTED_MODULE_1__["default"])(before);
  return this.select(function() {
    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);
  });
});


/***/ }),

/***/ "./node_modules/d3-selection/src/selection/join.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/join.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(onenter, onupdate, onexit) {
  var enter = this.enter(), update = this, exit = this.exit();
  enter = typeof onenter === "function" ? onenter(enter) : enter.append(onenter + "");
  if (onupdate != null) update = onupdate(update);
  if (onexit == null) exit.remove(); else onexit(exit);
  return enter && update ? enter.merge(update).order() : update;
});


/***/ }),

/***/ "./node_modules/d3-selection/src/selection/lower.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/lower.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function lower() {
  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);
}

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return this.each(lower);
});


/***/ }),

/***/ "./node_modules/d3-selection/src/selection/merge.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/merge.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index */ "./node_modules/d3-selection/src/selection/index.js");


/* harmony default export */ __webpack_exports__["default"] = (function(selection) {

  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {
    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {
      if (node = group0[i] || group1[i]) {
        merge[i] = node;
      }
    }
  }

  for (; j < m0; ++j) {
    merges[j] = groups0[j];
  }

  return new _index__WEBPACK_IMPORTED_MODULE_0__["Selection"](merges, this._parents);
});


/***/ }),

/***/ "./node_modules/d3-selection/src/selection/node.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/node.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function() {

  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {
    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {
      var node = group[i];
      if (node) return node;
    }
  }

  return null;
});


/***/ }),

/***/ "./node_modules/d3-selection/src/selection/nodes.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/nodes.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function() {
  var nodes = new Array(this.size()), i = -1;
  this.each(function() { nodes[++i] = this; });
  return nodes;
});


/***/ }),

/***/ "./node_modules/d3-selection/src/selection/on.js":
/*!*******************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/on.js ***!
  \*******************************************************/
/*! exports provided: event, default, customEvent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "event", function() { return event; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "customEvent", function() { return customEvent; });
var filterEvents = {};

var event = null;

if (typeof document !== "undefined") {
  var element = document.documentElement;
  if (!("onmouseenter" in element)) {
    filterEvents = {mouseenter: "mouseover", mouseleave: "mouseout"};
  }
}

function filterContextListener(listener, index, group) {
  listener = contextListener(listener, index, group);
  return function(event) {
    var related = event.relatedTarget;
    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {
      listener.call(this, event);
    }
  };
}

function contextListener(listener, index, group) {
  return function(event1) {
    var event0 = event; // Events can be reentrant (e.g., focus).
    event = event1;
    try {
      listener.call(this, this.__data__, index, group);
    } finally {
      event = event0;
    }
  };
}

function parseTypenames(typenames) {
  return typenames.trim().split(/^|\s+/).map(function(t) {
    var name = "", i = t.indexOf(".");
    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);
    return {type: t, name: name};
  });
}

function onRemove(typename) {
  return function() {
    var on = this.__on;
    if (!on) return;
    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {
      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {
        this.removeEventListener(o.type, o.listener, o.capture);
      } else {
        on[++i] = o;
      }
    }
    if (++i) on.length = i;
    else delete this.__on;
  };
}

function onAdd(typename, value, capture) {
  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;
  return function(d, i, group) {
    var on = this.__on, o, listener = wrap(value, i, group);
    if (on) for (var j = 0, m = on.length; j < m; ++j) {
      if ((o = on[j]).type === typename.type && o.name === typename.name) {
        this.removeEventListener(o.type, o.listener, o.capture);
        this.addEventListener(o.type, o.listener = listener, o.capture = capture);
        o.value = value;
        return;
      }
    }
    this.addEventListener(typename.type, listener, capture);
    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};
    if (!on) this.__on = [o];
    else on.push(o);
  };
}

/* harmony default export */ __webpack_exports__["default"] = (function(typename, value, capture) {
  var typenames = parseTypenames(typename + ""), i, n = typenames.length, t;

  if (arguments.length < 2) {
    var on = this.node().__on;
    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {
      for (i = 0, o = on[j]; i < n; ++i) {
        if ((t = typenames[i]).type === o.type && t.name === o.name) {
          return o.value;
        }
      }
    }
    return;
  }

  on = value ? onAdd : onRemove;
  if (capture == null) capture = false;
  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));
  return this;
});

function customEvent(event1, listener, that, args) {
  var event0 = event;
  event1.sourceEvent = event;
  event = event1;
  try {
    return listener.apply(that, args);
  } finally {
    event = event0;
  }
}


/***/ }),

/***/ "./node_modules/d3-selection/src/selection/order.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/order.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function() {

  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {
    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {
      if (node = group[i]) {
        if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);
        next = node;
      }
    }
  }

  return this;
});


/***/ }),

/***/ "./node_modules/d3-selection/src/selection/property.js":
/*!*************************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/property.js ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function propertyRemove(name) {
  return function() {
    delete this[name];
  };
}

function propertyConstant(name, value) {
  return function() {
    this[name] = value;
  };
}

function propertyFunction(name, value) {
  return function() {
    var v = value.apply(this, arguments);
    if (v == null) delete this[name];
    else this[name] = v;
  };
}

/* harmony default export */ __webpack_exports__["default"] = (function(name, value) {
  return arguments.length > 1
      ? this.each((value == null
          ? propertyRemove : typeof value === "function"
          ? propertyFunction
          : propertyConstant)(name, value))
      : this.node()[name];
});


/***/ }),

/***/ "./node_modules/d3-selection/src/selection/raise.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/raise.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function raise() {
  if (this.nextSibling) this.parentNode.appendChild(this);
}

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return this.each(raise);
});


/***/ }),

/***/ "./node_modules/d3-selection/src/selection/remove.js":
/*!***********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/remove.js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function remove() {
  var parent = this.parentNode;
  if (parent) parent.removeChild(this);
}

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return this.each(remove);
});


/***/ }),

/***/ "./node_modules/d3-selection/src/selection/select.js":
/*!***********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/select.js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index */ "./node_modules/d3-selection/src/selection/index.js");
/* harmony import */ var _selector__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../selector */ "./node_modules/d3-selection/src/selector.js");



/* harmony default export */ __webpack_exports__["default"] = (function(select) {
  if (typeof select !== "function") select = Object(_selector__WEBPACK_IMPORTED_MODULE_1__["default"])(select);

  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {
      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {
        if ("__data__" in node) subnode.__data__ = node.__data__;
        subgroup[i] = subnode;
      }
    }
  }

  return new _index__WEBPACK_IMPORTED_MODULE_0__["Selection"](subgroups, this._parents);
});


/***/ }),

/***/ "./node_modules/d3-selection/src/selection/selectAll.js":
/*!**************************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/selectAll.js ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index */ "./node_modules/d3-selection/src/selection/index.js");
/* harmony import */ var _selectorAll__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../selectorAll */ "./node_modules/d3-selection/src/selectorAll.js");



/* harmony default export */ __webpack_exports__["default"] = (function(select) {
  if (typeof select !== "function") select = Object(_selectorAll__WEBPACK_IMPORTED_MODULE_1__["default"])(select);

  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        subgroups.push(select.call(node, node.__data__, i, group));
        parents.push(node);
      }
    }
  }

  return new _index__WEBPACK_IMPORTED_MODULE_0__["Selection"](subgroups, parents);
});


/***/ }),

/***/ "./node_modules/d3-selection/src/selection/size.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/size.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function() {
  var size = 0;
  this.each(function() { ++size; });
  return size;
});


/***/ }),

/***/ "./node_modules/d3-selection/src/selection/sort.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/sort.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index */ "./node_modules/d3-selection/src/selection/index.js");


/* harmony default export */ __webpack_exports__["default"] = (function(compare) {
  if (!compare) compare = ascending;

  function compareNode(a, b) {
    return a && b ? compare(a.__data__, b.__data__) : !a - !b;
  }

  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        sortgroup[i] = node;
      }
    }
    sortgroup.sort(compareNode);
  }

  return new _index__WEBPACK_IMPORTED_MODULE_0__["Selection"](sortgroups, this._parents).order();
});

function ascending(a, b) {
  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
}


/***/ }),

/***/ "./node_modules/d3-selection/src/selection/sparse.js":
/*!***********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/sparse.js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(update) {
  return new Array(update.length);
});


/***/ }),

/***/ "./node_modules/d3-selection/src/selection/style.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/style.js ***!
  \**********************************************************/
/*! exports provided: default, styleValue */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "styleValue", function() { return styleValue; });
/* harmony import */ var _window__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../window */ "./node_modules/d3-selection/src/window.js");


function styleRemove(name) {
  return function() {
    this.style.removeProperty(name);
  };
}

function styleConstant(name, value, priority) {
  return function() {
    this.style.setProperty(name, value, priority);
  };
}

function styleFunction(name, value, priority) {
  return function() {
    var v = value.apply(this, arguments);
    if (v == null) this.style.removeProperty(name);
    else this.style.setProperty(name, v, priority);
  };
}

/* harmony default export */ __webpack_exports__["default"] = (function(name, value, priority) {
  return arguments.length > 1
      ? this.each((value == null
            ? styleRemove : typeof value === "function"
            ? styleFunction
            : styleConstant)(name, value, priority == null ? "" : priority))
      : styleValue(this.node(), name);
});

function styleValue(node, name) {
  return node.style.getPropertyValue(name)
      || Object(_window__WEBPACK_IMPORTED_MODULE_0__["default"])(node).getComputedStyle(node, null).getPropertyValue(name);
}


/***/ }),

/***/ "./node_modules/d3-selection/src/selection/text.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/text.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function textRemove() {
  this.textContent = "";
}

function textConstant(value) {
  return function() {
    this.textContent = value;
  };
}

function textFunction(value) {
  return function() {
    var v = value.apply(this, arguments);
    this.textContent = v == null ? "" : v;
  };
}

/* harmony default export */ __webpack_exports__["default"] = (function(value) {
  return arguments.length
      ? this.each(value == null
          ? textRemove : (typeof value === "function"
          ? textFunction
          : textConstant)(value))
      : this.node().textContent;
});


/***/ }),

/***/ "./node_modules/d3-selection/src/selector.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-selection/src/selector.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function none() {}

/* harmony default export */ __webpack_exports__["default"] = (function(selector) {
  return selector == null ? none : function() {
    return this.querySelector(selector);
  };
});


/***/ }),

/***/ "./node_modules/d3-selection/src/selectorAll.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-selection/src/selectorAll.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function empty() {
  return [];
}

/* harmony default export */ __webpack_exports__["default"] = (function(selector) {
  return selector == null ? empty : function() {
    return this.querySelectorAll(selector);
  };
});


/***/ }),

/***/ "./node_modules/d3-selection/src/sourceEvent.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-selection/src/sourceEvent.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _selection_on__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./selection/on */ "./node_modules/d3-selection/src/selection/on.js");


/* harmony default export */ __webpack_exports__["default"] = (function() {
  var current = _selection_on__WEBPACK_IMPORTED_MODULE_0__["event"], source;
  while (source = current.sourceEvent) current = source;
  return current;
});


/***/ }),

/***/ "./node_modules/d3-selection/src/touch.js":
/*!************************************************!*\
  !*** ./node_modules/d3-selection/src/touch.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _sourceEvent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sourceEvent */ "./node_modules/d3-selection/src/sourceEvent.js");
/* harmony import */ var _point__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./point */ "./node_modules/d3-selection/src/point.js");



/* harmony default export */ __webpack_exports__["default"] = (function(node, touches, identifier) {
  if (arguments.length < 3) identifier = touches, touches = Object(_sourceEvent__WEBPACK_IMPORTED_MODULE_0__["default"])().changedTouches;

  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {
    if ((touch = touches[i]).identifier === identifier) {
      return Object(_point__WEBPACK_IMPORTED_MODULE_1__["default"])(node, touch);
    }
  }

  return null;
});


/***/ }),

/***/ "./node_modules/d3-selection/src/touches.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-selection/src/touches.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _sourceEvent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sourceEvent */ "./node_modules/d3-selection/src/sourceEvent.js");
/* harmony import */ var _point__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./point */ "./node_modules/d3-selection/src/point.js");



/* harmony default export */ __webpack_exports__["default"] = (function(node, touches) {
  if (touches == null) touches = Object(_sourceEvent__WEBPACK_IMPORTED_MODULE_0__["default"])().touches;

  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {
    points[i] = Object(_point__WEBPACK_IMPORTED_MODULE_1__["default"])(node, touches[i]);
  }

  return points;
});


/***/ }),

/***/ "./node_modules/d3-selection/src/window.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-selection/src/window.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(node) {
  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node
      || (node.document && node) // node is a Window
      || node.defaultView; // node is a Document
});


/***/ }),

/***/ "./node_modules/d3-shape/src/arc.js":
/*!******************************************!*\
  !*** ./node_modules/d3-shape/src/arc.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-path */ "./node_modules/d3-path/src/index.js");
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constant */ "./node_modules/d3-shape/src/constant.js");
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./math */ "./node_modules/d3-shape/src/math.js");




function arcInnerRadius(d) {
  return d.innerRadius;
}

function arcOuterRadius(d) {
  return d.outerRadius;
}

function arcStartAngle(d) {
  return d.startAngle;
}

function arcEndAngle(d) {
  return d.endAngle;
}

function arcPadAngle(d) {
  return d && d.padAngle; // Note: optional!
}

function intersect(x0, y0, x1, y1, x2, y2, x3, y3) {
  var x10 = x1 - x0, y10 = y1 - y0,
      x32 = x3 - x2, y32 = y3 - y2,
      t = y32 * x10 - x32 * y10;
  if (t * t < _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"]) return;
  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;
  return [x0 + t * x10, y0 + t * y10];
}

// Compute perpendicular offset line of length rc.
// http://mathworld.wolfram.com/Circle-LineIntersection.html
function cornerTangents(x0, y0, x1, y1, r1, rc, cw) {
  var x01 = x0 - x1,
      y01 = y0 - y1,
      lo = (cw ? rc : -rc) / Object(_math__WEBPACK_IMPORTED_MODULE_2__["sqrt"])(x01 * x01 + y01 * y01),
      ox = lo * y01,
      oy = -lo * x01,
      x11 = x0 + ox,
      y11 = y0 + oy,
      x10 = x1 + ox,
      y10 = y1 + oy,
      x00 = (x11 + x10) / 2,
      y00 = (y11 + y10) / 2,
      dx = x10 - x11,
      dy = y10 - y11,
      d2 = dx * dx + dy * dy,
      r = r1 - rc,
      D = x11 * y10 - x10 * y11,
      d = (dy < 0 ? -1 : 1) * Object(_math__WEBPACK_IMPORTED_MODULE_2__["sqrt"])(Object(_math__WEBPACK_IMPORTED_MODULE_2__["max"])(0, r * r * d2 - D * D)),
      cx0 = (D * dy - dx * d) / d2,
      cy0 = (-D * dx - dy * d) / d2,
      cx1 = (D * dy + dx * d) / d2,
      cy1 = (-D * dx + dy * d) / d2,
      dx0 = cx0 - x00,
      dy0 = cy0 - y00,
      dx1 = cx1 - x00,
      dy1 = cy1 - y00;

  // Pick the closer of the two intersection points.
  // TODO Is there a faster way to determine which intersection to use?
  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;

  return {
    cx: cx0,
    cy: cy0,
    x01: -ox,
    y01: -oy,
    x11: cx0 * (r1 / r - 1),
    y11: cy0 * (r1 / r - 1)
  };
}

/* harmony default export */ __webpack_exports__["default"] = (function() {
  var innerRadius = arcInnerRadius,
      outerRadius = arcOuterRadius,
      cornerRadius = Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(0),
      padRadius = null,
      startAngle = arcStartAngle,
      endAngle = arcEndAngle,
      padAngle = arcPadAngle,
      context = null;

  function arc() {
    var buffer,
        r,
        r0 = +innerRadius.apply(this, arguments),
        r1 = +outerRadius.apply(this, arguments),
        a0 = startAngle.apply(this, arguments) - _math__WEBPACK_IMPORTED_MODULE_2__["halfPi"],
        a1 = endAngle.apply(this, arguments) - _math__WEBPACK_IMPORTED_MODULE_2__["halfPi"],
        da = Object(_math__WEBPACK_IMPORTED_MODULE_2__["abs"])(a1 - a0),
        cw = a1 > a0;

    if (!context) context = buffer = Object(d3_path__WEBPACK_IMPORTED_MODULE_0__["path"])();

    // Ensure that the outer radius is always larger than the inner radius.
    if (r1 < r0) r = r1, r1 = r0, r0 = r;

    // Is it a point?
    if (!(r1 > _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"])) context.moveTo(0, 0);

    // Or is it a circle or annulus?
    else if (da > _math__WEBPACK_IMPORTED_MODULE_2__["tau"] - _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"]) {
      context.moveTo(r1 * Object(_math__WEBPACK_IMPORTED_MODULE_2__["cos"])(a0), r1 * Object(_math__WEBPACK_IMPORTED_MODULE_2__["sin"])(a0));
      context.arc(0, 0, r1, a0, a1, !cw);
      if (r0 > _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"]) {
        context.moveTo(r0 * Object(_math__WEBPACK_IMPORTED_MODULE_2__["cos"])(a1), r0 * Object(_math__WEBPACK_IMPORTED_MODULE_2__["sin"])(a1));
        context.arc(0, 0, r0, a1, a0, cw);
      }
    }

    // Or is it a circular or annular sector?
    else {
      var a01 = a0,
          a11 = a1,
          a00 = a0,
          a10 = a1,
          da0 = da,
          da1 = da,
          ap = padAngle.apply(this, arguments) / 2,
          rp = (ap > _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"]) && (padRadius ? +padRadius.apply(this, arguments) : Object(_math__WEBPACK_IMPORTED_MODULE_2__["sqrt"])(r0 * r0 + r1 * r1)),
          rc = Object(_math__WEBPACK_IMPORTED_MODULE_2__["min"])(Object(_math__WEBPACK_IMPORTED_MODULE_2__["abs"])(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),
          rc0 = rc,
          rc1 = rc,
          t0,
          t1;

      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.
      if (rp > _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"]) {
        var p0 = Object(_math__WEBPACK_IMPORTED_MODULE_2__["asin"])(rp / r0 * Object(_math__WEBPACK_IMPORTED_MODULE_2__["sin"])(ap)),
            p1 = Object(_math__WEBPACK_IMPORTED_MODULE_2__["asin"])(rp / r1 * Object(_math__WEBPACK_IMPORTED_MODULE_2__["sin"])(ap));
        if ((da0 -= p0 * 2) > _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"]) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;
        else da0 = 0, a00 = a10 = (a0 + a1) / 2;
        if ((da1 -= p1 * 2) > _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"]) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;
        else da1 = 0, a01 = a11 = (a0 + a1) / 2;
      }

      var x01 = r1 * Object(_math__WEBPACK_IMPORTED_MODULE_2__["cos"])(a01),
          y01 = r1 * Object(_math__WEBPACK_IMPORTED_MODULE_2__["sin"])(a01),
          x10 = r0 * Object(_math__WEBPACK_IMPORTED_MODULE_2__["cos"])(a10),
          y10 = r0 * Object(_math__WEBPACK_IMPORTED_MODULE_2__["sin"])(a10);

      // Apply rounded corners?
      if (rc > _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"]) {
        var x11 = r1 * Object(_math__WEBPACK_IMPORTED_MODULE_2__["cos"])(a11),
            y11 = r1 * Object(_math__WEBPACK_IMPORTED_MODULE_2__["sin"])(a11),
            x00 = r0 * Object(_math__WEBPACK_IMPORTED_MODULE_2__["cos"])(a00),
            y00 = r0 * Object(_math__WEBPACK_IMPORTED_MODULE_2__["sin"])(a00),
            oc;

        // Restrict the corner radius according to the sector angle.
        if (da < _math__WEBPACK_IMPORTED_MODULE_2__["pi"] && (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10))) {
          var ax = x01 - oc[0],
              ay = y01 - oc[1],
              bx = x11 - oc[0],
              by = y11 - oc[1],
              kc = 1 / Object(_math__WEBPACK_IMPORTED_MODULE_2__["sin"])(Object(_math__WEBPACK_IMPORTED_MODULE_2__["acos"])((ax * bx + ay * by) / (Object(_math__WEBPACK_IMPORTED_MODULE_2__["sqrt"])(ax * ax + ay * ay) * Object(_math__WEBPACK_IMPORTED_MODULE_2__["sqrt"])(bx * bx + by * by))) / 2),
              lc = Object(_math__WEBPACK_IMPORTED_MODULE_2__["sqrt"])(oc[0] * oc[0] + oc[1] * oc[1]);
          rc0 = Object(_math__WEBPACK_IMPORTED_MODULE_2__["min"])(rc, (r0 - lc) / (kc - 1));
          rc1 = Object(_math__WEBPACK_IMPORTED_MODULE_2__["min"])(rc, (r1 - lc) / (kc + 1));
        }
      }

      // Is the sector collapsed to a line?
      if (!(da1 > _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"])) context.moveTo(x01, y01);

      // Does the sector’s outer ring have rounded corners?
      else if (rc1 > _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"]) {
        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);
        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);

        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);

        // Have the corners merged?
        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, Object(_math__WEBPACK_IMPORTED_MODULE_2__["atan2"])(t0.y01, t0.x01), Object(_math__WEBPACK_IMPORTED_MODULE_2__["atan2"])(t1.y01, t1.x01), !cw);

        // Otherwise, draw the two corners and the ring.
        else {
          context.arc(t0.cx, t0.cy, rc1, Object(_math__WEBPACK_IMPORTED_MODULE_2__["atan2"])(t0.y01, t0.x01), Object(_math__WEBPACK_IMPORTED_MODULE_2__["atan2"])(t0.y11, t0.x11), !cw);
          context.arc(0, 0, r1, Object(_math__WEBPACK_IMPORTED_MODULE_2__["atan2"])(t0.cy + t0.y11, t0.cx + t0.x11), Object(_math__WEBPACK_IMPORTED_MODULE_2__["atan2"])(t1.cy + t1.y11, t1.cx + t1.x11), !cw);
          context.arc(t1.cx, t1.cy, rc1, Object(_math__WEBPACK_IMPORTED_MODULE_2__["atan2"])(t1.y11, t1.x11), Object(_math__WEBPACK_IMPORTED_MODULE_2__["atan2"])(t1.y01, t1.x01), !cw);
        }
      }

      // Or is the outer ring just a circular arc?
      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);

      // Is there no inner ring, and it’s a circular sector?
      // Or perhaps it’s an annular sector collapsed due to padding?
      if (!(r0 > _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"]) || !(da0 > _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"])) context.lineTo(x10, y10);

      // Does the sector’s inner ring (or point) have rounded corners?
      else if (rc0 > _math__WEBPACK_IMPORTED_MODULE_2__["epsilon"]) {
        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);
        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);

        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);

        // Have the corners merged?
        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, Object(_math__WEBPACK_IMPORTED_MODULE_2__["atan2"])(t0.y01, t0.x01), Object(_math__WEBPACK_IMPORTED_MODULE_2__["atan2"])(t1.y01, t1.x01), !cw);

        // Otherwise, draw the two corners and the ring.
        else {
          context.arc(t0.cx, t0.cy, rc0, Object(_math__WEBPACK_IMPORTED_MODULE_2__["atan2"])(t0.y01, t0.x01), Object(_math__WEBPACK_IMPORTED_MODULE_2__["atan2"])(t0.y11, t0.x11), !cw);
          context.arc(0, 0, r0, Object(_math__WEBPACK_IMPORTED_MODULE_2__["atan2"])(t0.cy + t0.y11, t0.cx + t0.x11), Object(_math__WEBPACK_IMPORTED_MODULE_2__["atan2"])(t1.cy + t1.y11, t1.cx + t1.x11), cw);
          context.arc(t1.cx, t1.cy, rc0, Object(_math__WEBPACK_IMPORTED_MODULE_2__["atan2"])(t1.y11, t1.x11), Object(_math__WEBPACK_IMPORTED_MODULE_2__["atan2"])(t1.y01, t1.x01), !cw);
        }
      }

      // Or is the inner ring just a circular arc?
      else context.arc(0, 0, r0, a10, a00, cw);
    }

    context.closePath();

    if (buffer) return context = null, buffer + "" || null;
  }

  arc.centroid = function() {
    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,
        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - _math__WEBPACK_IMPORTED_MODULE_2__["pi"] / 2;
    return [Object(_math__WEBPACK_IMPORTED_MODULE_2__["cos"])(a) * r, Object(_math__WEBPACK_IMPORTED_MODULE_2__["sin"])(a) * r];
  };

  arc.innerRadius = function(_) {
    return arguments.length ? (innerRadius = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(+_), arc) : innerRadius;
  };

  arc.outerRadius = function(_) {
    return arguments.length ? (outerRadius = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(+_), arc) : outerRadius;
  };

  arc.cornerRadius = function(_) {
    return arguments.length ? (cornerRadius = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(+_), arc) : cornerRadius;
  };

  arc.padRadius = function(_) {
    return arguments.length ? (padRadius = _ == null ? null : typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(+_), arc) : padRadius;
  };

  arc.startAngle = function(_) {
    return arguments.length ? (startAngle = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(+_), arc) : startAngle;
  };

  arc.endAngle = function(_) {
    return arguments.length ? (endAngle = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(+_), arc) : endAngle;
  };

  arc.padAngle = function(_) {
    return arguments.length ? (padAngle = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(+_), arc) : padAngle;
  };

  arc.context = function(_) {
    return arguments.length ? ((context = _ == null ? null : _), arc) : context;
  };

  return arc;
});


/***/ }),

/***/ "./node_modules/d3-shape/src/area.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-shape/src/area.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-path */ "./node_modules/d3-path/src/index.js");
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constant */ "./node_modules/d3-shape/src/constant.js");
/* harmony import */ var _curve_linear__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./curve/linear */ "./node_modules/d3-shape/src/curve/linear.js");
/* harmony import */ var _line__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./line */ "./node_modules/d3-shape/src/line.js");
/* harmony import */ var _point__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./point */ "./node_modules/d3-shape/src/point.js");






/* harmony default export */ __webpack_exports__["default"] = (function() {
  var x0 = _point__WEBPACK_IMPORTED_MODULE_4__["x"],
      x1 = null,
      y0 = Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(0),
      y1 = _point__WEBPACK_IMPORTED_MODULE_4__["y"],
      defined = Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(true),
      context = null,
      curve = _curve_linear__WEBPACK_IMPORTED_MODULE_2__["default"],
      output = null;

  function area(data) {
    var i,
        j,
        k,
        n = data.length,
        d,
        defined0 = false,
        buffer,
        x0z = new Array(n),
        y0z = new Array(n);

    if (context == null) output = curve(buffer = Object(d3_path__WEBPACK_IMPORTED_MODULE_0__["path"])());

    for (i = 0; i <= n; ++i) {
      if (!(i < n && defined(d = data[i], i, data)) === defined0) {
        if (defined0 = !defined0) {
          j = i;
          output.areaStart();
          output.lineStart();
        } else {
          output.lineEnd();
          output.lineStart();
          for (k = i - 1; k >= j; --k) {
            output.point(x0z[k], y0z[k]);
          }
          output.lineEnd();
          output.areaEnd();
        }
      }
      if (defined0) {
        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);
        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);
      }
    }

    if (buffer) return output = null, buffer + "" || null;
  }

  function arealine() {
    return Object(_line__WEBPACK_IMPORTED_MODULE_3__["default"])().defined(defined).curve(curve).context(context);
  }

  area.x = function(_) {
    return arguments.length ? (x0 = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(+_), x1 = null, area) : x0;
  };

  area.x0 = function(_) {
    return arguments.length ? (x0 = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(+_), area) : x0;
  };

  area.x1 = function(_) {
    return arguments.length ? (x1 = _ == null ? null : typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(+_), area) : x1;
  };

  area.y = function(_) {
    return arguments.length ? (y0 = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(+_), y1 = null, area) : y0;
  };

  area.y0 = function(_) {
    return arguments.length ? (y0 = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(+_), area) : y0;
  };

  area.y1 = function(_) {
    return arguments.length ? (y1 = _ == null ? null : typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(+_), area) : y1;
  };

  area.lineX0 =
  area.lineY0 = function() {
    return arealine().x(x0).y(y0);
  };

  area.lineY1 = function() {
    return arealine().x(x0).y(y1);
  };

  area.lineX1 = function() {
    return arealine().x(x1).y(y0);
  };

  area.defined = function(_) {
    return arguments.length ? (defined = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(!!_), area) : defined;
  };

  area.curve = function(_) {
    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;
  };

  area.context = function(_) {
    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;
  };

  return area;
});


/***/ }),

/***/ "./node_modules/d3-shape/src/areaRadial.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-shape/src/areaRadial.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _curve_radial__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./curve/radial */ "./node_modules/d3-shape/src/curve/radial.js");
/* harmony import */ var _area__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./area */ "./node_modules/d3-shape/src/area.js");
/* harmony import */ var _lineRadial__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lineRadial */ "./node_modules/d3-shape/src/lineRadial.js");




/* harmony default export */ __webpack_exports__["default"] = (function() {
  var a = Object(_area__WEBPACK_IMPORTED_MODULE_1__["default"])().curve(_curve_radial__WEBPACK_IMPORTED_MODULE_0__["curveRadialLinear"]),
      c = a.curve,
      x0 = a.lineX0,
      x1 = a.lineX1,
      y0 = a.lineY0,
      y1 = a.lineY1;

  a.angle = a.x, delete a.x;
  a.startAngle = a.x0, delete a.x0;
  a.endAngle = a.x1, delete a.x1;
  a.radius = a.y, delete a.y;
  a.innerRadius = a.y0, delete a.y0;
  a.outerRadius = a.y1, delete a.y1;
  a.lineStartAngle = function() { return Object(_lineRadial__WEBPACK_IMPORTED_MODULE_2__["lineRadial"])(x0()); }, delete a.lineX0;
  a.lineEndAngle = function() { return Object(_lineRadial__WEBPACK_IMPORTED_MODULE_2__["lineRadial"])(x1()); }, delete a.lineX1;
  a.lineInnerRadius = function() { return Object(_lineRadial__WEBPACK_IMPORTED_MODULE_2__["lineRadial"])(y0()); }, delete a.lineY0;
  a.lineOuterRadius = function() { return Object(_lineRadial__WEBPACK_IMPORTED_MODULE_2__["lineRadial"])(y1()); }, delete a.lineY1;

  a.curve = function(_) {
    return arguments.length ? c(Object(_curve_radial__WEBPACK_IMPORTED_MODULE_0__["default"])(_)) : c()._curve;
  };

  return a;
});


/***/ }),

/***/ "./node_modules/d3-shape/src/array.js":
/*!********************************************!*\
  !*** ./node_modules/d3-shape/src/array.js ***!
  \********************************************/
/*! exports provided: slice */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "slice", function() { return slice; });
var slice = Array.prototype.slice;


/***/ }),

/***/ "./node_modules/d3-shape/src/constant.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-shape/src/constant.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(x) {
  return function constant() {
    return x;
  };
});


/***/ }),

/***/ "./node_modules/d3-shape/src/curve/basis.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/basis.js ***!
  \**************************************************/
/*! exports provided: point, Basis, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "point", function() { return point; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Basis", function() { return Basis; });
function point(that, x, y) {
  that._context.bezierCurveTo(
    (2 * that._x0 + that._x1) / 3,
    (2 * that._y0 + that._y1) / 3,
    (that._x0 + 2 * that._x1) / 3,
    (that._y0 + 2 * that._y1) / 3,
    (that._x0 + 4 * that._x1 + x) / 6,
    (that._y0 + 4 * that._y1 + y) / 6
  );
}

function Basis(context) {
  this._context = context;
}

Basis.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 =
    this._y0 = this._y1 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 3: point(this, this._x1, this._y1); // proceed
      case 2: this._context.lineTo(this._x1, this._y1); break;
    }
    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x, y) {
    x = +x, y = +y;
    switch (this._point) {
      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
      case 1: this._point = 2; break;
      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed
      default: point(this, x, y); break;
    }
    this._x0 = this._x1, this._x1 = x;
    this._y0 = this._y1, this._y1 = y;
  }
};

/* harmony default export */ __webpack_exports__["default"] = (function(context) {
  return new Basis(context);
});


/***/ }),

/***/ "./node_modules/d3-shape/src/curve/basisClosed.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/basisClosed.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _noop__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../noop */ "./node_modules/d3-shape/src/noop.js");
/* harmony import */ var _basis__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./basis */ "./node_modules/d3-shape/src/curve/basis.js");



function BasisClosed(context) {
  this._context = context;
}

BasisClosed.prototype = {
  areaStart: _noop__WEBPACK_IMPORTED_MODULE_0__["default"],
  areaEnd: _noop__WEBPACK_IMPORTED_MODULE_0__["default"],
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =
    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 1: {
        this._context.moveTo(this._x2, this._y2);
        this._context.closePath();
        break;
      }
      case 2: {
        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);
        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);
        this._context.closePath();
        break;
      }
      case 3: {
        this.point(this._x2, this._y2);
        this.point(this._x3, this._y3);
        this.point(this._x4, this._y4);
        break;
      }
    }
  },
  point: function(x, y) {
    x = +x, y = +y;
    switch (this._point) {
      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;
      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;
      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;
      default: Object(_basis__WEBPACK_IMPORTED_MODULE_1__["point"])(this, x, y); break;
    }
    this._x0 = this._x1, this._x1 = x;
    this._y0 = this._y1, this._y1 = y;
  }
};

/* harmony default export */ __webpack_exports__["default"] = (function(context) {
  return new BasisClosed(context);
});


/***/ }),

/***/ "./node_modules/d3-shape/src/curve/basisOpen.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/basisOpen.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _basis__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./basis */ "./node_modules/d3-shape/src/curve/basis.js");


function BasisOpen(context) {
  this._context = context;
}

BasisOpen.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 =
    this._y0 = this._y1 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x, y) {
    x = +x, y = +y;
    switch (this._point) {
      case 0: this._point = 1; break;
      case 1: this._point = 2; break;
      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;
      case 3: this._point = 4; // proceed
      default: Object(_basis__WEBPACK_IMPORTED_MODULE_0__["point"])(this, x, y); break;
    }
    this._x0 = this._x1, this._x1 = x;
    this._y0 = this._y1, this._y1 = y;
  }
};

/* harmony default export */ __webpack_exports__["default"] = (function(context) {
  return new BasisOpen(context);
});


/***/ }),

/***/ "./node_modules/d3-shape/src/curve/bundle.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/bundle.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _basis__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./basis */ "./node_modules/d3-shape/src/curve/basis.js");


function Bundle(context, beta) {
  this._basis = new _basis__WEBPACK_IMPORTED_MODULE_0__["Basis"](context);
  this._beta = beta;
}

Bundle.prototype = {
  lineStart: function() {
    this._x = [];
    this._y = [];
    this._basis.lineStart();
  },
  lineEnd: function() {
    var x = this._x,
        y = this._y,
        j = x.length - 1;

    if (j > 0) {
      var x0 = x[0],
          y0 = y[0],
          dx = x[j] - x0,
          dy = y[j] - y0,
          i = -1,
          t;

      while (++i <= j) {
        t = i / j;
        this._basis.point(
          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),
          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)
        );
      }
    }

    this._x = this._y = null;
    this._basis.lineEnd();
  },
  point: function(x, y) {
    this._x.push(+x);
    this._y.push(+y);
  }
};

/* harmony default export */ __webpack_exports__["default"] = ((function custom(beta) {

  function bundle(context) {
    return beta === 1 ? new _basis__WEBPACK_IMPORTED_MODULE_0__["Basis"](context) : new Bundle(context, beta);
  }

  bundle.beta = function(beta) {
    return custom(+beta);
  };

  return bundle;
})(0.85));


/***/ }),

/***/ "./node_modules/d3-shape/src/curve/cardinal.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/cardinal.js ***!
  \*****************************************************/
/*! exports provided: point, Cardinal, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "point", function() { return point; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Cardinal", function() { return Cardinal; });
function point(that, x, y) {
  that._context.bezierCurveTo(
    that._x1 + that._k * (that._x2 - that._x0),
    that._y1 + that._k * (that._y2 - that._y0),
    that._x2 + that._k * (that._x1 - x),
    that._y2 + that._k * (that._y1 - y),
    that._x2,
    that._y2
  );
}

function Cardinal(context, tension) {
  this._context = context;
  this._k = (1 - tension) / 6;
}

Cardinal.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._x2 =
    this._y0 = this._y1 = this._y2 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 2: this._context.lineTo(this._x2, this._y2); break;
      case 3: point(this, this._x1, this._y1); break;
    }
    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x, y) {
    x = +x, y = +y;
    switch (this._point) {
      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;
      case 2: this._point = 3; // proceed
      default: point(this, x, y); break;
    }
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};

/* harmony default export */ __webpack_exports__["default"] = ((function custom(tension) {

  function cardinal(context) {
    return new Cardinal(context, tension);
  }

  cardinal.tension = function(tension) {
    return custom(+tension);
  };

  return cardinal;
})(0));


/***/ }),

/***/ "./node_modules/d3-shape/src/curve/cardinalClosed.js":
/*!***********************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/cardinalClosed.js ***!
  \***********************************************************/
/*! exports provided: CardinalClosed, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CardinalClosed", function() { return CardinalClosed; });
/* harmony import */ var _noop__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../noop */ "./node_modules/d3-shape/src/noop.js");
/* harmony import */ var _cardinal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cardinal */ "./node_modules/d3-shape/src/curve/cardinal.js");



function CardinalClosed(context, tension) {
  this._context = context;
  this._k = (1 - tension) / 6;
}

CardinalClosed.prototype = {
  areaStart: _noop__WEBPACK_IMPORTED_MODULE_0__["default"],
  areaEnd: _noop__WEBPACK_IMPORTED_MODULE_0__["default"],
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =
    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 1: {
        this._context.moveTo(this._x3, this._y3);
        this._context.closePath();
        break;
      }
      case 2: {
        this._context.lineTo(this._x3, this._y3);
        this._context.closePath();
        break;
      }
      case 3: {
        this.point(this._x3, this._y3);
        this.point(this._x4, this._y4);
        this.point(this._x5, this._y5);
        break;
      }
    }
  },
  point: function(x, y) {
    x = +x, y = +y;
    switch (this._point) {
      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;
      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;
      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;
      default: Object(_cardinal__WEBPACK_IMPORTED_MODULE_1__["point"])(this, x, y); break;
    }
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};

/* harmony default export */ __webpack_exports__["default"] = ((function custom(tension) {

  function cardinal(context) {
    return new CardinalClosed(context, tension);
  }

  cardinal.tension = function(tension) {
    return custom(+tension);
  };

  return cardinal;
})(0));


/***/ }),

/***/ "./node_modules/d3-shape/src/curve/cardinalOpen.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/cardinalOpen.js ***!
  \*********************************************************/
/*! exports provided: CardinalOpen, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CardinalOpen", function() { return CardinalOpen; });
/* harmony import */ var _cardinal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cardinal */ "./node_modules/d3-shape/src/curve/cardinal.js");


function CardinalOpen(context, tension) {
  this._context = context;
  this._k = (1 - tension) / 6;
}

CardinalOpen.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._x2 =
    this._y0 = this._y1 = this._y2 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x, y) {
    x = +x, y = +y;
    switch (this._point) {
      case 0: this._point = 1; break;
      case 1: this._point = 2; break;
      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;
      case 3: this._point = 4; // proceed
      default: Object(_cardinal__WEBPACK_IMPORTED_MODULE_0__["point"])(this, x, y); break;
    }
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};

/* harmony default export */ __webpack_exports__["default"] = ((function custom(tension) {

  function cardinal(context) {
    return new CardinalOpen(context, tension);
  }

  cardinal.tension = function(tension) {
    return custom(+tension);
  };

  return cardinal;
})(0));


/***/ }),

/***/ "./node_modules/d3-shape/src/curve/catmullRom.js":
/*!*******************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/catmullRom.js ***!
  \*******************************************************/
/*! exports provided: point, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "point", function() { return point; });
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math */ "./node_modules/d3-shape/src/math.js");
/* harmony import */ var _cardinal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cardinal */ "./node_modules/d3-shape/src/curve/cardinal.js");



function point(that, x, y) {
  var x1 = that._x1,
      y1 = that._y1,
      x2 = that._x2,
      y2 = that._y2;

  if (that._l01_a > _math__WEBPACK_IMPORTED_MODULE_0__["epsilon"]) {
    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,
        n = 3 * that._l01_a * (that._l01_a + that._l12_a);
    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;
    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;
  }

  if (that._l23_a > _math__WEBPACK_IMPORTED_MODULE_0__["epsilon"]) {
    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,
        m = 3 * that._l23_a * (that._l23_a + that._l12_a);
    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;
    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;
  }

  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);
}

function CatmullRom(context, alpha) {
  this._context = context;
  this._alpha = alpha;
}

CatmullRom.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._x2 =
    this._y0 = this._y1 = this._y2 = NaN;
    this._l01_a = this._l12_a = this._l23_a =
    this._l01_2a = this._l12_2a = this._l23_2a =
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 2: this._context.lineTo(this._x2, this._y2); break;
      case 3: this.point(this._x2, this._y2); break;
    }
    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x, y) {
    x = +x, y = +y;

    if (this._point) {
      var x23 = this._x2 - x,
          y23 = this._y2 - y;
      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
    }

    switch (this._point) {
      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
      case 1: this._point = 2; break;
      case 2: this._point = 3; // proceed
      default: point(this, x, y); break;
    }

    this._l01_a = this._l12_a, this._l12_a = this._l23_a;
    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};

/* harmony default export */ __webpack_exports__["default"] = ((function custom(alpha) {

  function catmullRom(context) {
    return alpha ? new CatmullRom(context, alpha) : new _cardinal__WEBPACK_IMPORTED_MODULE_1__["Cardinal"](context, 0);
  }

  catmullRom.alpha = function(alpha) {
    return custom(+alpha);
  };

  return catmullRom;
})(0.5));


/***/ }),

/***/ "./node_modules/d3-shape/src/curve/catmullRomClosed.js":
/*!*************************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/catmullRomClosed.js ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _cardinalClosed__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cardinalClosed */ "./node_modules/d3-shape/src/curve/cardinalClosed.js");
/* harmony import */ var _noop__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../noop */ "./node_modules/d3-shape/src/noop.js");
/* harmony import */ var _catmullRom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./catmullRom */ "./node_modules/d3-shape/src/curve/catmullRom.js");




function CatmullRomClosed(context, alpha) {
  this._context = context;
  this._alpha = alpha;
}

CatmullRomClosed.prototype = {
  areaStart: _noop__WEBPACK_IMPORTED_MODULE_1__["default"],
  areaEnd: _noop__WEBPACK_IMPORTED_MODULE_1__["default"],
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =
    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;
    this._l01_a = this._l12_a = this._l23_a =
    this._l01_2a = this._l12_2a = this._l23_2a =
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 1: {
        this._context.moveTo(this._x3, this._y3);
        this._context.closePath();
        break;
      }
      case 2: {
        this._context.lineTo(this._x3, this._y3);
        this._context.closePath();
        break;
      }
      case 3: {
        this.point(this._x3, this._y3);
        this.point(this._x4, this._y4);
        this.point(this._x5, this._y5);
        break;
      }
    }
  },
  point: function(x, y) {
    x = +x, y = +y;

    if (this._point) {
      var x23 = this._x2 - x,
          y23 = this._y2 - y;
      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
    }

    switch (this._point) {
      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;
      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;
      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;
      default: Object(_catmullRom__WEBPACK_IMPORTED_MODULE_2__["point"])(this, x, y); break;
    }

    this._l01_a = this._l12_a, this._l12_a = this._l23_a;
    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};

/* harmony default export */ __webpack_exports__["default"] = ((function custom(alpha) {

  function catmullRom(context) {
    return alpha ? new CatmullRomClosed(context, alpha) : new _cardinalClosed__WEBPACK_IMPORTED_MODULE_0__["CardinalClosed"](context, 0);
  }

  catmullRom.alpha = function(alpha) {
    return custom(+alpha);
  };

  return catmullRom;
})(0.5));


/***/ }),

/***/ "./node_modules/d3-shape/src/curve/catmullRomOpen.js":
/*!***********************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/catmullRomOpen.js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _cardinalOpen__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cardinalOpen */ "./node_modules/d3-shape/src/curve/cardinalOpen.js");
/* harmony import */ var _catmullRom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./catmullRom */ "./node_modules/d3-shape/src/curve/catmullRom.js");



function CatmullRomOpen(context, alpha) {
  this._context = context;
  this._alpha = alpha;
}

CatmullRomOpen.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._x2 =
    this._y0 = this._y1 = this._y2 = NaN;
    this._l01_a = this._l12_a = this._l23_a =
    this._l01_2a = this._l12_2a = this._l23_2a =
    this._point = 0;
  },
  lineEnd: function() {
    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x, y) {
    x = +x, y = +y;

    if (this._point) {
      var x23 = this._x2 - x,
          y23 = this._y2 - y;
      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
    }

    switch (this._point) {
      case 0: this._point = 1; break;
      case 1: this._point = 2; break;
      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;
      case 3: this._point = 4; // proceed
      default: Object(_catmullRom__WEBPACK_IMPORTED_MODULE_1__["point"])(this, x, y); break;
    }

    this._l01_a = this._l12_a, this._l12_a = this._l23_a;
    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};

/* harmony default export */ __webpack_exports__["default"] = ((function custom(alpha) {

  function catmullRom(context) {
    return alpha ? new CatmullRomOpen(context, alpha) : new _cardinalOpen__WEBPACK_IMPORTED_MODULE_0__["CardinalOpen"](context, 0);
  }

  catmullRom.alpha = function(alpha) {
    return custom(+alpha);
  };

  return catmullRom;
})(0.5));


/***/ }),

/***/ "./node_modules/d3-shape/src/curve/linear.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/linear.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function Linear(context) {
  this._context = context;
}

Linear.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._point = 0;
  },
  lineEnd: function() {
    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x, y) {
    x = +x, y = +y;
    switch (this._point) {
      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
      case 1: this._point = 2; // proceed
      default: this._context.lineTo(x, y); break;
    }
  }
};

/* harmony default export */ __webpack_exports__["default"] = (function(context) {
  return new Linear(context);
});


/***/ }),

/***/ "./node_modules/d3-shape/src/curve/linearClosed.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/linearClosed.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _noop__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../noop */ "./node_modules/d3-shape/src/noop.js");


function LinearClosed(context) {
  this._context = context;
}

LinearClosed.prototype = {
  areaStart: _noop__WEBPACK_IMPORTED_MODULE_0__["default"],
  areaEnd: _noop__WEBPACK_IMPORTED_MODULE_0__["default"],
  lineStart: function() {
    this._point = 0;
  },
  lineEnd: function() {
    if (this._point) this._context.closePath();
  },
  point: function(x, y) {
    x = +x, y = +y;
    if (this._point) this._context.lineTo(x, y);
    else this._point = 1, this._context.moveTo(x, y);
  }
};

/* harmony default export */ __webpack_exports__["default"] = (function(context) {
  return new LinearClosed(context);
});


/***/ }),

/***/ "./node_modules/d3-shape/src/curve/monotone.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/monotone.js ***!
  \*****************************************************/
/*! exports provided: monotoneX, monotoneY */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "monotoneX", function() { return monotoneX; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "monotoneY", function() { return monotoneY; });
function sign(x) {
  return x < 0 ? -1 : 1;
}

// Calculate the slopes of the tangents (Hermite-type interpolation) based on
// the following paper: Steffen, M. 1990. A Simple Method for Monotonic
// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.
// NOV(II), P. 443, 1990.
function slope3(that, x2, y2) {
  var h0 = that._x1 - that._x0,
      h1 = x2 - that._x1,
      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),
      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),
      p = (s0 * h1 + s1 * h0) / (h0 + h1);
  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;
}

// Calculate a one-sided slope.
function slope2(that, t) {
  var h = that._x1 - that._x0;
  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;
}

// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations
// "you can express cubic Hermite interpolation in terms of cubic Bézier curves
// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1".
function point(that, t0, t1) {
  var x0 = that._x0,
      y0 = that._y0,
      x1 = that._x1,
      y1 = that._y1,
      dx = (x1 - x0) / 3;
  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);
}

function MonotoneX(context) {
  this._context = context;
}

MonotoneX.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 =
    this._y0 = this._y1 =
    this._t0 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 2: this._context.lineTo(this._x1, this._y1); break;
      case 3: point(this, this._t0, slope2(this, this._t0)); break;
    }
    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x, y) {
    var t1 = NaN;

    x = +x, y = +y;
    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.
    switch (this._point) {
      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
      case 1: this._point = 2; break;
      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;
      default: point(this, this._t0, t1 = slope3(this, x, y)); break;
    }

    this._x0 = this._x1, this._x1 = x;
    this._y0 = this._y1, this._y1 = y;
    this._t0 = t1;
  }
}

function MonotoneY(context) {
  this._context = new ReflectContext(context);
}

(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {
  MonotoneX.prototype.point.call(this, y, x);
};

function ReflectContext(context) {
  this._context = context;
}

ReflectContext.prototype = {
  moveTo: function(x, y) { this._context.moveTo(y, x); },
  closePath: function() { this._context.closePath(); },
  lineTo: function(x, y) { this._context.lineTo(y, x); },
  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }
};

function monotoneX(context) {
  return new MonotoneX(context);
}

function monotoneY(context) {
  return new MonotoneY(context);
}


/***/ }),

/***/ "./node_modules/d3-shape/src/curve/natural.js":
/*!****************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/natural.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function Natural(context) {
  this._context = context;
}

Natural.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x = [];
    this._y = [];
  },
  lineEnd: function() {
    var x = this._x,
        y = this._y,
        n = x.length;

    if (n) {
      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);
      if (n === 2) {
        this._context.lineTo(x[1], y[1]);
      } else {
        var px = controlPoints(x),
            py = controlPoints(y);
        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {
          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);
        }
      }
    }

    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();
    this._line = 1 - this._line;
    this._x = this._y = null;
  },
  point: function(x, y) {
    this._x.push(+x);
    this._y.push(+y);
  }
};

// See https://www.particleincell.com/2012/bezier-splines/ for derivation.
function controlPoints(x) {
  var i,
      n = x.length - 1,
      m,
      a = new Array(n),
      b = new Array(n),
      r = new Array(n);
  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];
  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];
  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];
  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];
  a[n - 1] = r[n - 1] / b[n - 1];
  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];
  b[n - 1] = (x[n] + a[n - 1]) / 2;
  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];
  return [a, b];
}

/* harmony default export */ __webpack_exports__["default"] = (function(context) {
  return new Natural(context);
});


/***/ }),

/***/ "./node_modules/d3-shape/src/curve/radial.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/radial.js ***!
  \***************************************************/
/*! exports provided: curveRadialLinear, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "curveRadialLinear", function() { return curveRadialLinear; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return curveRadial; });
/* harmony import */ var _linear__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./linear */ "./node_modules/d3-shape/src/curve/linear.js");


var curveRadialLinear = curveRadial(_linear__WEBPACK_IMPORTED_MODULE_0__["default"]);

function Radial(curve) {
  this._curve = curve;
}

Radial.prototype = {
  areaStart: function() {
    this._curve.areaStart();
  },
  areaEnd: function() {
    this._curve.areaEnd();
  },
  lineStart: function() {
    this._curve.lineStart();
  },
  lineEnd: function() {
    this._curve.lineEnd();
  },
  point: function(a, r) {
    this._curve.point(r * Math.sin(a), r * -Math.cos(a));
  }
};

function curveRadial(curve) {

  function radial(context) {
    return new Radial(curve(context));
  }

  radial._curve = curve;

  return radial;
}


/***/ }),

/***/ "./node_modules/d3-shape/src/curve/step.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/step.js ***!
  \*************************************************/
/*! exports provided: default, stepBefore, stepAfter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "stepBefore", function() { return stepBefore; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "stepAfter", function() { return stepAfter; });
function Step(context, t) {
  this._context = context;
  this._t = t;
}

Step.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x = this._y = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);
    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;
  },
  point: function(x, y) {
    x = +x, y = +y;
    switch (this._point) {
      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
      case 1: this._point = 2; // proceed
      default: {
        if (this._t <= 0) {
          this._context.lineTo(this._x, y);
          this._context.lineTo(x, y);
        } else {
          var x1 = this._x * (1 - this._t) + x * this._t;
          this._context.lineTo(x1, this._y);
          this._context.lineTo(x1, y);
        }
        break;
      }
    }
    this._x = x, this._y = y;
  }
};

/* harmony default export */ __webpack_exports__["default"] = (function(context) {
  return new Step(context, 0.5);
});

function stepBefore(context) {
  return new Step(context, 0);
}

function stepAfter(context) {
  return new Step(context, 1);
}


/***/ }),

/***/ "./node_modules/d3-shape/src/descending.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-shape/src/descending.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(a, b) {
  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;
});


/***/ }),

/***/ "./node_modules/d3-shape/src/identity.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-shape/src/identity.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(d) {
  return d;
});


/***/ }),

/***/ "./node_modules/d3-shape/src/index.js":
/*!********************************************!*\
  !*** ./node_modules/d3-shape/src/index.js ***!
  \********************************************/
/*! exports provided: arc, area, line, pie, areaRadial, radialArea, lineRadial, radialLine, pointRadial, linkHorizontal, linkVertical, linkRadial, symbol, symbols, symbolCircle, symbolCross, symbolDiamond, symbolSquare, symbolStar, symbolTriangle, symbolWye, curveBasisClosed, curveBasisOpen, curveBasis, curveBundle, curveCardinalClosed, curveCardinalOpen, curveCardinal, curveCatmullRomClosed, curveCatmullRomOpen, curveCatmullRom, curveLinearClosed, curveLinear, curveMonotoneX, curveMonotoneY, curveNatural, curveStep, curveStepAfter, curveStepBefore, stack, stackOffsetExpand, stackOffsetDiverging, stackOffsetNone, stackOffsetSilhouette, stackOffsetWiggle, stackOrderAppearance, stackOrderAscending, stackOrderDescending, stackOrderInsideOut, stackOrderNone, stackOrderReverse */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _arc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./arc */ "./node_modules/d3-shape/src/arc.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "arc", function() { return _arc__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _area__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./area */ "./node_modules/d3-shape/src/area.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "area", function() { return _area__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _line__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./line */ "./node_modules/d3-shape/src/line.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "line", function() { return _line__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _pie__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pie */ "./node_modules/d3-shape/src/pie.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pie", function() { return _pie__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _areaRadial__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./areaRadial */ "./node_modules/d3-shape/src/areaRadial.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "areaRadial", function() { return _areaRadial__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "radialArea", function() { return _areaRadial__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _lineRadial__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./lineRadial */ "./node_modules/d3-shape/src/lineRadial.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "lineRadial", function() { return _lineRadial__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "radialLine", function() { return _lineRadial__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _pointRadial__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./pointRadial */ "./node_modules/d3-shape/src/pointRadial.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pointRadial", function() { return _pointRadial__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony import */ var _link_index__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./link/index */ "./node_modules/d3-shape/src/link/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "linkHorizontal", function() { return _link_index__WEBPACK_IMPORTED_MODULE_7__["linkHorizontal"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "linkVertical", function() { return _link_index__WEBPACK_IMPORTED_MODULE_7__["linkVertical"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "linkRadial", function() { return _link_index__WEBPACK_IMPORTED_MODULE_7__["linkRadial"]; });

/* harmony import */ var _symbol__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./symbol */ "./node_modules/d3-shape/src/symbol.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "symbol", function() { return _symbol__WEBPACK_IMPORTED_MODULE_8__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "symbols", function() { return _symbol__WEBPACK_IMPORTED_MODULE_8__["symbols"]; });

/* harmony import */ var _symbol_circle__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./symbol/circle */ "./node_modules/d3-shape/src/symbol/circle.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "symbolCircle", function() { return _symbol_circle__WEBPACK_IMPORTED_MODULE_9__["default"]; });

/* harmony import */ var _symbol_cross__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./symbol/cross */ "./node_modules/d3-shape/src/symbol/cross.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "symbolCross", function() { return _symbol_cross__WEBPACK_IMPORTED_MODULE_10__["default"]; });

/* harmony import */ var _symbol_diamond__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./symbol/diamond */ "./node_modules/d3-shape/src/symbol/diamond.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "symbolDiamond", function() { return _symbol_diamond__WEBPACK_IMPORTED_MODULE_11__["default"]; });

/* harmony import */ var _symbol_square__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./symbol/square */ "./node_modules/d3-shape/src/symbol/square.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "symbolSquare", function() { return _symbol_square__WEBPACK_IMPORTED_MODULE_12__["default"]; });

/* harmony import */ var _symbol_star__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./symbol/star */ "./node_modules/d3-shape/src/symbol/star.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "symbolStar", function() { return _symbol_star__WEBPACK_IMPORTED_MODULE_13__["default"]; });

/* harmony import */ var _symbol_triangle__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./symbol/triangle */ "./node_modules/d3-shape/src/symbol/triangle.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "symbolTriangle", function() { return _symbol_triangle__WEBPACK_IMPORTED_MODULE_14__["default"]; });

/* harmony import */ var _symbol_wye__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./symbol/wye */ "./node_modules/d3-shape/src/symbol/wye.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "symbolWye", function() { return _symbol_wye__WEBPACK_IMPORTED_MODULE_15__["default"]; });

/* harmony import */ var _curve_basisClosed__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./curve/basisClosed */ "./node_modules/d3-shape/src/curve/basisClosed.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveBasisClosed", function() { return _curve_basisClosed__WEBPACK_IMPORTED_MODULE_16__["default"]; });

/* harmony import */ var _curve_basisOpen__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./curve/basisOpen */ "./node_modules/d3-shape/src/curve/basisOpen.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveBasisOpen", function() { return _curve_basisOpen__WEBPACK_IMPORTED_MODULE_17__["default"]; });

/* harmony import */ var _curve_basis__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./curve/basis */ "./node_modules/d3-shape/src/curve/basis.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveBasis", function() { return _curve_basis__WEBPACK_IMPORTED_MODULE_18__["default"]; });

/* harmony import */ var _curve_bundle__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./curve/bundle */ "./node_modules/d3-shape/src/curve/bundle.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveBundle", function() { return _curve_bundle__WEBPACK_IMPORTED_MODULE_19__["default"]; });

/* harmony import */ var _curve_cardinalClosed__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./curve/cardinalClosed */ "./node_modules/d3-shape/src/curve/cardinalClosed.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveCardinalClosed", function() { return _curve_cardinalClosed__WEBPACK_IMPORTED_MODULE_20__["default"]; });

/* harmony import */ var _curve_cardinalOpen__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./curve/cardinalOpen */ "./node_modules/d3-shape/src/curve/cardinalOpen.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveCardinalOpen", function() { return _curve_cardinalOpen__WEBPACK_IMPORTED_MODULE_21__["default"]; });

/* harmony import */ var _curve_cardinal__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./curve/cardinal */ "./node_modules/d3-shape/src/curve/cardinal.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveCardinal", function() { return _curve_cardinal__WEBPACK_IMPORTED_MODULE_22__["default"]; });

/* harmony import */ var _curve_catmullRomClosed__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./curve/catmullRomClosed */ "./node_modules/d3-shape/src/curve/catmullRomClosed.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveCatmullRomClosed", function() { return _curve_catmullRomClosed__WEBPACK_IMPORTED_MODULE_23__["default"]; });

/* harmony import */ var _curve_catmullRomOpen__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./curve/catmullRomOpen */ "./node_modules/d3-shape/src/curve/catmullRomOpen.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveCatmullRomOpen", function() { return _curve_catmullRomOpen__WEBPACK_IMPORTED_MODULE_24__["default"]; });

/* harmony import */ var _curve_catmullRom__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./curve/catmullRom */ "./node_modules/d3-shape/src/curve/catmullRom.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveCatmullRom", function() { return _curve_catmullRom__WEBPACK_IMPORTED_MODULE_25__["default"]; });

/* harmony import */ var _curve_linearClosed__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./curve/linearClosed */ "./node_modules/d3-shape/src/curve/linearClosed.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveLinearClosed", function() { return _curve_linearClosed__WEBPACK_IMPORTED_MODULE_26__["default"]; });

/* harmony import */ var _curve_linear__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./curve/linear */ "./node_modules/d3-shape/src/curve/linear.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveLinear", function() { return _curve_linear__WEBPACK_IMPORTED_MODULE_27__["default"]; });

/* harmony import */ var _curve_monotone__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./curve/monotone */ "./node_modules/d3-shape/src/curve/monotone.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveMonotoneX", function() { return _curve_monotone__WEBPACK_IMPORTED_MODULE_28__["monotoneX"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveMonotoneY", function() { return _curve_monotone__WEBPACK_IMPORTED_MODULE_28__["monotoneY"]; });

/* harmony import */ var _curve_natural__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./curve/natural */ "./node_modules/d3-shape/src/curve/natural.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveNatural", function() { return _curve_natural__WEBPACK_IMPORTED_MODULE_29__["default"]; });

/* harmony import */ var _curve_step__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./curve/step */ "./node_modules/d3-shape/src/curve/step.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveStep", function() { return _curve_step__WEBPACK_IMPORTED_MODULE_30__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveStepAfter", function() { return _curve_step__WEBPACK_IMPORTED_MODULE_30__["stepAfter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curveStepBefore", function() { return _curve_step__WEBPACK_IMPORTED_MODULE_30__["stepBefore"]; });

/* harmony import */ var _stack__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./stack */ "./node_modules/d3-shape/src/stack.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stack", function() { return _stack__WEBPACK_IMPORTED_MODULE_31__["default"]; });

/* harmony import */ var _offset_expand__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./offset/expand */ "./node_modules/d3-shape/src/offset/expand.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stackOffsetExpand", function() { return _offset_expand__WEBPACK_IMPORTED_MODULE_32__["default"]; });

/* harmony import */ var _offset_diverging__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./offset/diverging */ "./node_modules/d3-shape/src/offset/diverging.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stackOffsetDiverging", function() { return _offset_diverging__WEBPACK_IMPORTED_MODULE_33__["default"]; });

/* harmony import */ var _offset_none__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./offset/none */ "./node_modules/d3-shape/src/offset/none.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stackOffsetNone", function() { return _offset_none__WEBPACK_IMPORTED_MODULE_34__["default"]; });

/* harmony import */ var _offset_silhouette__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./offset/silhouette */ "./node_modules/d3-shape/src/offset/silhouette.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stackOffsetSilhouette", function() { return _offset_silhouette__WEBPACK_IMPORTED_MODULE_35__["default"]; });

/* harmony import */ var _offset_wiggle__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./offset/wiggle */ "./node_modules/d3-shape/src/offset/wiggle.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stackOffsetWiggle", function() { return _offset_wiggle__WEBPACK_IMPORTED_MODULE_36__["default"]; });

/* harmony import */ var _order_appearance__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./order/appearance */ "./node_modules/d3-shape/src/order/appearance.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stackOrderAppearance", function() { return _order_appearance__WEBPACK_IMPORTED_MODULE_37__["default"]; });

/* harmony import */ var _order_ascending__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./order/ascending */ "./node_modules/d3-shape/src/order/ascending.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stackOrderAscending", function() { return _order_ascending__WEBPACK_IMPORTED_MODULE_38__["default"]; });

/* harmony import */ var _order_descending__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./order/descending */ "./node_modules/d3-shape/src/order/descending.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stackOrderDescending", function() { return _order_descending__WEBPACK_IMPORTED_MODULE_39__["default"]; });

/* harmony import */ var _order_insideOut__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./order/insideOut */ "./node_modules/d3-shape/src/order/insideOut.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stackOrderInsideOut", function() { return _order_insideOut__WEBPACK_IMPORTED_MODULE_40__["default"]; });

/* harmony import */ var _order_none__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./order/none */ "./node_modules/d3-shape/src/order/none.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stackOrderNone", function() { return _order_none__WEBPACK_IMPORTED_MODULE_41__["default"]; });

/* harmony import */ var _order_reverse__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./order/reverse */ "./node_modules/d3-shape/src/order/reverse.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stackOrderReverse", function() { return _order_reverse__WEBPACK_IMPORTED_MODULE_42__["default"]; });





 // Note: radialArea is deprecated!
 // Note: radialLine is deprecated!










































/***/ }),

/***/ "./node_modules/d3-shape/src/line.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-shape/src/line.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-path */ "./node_modules/d3-path/src/index.js");
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constant */ "./node_modules/d3-shape/src/constant.js");
/* harmony import */ var _curve_linear__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./curve/linear */ "./node_modules/d3-shape/src/curve/linear.js");
/* harmony import */ var _point__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./point */ "./node_modules/d3-shape/src/point.js");





/* harmony default export */ __webpack_exports__["default"] = (function() {
  var x = _point__WEBPACK_IMPORTED_MODULE_3__["x"],
      y = _point__WEBPACK_IMPORTED_MODULE_3__["y"],
      defined = Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(true),
      context = null,
      curve = _curve_linear__WEBPACK_IMPORTED_MODULE_2__["default"],
      output = null;

  function line(data) {
    var i,
        n = data.length,
        d,
        defined0 = false,
        buffer;

    if (context == null) output = curve(buffer = Object(d3_path__WEBPACK_IMPORTED_MODULE_0__["path"])());

    for (i = 0; i <= n; ++i) {
      if (!(i < n && defined(d = data[i], i, data)) === defined0) {
        if (defined0 = !defined0) output.lineStart();
        else output.lineEnd();
      }
      if (defined0) output.point(+x(d, i, data), +y(d, i, data));
    }

    if (buffer) return output = null, buffer + "" || null;
  }

  line.x = function(_) {
    return arguments.length ? (x = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(+_), line) : x;
  };

  line.y = function(_) {
    return arguments.length ? (y = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(+_), line) : y;
  };

  line.defined = function(_) {
    return arguments.length ? (defined = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(!!_), line) : defined;
  };

  line.curve = function(_) {
    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;
  };

  line.context = function(_) {
    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;
  };

  return line;
});


/***/ }),

/***/ "./node_modules/d3-shape/src/lineRadial.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-shape/src/lineRadial.js ***!
  \*************************************************/
/*! exports provided: lineRadial, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "lineRadial", function() { return lineRadial; });
/* harmony import */ var _curve_radial__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./curve/radial */ "./node_modules/d3-shape/src/curve/radial.js");
/* harmony import */ var _line__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./line */ "./node_modules/d3-shape/src/line.js");



function lineRadial(l) {
  var c = l.curve;

  l.angle = l.x, delete l.x;
  l.radius = l.y, delete l.y;

  l.curve = function(_) {
    return arguments.length ? c(Object(_curve_radial__WEBPACK_IMPORTED_MODULE_0__["default"])(_)) : c()._curve;
  };

  return l;
}

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return lineRadial(Object(_line__WEBPACK_IMPORTED_MODULE_1__["default"])().curve(_curve_radial__WEBPACK_IMPORTED_MODULE_0__["curveRadialLinear"]));
});


/***/ }),

/***/ "./node_modules/d3-shape/src/link/index.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-shape/src/link/index.js ***!
  \*************************************************/
/*! exports provided: linkHorizontal, linkVertical, linkRadial */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "linkHorizontal", function() { return linkHorizontal; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "linkVertical", function() { return linkVertical; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "linkRadial", function() { return linkRadial; });
/* harmony import */ var d3_path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-path */ "./node_modules/d3-path/src/index.js");
/* harmony import */ var _array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../array */ "./node_modules/d3-shape/src/array.js");
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constant */ "./node_modules/d3-shape/src/constant.js");
/* harmony import */ var _point__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../point */ "./node_modules/d3-shape/src/point.js");
/* harmony import */ var _pointRadial__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../pointRadial */ "./node_modules/d3-shape/src/pointRadial.js");






function linkSource(d) {
  return d.source;
}

function linkTarget(d) {
  return d.target;
}

function link(curve) {
  var source = linkSource,
      target = linkTarget,
      x = _point__WEBPACK_IMPORTED_MODULE_3__["x"],
      y = _point__WEBPACK_IMPORTED_MODULE_3__["y"],
      context = null;

  function link() {
    var buffer, argv = _array__WEBPACK_IMPORTED_MODULE_1__["slice"].call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);
    if (!context) context = buffer = Object(d3_path__WEBPACK_IMPORTED_MODULE_0__["path"])();
    curve(context, +x.apply(this, (argv[0] = s, argv)), +y.apply(this, argv), +x.apply(this, (argv[0] = t, argv)), +y.apply(this, argv));
    if (buffer) return context = null, buffer + "" || null;
  }

  link.source = function(_) {
    return arguments.length ? (source = _, link) : source;
  };

  link.target = function(_) {
    return arguments.length ? (target = _, link) : target;
  };

  link.x = function(_) {
    return arguments.length ? (x = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_2__["default"])(+_), link) : x;
  };

  link.y = function(_) {
    return arguments.length ? (y = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_2__["default"])(+_), link) : y;
  };

  link.context = function(_) {
    return arguments.length ? ((context = _ == null ? null : _), link) : context;
  };

  return link;
}

function curveHorizontal(context, x0, y0, x1, y1) {
  context.moveTo(x0, y0);
  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);
}

function curveVertical(context, x0, y0, x1, y1) {
  context.moveTo(x0, y0);
  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);
}

function curveRadial(context, x0, y0, x1, y1) {
  var p0 = Object(_pointRadial__WEBPACK_IMPORTED_MODULE_4__["default"])(x0, y0),
      p1 = Object(_pointRadial__WEBPACK_IMPORTED_MODULE_4__["default"])(x0, y0 = (y0 + y1) / 2),
      p2 = Object(_pointRadial__WEBPACK_IMPORTED_MODULE_4__["default"])(x1, y0),
      p3 = Object(_pointRadial__WEBPACK_IMPORTED_MODULE_4__["default"])(x1, y1);
  context.moveTo(p0[0], p0[1]);
  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);
}

function linkHorizontal() {
  return link(curveHorizontal);
}

function linkVertical() {
  return link(curveVertical);
}

function linkRadial() {
  var l = link(curveRadial);
  l.angle = l.x, delete l.x;
  l.radius = l.y, delete l.y;
  return l;
}


/***/ }),

/***/ "./node_modules/d3-shape/src/math.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-shape/src/math.js ***!
  \*******************************************/
/*! exports provided: abs, atan2, cos, max, min, sin, sqrt, epsilon, pi, halfPi, tau, acos, asin */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "abs", function() { return abs; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "atan2", function() { return atan2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cos", function() { return cos; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "max", function() { return max; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "min", function() { return min; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sin", function() { return sin; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sqrt", function() { return sqrt; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "epsilon", function() { return epsilon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pi", function() { return pi; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "halfPi", function() { return halfPi; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tau", function() { return tau; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "acos", function() { return acos; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "asin", function() { return asin; });
var abs = Math.abs;
var atan2 = Math.atan2;
var cos = Math.cos;
var max = Math.max;
var min = Math.min;
var sin = Math.sin;
var sqrt = Math.sqrt;

var epsilon = 1e-12;
var pi = Math.PI;
var halfPi = pi / 2;
var tau = 2 * pi;

function acos(x) {
  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);
}

function asin(x) {
  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);
}


/***/ }),

/***/ "./node_modules/d3-shape/src/noop.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-shape/src/noop.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function() {});


/***/ }),

/***/ "./node_modules/d3-shape/src/offset/diverging.js":
/*!*******************************************************!*\
  !*** ./node_modules/d3-shape/src/offset/diverging.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(series, order) {
  if (!((n = series.length) > 0)) return;
  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {
    for (yp = yn = 0, i = 0; i < n; ++i) {
      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {
        d[0] = yp, d[1] = yp += dy;
      } else if (dy < 0) {
        d[1] = yn, d[0] = yn += dy;
      } else {
        d[0] = yp;
      }
    }
  }
});


/***/ }),

/***/ "./node_modules/d3-shape/src/offset/expand.js":
/*!****************************************************!*\
  !*** ./node_modules/d3-shape/src/offset/expand.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _none__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./none */ "./node_modules/d3-shape/src/offset/none.js");


/* harmony default export */ __webpack_exports__["default"] = (function(series, order) {
  if (!((n = series.length) > 0)) return;
  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {
    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;
    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;
  }
  Object(_none__WEBPACK_IMPORTED_MODULE_0__["default"])(series, order);
});


/***/ }),

/***/ "./node_modules/d3-shape/src/offset/none.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-shape/src/offset/none.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(series, order) {
  if (!((n = series.length) > 1)) return;
  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {
    s0 = s1, s1 = series[order[i]];
    for (j = 0; j < m; ++j) {
      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];
    }
  }
});


/***/ }),

/***/ "./node_modules/d3-shape/src/offset/silhouette.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-shape/src/offset/silhouette.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _none__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./none */ "./node_modules/d3-shape/src/offset/none.js");


/* harmony default export */ __webpack_exports__["default"] = (function(series, order) {
  if (!((n = series.length) > 0)) return;
  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {
    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;
    s0[j][1] += s0[j][0] = -y / 2;
  }
  Object(_none__WEBPACK_IMPORTED_MODULE_0__["default"])(series, order);
});


/***/ }),

/***/ "./node_modules/d3-shape/src/offset/wiggle.js":
/*!****************************************************!*\
  !*** ./node_modules/d3-shape/src/offset/wiggle.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _none__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./none */ "./node_modules/d3-shape/src/offset/none.js");


/* harmony default export */ __webpack_exports__["default"] = (function(series, order) {
  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;
  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {
    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {
      var si = series[order[i]],
          sij0 = si[j][1] || 0,
          sij1 = si[j - 1][1] || 0,
          s3 = (sij0 - sij1) / 2;
      for (var k = 0; k < i; ++k) {
        var sk = series[order[k]],
            skj0 = sk[j][1] || 0,
            skj1 = sk[j - 1][1] || 0;
        s3 += skj0 - skj1;
      }
      s1 += sij0, s2 += s3 * sij0;
    }
    s0[j - 1][1] += s0[j - 1][0] = y;
    if (s1) y -= s2 / s1;
  }
  s0[j - 1][1] += s0[j - 1][0] = y;
  Object(_none__WEBPACK_IMPORTED_MODULE_0__["default"])(series, order);
});


/***/ }),

/***/ "./node_modules/d3-shape/src/order/appearance.js":
/*!*******************************************************!*\
  !*** ./node_modules/d3-shape/src/order/appearance.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _none__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./none */ "./node_modules/d3-shape/src/order/none.js");


/* harmony default export */ __webpack_exports__["default"] = (function(series) {
  var peaks = series.map(peak);
  return Object(_none__WEBPACK_IMPORTED_MODULE_0__["default"])(series).sort(function(a, b) { return peaks[a] - peaks[b]; });
});

function peak(series) {
  var i = -1, j = 0, n = series.length, vi, vj = -Infinity;
  while (++i < n) if ((vi = +series[i][1]) > vj) vj = vi, j = i;
  return j;
}


/***/ }),

/***/ "./node_modules/d3-shape/src/order/ascending.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-shape/src/order/ascending.js ***!
  \******************************************************/
/*! exports provided: default, sum */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sum", function() { return sum; });
/* harmony import */ var _none__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./none */ "./node_modules/d3-shape/src/order/none.js");


/* harmony default export */ __webpack_exports__["default"] = (function(series) {
  var sums = series.map(sum);
  return Object(_none__WEBPACK_IMPORTED_MODULE_0__["default"])(series).sort(function(a, b) { return sums[a] - sums[b]; });
});

function sum(series) {
  var s = 0, i = -1, n = series.length, v;
  while (++i < n) if (v = +series[i][1]) s += v;
  return s;
}


/***/ }),

/***/ "./node_modules/d3-shape/src/order/descending.js":
/*!*******************************************************!*\
  !*** ./node_modules/d3-shape/src/order/descending.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ascending__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ascending */ "./node_modules/d3-shape/src/order/ascending.js");


/* harmony default export */ __webpack_exports__["default"] = (function(series) {
  return Object(_ascending__WEBPACK_IMPORTED_MODULE_0__["default"])(series).reverse();
});


/***/ }),

/***/ "./node_modules/d3-shape/src/order/insideOut.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-shape/src/order/insideOut.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _appearance__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./appearance */ "./node_modules/d3-shape/src/order/appearance.js");
/* harmony import */ var _ascending__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ascending */ "./node_modules/d3-shape/src/order/ascending.js");



/* harmony default export */ __webpack_exports__["default"] = (function(series) {
  var n = series.length,
      i,
      j,
      sums = series.map(_ascending__WEBPACK_IMPORTED_MODULE_1__["sum"]),
      order = Object(_appearance__WEBPACK_IMPORTED_MODULE_0__["default"])(series),
      top = 0,
      bottom = 0,
      tops = [],
      bottoms = [];

  for (i = 0; i < n; ++i) {
    j = order[i];
    if (top < bottom) {
      top += sums[j];
      tops.push(j);
    } else {
      bottom += sums[j];
      bottoms.push(j);
    }
  }

  return bottoms.reverse().concat(tops);
});


/***/ }),

/***/ "./node_modules/d3-shape/src/order/none.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-shape/src/order/none.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(series) {
  var n = series.length, o = new Array(n);
  while (--n >= 0) o[n] = n;
  return o;
});


/***/ }),

/***/ "./node_modules/d3-shape/src/order/reverse.js":
/*!****************************************************!*\
  !*** ./node_modules/d3-shape/src/order/reverse.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _none__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./none */ "./node_modules/d3-shape/src/order/none.js");


/* harmony default export */ __webpack_exports__["default"] = (function(series) {
  return Object(_none__WEBPACK_IMPORTED_MODULE_0__["default"])(series).reverse();
});


/***/ }),

/***/ "./node_modules/d3-shape/src/pie.js":
/*!******************************************!*\
  !*** ./node_modules/d3-shape/src/pie.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constant */ "./node_modules/d3-shape/src/constant.js");
/* harmony import */ var _descending__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./descending */ "./node_modules/d3-shape/src/descending.js");
/* harmony import */ var _identity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./identity */ "./node_modules/d3-shape/src/identity.js");
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./math */ "./node_modules/d3-shape/src/math.js");





/* harmony default export */ __webpack_exports__["default"] = (function() {
  var value = _identity__WEBPACK_IMPORTED_MODULE_2__["default"],
      sortValues = _descending__WEBPACK_IMPORTED_MODULE_1__["default"],
      sort = null,
      startAngle = Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(0),
      endAngle = Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(_math__WEBPACK_IMPORTED_MODULE_3__["tau"]),
      padAngle = Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(0);

  function pie(data) {
    var i,
        n = data.length,
        j,
        k,
        sum = 0,
        index = new Array(n),
        arcs = new Array(n),
        a0 = +startAngle.apply(this, arguments),
        da = Math.min(_math__WEBPACK_IMPORTED_MODULE_3__["tau"], Math.max(-_math__WEBPACK_IMPORTED_MODULE_3__["tau"], endAngle.apply(this, arguments) - a0)),
        a1,
        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),
        pa = p * (da < 0 ? -1 : 1),
        v;

    for (i = 0; i < n; ++i) {
      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {
        sum += v;
      }
    }

    // Optionally sort the arcs by previously-computed values or by data.
    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });
    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });

    // Compute the arcs! They are stored in the original data's order.
    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {
      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {
        data: data[j],
        index: i,
        value: v,
        startAngle: a0,
        endAngle: a1,
        padAngle: p
      };
    }

    return arcs;
  }

  pie.value = function(_) {
    return arguments.length ? (value = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(+_), pie) : value;
  };

  pie.sortValues = function(_) {
    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;
  };

  pie.sort = function(_) {
    return arguments.length ? (sort = _, sortValues = null, pie) : sort;
  };

  pie.startAngle = function(_) {
    return arguments.length ? (startAngle = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(+_), pie) : startAngle;
  };

  pie.endAngle = function(_) {
    return arguments.length ? (endAngle = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(+_), pie) : endAngle;
  };

  pie.padAngle = function(_) {
    return arguments.length ? (padAngle = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(+_), pie) : padAngle;
  };

  return pie;
});


/***/ }),

/***/ "./node_modules/d3-shape/src/point.js":
/*!********************************************!*\
  !*** ./node_modules/d3-shape/src/point.js ***!
  \********************************************/
/*! exports provided: x, y */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "x", function() { return x; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "y", function() { return y; });
function x(p) {
  return p[0];
}

function y(p) {
  return p[1];
}


/***/ }),

/***/ "./node_modules/d3-shape/src/pointRadial.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-shape/src/pointRadial.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(x, y) {
  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];
});


/***/ }),

/***/ "./node_modules/d3-shape/src/stack.js":
/*!********************************************!*\
  !*** ./node_modules/d3-shape/src/stack.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./array */ "./node_modules/d3-shape/src/array.js");
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constant */ "./node_modules/d3-shape/src/constant.js");
/* harmony import */ var _offset_none__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./offset/none */ "./node_modules/d3-shape/src/offset/none.js");
/* harmony import */ var _order_none__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./order/none */ "./node_modules/d3-shape/src/order/none.js");





function stackValue(d, key) {
  return d[key];
}

/* harmony default export */ __webpack_exports__["default"] = (function() {
  var keys = Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])([]),
      order = _order_none__WEBPACK_IMPORTED_MODULE_3__["default"],
      offset = _offset_none__WEBPACK_IMPORTED_MODULE_2__["default"],
      value = stackValue;

  function stack(data) {
    var kz = keys.apply(this, arguments),
        i,
        m = data.length,
        n = kz.length,
        sz = new Array(n),
        oz;

    for (i = 0; i < n; ++i) {
      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {
        si[j] = sij = [0, +value(data[j], ki, j, data)];
        sij.data = data[j];
      }
      si.key = ki;
    }

    for (i = 0, oz = order(sz); i < n; ++i) {
      sz[oz[i]].index = i;
    }

    offset(sz, oz);
    return sz;
  }

  stack.keys = function(_) {
    return arguments.length ? (keys = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(_array__WEBPACK_IMPORTED_MODULE_0__["slice"].call(_)), stack) : keys;
  };

  stack.value = function(_) {
    return arguments.length ? (value = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(+_), stack) : value;
  };

  stack.order = function(_) {
    return arguments.length ? (order = _ == null ? _order_none__WEBPACK_IMPORTED_MODULE_3__["default"] : typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_1__["default"])(_array__WEBPACK_IMPORTED_MODULE_0__["slice"].call(_)), stack) : order;
  };

  stack.offset = function(_) {
    return arguments.length ? (offset = _ == null ? _offset_none__WEBPACK_IMPORTED_MODULE_2__["default"] : _, stack) : offset;
  };

  return stack;
});


/***/ }),

/***/ "./node_modules/d3-shape/src/symbol.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-shape/src/symbol.js ***!
  \*********************************************/
/*! exports provided: symbols, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "symbols", function() { return symbols; });
/* harmony import */ var d3_path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-path */ "./node_modules/d3-path/src/index.js");
/* harmony import */ var _symbol_circle__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./symbol/circle */ "./node_modules/d3-shape/src/symbol/circle.js");
/* harmony import */ var _symbol_cross__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./symbol/cross */ "./node_modules/d3-shape/src/symbol/cross.js");
/* harmony import */ var _symbol_diamond__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./symbol/diamond */ "./node_modules/d3-shape/src/symbol/diamond.js");
/* harmony import */ var _symbol_star__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./symbol/star */ "./node_modules/d3-shape/src/symbol/star.js");
/* harmony import */ var _symbol_square__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./symbol/square */ "./node_modules/d3-shape/src/symbol/square.js");
/* harmony import */ var _symbol_triangle__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./symbol/triangle */ "./node_modules/d3-shape/src/symbol/triangle.js");
/* harmony import */ var _symbol_wye__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./symbol/wye */ "./node_modules/d3-shape/src/symbol/wye.js");
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./constant */ "./node_modules/d3-shape/src/constant.js");










var symbols = [
  _symbol_circle__WEBPACK_IMPORTED_MODULE_1__["default"],
  _symbol_cross__WEBPACK_IMPORTED_MODULE_2__["default"],
  _symbol_diamond__WEBPACK_IMPORTED_MODULE_3__["default"],
  _symbol_square__WEBPACK_IMPORTED_MODULE_5__["default"],
  _symbol_star__WEBPACK_IMPORTED_MODULE_4__["default"],
  _symbol_triangle__WEBPACK_IMPORTED_MODULE_6__["default"],
  _symbol_wye__WEBPACK_IMPORTED_MODULE_7__["default"]
];

/* harmony default export */ __webpack_exports__["default"] = (function() {
  var type = Object(_constant__WEBPACK_IMPORTED_MODULE_8__["default"])(_symbol_circle__WEBPACK_IMPORTED_MODULE_1__["default"]),
      size = Object(_constant__WEBPACK_IMPORTED_MODULE_8__["default"])(64),
      context = null;

  function symbol() {
    var buffer;
    if (!context) context = buffer = Object(d3_path__WEBPACK_IMPORTED_MODULE_0__["path"])();
    type.apply(this, arguments).draw(context, +size.apply(this, arguments));
    if (buffer) return context = null, buffer + "" || null;
  }

  symbol.type = function(_) {
    return arguments.length ? (type = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_8__["default"])(_), symbol) : type;
  };

  symbol.size = function(_) {
    return arguments.length ? (size = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_8__["default"])(+_), symbol) : size;
  };

  symbol.context = function(_) {
    return arguments.length ? (context = _ == null ? null : _, symbol) : context;
  };

  return symbol;
});


/***/ }),

/***/ "./node_modules/d3-shape/src/symbol/circle.js":
/*!****************************************************!*\
  !*** ./node_modules/d3-shape/src/symbol/circle.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math */ "./node_modules/d3-shape/src/math.js");


/* harmony default export */ __webpack_exports__["default"] = ({
  draw: function(context, size) {
    var r = Math.sqrt(size / _math__WEBPACK_IMPORTED_MODULE_0__["pi"]);
    context.moveTo(r, 0);
    context.arc(0, 0, r, 0, _math__WEBPACK_IMPORTED_MODULE_0__["tau"]);
  }
});


/***/ }),

/***/ "./node_modules/d3-shape/src/symbol/cross.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-shape/src/symbol/cross.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ({
  draw: function(context, size) {
    var r = Math.sqrt(size / 5) / 2;
    context.moveTo(-3 * r, -r);
    context.lineTo(-r, -r);
    context.lineTo(-r, -3 * r);
    context.lineTo(r, -3 * r);
    context.lineTo(r, -r);
    context.lineTo(3 * r, -r);
    context.lineTo(3 * r, r);
    context.lineTo(r, r);
    context.lineTo(r, 3 * r);
    context.lineTo(-r, 3 * r);
    context.lineTo(-r, r);
    context.lineTo(-3 * r, r);
    context.closePath();
  }
});


/***/ }),

/***/ "./node_modules/d3-shape/src/symbol/diamond.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-shape/src/symbol/diamond.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var tan30 = Math.sqrt(1 / 3),
    tan30_2 = tan30 * 2;

/* harmony default export */ __webpack_exports__["default"] = ({
  draw: function(context, size) {
    var y = Math.sqrt(size / tan30_2),
        x = y * tan30;
    context.moveTo(0, -y);
    context.lineTo(x, 0);
    context.lineTo(0, y);
    context.lineTo(-x, 0);
    context.closePath();
  }
});


/***/ }),

/***/ "./node_modules/d3-shape/src/symbol/square.js":
/*!****************************************************!*\
  !*** ./node_modules/d3-shape/src/symbol/square.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ({
  draw: function(context, size) {
    var w = Math.sqrt(size),
        x = -w / 2;
    context.rect(x, x, w, w);
  }
});


/***/ }),

/***/ "./node_modules/d3-shape/src/symbol/star.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-shape/src/symbol/star.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math */ "./node_modules/d3-shape/src/math.js");


var ka = 0.89081309152928522810,
    kr = Math.sin(_math__WEBPACK_IMPORTED_MODULE_0__["pi"] / 10) / Math.sin(7 * _math__WEBPACK_IMPORTED_MODULE_0__["pi"] / 10),
    kx = Math.sin(_math__WEBPACK_IMPORTED_MODULE_0__["tau"] / 10) * kr,
    ky = -Math.cos(_math__WEBPACK_IMPORTED_MODULE_0__["tau"] / 10) * kr;

/* harmony default export */ __webpack_exports__["default"] = ({
  draw: function(context, size) {
    var r = Math.sqrt(size * ka),
        x = kx * r,
        y = ky * r;
    context.moveTo(0, -r);
    context.lineTo(x, y);
    for (var i = 1; i < 5; ++i) {
      var a = _math__WEBPACK_IMPORTED_MODULE_0__["tau"] * i / 5,
          c = Math.cos(a),
          s = Math.sin(a);
      context.lineTo(s * r, -c * r);
      context.lineTo(c * x - s * y, s * x + c * y);
    }
    context.closePath();
  }
});


/***/ }),

/***/ "./node_modules/d3-shape/src/symbol/triangle.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-shape/src/symbol/triangle.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var sqrt3 = Math.sqrt(3);

/* harmony default export */ __webpack_exports__["default"] = ({
  draw: function(context, size) {
    var y = -Math.sqrt(size / (sqrt3 * 3));
    context.moveTo(0, y * 2);
    context.lineTo(-sqrt3 * y, -y);
    context.lineTo(sqrt3 * y, -y);
    context.closePath();
  }
});


/***/ }),

/***/ "./node_modules/d3-shape/src/symbol/wye.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-shape/src/symbol/wye.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var c = -0.5,
    s = Math.sqrt(3) / 2,
    k = 1 / Math.sqrt(12),
    a = (k / 2 + 1) * 3;

/* harmony default export */ __webpack_exports__["default"] = ({
  draw: function(context, size) {
    var r = Math.sqrt(size / a),
        x0 = r / 2,
        y0 = r * k,
        x1 = x0,
        y1 = r * k + r,
        x2 = -x1,
        y2 = y1;
    context.moveTo(x0, y0);
    context.lineTo(x1, y1);
    context.lineTo(x2, y2);
    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);
    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);
    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);
    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);
    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);
    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);
    context.closePath();
  }
});


/***/ }),

/***/ "./node_modules/d3-time-format/src/defaultLocale.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-time-format/src/defaultLocale.js ***!
  \**********************************************************/
/*! exports provided: timeFormat, timeParse, utcFormat, utcParse, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "timeFormat", function() { return timeFormat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "timeParse", function() { return timeParse; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcFormat", function() { return utcFormat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcParse", function() { return utcParse; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return defaultLocale; });
/* harmony import */ var _locale__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./locale */ "./node_modules/d3-time-format/src/locale.js");


var locale;
var timeFormat;
var timeParse;
var utcFormat;
var utcParse;

defaultLocale({
  dateTime: "%x, %X",
  date: "%-m/%-d/%Y",
  time: "%-I:%M:%S %p",
  periods: ["AM", "PM"],
  days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
  shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
  months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
  shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
});

function defaultLocale(definition) {
  locale = Object(_locale__WEBPACK_IMPORTED_MODULE_0__["default"])(definition);
  timeFormat = locale.format;
  timeParse = locale.parse;
  utcFormat = locale.utcFormat;
  utcParse = locale.utcParse;
  return locale;
}


/***/ }),

/***/ "./node_modules/d3-time-format/src/index.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-time-format/src/index.js ***!
  \**************************************************/
/*! exports provided: timeFormatDefaultLocale, timeFormat, timeParse, utcFormat, utcParse, timeFormatLocale, isoFormat, isoParse */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _defaultLocale__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defaultLocale */ "./node_modules/d3-time-format/src/defaultLocale.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeFormatDefaultLocale", function() { return _defaultLocale__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeFormat", function() { return _defaultLocale__WEBPACK_IMPORTED_MODULE_0__["timeFormat"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeParse", function() { return _defaultLocale__WEBPACK_IMPORTED_MODULE_0__["timeParse"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcFormat", function() { return _defaultLocale__WEBPACK_IMPORTED_MODULE_0__["utcFormat"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcParse", function() { return _defaultLocale__WEBPACK_IMPORTED_MODULE_0__["utcParse"]; });

/* harmony import */ var _locale__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./locale */ "./node_modules/d3-time-format/src/locale.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeFormatLocale", function() { return _locale__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _isoFormat__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./isoFormat */ "./node_modules/d3-time-format/src/isoFormat.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isoFormat", function() { return _isoFormat__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _isoParse__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./isoParse */ "./node_modules/d3-time-format/src/isoParse.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isoParse", function() { return _isoParse__WEBPACK_IMPORTED_MODULE_3__["default"]; });







/***/ }),

/***/ "./node_modules/d3-time-format/src/isoFormat.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-time-format/src/isoFormat.js ***!
  \******************************************************/
/*! exports provided: isoSpecifier, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isoSpecifier", function() { return isoSpecifier; });
/* harmony import */ var _defaultLocale__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defaultLocale */ "./node_modules/d3-time-format/src/defaultLocale.js");


var isoSpecifier = "%Y-%m-%dT%H:%M:%S.%LZ";

function formatIsoNative(date) {
  return date.toISOString();
}

var formatIso = Date.prototype.toISOString
    ? formatIsoNative
    : Object(_defaultLocale__WEBPACK_IMPORTED_MODULE_0__["utcFormat"])(isoSpecifier);

/* harmony default export */ __webpack_exports__["default"] = (formatIso);


/***/ }),

/***/ "./node_modules/d3-time-format/src/isoParse.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-time-format/src/isoParse.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _isoFormat__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isoFormat */ "./node_modules/d3-time-format/src/isoFormat.js");
/* harmony import */ var _defaultLocale__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./defaultLocale */ "./node_modules/d3-time-format/src/defaultLocale.js");



function parseIsoNative(string) {
  var date = new Date(string);
  return isNaN(date) ? null : date;
}

var parseIso = +new Date("2000-01-01T00:00:00.000Z")
    ? parseIsoNative
    : Object(_defaultLocale__WEBPACK_IMPORTED_MODULE_1__["utcParse"])(_isoFormat__WEBPACK_IMPORTED_MODULE_0__["isoSpecifier"]);

/* harmony default export */ __webpack_exports__["default"] = (parseIso);


/***/ }),

/***/ "./node_modules/d3-time-format/src/locale.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-time-format/src/locale.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return formatLocale; });
/* harmony import */ var d3_time__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-time */ "./node_modules/d3-time/src/index.js");


function localDate(d) {
  if (0 <= d.y && d.y < 100) {
    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);
    date.setFullYear(d.y);
    return date;
  }
  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);
}

function utcDate(d) {
  if (0 <= d.y && d.y < 100) {
    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));
    date.setUTCFullYear(d.y);
    return date;
  }
  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));
}

function newYear(y) {
  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};
}

function formatLocale(locale) {
  var locale_dateTime = locale.dateTime,
      locale_date = locale.date,
      locale_time = locale.time,
      locale_periods = locale.periods,
      locale_weekdays = locale.days,
      locale_shortWeekdays = locale.shortDays,
      locale_months = locale.months,
      locale_shortMonths = locale.shortMonths;

  var periodRe = formatRe(locale_periods),
      periodLookup = formatLookup(locale_periods),
      weekdayRe = formatRe(locale_weekdays),
      weekdayLookup = formatLookup(locale_weekdays),
      shortWeekdayRe = formatRe(locale_shortWeekdays),
      shortWeekdayLookup = formatLookup(locale_shortWeekdays),
      monthRe = formatRe(locale_months),
      monthLookup = formatLookup(locale_months),
      shortMonthRe = formatRe(locale_shortMonths),
      shortMonthLookup = formatLookup(locale_shortMonths);

  var formats = {
    "a": formatShortWeekday,
    "A": formatWeekday,
    "b": formatShortMonth,
    "B": formatMonth,
    "c": null,
    "d": formatDayOfMonth,
    "e": formatDayOfMonth,
    "f": formatMicroseconds,
    "H": formatHour24,
    "I": formatHour12,
    "j": formatDayOfYear,
    "L": formatMilliseconds,
    "m": formatMonthNumber,
    "M": formatMinutes,
    "p": formatPeriod,
    "Q": formatUnixTimestamp,
    "s": formatUnixTimestampSeconds,
    "S": formatSeconds,
    "u": formatWeekdayNumberMonday,
    "U": formatWeekNumberSunday,
    "V": formatWeekNumberISO,
    "w": formatWeekdayNumberSunday,
    "W": formatWeekNumberMonday,
    "x": null,
    "X": null,
    "y": formatYear,
    "Y": formatFullYear,
    "Z": formatZone,
    "%": formatLiteralPercent
  };

  var utcFormats = {
    "a": formatUTCShortWeekday,
    "A": formatUTCWeekday,
    "b": formatUTCShortMonth,
    "B": formatUTCMonth,
    "c": null,
    "d": formatUTCDayOfMonth,
    "e": formatUTCDayOfMonth,
    "f": formatUTCMicroseconds,
    "H": formatUTCHour24,
    "I": formatUTCHour12,
    "j": formatUTCDayOfYear,
    "L": formatUTCMilliseconds,
    "m": formatUTCMonthNumber,
    "M": formatUTCMinutes,
    "p": formatUTCPeriod,
    "Q": formatUnixTimestamp,
    "s": formatUnixTimestampSeconds,
    "S": formatUTCSeconds,
    "u": formatUTCWeekdayNumberMonday,
    "U": formatUTCWeekNumberSunday,
    "V": formatUTCWeekNumberISO,
    "w": formatUTCWeekdayNumberSunday,
    "W": formatUTCWeekNumberMonday,
    "x": null,
    "X": null,
    "y": formatUTCYear,
    "Y": formatUTCFullYear,
    "Z": formatUTCZone,
    "%": formatLiteralPercent
  };

  var parses = {
    "a": parseShortWeekday,
    "A": parseWeekday,
    "b": parseShortMonth,
    "B": parseMonth,
    "c": parseLocaleDateTime,
    "d": parseDayOfMonth,
    "e": parseDayOfMonth,
    "f": parseMicroseconds,
    "H": parseHour24,
    "I": parseHour24,
    "j": parseDayOfYear,
    "L": parseMilliseconds,
    "m": parseMonthNumber,
    "M": parseMinutes,
    "p": parsePeriod,
    "Q": parseUnixTimestamp,
    "s": parseUnixTimestampSeconds,
    "S": parseSeconds,
    "u": parseWeekdayNumberMonday,
    "U": parseWeekNumberSunday,
    "V": parseWeekNumberISO,
    "w": parseWeekdayNumberSunday,
    "W": parseWeekNumberMonday,
    "x": parseLocaleDate,
    "X": parseLocaleTime,
    "y": parseYear,
    "Y": parseFullYear,
    "Z": parseZone,
    "%": parseLiteralPercent
  };

  // These recursive directive definitions must be deferred.
  formats.x = newFormat(locale_date, formats);
  formats.X = newFormat(locale_time, formats);
  formats.c = newFormat(locale_dateTime, formats);
  utcFormats.x = newFormat(locale_date, utcFormats);
  utcFormats.X = newFormat(locale_time, utcFormats);
  utcFormats.c = newFormat(locale_dateTime, utcFormats);

  function newFormat(specifier, formats) {
    return function(date) {
      var string = [],
          i = -1,
          j = 0,
          n = specifier.length,
          c,
          pad,
          format;

      if (!(date instanceof Date)) date = new Date(+date);

      while (++i < n) {
        if (specifier.charCodeAt(i) === 37) {
          string.push(specifier.slice(j, i));
          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);
          else pad = c === "e" ? " " : "0";
          if (format = formats[c]) c = format(date, pad);
          string.push(c);
          j = i + 1;
        }
      }

      string.push(specifier.slice(j, i));
      return string.join("");
    };
  }

  function newParse(specifier, newDate) {
    return function(string) {
      var d = newYear(1900),
          i = parseSpecifier(d, specifier, string += "", 0),
          week, day;
      if (i != string.length) return null;

      // If a UNIX timestamp is specified, return it.
      if ("Q" in d) return new Date(d.Q);

      // The am-pm flag is 0 for AM, and 1 for PM.
      if ("p" in d) d.H = d.H % 12 + d.p * 12;

      // Convert day-of-week and week-of-year to day-of-year.
      if ("V" in d) {
        if (d.V < 1 || d.V > 53) return null;
        if (!("w" in d)) d.w = 1;
        if ("Z" in d) {
          week = utcDate(newYear(d.y)), day = week.getUTCDay();
          week = day > 4 || day === 0 ? d3_time__WEBPACK_IMPORTED_MODULE_0__["utcMonday"].ceil(week) : Object(d3_time__WEBPACK_IMPORTED_MODULE_0__["utcMonday"])(week);
          week = d3_time__WEBPACK_IMPORTED_MODULE_0__["utcDay"].offset(week, (d.V - 1) * 7);
          d.y = week.getUTCFullYear();
          d.m = week.getUTCMonth();
          d.d = week.getUTCDate() + (d.w + 6) % 7;
        } else {
          week = newDate(newYear(d.y)), day = week.getDay();
          week = day > 4 || day === 0 ? d3_time__WEBPACK_IMPORTED_MODULE_0__["timeMonday"].ceil(week) : Object(d3_time__WEBPACK_IMPORTED_MODULE_0__["timeMonday"])(week);
          week = d3_time__WEBPACK_IMPORTED_MODULE_0__["timeDay"].offset(week, (d.V - 1) * 7);
          d.y = week.getFullYear();
          d.m = week.getMonth();
          d.d = week.getDate() + (d.w + 6) % 7;
        }
      } else if ("W" in d || "U" in d) {
        if (!("w" in d)) d.w = "u" in d ? d.u % 7 : "W" in d ? 1 : 0;
        day = "Z" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();
        d.m = 0;
        d.d = "W" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;
      }

      // If a time zone is specified, all fields are interpreted as UTC and then
      // offset according to the specified time zone.
      if ("Z" in d) {
        d.H += d.Z / 100 | 0;
        d.M += d.Z % 100;
        return utcDate(d);
      }

      // Otherwise, all fields are in local time.
      return newDate(d);
    };
  }

  function parseSpecifier(d, specifier, string, j) {
    var i = 0,
        n = specifier.length,
        m = string.length,
        c,
        parse;

    while (i < n) {
      if (j >= m) return -1;
      c = specifier.charCodeAt(i++);
      if (c === 37) {
        c = specifier.charAt(i++);
        parse = parses[c in pads ? specifier.charAt(i++) : c];
        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;
      } else if (c != string.charCodeAt(j++)) {
        return -1;
      }
    }

    return j;
  }

  function parsePeriod(d, string, i) {
    var n = periodRe.exec(string.slice(i));
    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;
  }

  function parseShortWeekday(d, string, i) {
    var n = shortWeekdayRe.exec(string.slice(i));
    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;
  }

  function parseWeekday(d, string, i) {
    var n = weekdayRe.exec(string.slice(i));
    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;
  }

  function parseShortMonth(d, string, i) {
    var n = shortMonthRe.exec(string.slice(i));
    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;
  }

  function parseMonth(d, string, i) {
    var n = monthRe.exec(string.slice(i));
    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;
  }

  function parseLocaleDateTime(d, string, i) {
    return parseSpecifier(d, locale_dateTime, string, i);
  }

  function parseLocaleDate(d, string, i) {
    return parseSpecifier(d, locale_date, string, i);
  }

  function parseLocaleTime(d, string, i) {
    return parseSpecifier(d, locale_time, string, i);
  }

  function formatShortWeekday(d) {
    return locale_shortWeekdays[d.getDay()];
  }

  function formatWeekday(d) {
    return locale_weekdays[d.getDay()];
  }

  function formatShortMonth(d) {
    return locale_shortMonths[d.getMonth()];
  }

  function formatMonth(d) {
    return locale_months[d.getMonth()];
  }

  function formatPeriod(d) {
    return locale_periods[+(d.getHours() >= 12)];
  }

  function formatUTCShortWeekday(d) {
    return locale_shortWeekdays[d.getUTCDay()];
  }

  function formatUTCWeekday(d) {
    return locale_weekdays[d.getUTCDay()];
  }

  function formatUTCShortMonth(d) {
    return locale_shortMonths[d.getUTCMonth()];
  }

  function formatUTCMonth(d) {
    return locale_months[d.getUTCMonth()];
  }

  function formatUTCPeriod(d) {
    return locale_periods[+(d.getUTCHours() >= 12)];
  }

  return {
    format: function(specifier) {
      var f = newFormat(specifier += "", formats);
      f.toString = function() { return specifier; };
      return f;
    },
    parse: function(specifier) {
      var p = newParse(specifier += "", localDate);
      p.toString = function() { return specifier; };
      return p;
    },
    utcFormat: function(specifier) {
      var f = newFormat(specifier += "", utcFormats);
      f.toString = function() { return specifier; };
      return f;
    },
    utcParse: function(specifier) {
      var p = newParse(specifier, utcDate);
      p.toString = function() { return specifier; };
      return p;
    }
  };
}

var pads = {"-": "", "_": " ", "0": "0"},
    numberRe = /^\s*\d+/, // note: ignores next directive
    percentRe = /^%/,
    requoteRe = /[\\^$*+?|[\]().{}]/g;

function pad(value, fill, width) {
  var sign = value < 0 ? "-" : "",
      string = (sign ? -value : value) + "",
      length = string.length;
  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);
}

function requote(s) {
  return s.replace(requoteRe, "\\$&");
}

function formatRe(names) {
  return new RegExp("^(?:" + names.map(requote).join("|") + ")", "i");
}

function formatLookup(names) {
  var map = {}, i = -1, n = names.length;
  while (++i < n) map[names[i].toLowerCase()] = i;
  return map;
}

function parseWeekdayNumberSunday(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 1));
  return n ? (d.w = +n[0], i + n[0].length) : -1;
}

function parseWeekdayNumberMonday(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 1));
  return n ? (d.u = +n[0], i + n[0].length) : -1;
}

function parseWeekNumberSunday(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.U = +n[0], i + n[0].length) : -1;
}

function parseWeekNumberISO(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.V = +n[0], i + n[0].length) : -1;
}

function parseWeekNumberMonday(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.W = +n[0], i + n[0].length) : -1;
}

function parseFullYear(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 4));
  return n ? (d.y = +n[0], i + n[0].length) : -1;
}

function parseYear(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;
}

function parseZone(d, string, i) {
  var n = /^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(string.slice(i, i + 6));
  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || "00")), i + n[0].length) : -1;
}

function parseMonthNumber(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;
}

function parseDayOfMonth(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.d = +n[0], i + n[0].length) : -1;
}

function parseDayOfYear(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 3));
  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;
}

function parseHour24(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.H = +n[0], i + n[0].length) : -1;
}

function parseMinutes(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.M = +n[0], i + n[0].length) : -1;
}

function parseSeconds(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.S = +n[0], i + n[0].length) : -1;
}

function parseMilliseconds(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 3));
  return n ? (d.L = +n[0], i + n[0].length) : -1;
}

function parseMicroseconds(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 6));
  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;
}

function parseLiteralPercent(d, string, i) {
  var n = percentRe.exec(string.slice(i, i + 1));
  return n ? i + n[0].length : -1;
}

function parseUnixTimestamp(d, string, i) {
  var n = numberRe.exec(string.slice(i));
  return n ? (d.Q = +n[0], i + n[0].length) : -1;
}

function parseUnixTimestampSeconds(d, string, i) {
  var n = numberRe.exec(string.slice(i));
  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;
}

function formatDayOfMonth(d, p) {
  return pad(d.getDate(), p, 2);
}

function formatHour24(d, p) {
  return pad(d.getHours(), p, 2);
}

function formatHour12(d, p) {
  return pad(d.getHours() % 12 || 12, p, 2);
}

function formatDayOfYear(d, p) {
  return pad(1 + d3_time__WEBPACK_IMPORTED_MODULE_0__["timeDay"].count(Object(d3_time__WEBPACK_IMPORTED_MODULE_0__["timeYear"])(d), d), p, 3);
}

function formatMilliseconds(d, p) {
  return pad(d.getMilliseconds(), p, 3);
}

function formatMicroseconds(d, p) {
  return formatMilliseconds(d, p) + "000";
}

function formatMonthNumber(d, p) {
  return pad(d.getMonth() + 1, p, 2);
}

function formatMinutes(d, p) {
  return pad(d.getMinutes(), p, 2);
}

function formatSeconds(d, p) {
  return pad(d.getSeconds(), p, 2);
}

function formatWeekdayNumberMonday(d) {
  var day = d.getDay();
  return day === 0 ? 7 : day;
}

function formatWeekNumberSunday(d, p) {
  return pad(d3_time__WEBPACK_IMPORTED_MODULE_0__["timeSunday"].count(Object(d3_time__WEBPACK_IMPORTED_MODULE_0__["timeYear"])(d), d), p, 2);
}

function formatWeekNumberISO(d, p) {
  var day = d.getDay();
  d = (day >= 4 || day === 0) ? Object(d3_time__WEBPACK_IMPORTED_MODULE_0__["timeThursday"])(d) : d3_time__WEBPACK_IMPORTED_MODULE_0__["timeThursday"].ceil(d);
  return pad(d3_time__WEBPACK_IMPORTED_MODULE_0__["timeThursday"].count(Object(d3_time__WEBPACK_IMPORTED_MODULE_0__["timeYear"])(d), d) + (Object(d3_time__WEBPACK_IMPORTED_MODULE_0__["timeYear"])(d).getDay() === 4), p, 2);
}

function formatWeekdayNumberSunday(d) {
  return d.getDay();
}

function formatWeekNumberMonday(d, p) {
  return pad(d3_time__WEBPACK_IMPORTED_MODULE_0__["timeMonday"].count(Object(d3_time__WEBPACK_IMPORTED_MODULE_0__["timeYear"])(d), d), p, 2);
}

function formatYear(d, p) {
  return pad(d.getFullYear() % 100, p, 2);
}

function formatFullYear(d, p) {
  return pad(d.getFullYear() % 10000, p, 4);
}

function formatZone(d) {
  var z = d.getTimezoneOffset();
  return (z > 0 ? "-" : (z *= -1, "+"))
      + pad(z / 60 | 0, "0", 2)
      + pad(z % 60, "0", 2);
}

function formatUTCDayOfMonth(d, p) {
  return pad(d.getUTCDate(), p, 2);
}

function formatUTCHour24(d, p) {
  return pad(d.getUTCHours(), p, 2);
}

function formatUTCHour12(d, p) {
  return pad(d.getUTCHours() % 12 || 12, p, 2);
}

function formatUTCDayOfYear(d, p) {
  return pad(1 + d3_time__WEBPACK_IMPORTED_MODULE_0__["utcDay"].count(Object(d3_time__WEBPACK_IMPORTED_MODULE_0__["utcYear"])(d), d), p, 3);
}

function formatUTCMilliseconds(d, p) {
  return pad(d.getUTCMilliseconds(), p, 3);
}

function formatUTCMicroseconds(d, p) {
  return formatUTCMilliseconds(d, p) + "000";
}

function formatUTCMonthNumber(d, p) {
  return pad(d.getUTCMonth() + 1, p, 2);
}

function formatUTCMinutes(d, p) {
  return pad(d.getUTCMinutes(), p, 2);
}

function formatUTCSeconds(d, p) {
  return pad(d.getUTCSeconds(), p, 2);
}

function formatUTCWeekdayNumberMonday(d) {
  var dow = d.getUTCDay();
  return dow === 0 ? 7 : dow;
}

function formatUTCWeekNumberSunday(d, p) {
  return pad(d3_time__WEBPACK_IMPORTED_MODULE_0__["utcSunday"].count(Object(d3_time__WEBPACK_IMPORTED_MODULE_0__["utcYear"])(d), d), p, 2);
}

function formatUTCWeekNumberISO(d, p) {
  var day = d.getUTCDay();
  d = (day >= 4 || day === 0) ? Object(d3_time__WEBPACK_IMPORTED_MODULE_0__["utcThursday"])(d) : d3_time__WEBPACK_IMPORTED_MODULE_0__["utcThursday"].ceil(d);
  return pad(d3_time__WEBPACK_IMPORTED_MODULE_0__["utcThursday"].count(Object(d3_time__WEBPACK_IMPORTED_MODULE_0__["utcYear"])(d), d) + (Object(d3_time__WEBPACK_IMPORTED_MODULE_0__["utcYear"])(d).getUTCDay() === 4), p, 2);
}

function formatUTCWeekdayNumberSunday(d) {
  return d.getUTCDay();
}

function formatUTCWeekNumberMonday(d, p) {
  return pad(d3_time__WEBPACK_IMPORTED_MODULE_0__["utcMonday"].count(Object(d3_time__WEBPACK_IMPORTED_MODULE_0__["utcYear"])(d), d), p, 2);
}

function formatUTCYear(d, p) {
  return pad(d.getUTCFullYear() % 100, p, 2);
}

function formatUTCFullYear(d, p) {
  return pad(d.getUTCFullYear() % 10000, p, 4);
}

function formatUTCZone() {
  return "+0000";
}

function formatLiteralPercent() {
  return "%";
}

function formatUnixTimestamp(d) {
  return +d;
}

function formatUnixTimestampSeconds(d) {
  return Math.floor(+d / 1000);
}


/***/ }),

/***/ "./node_modules/d3-time/src/day.js":
/*!*****************************************!*\
  !*** ./node_modules/d3-time/src/day.js ***!
  \*****************************************/
/*! exports provided: default, days */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "days", function() { return days; });
/* harmony import */ var _interval__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval */ "./node_modules/d3-time/src/interval.js");
/* harmony import */ var _duration__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./duration */ "./node_modules/d3-time/src/duration.js");



var day = Object(_interval__WEBPACK_IMPORTED_MODULE_0__["default"])(function(date) {
  date.setHours(0, 0, 0, 0);
}, function(date, step) {
  date.setDate(date.getDate() + step);
}, function(start, end) {
  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * _duration__WEBPACK_IMPORTED_MODULE_1__["durationMinute"]) / _duration__WEBPACK_IMPORTED_MODULE_1__["durationDay"];
}, function(date) {
  return date.getDate() - 1;
});

/* harmony default export */ __webpack_exports__["default"] = (day);
var days = day.range;


/***/ }),

/***/ "./node_modules/d3-time/src/duration.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-time/src/duration.js ***!
  \**********************************************/
/*! exports provided: durationSecond, durationMinute, durationHour, durationDay, durationWeek */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "durationSecond", function() { return durationSecond; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "durationMinute", function() { return durationMinute; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "durationHour", function() { return durationHour; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "durationDay", function() { return durationDay; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "durationWeek", function() { return durationWeek; });
var durationSecond = 1e3;
var durationMinute = 6e4;
var durationHour = 36e5;
var durationDay = 864e5;
var durationWeek = 6048e5;


/***/ }),

/***/ "./node_modules/d3-time/src/hour.js":
/*!******************************************!*\
  !*** ./node_modules/d3-time/src/hour.js ***!
  \******************************************/
/*! exports provided: default, hours */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hours", function() { return hours; });
/* harmony import */ var _interval__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval */ "./node_modules/d3-time/src/interval.js");
/* harmony import */ var _duration__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./duration */ "./node_modules/d3-time/src/duration.js");



var hour = Object(_interval__WEBPACK_IMPORTED_MODULE_0__["default"])(function(date) {
  date.setTime(date - date.getMilliseconds() - date.getSeconds() * _duration__WEBPACK_IMPORTED_MODULE_1__["durationSecond"] - date.getMinutes() * _duration__WEBPACK_IMPORTED_MODULE_1__["durationMinute"]);
}, function(date, step) {
  date.setTime(+date + step * _duration__WEBPACK_IMPORTED_MODULE_1__["durationHour"]);
}, function(start, end) {
  return (end - start) / _duration__WEBPACK_IMPORTED_MODULE_1__["durationHour"];
}, function(date) {
  return date.getHours();
});

/* harmony default export */ __webpack_exports__["default"] = (hour);
var hours = hour.range;


/***/ }),

/***/ "./node_modules/d3-time/src/index.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-time/src/index.js ***!
  \*******************************************/
/*! exports provided: timeInterval, timeMillisecond, timeMilliseconds, utcMillisecond, utcMilliseconds, timeSecond, timeSeconds, utcSecond, utcSeconds, timeMinute, timeMinutes, timeHour, timeHours, timeDay, timeDays, timeWeek, timeWeeks, timeSunday, timeSundays, timeMonday, timeMondays, timeTuesday, timeTuesdays, timeWednesday, timeWednesdays, timeThursday, timeThursdays, timeFriday, timeFridays, timeSaturday, timeSaturdays, timeMonth, timeMonths, timeYear, timeYears, utcMinute, utcMinutes, utcHour, utcHours, utcDay, utcDays, utcWeek, utcWeeks, utcSunday, utcSundays, utcMonday, utcMondays, utcTuesday, utcTuesdays, utcWednesday, utcWednesdays, utcThursday, utcThursdays, utcFriday, utcFridays, utcSaturday, utcSaturdays, utcMonth, utcMonths, utcYear, utcYears */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _interval__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval */ "./node_modules/d3-time/src/interval.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeInterval", function() { return _interval__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _millisecond__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./millisecond */ "./node_modules/d3-time/src/millisecond.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeMillisecond", function() { return _millisecond__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeMilliseconds", function() { return _millisecond__WEBPACK_IMPORTED_MODULE_1__["milliseconds"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcMillisecond", function() { return _millisecond__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcMilliseconds", function() { return _millisecond__WEBPACK_IMPORTED_MODULE_1__["milliseconds"]; });

/* harmony import */ var _second__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./second */ "./node_modules/d3-time/src/second.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeSecond", function() { return _second__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeSeconds", function() { return _second__WEBPACK_IMPORTED_MODULE_2__["seconds"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcSecond", function() { return _second__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcSeconds", function() { return _second__WEBPACK_IMPORTED_MODULE_2__["seconds"]; });

/* harmony import */ var _minute__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./minute */ "./node_modules/d3-time/src/minute.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeMinute", function() { return _minute__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeMinutes", function() { return _minute__WEBPACK_IMPORTED_MODULE_3__["minutes"]; });

/* harmony import */ var _hour__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./hour */ "./node_modules/d3-time/src/hour.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeHour", function() { return _hour__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeHours", function() { return _hour__WEBPACK_IMPORTED_MODULE_4__["hours"]; });

/* harmony import */ var _day__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./day */ "./node_modules/d3-time/src/day.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeDay", function() { return _day__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeDays", function() { return _day__WEBPACK_IMPORTED_MODULE_5__["days"]; });

/* harmony import */ var _week__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./week */ "./node_modules/d3-time/src/week.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeWeek", function() { return _week__WEBPACK_IMPORTED_MODULE_6__["sunday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeWeeks", function() { return _week__WEBPACK_IMPORTED_MODULE_6__["sundays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeSunday", function() { return _week__WEBPACK_IMPORTED_MODULE_6__["sunday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeSundays", function() { return _week__WEBPACK_IMPORTED_MODULE_6__["sundays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeMonday", function() { return _week__WEBPACK_IMPORTED_MODULE_6__["monday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeMondays", function() { return _week__WEBPACK_IMPORTED_MODULE_6__["mondays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeTuesday", function() { return _week__WEBPACK_IMPORTED_MODULE_6__["tuesday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeTuesdays", function() { return _week__WEBPACK_IMPORTED_MODULE_6__["tuesdays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeWednesday", function() { return _week__WEBPACK_IMPORTED_MODULE_6__["wednesday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeWednesdays", function() { return _week__WEBPACK_IMPORTED_MODULE_6__["wednesdays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeThursday", function() { return _week__WEBPACK_IMPORTED_MODULE_6__["thursday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeThursdays", function() { return _week__WEBPACK_IMPORTED_MODULE_6__["thursdays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeFriday", function() { return _week__WEBPACK_IMPORTED_MODULE_6__["friday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeFridays", function() { return _week__WEBPACK_IMPORTED_MODULE_6__["fridays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeSaturday", function() { return _week__WEBPACK_IMPORTED_MODULE_6__["saturday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeSaturdays", function() { return _week__WEBPACK_IMPORTED_MODULE_6__["saturdays"]; });

/* harmony import */ var _month__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./month */ "./node_modules/d3-time/src/month.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeMonth", function() { return _month__WEBPACK_IMPORTED_MODULE_7__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeMonths", function() { return _month__WEBPACK_IMPORTED_MODULE_7__["months"]; });

/* harmony import */ var _year__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./year */ "./node_modules/d3-time/src/year.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeYear", function() { return _year__WEBPACK_IMPORTED_MODULE_8__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeYears", function() { return _year__WEBPACK_IMPORTED_MODULE_8__["years"]; });

/* harmony import */ var _utcMinute__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./utcMinute */ "./node_modules/d3-time/src/utcMinute.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcMinute", function() { return _utcMinute__WEBPACK_IMPORTED_MODULE_9__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcMinutes", function() { return _utcMinute__WEBPACK_IMPORTED_MODULE_9__["utcMinutes"]; });

/* harmony import */ var _utcHour__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./utcHour */ "./node_modules/d3-time/src/utcHour.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcHour", function() { return _utcHour__WEBPACK_IMPORTED_MODULE_10__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcHours", function() { return _utcHour__WEBPACK_IMPORTED_MODULE_10__["utcHours"]; });

/* harmony import */ var _utcDay__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./utcDay */ "./node_modules/d3-time/src/utcDay.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcDay", function() { return _utcDay__WEBPACK_IMPORTED_MODULE_11__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcDays", function() { return _utcDay__WEBPACK_IMPORTED_MODULE_11__["utcDays"]; });

/* harmony import */ var _utcWeek__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./utcWeek */ "./node_modules/d3-time/src/utcWeek.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcWeek", function() { return _utcWeek__WEBPACK_IMPORTED_MODULE_12__["utcSunday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcWeeks", function() { return _utcWeek__WEBPACK_IMPORTED_MODULE_12__["utcSundays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcSunday", function() { return _utcWeek__WEBPACK_IMPORTED_MODULE_12__["utcSunday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcSundays", function() { return _utcWeek__WEBPACK_IMPORTED_MODULE_12__["utcSundays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcMonday", function() { return _utcWeek__WEBPACK_IMPORTED_MODULE_12__["utcMonday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcMondays", function() { return _utcWeek__WEBPACK_IMPORTED_MODULE_12__["utcMondays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcTuesday", function() { return _utcWeek__WEBPACK_IMPORTED_MODULE_12__["utcTuesday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcTuesdays", function() { return _utcWeek__WEBPACK_IMPORTED_MODULE_12__["utcTuesdays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcWednesday", function() { return _utcWeek__WEBPACK_IMPORTED_MODULE_12__["utcWednesday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcWednesdays", function() { return _utcWeek__WEBPACK_IMPORTED_MODULE_12__["utcWednesdays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcThursday", function() { return _utcWeek__WEBPACK_IMPORTED_MODULE_12__["utcThursday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcThursdays", function() { return _utcWeek__WEBPACK_IMPORTED_MODULE_12__["utcThursdays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcFriday", function() { return _utcWeek__WEBPACK_IMPORTED_MODULE_12__["utcFriday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcFridays", function() { return _utcWeek__WEBPACK_IMPORTED_MODULE_12__["utcFridays"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcSaturday", function() { return _utcWeek__WEBPACK_IMPORTED_MODULE_12__["utcSaturday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcSaturdays", function() { return _utcWeek__WEBPACK_IMPORTED_MODULE_12__["utcSaturdays"]; });

/* harmony import */ var _utcMonth__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./utcMonth */ "./node_modules/d3-time/src/utcMonth.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcMonth", function() { return _utcMonth__WEBPACK_IMPORTED_MODULE_13__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcMonths", function() { return _utcMonth__WEBPACK_IMPORTED_MODULE_13__["utcMonths"]; });

/* harmony import */ var _utcYear__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./utcYear */ "./node_modules/d3-time/src/utcYear.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcYear", function() { return _utcYear__WEBPACK_IMPORTED_MODULE_14__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcYears", function() { return _utcYear__WEBPACK_IMPORTED_MODULE_14__["utcYears"]; });
































/***/ }),

/***/ "./node_modules/d3-time/src/interval.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-time/src/interval.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return newInterval; });
var t0 = new Date,
    t1 = new Date;

function newInterval(floori, offseti, count, field) {

  function interval(date) {
    return floori(date = new Date(+date)), date;
  }

  interval.floor = interval;

  interval.ceil = function(date) {
    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;
  };

  interval.round = function(date) {
    var d0 = interval(date),
        d1 = interval.ceil(date);
    return date - d0 < d1 - date ? d0 : d1;
  };

  interval.offset = function(date, step) {
    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;
  };

  interval.range = function(start, stop, step) {
    var range = [], previous;
    start = interval.ceil(start);
    step = step == null ? 1 : Math.floor(step);
    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date
    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);
    while (previous < start && start < stop);
    return range;
  };

  interval.filter = function(test) {
    return newInterval(function(date) {
      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);
    }, function(date, step) {
      if (date >= date) {
        if (step < 0) while (++step <= 0) {
          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty
        } else while (--step >= 0) {
          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty
        }
      }
    });
  };

  if (count) {
    interval.count = function(start, end) {
      t0.setTime(+start), t1.setTime(+end);
      floori(t0), floori(t1);
      return Math.floor(count(t0, t1));
    };

    interval.every = function(step) {
      step = Math.floor(step);
      return !isFinite(step) || !(step > 0) ? null
          : !(step > 1) ? interval
          : interval.filter(field
              ? function(d) { return field(d) % step === 0; }
              : function(d) { return interval.count(0, d) % step === 0; });
    };
  }

  return interval;
}


/***/ }),

/***/ "./node_modules/d3-time/src/millisecond.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-time/src/millisecond.js ***!
  \*************************************************/
/*! exports provided: default, milliseconds */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "milliseconds", function() { return milliseconds; });
/* harmony import */ var _interval__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval */ "./node_modules/d3-time/src/interval.js");


var millisecond = Object(_interval__WEBPACK_IMPORTED_MODULE_0__["default"])(function() {
  // noop
}, function(date, step) {
  date.setTime(+date + step);
}, function(start, end) {
  return end - start;
});

// An optimized implementation for this simple case.
millisecond.every = function(k) {
  k = Math.floor(k);
  if (!isFinite(k) || !(k > 0)) return null;
  if (!(k > 1)) return millisecond;
  return Object(_interval__WEBPACK_IMPORTED_MODULE_0__["default"])(function(date) {
    date.setTime(Math.floor(date / k) * k);
  }, function(date, step) {
    date.setTime(+date + step * k);
  }, function(start, end) {
    return (end - start) / k;
  });
};

/* harmony default export */ __webpack_exports__["default"] = (millisecond);
var milliseconds = millisecond.range;


/***/ }),

/***/ "./node_modules/d3-time/src/minute.js":
/*!********************************************!*\
  !*** ./node_modules/d3-time/src/minute.js ***!
  \********************************************/
/*! exports provided: default, minutes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "minutes", function() { return minutes; });
/* harmony import */ var _interval__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval */ "./node_modules/d3-time/src/interval.js");
/* harmony import */ var _duration__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./duration */ "./node_modules/d3-time/src/duration.js");



var minute = Object(_interval__WEBPACK_IMPORTED_MODULE_0__["default"])(function(date) {
  date.setTime(date - date.getMilliseconds() - date.getSeconds() * _duration__WEBPACK_IMPORTED_MODULE_1__["durationSecond"]);
}, function(date, step) {
  date.setTime(+date + step * _duration__WEBPACK_IMPORTED_MODULE_1__["durationMinute"]);
}, function(start, end) {
  return (end - start) / _duration__WEBPACK_IMPORTED_MODULE_1__["durationMinute"];
}, function(date) {
  return date.getMinutes();
});

/* harmony default export */ __webpack_exports__["default"] = (minute);
var minutes = minute.range;


/***/ }),

/***/ "./node_modules/d3-time/src/month.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-time/src/month.js ***!
  \*******************************************/
/*! exports provided: default, months */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "months", function() { return months; });
/* harmony import */ var _interval__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval */ "./node_modules/d3-time/src/interval.js");


var month = Object(_interval__WEBPACK_IMPORTED_MODULE_0__["default"])(function(date) {
  date.setDate(1);
  date.setHours(0, 0, 0, 0);
}, function(date, step) {
  date.setMonth(date.getMonth() + step);
}, function(start, end) {
  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;
}, function(date) {
  return date.getMonth();
});

/* harmony default export */ __webpack_exports__["default"] = (month);
var months = month.range;


/***/ }),

/***/ "./node_modules/d3-time/src/second.js":
/*!********************************************!*\
  !*** ./node_modules/d3-time/src/second.js ***!
  \********************************************/
/*! exports provided: default, seconds */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "seconds", function() { return seconds; });
/* harmony import */ var _interval__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval */ "./node_modules/d3-time/src/interval.js");
/* harmony import */ var _duration__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./duration */ "./node_modules/d3-time/src/duration.js");



var second = Object(_interval__WEBPACK_IMPORTED_MODULE_0__["default"])(function(date) {
  date.setTime(date - date.getMilliseconds());
}, function(date, step) {
  date.setTime(+date + step * _duration__WEBPACK_IMPORTED_MODULE_1__["durationSecond"]);
}, function(start, end) {
  return (end - start) / _duration__WEBPACK_IMPORTED_MODULE_1__["durationSecond"];
}, function(date) {
  return date.getUTCSeconds();
});

/* harmony default export */ __webpack_exports__["default"] = (second);
var seconds = second.range;


/***/ }),

/***/ "./node_modules/d3-time/src/utcDay.js":
/*!********************************************!*\
  !*** ./node_modules/d3-time/src/utcDay.js ***!
  \********************************************/
/*! exports provided: default, utcDays */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcDays", function() { return utcDays; });
/* harmony import */ var _interval__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval */ "./node_modules/d3-time/src/interval.js");
/* harmony import */ var _duration__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./duration */ "./node_modules/d3-time/src/duration.js");



var utcDay = Object(_interval__WEBPACK_IMPORTED_MODULE_0__["default"])(function(date) {
  date.setUTCHours(0, 0, 0, 0);
}, function(date, step) {
  date.setUTCDate(date.getUTCDate() + step);
}, function(start, end) {
  return (end - start) / _duration__WEBPACK_IMPORTED_MODULE_1__["durationDay"];
}, function(date) {
  return date.getUTCDate() - 1;
});

/* harmony default export */ __webpack_exports__["default"] = (utcDay);
var utcDays = utcDay.range;


/***/ }),

/***/ "./node_modules/d3-time/src/utcHour.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-time/src/utcHour.js ***!
  \*********************************************/
/*! exports provided: default, utcHours */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcHours", function() { return utcHours; });
/* harmony import */ var _interval__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval */ "./node_modules/d3-time/src/interval.js");
/* harmony import */ var _duration__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./duration */ "./node_modules/d3-time/src/duration.js");



var utcHour = Object(_interval__WEBPACK_IMPORTED_MODULE_0__["default"])(function(date) {
  date.setUTCMinutes(0, 0, 0);
}, function(date, step) {
  date.setTime(+date + step * _duration__WEBPACK_IMPORTED_MODULE_1__["durationHour"]);
}, function(start, end) {
  return (end - start) / _duration__WEBPACK_IMPORTED_MODULE_1__["durationHour"];
}, function(date) {
  return date.getUTCHours();
});

/* harmony default export */ __webpack_exports__["default"] = (utcHour);
var utcHours = utcHour.range;


/***/ }),

/***/ "./node_modules/d3-time/src/utcMinute.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-time/src/utcMinute.js ***!
  \***********************************************/
/*! exports provided: default, utcMinutes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcMinutes", function() { return utcMinutes; });
/* harmony import */ var _interval__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval */ "./node_modules/d3-time/src/interval.js");
/* harmony import */ var _duration__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./duration */ "./node_modules/d3-time/src/duration.js");



var utcMinute = Object(_interval__WEBPACK_IMPORTED_MODULE_0__["default"])(function(date) {
  date.setUTCSeconds(0, 0);
}, function(date, step) {
  date.setTime(+date + step * _duration__WEBPACK_IMPORTED_MODULE_1__["durationMinute"]);
}, function(start, end) {
  return (end - start) / _duration__WEBPACK_IMPORTED_MODULE_1__["durationMinute"];
}, function(date) {
  return date.getUTCMinutes();
});

/* harmony default export */ __webpack_exports__["default"] = (utcMinute);
var utcMinutes = utcMinute.range;


/***/ }),

/***/ "./node_modules/d3-time/src/utcMonth.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-time/src/utcMonth.js ***!
  \**********************************************/
/*! exports provided: default, utcMonths */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcMonths", function() { return utcMonths; });
/* harmony import */ var _interval__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval */ "./node_modules/d3-time/src/interval.js");


var utcMonth = Object(_interval__WEBPACK_IMPORTED_MODULE_0__["default"])(function(date) {
  date.setUTCDate(1);
  date.setUTCHours(0, 0, 0, 0);
}, function(date, step) {
  date.setUTCMonth(date.getUTCMonth() + step);
}, function(start, end) {
  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;
}, function(date) {
  return date.getUTCMonth();
});

/* harmony default export */ __webpack_exports__["default"] = (utcMonth);
var utcMonths = utcMonth.range;


/***/ }),

/***/ "./node_modules/d3-time/src/utcWeek.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-time/src/utcWeek.js ***!
  \*********************************************/
/*! exports provided: utcSunday, utcMonday, utcTuesday, utcWednesday, utcThursday, utcFriday, utcSaturday, utcSundays, utcMondays, utcTuesdays, utcWednesdays, utcThursdays, utcFridays, utcSaturdays */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcSunday", function() { return utcSunday; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcMonday", function() { return utcMonday; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcTuesday", function() { return utcTuesday; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcWednesday", function() { return utcWednesday; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcThursday", function() { return utcThursday; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcFriday", function() { return utcFriday; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcSaturday", function() { return utcSaturday; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcSundays", function() { return utcSundays; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcMondays", function() { return utcMondays; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcTuesdays", function() { return utcTuesdays; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcWednesdays", function() { return utcWednesdays; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcThursdays", function() { return utcThursdays; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcFridays", function() { return utcFridays; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcSaturdays", function() { return utcSaturdays; });
/* harmony import */ var _interval__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval */ "./node_modules/d3-time/src/interval.js");
/* harmony import */ var _duration__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./duration */ "./node_modules/d3-time/src/duration.js");



function utcWeekday(i) {
  return Object(_interval__WEBPACK_IMPORTED_MODULE_0__["default"])(function(date) {
    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);
    date.setUTCHours(0, 0, 0, 0);
  }, function(date, step) {
    date.setUTCDate(date.getUTCDate() + step * 7);
  }, function(start, end) {
    return (end - start) / _duration__WEBPACK_IMPORTED_MODULE_1__["durationWeek"];
  });
}

var utcSunday = utcWeekday(0);
var utcMonday = utcWeekday(1);
var utcTuesday = utcWeekday(2);
var utcWednesday = utcWeekday(3);
var utcThursday = utcWeekday(4);
var utcFriday = utcWeekday(5);
var utcSaturday = utcWeekday(6);

var utcSundays = utcSunday.range;
var utcMondays = utcMonday.range;
var utcTuesdays = utcTuesday.range;
var utcWednesdays = utcWednesday.range;
var utcThursdays = utcThursday.range;
var utcFridays = utcFriday.range;
var utcSaturdays = utcSaturday.range;


/***/ }),

/***/ "./node_modules/d3-time/src/utcYear.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-time/src/utcYear.js ***!
  \*********************************************/
/*! exports provided: default, utcYears */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcYears", function() { return utcYears; });
/* harmony import */ var _interval__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval */ "./node_modules/d3-time/src/interval.js");


var utcYear = Object(_interval__WEBPACK_IMPORTED_MODULE_0__["default"])(function(date) {
  date.setUTCMonth(0, 1);
  date.setUTCHours(0, 0, 0, 0);
}, function(date, step) {
  date.setUTCFullYear(date.getUTCFullYear() + step);
}, function(start, end) {
  return end.getUTCFullYear() - start.getUTCFullYear();
}, function(date) {
  return date.getUTCFullYear();
});

// An optimized implementation for this simple case.
utcYear.every = function(k) {
  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : Object(_interval__WEBPACK_IMPORTED_MODULE_0__["default"])(function(date) {
    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);
    date.setUTCMonth(0, 1);
    date.setUTCHours(0, 0, 0, 0);
  }, function(date, step) {
    date.setUTCFullYear(date.getUTCFullYear() + step * k);
  });
};

/* harmony default export */ __webpack_exports__["default"] = (utcYear);
var utcYears = utcYear.range;


/***/ }),

/***/ "./node_modules/d3-time/src/week.js":
/*!******************************************!*\
  !*** ./node_modules/d3-time/src/week.js ***!
  \******************************************/
/*! exports provided: sunday, monday, tuesday, wednesday, thursday, friday, saturday, sundays, mondays, tuesdays, wednesdays, thursdays, fridays, saturdays */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sunday", function() { return sunday; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "monday", function() { return monday; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tuesday", function() { return tuesday; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "wednesday", function() { return wednesday; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "thursday", function() { return thursday; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "friday", function() { return friday; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "saturday", function() { return saturday; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sundays", function() { return sundays; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mondays", function() { return mondays; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tuesdays", function() { return tuesdays; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "wednesdays", function() { return wednesdays; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "thursdays", function() { return thursdays; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fridays", function() { return fridays; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "saturdays", function() { return saturdays; });
/* harmony import */ var _interval__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval */ "./node_modules/d3-time/src/interval.js");
/* harmony import */ var _duration__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./duration */ "./node_modules/d3-time/src/duration.js");



function weekday(i) {
  return Object(_interval__WEBPACK_IMPORTED_MODULE_0__["default"])(function(date) {
    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);
    date.setHours(0, 0, 0, 0);
  }, function(date, step) {
    date.setDate(date.getDate() + step * 7);
  }, function(start, end) {
    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * _duration__WEBPACK_IMPORTED_MODULE_1__["durationMinute"]) / _duration__WEBPACK_IMPORTED_MODULE_1__["durationWeek"];
  });
}

var sunday = weekday(0);
var monday = weekday(1);
var tuesday = weekday(2);
var wednesday = weekday(3);
var thursday = weekday(4);
var friday = weekday(5);
var saturday = weekday(6);

var sundays = sunday.range;
var mondays = monday.range;
var tuesdays = tuesday.range;
var wednesdays = wednesday.range;
var thursdays = thursday.range;
var fridays = friday.range;
var saturdays = saturday.range;


/***/ }),

/***/ "./node_modules/d3-time/src/year.js":
/*!******************************************!*\
  !*** ./node_modules/d3-time/src/year.js ***!
  \******************************************/
/*! exports provided: default, years */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "years", function() { return years; });
/* harmony import */ var _interval__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval */ "./node_modules/d3-time/src/interval.js");


var year = Object(_interval__WEBPACK_IMPORTED_MODULE_0__["default"])(function(date) {
  date.setMonth(0, 1);
  date.setHours(0, 0, 0, 0);
}, function(date, step) {
  date.setFullYear(date.getFullYear() + step);
}, function(start, end) {
  return end.getFullYear() - start.getFullYear();
}, function(date) {
  return date.getFullYear();
});

// An optimized implementation for this simple case.
year.every = function(k) {
  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : Object(_interval__WEBPACK_IMPORTED_MODULE_0__["default"])(function(date) {
    date.setFullYear(Math.floor(date.getFullYear() / k) * k);
    date.setMonth(0, 1);
    date.setHours(0, 0, 0, 0);
  }, function(date, step) {
    date.setFullYear(date.getFullYear() + step * k);
  });
};

/* harmony default export */ __webpack_exports__["default"] = (year);
var years = year.range;


/***/ }),

/***/ "./node_modules/d3-timer/src/index.js":
/*!********************************************!*\
  !*** ./node_modules/d3-timer/src/index.js ***!
  \********************************************/
/*! exports provided: now, timer, timerFlush, timeout, interval */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _timer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./timer */ "./node_modules/d3-timer/src/timer.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "now", function() { return _timer__WEBPACK_IMPORTED_MODULE_0__["now"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timer", function() { return _timer__WEBPACK_IMPORTED_MODULE_0__["timer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timerFlush", function() { return _timer__WEBPACK_IMPORTED_MODULE_0__["timerFlush"]; });

/* harmony import */ var _timeout__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./timeout */ "./node_modules/d3-timer/src/timeout.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeout", function() { return _timeout__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _interval__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./interval */ "./node_modules/d3-timer/src/interval.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interval", function() { return _interval__WEBPACK_IMPORTED_MODULE_2__["default"]; });








/***/ }),

/***/ "./node_modules/d3-timer/src/interval.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-timer/src/interval.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _timer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./timer */ "./node_modules/d3-timer/src/timer.js");


/* harmony default export */ __webpack_exports__["default"] = (function(callback, delay, time) {
  var t = new _timer__WEBPACK_IMPORTED_MODULE_0__["Timer"], total = delay;
  if (delay == null) return t.restart(callback, delay, time), t;
  delay = +delay, time = time == null ? Object(_timer__WEBPACK_IMPORTED_MODULE_0__["now"])() : +time;
  t.restart(function tick(elapsed) {
    elapsed += total;
    t.restart(tick, total += delay, time);
    callback(elapsed);
  }, delay, time);
  return t;
});


/***/ }),

/***/ "./node_modules/d3-timer/src/timeout.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-timer/src/timeout.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _timer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./timer */ "./node_modules/d3-timer/src/timer.js");


/* harmony default export */ __webpack_exports__["default"] = (function(callback, delay, time) {
  var t = new _timer__WEBPACK_IMPORTED_MODULE_0__["Timer"];
  delay = delay == null ? 0 : +delay;
  t.restart(function(elapsed) {
    t.stop();
    callback(elapsed + delay);
  }, delay, time);
  return t;
});


/***/ }),

/***/ "./node_modules/d3-timer/src/timer.js":
/*!********************************************!*\
  !*** ./node_modules/d3-timer/src/timer.js ***!
  \********************************************/
/*! exports provided: now, Timer, timer, timerFlush */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "now", function() { return now; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Timer", function() { return Timer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "timer", function() { return timer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "timerFlush", function() { return timerFlush; });
var frame = 0, // is an animation frame pending?
    timeout = 0, // is a timeout pending?
    interval = 0, // are any timers active?
    pokeDelay = 1000, // how frequently we check for clock skew
    taskHead,
    taskTail,
    clockLast = 0,
    clockNow = 0,
    clockSkew = 0,
    clock = typeof performance === "object" && performance.now ? performance : Date,
    setFrame = typeof window === "object" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };

function now() {
  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);
}

function clearNow() {
  clockNow = 0;
}

function Timer() {
  this._call =
  this._time =
  this._next = null;
}

Timer.prototype = timer.prototype = {
  constructor: Timer,
  restart: function(callback, delay, time) {
    if (typeof callback !== "function") throw new TypeError("callback is not a function");
    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);
    if (!this._next && taskTail !== this) {
      if (taskTail) taskTail._next = this;
      else taskHead = this;
      taskTail = this;
    }
    this._call = callback;
    this._time = time;
    sleep();
  },
  stop: function() {
    if (this._call) {
      this._call = null;
      this._time = Infinity;
      sleep();
    }
  }
};

function timer(callback, delay, time) {
  var t = new Timer;
  t.restart(callback, delay, time);
  return t;
}

function timerFlush() {
  now(); // Get the current time, if not already set.
  ++frame; // Pretend we’ve set an alarm, if we haven’t already.
  var t = taskHead, e;
  while (t) {
    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);
    t = t._next;
  }
  --frame;
}

function wake() {
  clockNow = (clockLast = clock.now()) + clockSkew;
  frame = timeout = 0;
  try {
    timerFlush();
  } finally {
    frame = 0;
    nap();
    clockNow = 0;
  }
}

function poke() {
  var now = clock.now(), delay = now - clockLast;
  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;
}

function nap() {
  var t0, t1 = taskHead, t2, time = Infinity;
  while (t1) {
    if (t1._call) {
      if (time > t1._time) time = t1._time;
      t0 = t1, t1 = t1._next;
    } else {
      t2 = t1._next, t1._next = null;
      t1 = t0 ? t0._next = t2 : taskHead = t2;
    }
  }
  taskTail = t0;
  sleep(time);
}

function sleep(time) {
  if (frame) return; // Soonest alarm already set, or will be.
  if (timeout) timeout = clearTimeout(timeout);
  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.
  if (delay > 24) {
    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);
    if (interval) interval = clearInterval(interval);
  } else {
    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);
    frame = 1, setFrame(wake);
  }
}


/***/ }),

/***/ "./node_modules/d3-voronoi/src/Beach.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-voronoi/src/Beach.js ***!
  \**********************************************/
/*! exports provided: removeBeach, addBeach */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "removeBeach", function() { return removeBeach; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addBeach", function() { return addBeach; });
/* harmony import */ var _RedBlackTree__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./RedBlackTree */ "./node_modules/d3-voronoi/src/RedBlackTree.js");
/* harmony import */ var _Cell__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Cell */ "./node_modules/d3-voronoi/src/Cell.js");
/* harmony import */ var _Circle__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Circle */ "./node_modules/d3-voronoi/src/Circle.js");
/* harmony import */ var _Edge__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Edge */ "./node_modules/d3-voronoi/src/Edge.js");
/* harmony import */ var _Diagram__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Diagram */ "./node_modules/d3-voronoi/src/Diagram.js");






var beachPool = [];

function Beach() {
  Object(_RedBlackTree__WEBPACK_IMPORTED_MODULE_0__["RedBlackNode"])(this);
  this.edge =
  this.site =
  this.circle = null;
}

function createBeach(site) {
  var beach = beachPool.pop() || new Beach;
  beach.site = site;
  return beach;
}

function detachBeach(beach) {
  Object(_Circle__WEBPACK_IMPORTED_MODULE_2__["detachCircle"])(beach);
  _Diagram__WEBPACK_IMPORTED_MODULE_4__["beaches"].remove(beach);
  beachPool.push(beach);
  Object(_RedBlackTree__WEBPACK_IMPORTED_MODULE_0__["RedBlackNode"])(beach);
}

function removeBeach(beach) {
  var circle = beach.circle,
      x = circle.x,
      y = circle.cy,
      vertex = [x, y],
      previous = beach.P,
      next = beach.N,
      disappearing = [beach];

  detachBeach(beach);

  var lArc = previous;
  while (lArc.circle
      && Math.abs(x - lArc.circle.x) < _Diagram__WEBPACK_IMPORTED_MODULE_4__["epsilon"]
      && Math.abs(y - lArc.circle.cy) < _Diagram__WEBPACK_IMPORTED_MODULE_4__["epsilon"]) {
    previous = lArc.P;
    disappearing.unshift(lArc);
    detachBeach(lArc);
    lArc = previous;
  }

  disappearing.unshift(lArc);
  Object(_Circle__WEBPACK_IMPORTED_MODULE_2__["detachCircle"])(lArc);

  var rArc = next;
  while (rArc.circle
      && Math.abs(x - rArc.circle.x) < _Diagram__WEBPACK_IMPORTED_MODULE_4__["epsilon"]
      && Math.abs(y - rArc.circle.cy) < _Diagram__WEBPACK_IMPORTED_MODULE_4__["epsilon"]) {
    next = rArc.N;
    disappearing.push(rArc);
    detachBeach(rArc);
    rArc = next;
  }

  disappearing.push(rArc);
  Object(_Circle__WEBPACK_IMPORTED_MODULE_2__["detachCircle"])(rArc);

  var nArcs = disappearing.length,
      iArc;
  for (iArc = 1; iArc < nArcs; ++iArc) {
    rArc = disappearing[iArc];
    lArc = disappearing[iArc - 1];
    Object(_Edge__WEBPACK_IMPORTED_MODULE_3__["setEdgeEnd"])(rArc.edge, lArc.site, rArc.site, vertex);
  }

  lArc = disappearing[0];
  rArc = disappearing[nArcs - 1];
  rArc.edge = Object(_Edge__WEBPACK_IMPORTED_MODULE_3__["createEdge"])(lArc.site, rArc.site, null, vertex);

  Object(_Circle__WEBPACK_IMPORTED_MODULE_2__["attachCircle"])(lArc);
  Object(_Circle__WEBPACK_IMPORTED_MODULE_2__["attachCircle"])(rArc);
}

function addBeach(site) {
  var x = site[0],
      directrix = site[1],
      lArc,
      rArc,
      dxl,
      dxr,
      node = _Diagram__WEBPACK_IMPORTED_MODULE_4__["beaches"]._;

  while (node) {
    dxl = leftBreakPoint(node, directrix) - x;
    if (dxl > _Diagram__WEBPACK_IMPORTED_MODULE_4__["epsilon"]) node = node.L; else {
      dxr = x - rightBreakPoint(node, directrix);
      if (dxr > _Diagram__WEBPACK_IMPORTED_MODULE_4__["epsilon"]) {
        if (!node.R) {
          lArc = node;
          break;
        }
        node = node.R;
      } else {
        if (dxl > -_Diagram__WEBPACK_IMPORTED_MODULE_4__["epsilon"]) {
          lArc = node.P;
          rArc = node;
        } else if (dxr > -_Diagram__WEBPACK_IMPORTED_MODULE_4__["epsilon"]) {
          lArc = node;
          rArc = node.N;
        } else {
          lArc = rArc = node;
        }
        break;
      }
    }
  }

  Object(_Cell__WEBPACK_IMPORTED_MODULE_1__["createCell"])(site);
  var newArc = createBeach(site);
  _Diagram__WEBPACK_IMPORTED_MODULE_4__["beaches"].insert(lArc, newArc);

  if (!lArc && !rArc) return;

  if (lArc === rArc) {
    Object(_Circle__WEBPACK_IMPORTED_MODULE_2__["detachCircle"])(lArc);
    rArc = createBeach(lArc.site);
    _Diagram__WEBPACK_IMPORTED_MODULE_4__["beaches"].insert(newArc, rArc);
    newArc.edge = rArc.edge = Object(_Edge__WEBPACK_IMPORTED_MODULE_3__["createEdge"])(lArc.site, newArc.site);
    Object(_Circle__WEBPACK_IMPORTED_MODULE_2__["attachCircle"])(lArc);
    Object(_Circle__WEBPACK_IMPORTED_MODULE_2__["attachCircle"])(rArc);
    return;
  }

  if (!rArc) { // && lArc
    newArc.edge = Object(_Edge__WEBPACK_IMPORTED_MODULE_3__["createEdge"])(lArc.site, newArc.site);
    return;
  }

  // else lArc !== rArc
  Object(_Circle__WEBPACK_IMPORTED_MODULE_2__["detachCircle"])(lArc);
  Object(_Circle__WEBPACK_IMPORTED_MODULE_2__["detachCircle"])(rArc);

  var lSite = lArc.site,
      ax = lSite[0],
      ay = lSite[1],
      bx = site[0] - ax,
      by = site[1] - ay,
      rSite = rArc.site,
      cx = rSite[0] - ax,
      cy = rSite[1] - ay,
      d = 2 * (bx * cy - by * cx),
      hb = bx * bx + by * by,
      hc = cx * cx + cy * cy,
      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];

  Object(_Edge__WEBPACK_IMPORTED_MODULE_3__["setEdgeEnd"])(rArc.edge, lSite, rSite, vertex);
  newArc.edge = Object(_Edge__WEBPACK_IMPORTED_MODULE_3__["createEdge"])(lSite, site, null, vertex);
  rArc.edge = Object(_Edge__WEBPACK_IMPORTED_MODULE_3__["createEdge"])(site, rSite, null, vertex);
  Object(_Circle__WEBPACK_IMPORTED_MODULE_2__["attachCircle"])(lArc);
  Object(_Circle__WEBPACK_IMPORTED_MODULE_2__["attachCircle"])(rArc);
}

function leftBreakPoint(arc, directrix) {
  var site = arc.site,
      rfocx = site[0],
      rfocy = site[1],
      pby2 = rfocy - directrix;

  if (!pby2) return rfocx;

  var lArc = arc.P;
  if (!lArc) return -Infinity;

  site = lArc.site;
  var lfocx = site[0],
      lfocy = site[1],
      plby2 = lfocy - directrix;

  if (!plby2) return lfocx;

  var hl = lfocx - rfocx,
      aby2 = 1 / pby2 - 1 / plby2,
      b = hl / plby2;

  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;

  return (rfocx + lfocx) / 2;
}

function rightBreakPoint(arc, directrix) {
  var rArc = arc.N;
  if (rArc) return leftBreakPoint(rArc, directrix);
  var site = arc.site;
  return site[1] === directrix ? site[0] : Infinity;
}


/***/ }),

/***/ "./node_modules/d3-voronoi/src/Cell.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-voronoi/src/Cell.js ***!
  \*********************************************/
/*! exports provided: createCell, cellHalfedgeStart, cellHalfedgeEnd, sortCellHalfedges, clipCells */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createCell", function() { return createCell; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cellHalfedgeStart", function() { return cellHalfedgeStart; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cellHalfedgeEnd", function() { return cellHalfedgeEnd; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sortCellHalfedges", function() { return sortCellHalfedges; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "clipCells", function() { return clipCells; });
/* harmony import */ var _Edge__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Edge */ "./node_modules/d3-voronoi/src/Edge.js");
/* harmony import */ var _Diagram__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Diagram */ "./node_modules/d3-voronoi/src/Diagram.js");



function createCell(site) {
  return _Diagram__WEBPACK_IMPORTED_MODULE_1__["cells"][site.index] = {
    site: site,
    halfedges: []
  };
}

function cellHalfedgeAngle(cell, edge) {
  var site = cell.site,
      va = edge.left,
      vb = edge.right;
  if (site === vb) vb = va, va = site;
  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);
  if (site === va) va = edge[1], vb = edge[0];
  else va = edge[0], vb = edge[1];
  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);
}

function cellHalfedgeStart(cell, edge) {
  return edge[+(edge.left !== cell.site)];
}

function cellHalfedgeEnd(cell, edge) {
  return edge[+(edge.left === cell.site)];
}

function sortCellHalfedges() {
  for (var i = 0, n = _Diagram__WEBPACK_IMPORTED_MODULE_1__["cells"].length, cell, halfedges, j, m; i < n; ++i) {
    if ((cell = _Diagram__WEBPACK_IMPORTED_MODULE_1__["cells"][i]) && (m = (halfedges = cell.halfedges).length)) {
      var index = new Array(m),
          array = new Array(m);
      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, _Diagram__WEBPACK_IMPORTED_MODULE_1__["edges"][halfedges[j]]);
      index.sort(function(i, j) { return array[j] - array[i]; });
      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];
      for (j = 0; j < m; ++j) halfedges[j] = array[j];
    }
  }
}

function clipCells(x0, y0, x1, y1) {
  var nCells = _Diagram__WEBPACK_IMPORTED_MODULE_1__["cells"].length,
      iCell,
      cell,
      site,
      iHalfedge,
      halfedges,
      nHalfedges,
      start,
      startX,
      startY,
      end,
      endX,
      endY,
      cover = true;

  for (iCell = 0; iCell < nCells; ++iCell) {
    if (cell = _Diagram__WEBPACK_IMPORTED_MODULE_1__["cells"][iCell]) {
      site = cell.site;
      halfedges = cell.halfedges;
      iHalfedge = halfedges.length;

      // Remove any dangling clipped edges.
      while (iHalfedge--) {
        if (!_Diagram__WEBPACK_IMPORTED_MODULE_1__["edges"][halfedges[iHalfedge]]) {
          halfedges.splice(iHalfedge, 1);
        }
      }

      // Insert any border edges as necessary.
      iHalfedge = 0, nHalfedges = halfedges.length;
      while (iHalfedge < nHalfedges) {
        end = cellHalfedgeEnd(cell, _Diagram__WEBPACK_IMPORTED_MODULE_1__["edges"][halfedges[iHalfedge]]), endX = end[0], endY = end[1];
        start = cellHalfedgeStart(cell, _Diagram__WEBPACK_IMPORTED_MODULE_1__["edges"][halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];
        if (Math.abs(endX - startX) > _Diagram__WEBPACK_IMPORTED_MODULE_1__["epsilon"] || Math.abs(endY - startY) > _Diagram__WEBPACK_IMPORTED_MODULE_1__["epsilon"]) {
          halfedges.splice(iHalfedge, 0, _Diagram__WEBPACK_IMPORTED_MODULE_1__["edges"].push(Object(_Edge__WEBPACK_IMPORTED_MODULE_0__["createBorderEdge"])(site, end,
              Math.abs(endX - x0) < _Diagram__WEBPACK_IMPORTED_MODULE_1__["epsilon"] && y1 - endY > _Diagram__WEBPACK_IMPORTED_MODULE_1__["epsilon"] ? [x0, Math.abs(startX - x0) < _Diagram__WEBPACK_IMPORTED_MODULE_1__["epsilon"] ? startY : y1]
              : Math.abs(endY - y1) < _Diagram__WEBPACK_IMPORTED_MODULE_1__["epsilon"] && x1 - endX > _Diagram__WEBPACK_IMPORTED_MODULE_1__["epsilon"] ? [Math.abs(startY - y1) < _Diagram__WEBPACK_IMPORTED_MODULE_1__["epsilon"] ? startX : x1, y1]
              : Math.abs(endX - x1) < _Diagram__WEBPACK_IMPORTED_MODULE_1__["epsilon"] && endY - y0 > _Diagram__WEBPACK_IMPORTED_MODULE_1__["epsilon"] ? [x1, Math.abs(startX - x1) < _Diagram__WEBPACK_IMPORTED_MODULE_1__["epsilon"] ? startY : y0]
              : Math.abs(endY - y0) < _Diagram__WEBPACK_IMPORTED_MODULE_1__["epsilon"] && endX - x0 > _Diagram__WEBPACK_IMPORTED_MODULE_1__["epsilon"] ? [Math.abs(startY - y0) < _Diagram__WEBPACK_IMPORTED_MODULE_1__["epsilon"] ? startX : x0, y0]
              : null)) - 1);
          ++nHalfedges;
        }
      }

      if (nHalfedges) cover = false;
    }
  }

  // If there weren’t any edges, have the closest site cover the extent.
  // It doesn’t matter which corner of the extent we measure!
  if (cover) {
    var dx, dy, d2, dc = Infinity;

    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {
      if (cell = _Diagram__WEBPACK_IMPORTED_MODULE_1__["cells"][iCell]) {
        site = cell.site;
        dx = site[0] - x0;
        dy = site[1] - y0;
        d2 = dx * dx + dy * dy;
        if (d2 < dc) dc = d2, cover = cell;
      }
    }

    if (cover) {
      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];
      cover.halfedges.push(
        _Diagram__WEBPACK_IMPORTED_MODULE_1__["edges"].push(Object(_Edge__WEBPACK_IMPORTED_MODULE_0__["createBorderEdge"])(site = cover.site, v00, v01)) - 1,
        _Diagram__WEBPACK_IMPORTED_MODULE_1__["edges"].push(Object(_Edge__WEBPACK_IMPORTED_MODULE_0__["createBorderEdge"])(site, v01, v11)) - 1,
        _Diagram__WEBPACK_IMPORTED_MODULE_1__["edges"].push(Object(_Edge__WEBPACK_IMPORTED_MODULE_0__["createBorderEdge"])(site, v11, v10)) - 1,
        _Diagram__WEBPACK_IMPORTED_MODULE_1__["edges"].push(Object(_Edge__WEBPACK_IMPORTED_MODULE_0__["createBorderEdge"])(site, v10, v00)) - 1
      );
    }
  }

  // Lastly delete any cells with no edges; these were entirely clipped.
  for (iCell = 0; iCell < nCells; ++iCell) {
    if (cell = _Diagram__WEBPACK_IMPORTED_MODULE_1__["cells"][iCell]) {
      if (!cell.halfedges.length) {
        delete _Diagram__WEBPACK_IMPORTED_MODULE_1__["cells"][iCell];
      }
    }
  }
}


/***/ }),

/***/ "./node_modules/d3-voronoi/src/Circle.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-voronoi/src/Circle.js ***!
  \***********************************************/
/*! exports provided: firstCircle, attachCircle, detachCircle */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "firstCircle", function() { return firstCircle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "attachCircle", function() { return attachCircle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "detachCircle", function() { return detachCircle; });
/* harmony import */ var _RedBlackTree__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./RedBlackTree */ "./node_modules/d3-voronoi/src/RedBlackTree.js");
/* harmony import */ var _Diagram__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Diagram */ "./node_modules/d3-voronoi/src/Diagram.js");



var circlePool = [];

var firstCircle;

function Circle() {
  Object(_RedBlackTree__WEBPACK_IMPORTED_MODULE_0__["RedBlackNode"])(this);
  this.x =
  this.y =
  this.arc =
  this.site =
  this.cy = null;
}

function attachCircle(arc) {
  var lArc = arc.P,
      rArc = arc.N;

  if (!lArc || !rArc) return;

  var lSite = lArc.site,
      cSite = arc.site,
      rSite = rArc.site;

  if (lSite === rSite) return;

  var bx = cSite[0],
      by = cSite[1],
      ax = lSite[0] - bx,
      ay = lSite[1] - by,
      cx = rSite[0] - bx,
      cy = rSite[1] - by;

  var d = 2 * (ax * cy - ay * cx);
  if (d >= -_Diagram__WEBPACK_IMPORTED_MODULE_1__["epsilon2"]) return;

  var ha = ax * ax + ay * ay,
      hc = cx * cx + cy * cy,
      x = (cy * ha - ay * hc) / d,
      y = (ax * hc - cx * ha) / d;

  var circle = circlePool.pop() || new Circle;
  circle.arc = arc;
  circle.site = cSite;
  circle.x = x + bx;
  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom

  arc.circle = circle;

  var before = null,
      node = _Diagram__WEBPACK_IMPORTED_MODULE_1__["circles"]._;

  while (node) {
    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {
      if (node.L) node = node.L;
      else { before = node.P; break; }
    } else {
      if (node.R) node = node.R;
      else { before = node; break; }
    }
  }

  _Diagram__WEBPACK_IMPORTED_MODULE_1__["circles"].insert(before, circle);
  if (!before) firstCircle = circle;
}

function detachCircle(arc) {
  var circle = arc.circle;
  if (circle) {
    if (!circle.P) firstCircle = circle.N;
    _Diagram__WEBPACK_IMPORTED_MODULE_1__["circles"].remove(circle);
    circlePool.push(circle);
    Object(_RedBlackTree__WEBPACK_IMPORTED_MODULE_0__["RedBlackNode"])(circle);
    arc.circle = null;
  }
}


/***/ }),

/***/ "./node_modules/d3-voronoi/src/Diagram.js":
/*!************************************************!*\
  !*** ./node_modules/d3-voronoi/src/Diagram.js ***!
  \************************************************/
/*! exports provided: epsilon, epsilon2, beaches, cells, circles, edges, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "epsilon", function() { return epsilon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "epsilon2", function() { return epsilon2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "beaches", function() { return beaches; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cells", function() { return cells; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "circles", function() { return circles; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "edges", function() { return edges; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Diagram; });
/* harmony import */ var _Beach__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Beach */ "./node_modules/d3-voronoi/src/Beach.js");
/* harmony import */ var _Cell__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Cell */ "./node_modules/d3-voronoi/src/Cell.js");
/* harmony import */ var _Circle__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Circle */ "./node_modules/d3-voronoi/src/Circle.js");
/* harmony import */ var _Edge__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Edge */ "./node_modules/d3-voronoi/src/Edge.js");
/* harmony import */ var _RedBlackTree__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./RedBlackTree */ "./node_modules/d3-voronoi/src/RedBlackTree.js");






var epsilon = 1e-6;
var epsilon2 = 1e-12;
var beaches;
var cells;
var circles;
var edges;

function triangleArea(a, b, c) {
  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);
}

function lexicographic(a, b) {
  return b[1] - a[1]
      || b[0] - a[0];
}

function Diagram(sites, extent) {
  var site = sites.sort(lexicographic).pop(),
      x,
      y,
      circle;

  edges = [];
  cells = new Array(sites.length);
  beaches = new _RedBlackTree__WEBPACK_IMPORTED_MODULE_4__["default"];
  circles = new _RedBlackTree__WEBPACK_IMPORTED_MODULE_4__["default"];

  while (true) {
    circle = _Circle__WEBPACK_IMPORTED_MODULE_2__["firstCircle"];
    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {
      if (site[0] !== x || site[1] !== y) {
        Object(_Beach__WEBPACK_IMPORTED_MODULE_0__["addBeach"])(site);
        x = site[0], y = site[1];
      }
      site = sites.pop();
    } else if (circle) {
      Object(_Beach__WEBPACK_IMPORTED_MODULE_0__["removeBeach"])(circle.arc);
    } else {
      break;
    }
  }

  Object(_Cell__WEBPACK_IMPORTED_MODULE_1__["sortCellHalfedges"])();

  if (extent) {
    var x0 = +extent[0][0],
        y0 = +extent[0][1],
        x1 = +extent[1][0],
        y1 = +extent[1][1];
    Object(_Edge__WEBPACK_IMPORTED_MODULE_3__["clipEdges"])(x0, y0, x1, y1);
    Object(_Cell__WEBPACK_IMPORTED_MODULE_1__["clipCells"])(x0, y0, x1, y1);
  }

  this.edges = edges;
  this.cells = cells;

  beaches =
  circles =
  edges =
  cells = null;
}

Diagram.prototype = {
  constructor: Diagram,

  polygons: function() {
    var edges = this.edges;

    return this.cells.map(function(cell) {
      var polygon = cell.halfedges.map(function(i) { return Object(_Cell__WEBPACK_IMPORTED_MODULE_1__["cellHalfedgeStart"])(cell, edges[i]); });
      polygon.data = cell.site.data;
      return polygon;
    });
  },

  triangles: function() {
    var triangles = [],
        edges = this.edges;

    this.cells.forEach(function(cell, i) {
      if (!(m = (halfedges = cell.halfedges).length)) return;
      var site = cell.site,
          halfedges,
          j = -1,
          m,
          s0,
          e1 = edges[halfedges[m - 1]],
          s1 = e1.left === site ? e1.right : e1.left;

      while (++j < m) {
        s0 = s1;
        e1 = edges[halfedges[j]];
        s1 = e1.left === site ? e1.right : e1.left;
        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {
          triangles.push([site.data, s0.data, s1.data]);
        }
      }
    });

    return triangles;
  },

  links: function() {
    return this.edges.filter(function(edge) {
      return edge.right;
    }).map(function(edge) {
      return {
        source: edge.left.data,
        target: edge.right.data
      };
    });
  },

  find: function(x, y, radius) {
    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;

    // Use the previously-found cell, or start with an arbitrary one.
    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;
    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;

    // Traverse the half-edges to find a closer cell, if any.
    do {
      cell = that.cells[i0 = i1], i1 = null;
      cell.halfedges.forEach(function(e) {
        var edge = that.edges[e], v = edge.left;
        if ((v === cell.site || !v) && !(v = edge.right)) return;
        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;
        if (v2 < d2) d2 = v2, i1 = v.index;
      });
    } while (i1 !== null);

    that._found = i0;

    return radius == null || d2 <= radius * radius ? cell.site : null;
  }
}


/***/ }),

/***/ "./node_modules/d3-voronoi/src/Edge.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-voronoi/src/Edge.js ***!
  \*********************************************/
/*! exports provided: createEdge, createBorderEdge, setEdgeEnd, clipEdges */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createEdge", function() { return createEdge; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createBorderEdge", function() { return createBorderEdge; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setEdgeEnd", function() { return setEdgeEnd; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "clipEdges", function() { return clipEdges; });
/* harmony import */ var _Diagram__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Diagram */ "./node_modules/d3-voronoi/src/Diagram.js");


function createEdge(left, right, v0, v1) {
  var edge = [null, null],
      index = _Diagram__WEBPACK_IMPORTED_MODULE_0__["edges"].push(edge) - 1;
  edge.left = left;
  edge.right = right;
  if (v0) setEdgeEnd(edge, left, right, v0);
  if (v1) setEdgeEnd(edge, right, left, v1);
  _Diagram__WEBPACK_IMPORTED_MODULE_0__["cells"][left.index].halfedges.push(index);
  _Diagram__WEBPACK_IMPORTED_MODULE_0__["cells"][right.index].halfedges.push(index);
  return edge;
}

function createBorderEdge(left, v0, v1) {
  var edge = [v0, v1];
  edge.left = left;
  return edge;
}

function setEdgeEnd(edge, left, right, vertex) {
  if (!edge[0] && !edge[1]) {
    edge[0] = vertex;
    edge.left = left;
    edge.right = right;
  } else if (edge.left === right) {
    edge[1] = vertex;
  } else {
    edge[0] = vertex;
  }
}

// Liang–Barsky line clipping.
function clipEdge(edge, x0, y0, x1, y1) {
  var a = edge[0],
      b = edge[1],
      ax = a[0],
      ay = a[1],
      bx = b[0],
      by = b[1],
      t0 = 0,
      t1 = 1,
      dx = bx - ax,
      dy = by - ay,
      r;

  r = x0 - ax;
  if (!dx && r > 0) return;
  r /= dx;
  if (dx < 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  } else if (dx > 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  }

  r = x1 - ax;
  if (!dx && r < 0) return;
  r /= dx;
  if (dx < 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  } else if (dx > 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  }

  r = y0 - ay;
  if (!dy && r > 0) return;
  r /= dy;
  if (dy < 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  } else if (dy > 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  }

  r = y1 - ay;
  if (!dy && r < 0) return;
  r /= dy;
  if (dy < 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  } else if (dy > 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  }

  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?

  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];
  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];
  return true;
}

function connectEdge(edge, x0, y0, x1, y1) {
  var v1 = edge[1];
  if (v1) return true;

  var v0 = edge[0],
      left = edge.left,
      right = edge.right,
      lx = left[0],
      ly = left[1],
      rx = right[0],
      ry = right[1],
      fx = (lx + rx) / 2,
      fy = (ly + ry) / 2,
      fm,
      fb;

  if (ry === ly) {
    if (fx < x0 || fx >= x1) return;
    if (lx > rx) {
      if (!v0) v0 = [fx, y0];
      else if (v0[1] >= y1) return;
      v1 = [fx, y1];
    } else {
      if (!v0) v0 = [fx, y1];
      else if (v0[1] < y0) return;
      v1 = [fx, y0];
    }
  } else {
    fm = (lx - rx) / (ry - ly);
    fb = fy - fm * fx;
    if (fm < -1 || fm > 1) {
      if (lx > rx) {
        if (!v0) v0 = [(y0 - fb) / fm, y0];
        else if (v0[1] >= y1) return;
        v1 = [(y1 - fb) / fm, y1];
      } else {
        if (!v0) v0 = [(y1 - fb) / fm, y1];
        else if (v0[1] < y0) return;
        v1 = [(y0 - fb) / fm, y0];
      }
    } else {
      if (ly < ry) {
        if (!v0) v0 = [x0, fm * x0 + fb];
        else if (v0[0] >= x1) return;
        v1 = [x1, fm * x1 + fb];
      } else {
        if (!v0) v0 = [x1, fm * x1 + fb];
        else if (v0[0] < x0) return;
        v1 = [x0, fm * x0 + fb];
      }
    }
  }

  edge[0] = v0;
  edge[1] = v1;
  return true;
}

function clipEdges(x0, y0, x1, y1) {
  var i = _Diagram__WEBPACK_IMPORTED_MODULE_0__["edges"].length,
      edge;

  while (i--) {
    if (!connectEdge(edge = _Diagram__WEBPACK_IMPORTED_MODULE_0__["edges"][i], x0, y0, x1, y1)
        || !clipEdge(edge, x0, y0, x1, y1)
        || !(Math.abs(edge[0][0] - edge[1][0]) > _Diagram__WEBPACK_IMPORTED_MODULE_0__["epsilon"]
            || Math.abs(edge[0][1] - edge[1][1]) > _Diagram__WEBPACK_IMPORTED_MODULE_0__["epsilon"])) {
      delete _Diagram__WEBPACK_IMPORTED_MODULE_0__["edges"][i];
    }
  }
}


/***/ }),

/***/ "./node_modules/d3-voronoi/src/RedBlackTree.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-voronoi/src/RedBlackTree.js ***!
  \*****************************************************/
/*! exports provided: RedBlackNode, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RedBlackNode", function() { return RedBlackNode; });
function RedBlackTree() {
  this._ = null; // root node
}

function RedBlackNode(node) {
  node.U = // parent node
  node.C = // color - true for red, false for black
  node.L = // left node
  node.R = // right node
  node.P = // previous node
  node.N = null; // next node
}

RedBlackTree.prototype = {
  constructor: RedBlackTree,

  insert: function(after, node) {
    var parent, grandpa, uncle;

    if (after) {
      node.P = after;
      node.N = after.N;
      if (after.N) after.N.P = node;
      after.N = node;
      if (after.R) {
        after = after.R;
        while (after.L) after = after.L;
        after.L = node;
      } else {
        after.R = node;
      }
      parent = after;
    } else if (this._) {
      after = RedBlackFirst(this._);
      node.P = null;
      node.N = after;
      after.P = after.L = node;
      parent = after;
    } else {
      node.P = node.N = null;
      this._ = node;
      parent = null;
    }
    node.L = node.R = null;
    node.U = parent;
    node.C = true;

    after = node;
    while (parent && parent.C) {
      grandpa = parent.U;
      if (parent === grandpa.L) {
        uncle = grandpa.R;
        if (uncle && uncle.C) {
          parent.C = uncle.C = false;
          grandpa.C = true;
          after = grandpa;
        } else {
          if (after === parent.R) {
            RedBlackRotateLeft(this, parent);
            after = parent;
            parent = after.U;
          }
          parent.C = false;
          grandpa.C = true;
          RedBlackRotateRight(this, grandpa);
        }
      } else {
        uncle = grandpa.L;
        if (uncle && uncle.C) {
          parent.C = uncle.C = false;
          grandpa.C = true;
          after = grandpa;
        } else {
          if (after === parent.L) {
            RedBlackRotateRight(this, parent);
            after = parent;
            parent = after.U;
          }
          parent.C = false;
          grandpa.C = true;
          RedBlackRotateLeft(this, grandpa);
        }
      }
      parent = after.U;
    }
    this._.C = false;
  },

  remove: function(node) {
    if (node.N) node.N.P = node.P;
    if (node.P) node.P.N = node.N;
    node.N = node.P = null;

    var parent = node.U,
        sibling,
        left = node.L,
        right = node.R,
        next,
        red;

    if (!left) next = right;
    else if (!right) next = left;
    else next = RedBlackFirst(right);

    if (parent) {
      if (parent.L === node) parent.L = next;
      else parent.R = next;
    } else {
      this._ = next;
    }

    if (left && right) {
      red = next.C;
      next.C = node.C;
      next.L = left;
      left.U = next;
      if (next !== right) {
        parent = next.U;
        next.U = node.U;
        node = next.R;
        parent.L = node;
        next.R = right;
        right.U = next;
      } else {
        next.U = parent;
        parent = next;
        node = next.R;
      }
    } else {
      red = node.C;
      node = next;
    }

    if (node) node.U = parent;
    if (red) return;
    if (node && node.C) { node.C = false; return; }

    do {
      if (node === this._) break;
      if (node === parent.L) {
        sibling = parent.R;
        if (sibling.C) {
          sibling.C = false;
          parent.C = true;
          RedBlackRotateLeft(this, parent);
          sibling = parent.R;
        }
        if ((sibling.L && sibling.L.C)
            || (sibling.R && sibling.R.C)) {
          if (!sibling.R || !sibling.R.C) {
            sibling.L.C = false;
            sibling.C = true;
            RedBlackRotateRight(this, sibling);
            sibling = parent.R;
          }
          sibling.C = parent.C;
          parent.C = sibling.R.C = false;
          RedBlackRotateLeft(this, parent);
          node = this._;
          break;
        }
      } else {
        sibling = parent.L;
        if (sibling.C) {
          sibling.C = false;
          parent.C = true;
          RedBlackRotateRight(this, parent);
          sibling = parent.L;
        }
        if ((sibling.L && sibling.L.C)
          || (sibling.R && sibling.R.C)) {
          if (!sibling.L || !sibling.L.C) {
            sibling.R.C = false;
            sibling.C = true;
            RedBlackRotateLeft(this, sibling);
            sibling = parent.L;
          }
          sibling.C = parent.C;
          parent.C = sibling.L.C = false;
          RedBlackRotateRight(this, parent);
          node = this._;
          break;
        }
      }
      sibling.C = true;
      node = parent;
      parent = parent.U;
    } while (!node.C);

    if (node) node.C = false;
  }
};

function RedBlackRotateLeft(tree, node) {
  var p = node,
      q = node.R,
      parent = p.U;

  if (parent) {
    if (parent.L === p) parent.L = q;
    else parent.R = q;
  } else {
    tree._ = q;
  }

  q.U = parent;
  p.U = q;
  p.R = q.L;
  if (p.R) p.R.U = p;
  q.L = p;
}

function RedBlackRotateRight(tree, node) {
  var p = node,
      q = node.L,
      parent = p.U;

  if (parent) {
    if (parent.L === p) parent.L = q;
    else parent.R = q;
  } else {
    tree._ = q;
  }

  q.U = parent;
  p.U = q;
  p.L = q.R;
  if (p.L) p.L.U = p;
  q.R = p;
}

function RedBlackFirst(node) {
  while (node.L) node = node.L;
  return node;
}

/* harmony default export */ __webpack_exports__["default"] = (RedBlackTree);


/***/ }),

/***/ "./node_modules/d3-voronoi/src/constant.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-voronoi/src/constant.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(x) {
  return function() {
    return x;
  };
});


/***/ }),

/***/ "./node_modules/d3-voronoi/src/index.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-voronoi/src/index.js ***!
  \**********************************************/
/*! exports provided: voronoi */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _voronoi__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./voronoi */ "./node_modules/d3-voronoi/src/voronoi.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "voronoi", function() { return _voronoi__WEBPACK_IMPORTED_MODULE_0__["default"]; });




/***/ }),

/***/ "./node_modules/d3-voronoi/src/point.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-voronoi/src/point.js ***!
  \**********************************************/
/*! exports provided: x, y */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "x", function() { return x; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "y", function() { return y; });
function x(d) {
  return d[0];
}

function y(d) {
  return d[1];
}


/***/ }),

/***/ "./node_modules/d3-voronoi/src/voronoi.js":
/*!************************************************!*\
  !*** ./node_modules/d3-voronoi/src/voronoi.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constant */ "./node_modules/d3-voronoi/src/constant.js");
/* harmony import */ var _point__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./point */ "./node_modules/d3-voronoi/src/point.js");
/* harmony import */ var _Diagram__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Diagram */ "./node_modules/d3-voronoi/src/Diagram.js");




/* harmony default export */ __webpack_exports__["default"] = (function() {
  var x = _point__WEBPACK_IMPORTED_MODULE_1__["x"],
      y = _point__WEBPACK_IMPORTED_MODULE_1__["y"],
      extent = null;

  function voronoi(data) {
    return new _Diagram__WEBPACK_IMPORTED_MODULE_2__["default"](data.map(function(d, i) {
      var s = [Math.round(x(d, i, data) / _Diagram__WEBPACK_IMPORTED_MODULE_2__["epsilon"]) * _Diagram__WEBPACK_IMPORTED_MODULE_2__["epsilon"], Math.round(y(d, i, data) / _Diagram__WEBPACK_IMPORTED_MODULE_2__["epsilon"]) * _Diagram__WEBPACK_IMPORTED_MODULE_2__["epsilon"]];
      s.index = i;
      s.data = d;
      return s;
    }), extent);
  }

  voronoi.polygons = function(data) {
    return voronoi(data).polygons();
  };

  voronoi.links = function(data) {
    return voronoi(data).links();
  };

  voronoi.triangles = function(data) {
    return voronoi(data).triangles();
  };

  voronoi.x = function(_) {
    return arguments.length ? (x = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(+_), voronoi) : x;
  };

  voronoi.y = function(_) {
    return arguments.length ? (y = typeof _ === "function" ? _ : Object(_constant__WEBPACK_IMPORTED_MODULE_0__["default"])(+_), voronoi) : y;
  };

  voronoi.extent = function(_) {
    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];
  };

  voronoi.size = function(_) {
    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];
  };

  return voronoi;
});


/***/ }),

/***/ "./node_modules/fast-deep-equal/index.js":
/*!***********************************************!*\
  !*** ./node_modules/fast-deep-equal/index.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var isArray = Array.isArray;
var keyList = Object.keys;
var hasProp = Object.prototype.hasOwnProperty;

module.exports = function equal(a, b) {
  if (a === b) return true;

  if (a && b && typeof a == 'object' && typeof b == 'object') {
    var arrA = isArray(a)
      , arrB = isArray(b)
      , i
      , length
      , key;

    if (arrA && arrB) {
      length = a.length;
      if (length != b.length) return false;
      for (i = length; i-- !== 0;)
        if (!equal(a[i], b[i])) return false;
      return true;
    }

    if (arrA != arrB) return false;

    var dateA = a instanceof Date
      , dateB = b instanceof Date;
    if (dateA != dateB) return false;
    if (dateA && dateB) return a.getTime() == b.getTime();

    var regexpA = a instanceof RegExp
      , regexpB = b instanceof RegExp;
    if (regexpA != regexpB) return false;
    if (regexpA && regexpB) return a.toString() == b.toString();

    var keys = keyList(a);
    length = keys.length;

    if (length !== keyList(b).length)
      return false;

    for (i = length; i-- !== 0;)
      if (!hasProp.call(b, keys[i])) return false;

    for (i = length; i-- !== 0;) {
      key = keys[i];
      if (!equal(a[key], b[key])) return false;
    }

    return true;
  }

  return a!==a && b!==b;
};


/***/ }),

/***/ "./node_modules/fast-json-stable-stringify/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/fast-json-stable-stringify/index.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function (data, opts) {
    if (!opts) opts = {};
    if (typeof opts === 'function') opts = { cmp: opts };
    var cycles = (typeof opts.cycles === 'boolean') ? opts.cycles : false;

    var cmp = opts.cmp && (function (f) {
        return function (node) {
            return function (a, b) {
                var aobj = { key: a, value: node[a] };
                var bobj = { key: b, value: node[b] };
                return f(aobj, bobj);
            };
        };
    })(opts.cmp);

    var seen = [];
    return (function stringify (node) {
        if (node && node.toJSON && typeof node.toJSON === 'function') {
            node = node.toJSON();
        }

        if (node === undefined) return;
        if (typeof node == 'number') return isFinite(node) ? '' + node : 'null';
        if (typeof node !== 'object') return JSON.stringify(node);

        var i, out;
        if (Array.isArray(node)) {
            out = '[';
            for (i = 0; i < node.length; i++) {
                if (i) out += ',';
                out += stringify(node[i]) || 'null';
            }
            return out + ']';
        }

        if (node === null) return 'null';

        if (seen.indexOf(node) !== -1) {
            if (cycles) return JSON.stringify('__cycle__');
            throw new TypeError('Converting circular structure to JSON');
        }

        var seenIndex = seen.push(node) - 1;
        var keys = Object.keys(node).sort(cmp && cmp(node));
        out = '';
        for (i = 0; i < keys.length; i++) {
            var key = keys[i];
            var value = stringify(node[key]);

            if (!value) continue;
            if (out) out += ',';
            out += JSON.stringify(key) + ':' + value;
        }
        seen.splice(seenIndex, 1);
        return '{' + out + '}';
    })(data);
};


/***/ }),

/***/ "./node_modules/ieee754/index.js":
/*!***************************************!*\
  !*** ./node_modules/ieee754/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = ((value * c) - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}


/***/ }),

/***/ "./node_modules/isarray/index.js":
/*!***************************************!*\
  !*** ./node_modules/isarray/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};


/***/ }),

/***/ "./node_modules/json-stringify-pretty-compact/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/json-stringify-pretty-compact/index.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// Note: This regex matches even invalid JSON strings, but since we’re
// working on the output of `JSON.stringify` we know that only valid strings
// are present (unless the user supplied a weird `options.indent` but in
// that case we don’t care since the output would be invalid anyway).
var stringOrChar = /("(?:[^\\"]|\\.)*")|[:,]/g;

module.exports = function stringify(passedObj, options) {
  var indent, maxLength, replacer;

  options = options || {};
  indent = JSON.stringify(
    [1],
    undefined,
    options.indent === undefined ? 2 : options.indent
  ).slice(2, -3);
  maxLength =
    indent === ""
      ? Infinity
      : options.maxLength === undefined
      ? 80
      : options.maxLength;
  replacer = options.replacer;

  return (function _stringify(obj, currentIndent, reserved) {
    // prettier-ignore
    var end, index, items, key, keyPart, keys, length, nextIndent, prettified, start, string, value;

    if (obj && typeof obj.toJSON === "function") {
      obj = obj.toJSON();
    }

    string = JSON.stringify(obj, replacer);

    if (string === undefined) {
      return string;
    }

    length = maxLength - currentIndent.length - reserved;

    if (string.length <= length) {
      prettified = string.replace(stringOrChar, function(match, stringLiteral) {
        return stringLiteral || match + " ";
      });
      if (prettified.length <= length) {
        return prettified;
      }
    }

    if (replacer != null) {
      obj = JSON.parse(string);
      replacer = undefined;
    }

    if (typeof obj === "object" && obj !== null) {
      nextIndent = currentIndent + indent;
      items = [];
      index = 0;

      if (Array.isArray(obj)) {
        start = "[";
        end = "]";
        length = obj.length;
        for (; index < length; index++) {
          items.push(
            _stringify(obj[index], nextIndent, index === length - 1 ? 0 : 1) ||
              "null"
          );
        }
      } else {
        start = "{";
        end = "}";
        keys = Object.keys(obj);
        length = keys.length;
        for (; index < length; index++) {
          key = keys[index];
          keyPart = JSON.stringify(key) + ": ";
          value = _stringify(
            obj[key],
            nextIndent,
            keyPart.length + (index === length - 1 ? 0 : 1)
          );
          if (value !== undefined) {
            items.push(keyPart + value);
          }
        }
      }

      if (items.length > 0) {
        return [start, indent + items.join(",\n" + nextIndent), end].join(
          "\n" + currentIndent
        );
      }
    }

    return string;
  })(passedObj, "", 0);
};


/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),

/***/ "./node_modules/remodel-vis/dist/DataModel/DataImporter.js":
/*!*****************************************************************!*\
  !*** ./node_modules/remodel-vis/dist/DataModel/DataImporter.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const d3_dsv_1 = __webpack_require__(/*! d3-dsv */ "./node_modules/d3-dsv/src/index.js");
const URLDatasetNode_1 = __webpack_require__(/*! ./Datasets/URLDatasetNode */ "./node_modules/remodel-vis/dist/DataModel/Datasets/URLDatasetNode.js");
const TranformNode_1 = __webpack_require__(/*! ./Transforms/TranformNode */ "./node_modules/remodel-vis/dist/DataModel/Transforms/TranformNode.js");
const InlineDatasetNode_1 = __webpack_require__(/*! ./Datasets/InlineDatasetNode */ "./node_modules/remodel-vis/dist/DataModel/Datasets/InlineDatasetNode.js");
class DataImporter {
    constructor() {
        this.onNewDataset = null;
        this.datasets = new Map();
    }
    getFileNameFromURL(url) {
        let name = url;
        // trim off the file type and use the string before it in the url
        if (url.includes('.json')) {
            name = url.match(/\/(\w+)\.json/)[1];
        }
        else if (url.includes('.csv')) {
            name = url.match(/(\w+)\.csv/)[1];
        }
        return name;
    }
    // adapted from https://stackoverflow.com/a/26298948
    readFileFromDisk(e) {
        const file = e.target.files[0];
        if (!file) {
            return;
        }
        const reader = new FileReader();
        reader.onload = (onloadEvent) => {
            const contents = onloadEvent.target;
            this.convertCSVToDatasetNode(contents.result);
        };
        reader.readAsText(file);
    }
    convertCSVToDatasetNode(contents) {
        const csvContent = d3_dsv_1.csvParse(contents);
        const datasetNode = new InlineDatasetNode_1.InlineDatasetNode();
        datasetNode.fields = csvContent.columns;
        datasetNode.name = 'new Dataset';
        datasetNode.values = csvContent;
        if (this.onNewDataset !== null) {
            this.onNewDataset(datasetNode);
        }
    }
    fetchCSV(preset, urlNode = new URLDatasetNode_1.URLDatasetNode()) {
        const reader = new FileReader();
        const node = new InlineDatasetNode_1.InlineDatasetNode();
        reader.onloadend = (e) => {
            const dataArray = d3_dsv_1.csvParse(e.srcElement.result);
            node.fields = Object.keys(dataArray[0]);
            node.values = dataArray;
            node.name = this.getFileNameFromURL(preset.url);
            this.datasets.set(urlNode.url, node);
            if (this.onNewDataset !== null) {
                this.onNewDataset(node);
            }
        };
        fetch(preset.url)
            .then(res => res.blob())
            .then(blob => reader.readAsText(blob));
    }
    fetchJSON(preset, urlNode = new URLDatasetNode_1.URLDatasetNode()) {
        const node = new InlineDatasetNode_1.InlineDatasetNode();
        fetch(preset.url)
            .then(response => response.json())
            .then(dataArray => {
            node.fields = Object.keys(dataArray[0]);
            node.values = dataArray;
            node.name = this.getFileNameFromURL(preset.url);
            node.format = preset.format;
            this.datasets.set(urlNode.url, node);
            if (this.onNewDataset !== null) {
                this.onNewDataset(node);
            }
        });
    }
    importPreset(preset, node) {
        if (this.datasets.get(preset.url) !== undefined) {
            return;
        }
        if (preset.url.includes('.json')) {
            this.fetchJSON(preset, node);
        }
        else if (preset.url.includes('.csv')) {
            this.fetchCSV(preset, node);
        }
    }
    loadFieldsAndValuesToNode(node) {
        if (node instanceof URLDatasetNode_1.URLDatasetNode) {
            this.importPreset(node.getSchema(), node);
        }
        else if (node instanceof InlineDatasetNode_1.InlineDatasetNode) {
            const values = node.values;
            if (values === undefined || values.length === 0) {
                return;
            }
            node.fields = Object.keys(values[0]);
        }
        else if (node instanceof TranformNode_1.TransformNode) {
            const rootDatasetNode = node.getRootDatasetNode();
            if (rootDatasetNode !== null) {
                this.loadFieldsAndValuesToNode(rootDatasetNode);
            }
        }
    }
}
exports.DataImporter = DataImporter;


/***/ }),

/***/ "./node_modules/remodel-vis/dist/DataModel/Datasets/DatasetNode.js":
/*!*************************************************************************!*\
  !*** ./node_modules/remodel-vis/dist/DataModel/Datasets/DatasetNode.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const GraphNode_1 = __webpack_require__(/*! ../GraphNode */ "./node_modules/remodel-vis/dist/DataModel/GraphNode.js");
class DatasetNode extends GraphNode_1.GraphNode {
    constructor() {
        super();
        this.fields = [];
        this.values = [];
    }
    getTransform() {
        // datasets are roots in a data graph and therefore do not have parent or child transforms
        return [];
    }
}
exports.DatasetNode = DatasetNode;


/***/ }),

/***/ "./node_modules/remodel-vis/dist/DataModel/Datasets/InlineDatasetNode.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/remodel-vis/dist/DataModel/Datasets/InlineDatasetNode.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const DatasetNode_1 = __webpack_require__(/*! ./DatasetNode */ "./node_modules/remodel-vis/dist/DataModel/Datasets/DatasetNode.js");
class InlineDatasetNode extends DatasetNode_1.DatasetNode {
    getSchema() {
        return {
            name: this.name,
            values: this.values,
            format: this.format
        };
    }
    setSchema(data) {
        this.name = data.name;
        this.values = data.values;
        this.format = data.format;
    }
}
exports.InlineDatasetNode = InlineDatasetNode;


/***/ }),

/***/ "./node_modules/remodel-vis/dist/DataModel/Datasets/NamedDataSourceNode.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/remodel-vis/dist/DataModel/Datasets/NamedDataSourceNode.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const DatasetNode_1 = __webpack_require__(/*! ./DatasetNode */ "./node_modules/remodel-vis/dist/DataModel/Datasets/DatasetNode.js");
class NamedDataSourceNode extends DatasetNode_1.DatasetNode {
    getSchema() {
        return {
            name: this.name,
            format: this.format
        };
    }
    setSchema(data) {
        this.name = data.name;
        this.format = data.format;
    }
}
exports.NamedDataSourceNode = NamedDataSourceNode;


/***/ }),

/***/ "./node_modules/remodel-vis/dist/DataModel/Datasets/URLDatasetNode.js":
/*!****************************************************************************!*\
  !*** ./node_modules/remodel-vis/dist/DataModel/Datasets/URLDatasetNode.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const DatasetNode_1 = __webpack_require__(/*! ./DatasetNode */ "./node_modules/remodel-vis/dist/DataModel/Datasets/DatasetNode.js");
class URLDatasetNode extends DatasetNode_1.DatasetNode {
    getSchema() {
        return {
            name: this.name,
            url: this.url,
            format: this.format
        };
    }
    setSchema(data) {
        this.name = data.name;
        this.url = data.url;
        this.format = data.format;
    }
}
exports.URLDatasetNode = URLDatasetNode;


/***/ }),

/***/ "./node_modules/remodel-vis/dist/DataModel/GraphNode.js":
/*!**************************************************************!*\
  !*** ./node_modules/remodel-vis/dist/DataModel/GraphNode.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
class GraphNode {
    constructor() {
        this.id = `node${Math.floor(Math.random() * 1000000)}`;
        this.myName = '';
        this.parent = null;
        this.children = [];
    }
    getAllChildNodes() {
        const allChildNodes = this.children.map(n => n);
        this.children.forEach(childNode => {
            allChildNodes.push(...childNode.getAllChildNodes());
        });
        return allChildNodes;
    }
    getFullAncestry() {
        const allParentNodes = [this];
        let workingNode = this.parent;
        if (this.parent === null) {
            return allParentNodes;
        }
        // go up in the node's hierarchy as far as possible
        while (workingNode !== null) {
            allParentNodes.push(workingNode);
            workingNode = workingNode.parent;
        }
        return allParentNodes.reverse();
    }
    get name() {
        if (this.myName.length === 0) {
            return this.id;
        }
        return this.myName;
    }
    set name(name) {
        if (name === undefined) {
            return;
        }
        this.myName = name;
    }
}
exports.GraphNode = GraphNode;


/***/ }),

/***/ "./node_modules/remodel-vis/dist/DataModel/Transforms/TranformNode.js":
/*!****************************************************************************!*\
  !*** ./node_modules/remodel-vis/dist/DataModel/Transforms/TranformNode.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const DatasetNode_1 = __webpack_require__(/*! ../Datasets/DatasetNode */ "./node_modules/remodel-vis/dist/DataModel/Datasets/DatasetNode.js");
const GraphNode_1 = __webpack_require__(/*! ../GraphNode */ "./node_modules/remodel-vis/dist/DataModel/GraphNode.js");
class TransformNode extends GraphNode_1.GraphNode {
    getRootDatasetNode() {
        if (this.parent === null) {
            return null;
        }
        let workingNode = this.parent;
        // go up in the node's hierarchy as far as possible
        while (workingNode.parent !== null) {
            workingNode = workingNode.parent;
        }
        if (!(workingNode instanceof DatasetNode_1.DatasetNode)) {
            return null;
        }
        return workingNode;
    }
    getSchema() {
        const rootDataset = this.getRootDatasetNode();
        return rootDataset.getSchema();
    }
    setSchema(data) {
        return;
    }
    getTransform() {
        const transformNodesOnPathToRoot = this.getFullAncestry();
        const transforms = transformNodesOnPathToRoot
            .filter(n => n instanceof TransformNode)
            .map((n) => n.transform);
        return transforms;
    }
}
exports.TransformNode = TransformNode;


/***/ }),

/***/ "./node_modules/remodel-vis/dist/DataModel/Transforms/TransformTypes.js":
/*!******************************************************************************!*\
  !*** ./node_modules/remodel-vis/dist/DataModel/Transforms/TransformTypes.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.transformNames = ['aggregate', 'bin', 'calculate', 'filter', 'flatten',
    'fold', 'impute', 'join aggregate', 'lookup', 'sample', 'stack', 'time unit'];


/***/ }),

/***/ "./node_modules/remodel-vis/dist/DataModel/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/remodel-vis/dist/DataModel/index.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var GraphNode_1 = __webpack_require__(/*! ./GraphNode */ "./node_modules/remodel-vis/dist/DataModel/GraphNode.js");
exports.GraphNode = GraphNode_1.GraphNode;
var TranformNode_1 = __webpack_require__(/*! ./Transforms/TranformNode */ "./node_modules/remodel-vis/dist/DataModel/Transforms/TranformNode.js");
exports.TransformNode = TranformNode_1.TransformNode;
var TransformTypes_1 = __webpack_require__(/*! ./Transforms/TransformTypes */ "./node_modules/remodel-vis/dist/DataModel/Transforms/TransformTypes.js");
exports.transformNames = TransformTypes_1.transformNames;
var DatasetNode_1 = __webpack_require__(/*! ./Datasets/DatasetNode */ "./node_modules/remodel-vis/dist/DataModel/Datasets/DatasetNode.js");
exports.DatasetNode = DatasetNode_1.DatasetNode;
var InlineDatasetNode_1 = __webpack_require__(/*! ./Datasets/InlineDatasetNode */ "./node_modules/remodel-vis/dist/DataModel/Datasets/InlineDatasetNode.js");
exports.InlineDatasetNode = InlineDatasetNode_1.InlineDatasetNode;
var NamedDataSourceNode_1 = __webpack_require__(/*! ./Datasets/NamedDataSourceNode */ "./node_modules/remodel-vis/dist/DataModel/Datasets/NamedDataSourceNode.js");
exports.NamedDataSourceNode = NamedDataSourceNode_1.NamedDataSourceNode;
var URLDatasetNode_1 = __webpack_require__(/*! ./Datasets/URLDatasetNode */ "./node_modules/remodel-vis/dist/DataModel/Datasets/URLDatasetNode.js");
exports.URLDatasetNode = URLDatasetNode_1.URLDatasetNode;
var DataImporter_1 = __webpack_require__(/*! ./DataImporter */ "./node_modules/remodel-vis/dist/DataModel/DataImporter.js");
exports.DataImporter = DataImporter_1.DataImporter;


/***/ }),

/***/ "./node_modules/remodel-vis/dist/TemplateModel/CompositionTemplate.js":
/*!****************************************************************************!*\
  !*** ./node_modules/remodel-vis/dist/TemplateModel/CompositionTemplate.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const Template_1 = __webpack_require__(/*! ./Template */ "./node_modules/remodel-vis/dist/TemplateModel/Template.js");
class CompositionTemplate extends Template_1.Template {
    constructor(composition, visualElements, parent = null) {
        super(visualElements, composition, parent);
    }
}
exports.CompositionTemplate = CompositionTemplate;


/***/ }),

/***/ "./node_modules/remodel-vis/dist/TemplateModel/ConcatTemplate.js":
/*!***********************************************************************!*\
  !*** ./node_modules/remodel-vis/dist/TemplateModel/ConcatTemplate.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const CompositionTemplate_1 = __webpack_require__(/*! ./CompositionTemplate */ "./node_modules/remodel-vis/dist/TemplateModel/CompositionTemplate.js");
class ConcatTemplate extends CompositionTemplate_1.CompositionTemplate {
    constructor(visualElements, parent = null) {
        super('concatenate', visualElements, parent);
        this.isVertical = true;
        this.isWrappable = false;
    }
}
exports.ConcatTemplate = ConcatTemplate;


/***/ }),

/***/ "./node_modules/remodel-vis/dist/TemplateModel/FacetTemplate.js":
/*!**********************************************************************!*\
  !*** ./node_modules/remodel-vis/dist/TemplateModel/FacetTemplate.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const CompositionTemplate_1 = __webpack_require__(/*! ./CompositionTemplate */ "./node_modules/remodel-vis/dist/TemplateModel/CompositionTemplate.js");
class FacetTemplate extends CompositionTemplate_1.CompositionTemplate {
    constructor(visualElements, parent = null) {
        super('facet', visualElements, parent);
        this.isInlineFacetted = false;
    }
}
exports.FacetTemplate = FacetTemplate;


/***/ }),

/***/ "./node_modules/remodel-vis/dist/TemplateModel/LayerTemplate.js":
/*!**********************************************************************!*\
  !*** ./node_modules/remodel-vis/dist/TemplateModel/LayerTemplate.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const CompositionTemplate_1 = __webpack_require__(/*! ./CompositionTemplate */ "./node_modules/remodel-vis/dist/TemplateModel/CompositionTemplate.js");
class LayerTemplate extends CompositionTemplate_1.CompositionTemplate {
    constructor(visualElements, parent = null) {
        super('overlay', visualElements, parent);
        this.groupEncodings = new Map();
    }
}
exports.LayerTemplate = LayerTemplate;


/***/ }),

/***/ "./node_modules/remodel-vis/dist/TemplateModel/LayoutType.js":
/*!*******************************************************************!*\
  !*** ./node_modules/remodel-vis/dist/TemplateModel/LayoutType.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.COMPOSITION_TYPES = ['repeat', 'overlay', 'facet', 'concatenate'];
exports.PLOT_TYPES = ['node-link', 'bubble chart', 'timeline', 'radius',
    'angular', 'polar coordinates', 'cartesian', 'histogram', 'parallel plot', 'star plot'];
exports.layouts = exports.PLOT_TYPES.concat(exports.COMPOSITION_TYPES);


/***/ }),

/***/ "./node_modules/remodel-vis/dist/TemplateModel/MarkEncoding.js":
/*!*********************************************************************!*\
  !*** ./node_modules/remodel-vis/dist/TemplateModel/MarkEncoding.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.positionEncodings = ['x', 'y', 'x2', 'y2'];
exports.geographicPositionEncodings = ['longitude', 'latitude'];
exports.markPropertiesChannelEncodings = [
    'filled', 'color', 'fill', 'stroke', 'opacity', 'fillOpacity', 'strokeOpacity', 'size', 'shape',
    'strokeCap', 'strokeDash', 'strokeDashOffset', 'strokeJoin', 'strokeMiterLimit', 'strokeWidth'
];
exports.textTooltipChannelEncodings = ['text', 'tooltip'];
exports.hyperLinkChannelEncodings = ['href', 'cursor'];
exports.keyChannelEncodings = ['key'];
exports.orderChannelEncodings = ['order'];
exports.loDChannelEncodings = ['detail'];
exports.facetChannelEncodings = ['facet', 'row', 'column'];
exports.markEncodings = exports.positionEncodings
    .concat(exports.geographicPositionEncodings)
    .concat(exports.markPropertiesChannelEncodings)
    .concat(exports.textTooltipChannelEncodings)
    .concat(exports.hyperLinkChannelEncodings)
    .concat(exports.orderChannelEncodings)
    .concat(exports.loDChannelEncodings)
    .concat(exports.facetChannelEncodings);
exports.markEncodingGroups = [
    'position', 'geographic', 'mark property', 'text tooltip', 'hyperlink', 'key channel',
    'order channel', 'lod channel', 'facet channel'
];


/***/ }),

/***/ "./node_modules/remodel-vis/dist/TemplateModel/MarkType.js":
/*!*****************************************************************!*\
  !*** ./node_modules/remodel-vis/dist/TemplateModel/MarkType.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.MARK_TYPES = ['area', 'bar', 'circle', 'geoshape', 'line', 'point', 'rect', 'rule', 'square', 'text', 'tick', 'trail'];


/***/ }),

/***/ "./node_modules/remodel-vis/dist/TemplateModel/PlotTemplate.js":
/*!*********************************************************************!*\
  !*** ./node_modules/remodel-vis/dist/TemplateModel/PlotTemplate.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const mark_1 = __webpack_require__(/*! vega-lite/build/src/mark */ "./node_modules/vega-lite/build/src/mark.js");
const Template_1 = __webpack_require__(/*! ./Template */ "./node_modules/remodel-vis/dist/TemplateModel/Template.js");
class PlotTemplate extends Template_1.Template {
    constructor(parent = null) {
        super([], null, parent);
        this.mark = null;
    }
    get type() {
        if (mark_1.isPrimitiveMark(this.mark)) {
            return this.mark;
        }
        else if (mark_1.isMarkDef(this.mark)) {
            return this.mark.type;
        }
    }
    set type(type) {
        if (this.mark === null) {
            this.mark = type;
        }
        else {
            if (mark_1.isPrimitiveMark(this.mark)) {
                this.mark = type;
            }
            else if (mark_1.isMarkDef(this.mark)) {
                this.mark.type = type;
            }
        }
    }
}
exports.PlotTemplate = PlotTemplate;


/***/ }),

/***/ "./node_modules/remodel-vis/dist/TemplateModel/RepeatTemplate.js":
/*!***********************************************************************!*\
  !*** ./node_modules/remodel-vis/dist/TemplateModel/RepeatTemplate.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const CompositionTemplate_1 = __webpack_require__(/*! ./CompositionTemplate */ "./node_modules/remodel-vis/dist/TemplateModel/CompositionTemplate.js");
class RepeatTemplate extends CompositionTemplate_1.CompositionTemplate {
    constructor(visualElements, parent = null) {
        super('repeat', visualElements, parent);
        this.repeat = {};
    }
}
exports.RepeatTemplate = RepeatTemplate;


/***/ }),

/***/ "./node_modules/remodel-vis/dist/TemplateModel/SpecCompiler.js":
/*!*********************************************************************!*\
  !*** ./node_modules/remodel-vis/dist/TemplateModel/SpecCompiler.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const data_1 = __webpack_require__(/*! vega-lite/build/src/data */ "./node_modules/vega-lite/build/src/data.js");
const CompositionTemplate_1 = __webpack_require__(/*! ./CompositionTemplate */ "./node_modules/remodel-vis/dist/TemplateModel/CompositionTemplate.js");
const ConcatTemplate_1 = __webpack_require__(/*! ./ConcatTemplate */ "./node_modules/remodel-vis/dist/TemplateModel/ConcatTemplate.js");
const FacetTemplate_1 = __webpack_require__(/*! ./FacetTemplate */ "./node_modules/remodel-vis/dist/TemplateModel/FacetTemplate.js");
const LayerTemplate_1 = __webpack_require__(/*! ./LayerTemplate */ "./node_modules/remodel-vis/dist/TemplateModel/LayerTemplate.js");
const PlotTemplate_1 = __webpack_require__(/*! ./PlotTemplate */ "./node_modules/remodel-vis/dist/TemplateModel/PlotTemplate.js");
const RepeatTemplate_1 = __webpack_require__(/*! ./RepeatTemplate */ "./node_modules/remodel-vis/dist/TemplateModel/RepeatTemplate.js");
const SpecUtils_1 = __webpack_require__(/*! ./SpecUtils */ "./node_modules/remodel-vis/dist/TemplateModel/SpecUtils.js");
const DataModel_1 = __webpack_require__(/*! ../DataModel */ "./node_modules/remodel-vis/dist/DataModel/index.js");
class SpecCompiler {
    getBasicSchema(template) {
        // check for empty templates, which should also generate valid specs
        if (template && template.visualElements.length === 0 && template.parent === null) {
            return {
                $schema: 'https://vega.github.io/schema/vega-lite/v3.json',
                mark: 'area',
                encoding: {}
            };
        }
        return {
            $schema: 'https://vega.github.io/schema/vega-lite/v3.json'
        };
    }
    setCompositionProperties(schema, template) {
        if (template.columns !== undefined) {
            schema.columns = template.columns;
        }
        if (template.spacing !== undefined) {
            schema.spacing = template.spacing;
        }
        return schema;
    }
    setToplevelProperties(schema, template, includeData = true) {
        if (includeData && !!template.data) {
            schema.data = template.data;
            const dataNode = template.dataTransformationNode;
            if (dataNode instanceof DataModel_1.TransformNode) {
                schema.transform = dataNode.getTransform();
            }
            else if (dataNode instanceof DataModel_1.DatasetNode) {
                schema.transform = dataNode.getAllChildNodes().map(node => node.transform);
            }
        }
        if (includeData && !!template.datasets) {
            schema.datasets = template.datasets;
        }
        if (template.bounds !== undefined) {
            schema.bounds = template.bounds;
        }
        if (template.height !== undefined) {
            schema.height = template.height;
        }
        if (template.width !== undefined) {
            schema.width = template.width;
        }
        if (template.config !== undefined) {
            schema.config = template.config;
        }
        if (template.projection !== undefined) {
            schema.projection = template.projection;
        }
        if (template instanceof CompositionTemplate_1.CompositionTemplate) {
            schema = this.setCompositionProperties(schema, template);
        }
        return schema;
    }
    getRootTemplate(template) {
        let workingNode = template;
        while (workingNode.parent !== null) {
            workingNode = workingNode.parent;
        }
        return workingNode;
    }
    abstractCompositions(schema, compositionProperty) {
        const abstraction = SpecUtils_1.getAbstraction(schema);
        if (compositionProperty === 'spec' || compositionProperty === 'facet') {
            schema[compositionProperty] = abstraction;
        }
        else {
            schema[compositionProperty] = [abstraction];
        }
        return schema;
    }
    applyRepeatLayout(template, schema) {
        schema = this.abstractCompositions(schema, 'spec');
        // parent must be repeat template to reach this branch
        schema.repeat = template.parent.repeat;
        return schema;
    }
    applyFacetLayout(template, schema) {
        const parentTemplate = template.parent;
        if (parentTemplate.isInlineFacetted) {
            if (schema.encoding === undefined) {
                schema.encoding = {};
            }
            schema.encoding.facet = parentTemplate.facet;
        }
        else {
            schema = this.abstractCompositions(schema, 'spec');
            schema.facet = parentTemplate.facet;
        }
        return schema;
    }
    applyConcatLayout(schema) {
        return this.abstractCompositions(schema, 'hconcat');
    }
    applyOverlayLayout(schema) {
        return this.abstractCompositions(schema, 'layer');
    }
    applyCompositionLayout(template, schema, composition) {
        if (composition === 'repeat') {
            this.applyRepeatLayout(template, schema);
        }
        else if (composition === 'facet') {
            this.applyFacetLayout(template, schema);
        }
        else if (composition === 'concatenate') {
            this.applyConcatLayout(schema);
        }
        else if (composition === 'overlay') {
            this.applyOverlayLayout(schema);
        }
        return schema;
    }
    getDataInHierarchy(template) {
        // data can be stored either in a child node or on the top level template, therefore find the
        // top level, get its flat hierarchy and find a template with a dataset bound to it
        let topLevelTemplate = template;
        let data = null;
        while (topLevelTemplate.parent !== null) {
            if (topLevelTemplate.data !== undefined && topLevelTemplate.data !== null) {
                data = topLevelTemplate.data;
                return data;
            }
            topLevelTemplate = topLevelTemplate.parent;
        }
        const flatHierarchy = topLevelTemplate.getFlatHierarchy();
        const dataTemplate = flatHierarchy.find(t => {
            return t.data !== null && t.data !== undefined;
        });
        // could occur when template has no parent, no visualelements and no data (i.e. is "empty")
        if (dataTemplate === undefined) {
            return {
                values: [],
            };
        }
        data = dataTemplate.data;
        return data;
    }
    getDatasetsInAncestry(template) {
        // if the template references a namedDataset, also include that dataset.
        if (template.data !== null && !data_1.isNamedData(template.data)) {
            return null;
        }
        let workingNode = template;
        while (workingNode !== null && (workingNode.datasets === null || workingNode.datasets === undefined)) {
            workingNode = workingNode.parent;
        }
        if (workingNode === null) {
            return null;
        }
        return workingNode.datasets;
    }
    getRepeatSpec(parentTemplate) {
        const template = parentTemplate.visualElements[0];
        const layout = parentTemplate.layout;
        let schema = null;
        schema = this.getVegaSpecification(template, false);
        if (schema !== null) {
            schema = this.applyCompositionLayout(template, schema, layout);
        }
        return schema;
    }
    getFacetSpec(parentTemplate) {
        const encodingTemplate = parentTemplate.visualElements[0];
        let schema = null;
        // use the encodings from the child template, then apply facetting properties
        schema = this.getVegaSpecification(encodingTemplate, false);
        schema = this.applyCompositionLayout(encodingTemplate, schema, 'facet');
        return schema;
    }
    getMultiViewSpec(template, useOverwrittenEncodings) {
        const templates = template.visualElements;
        const schema = this.getBasicSchema();
        const overwriteChildEncodings = !(template instanceof RepeatTemplate_1.RepeatTemplate) && useOverwrittenEncodings;
        const individualSchemas = templates
            .map(t => this.getVegaSpecification(t, false, overwriteChildEncodings));
        const individualViewAbstractions = individualSchemas
            .map(s => SpecUtils_1.getAbstraction(s));
        if (template instanceof ConcatTemplate_1.ConcatTemplate) {
            if (template.isVertical) {
                schema.vconcat = individualViewAbstractions;
            }
            else {
                schema.hconcat = individualViewAbstractions;
            }
        }
        else if (template instanceof LayerTemplate_1.LayerTemplate) {
            if (template.groupEncodings.size > 0) {
                schema.encoding = {};
                template.groupEncodings.forEach((value, key) => schema.encoding[key] = value);
                individualViewAbstractions.forEach(abstraction => {
                    delete abstraction.data;
                    delete abstraction.datasets;
                });
            }
            schema.layer = individualViewAbstractions;
        }
        return schema;
    }
    getPlotSchema(template, inferData, useOverwrittenEncodings) {
        const schema = this.getBasicSchema();
        let data = template.data;
        let datasets = template.datasets;
        if (inferData) {
            data = this.getDataInHierarchy(template);
            datasets = this.getDatasetsInAncestry(template);
        }
        if (data !== undefined && data !== null) {
            schema.data = data;
        }
        if (datasets !== undefined && datasets !== null) {
            schema.datasets = datasets;
        }
        schema.mark = template.mark;
        if (template.selection !== undefined) {
            schema.selection = template.selection;
        }
        schema.encoding = {};
        template.encodings.forEach((value, key) => {
            schema.encoding[key] = value;
        });
        // do not overwrite encodings of repeated plots, as this would in turn use a mapping to a field
        // instead of the repeated column/row
        if (useOverwrittenEncodings) {
            template.overwrittenEncodings.forEach((value, key) => {
                schema.encoding[key] = value;
            });
        }
        return schema;
    }
    getCompositionSchema(template, inferData, useOverwrittenEncodings) {
        let schema = null;
        let data = null;
        let datasets = null;
        if (template.visualElements.length === 0) {
            schema = this.getBasicSchema(template);
        }
        else if (template instanceof RepeatTemplate_1.RepeatTemplate) {
            schema = this.getRepeatSpec(template);
        }
        else if (template instanceof FacetTemplate_1.FacetTemplate) {
            schema = this.getFacetSpec(template);
        }
        else {
            schema = this.getMultiViewSpec(template, useOverwrittenEncodings);
        }
        if (inferData) {
            data = this.getDataInHierarchy(template);
            datasets = SpecUtils_1.getAllDatasetsInHierarchy(template);
        }
        else {
            data = template.data;
            datasets = template.datasets;
        }
        if (data !== undefined && data !== null) {
            schema.data = data;
        }
        if (datasets !== undefined && datasets !== null) {
            schema.datasets = datasets;
        }
        if (template.resolve !== undefined) {
            schema.resolve = template.resolve;
        }
        return schema;
    }
    getVegaSpecification(template, inferProperties = false, useOverwrittenEncodings = false) {
        let schema = null;
        if (template instanceof PlotTemplate_1.PlotTemplate) {
            schema = this.getPlotSchema(template, inferProperties, useOverwrittenEncodings);
        }
        else if (template instanceof CompositionTemplate_1.CompositionTemplate) {
            schema = this.getCompositionSchema(template, inferProperties, useOverwrittenEncodings);
        }
        schema = this.setToplevelProperties(schema, template);
        if (inferProperties) {
            const rootTemplate = this.getRootTemplate(template);
            schema = this.setToplevelProperties(schema, rootTemplate, false);
        }
        return schema;
    }
}
exports.SpecCompiler = SpecCompiler;


/***/ }),

/***/ "./node_modules/remodel-vis/dist/TemplateModel/SpecParser.js":
/*!*******************************************************************!*\
  !*** ./node_modules/remodel-vis/dist/TemplateModel/SpecParser.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const spec_1 = __webpack_require__(/*! vega-lite/build/src/spec */ "./node_modules/vega-lite/build/src/spec/index.js");
const data_1 = __webpack_require__(/*! vega-lite/build/src/data */ "./node_modules/vega-lite/build/src/data.js");
const concat_1 = __webpack_require__(/*! vega-lite/build/src/spec/concat */ "./node_modules/vega-lite/build/src/spec/concat.js");
const channeldef_1 = __webpack_require__(/*! vega-lite/build/src/channeldef */ "./node_modules/vega-lite/build/src/channeldef.js");
const InlineDatasetNode_1 = __webpack_require__(/*! ../DataModel/Datasets/InlineDatasetNode */ "./node_modules/remodel-vis/dist/DataModel/Datasets/InlineDatasetNode.js");
const NamedDataSourceNode_1 = __webpack_require__(/*! ../DataModel/Datasets/NamedDataSourceNode */ "./node_modules/remodel-vis/dist/DataModel/Datasets/NamedDataSourceNode.js");
const URLDatasetNode_1 = __webpack_require__(/*! ../DataModel/Datasets/URLDatasetNode */ "./node_modules/remodel-vis/dist/DataModel/Datasets/URLDatasetNode.js");
const TranformNode_1 = __webpack_require__(/*! ../DataModel/Transforms/TranformNode */ "./node_modules/remodel-vis/dist/DataModel/Transforms/TranformNode.js");
const CompositionTemplate_1 = __webpack_require__(/*! ./CompositionTemplate */ "./node_modules/remodel-vis/dist/TemplateModel/CompositionTemplate.js");
const ConcatTemplate_1 = __webpack_require__(/*! ./ConcatTemplate */ "./node_modules/remodel-vis/dist/TemplateModel/ConcatTemplate.js");
const FacetTemplate_1 = __webpack_require__(/*! ./FacetTemplate */ "./node_modules/remodel-vis/dist/TemplateModel/FacetTemplate.js");
const LayerTemplate_1 = __webpack_require__(/*! ./LayerTemplate */ "./node_modules/remodel-vis/dist/TemplateModel/LayerTemplate.js");
const PlotTemplate_1 = __webpack_require__(/*! ./PlotTemplate */ "./node_modules/remodel-vis/dist/TemplateModel/PlotTemplate.js");
const RepeatTemplate_1 = __webpack_require__(/*! ./RepeatTemplate */ "./node_modules/remodel-vis/dist/TemplateModel/RepeatTemplate.js");
const SpecUtils_1 = __webpack_require__(/*! ./SpecUtils */ "./node_modules/remodel-vis/dist/TemplateModel/SpecUtils.js");
const DataModel_1 = __webpack_require__(/*! ../DataModel */ "./node_modules/remodel-vis/dist/DataModel/index.js");
class SpecParser {
    getEncodingsMapFromPlotSchema(schema) {
        const templateEncodings = new Map();
        // a mark can also be configured using the "global" encoding of layered views, in this case the
        // mark's encoding can be empty
        if (schema.encoding === undefined) {
            return templateEncodings;
        }
        const schemaEncodings = Object.keys(schema.encoding);
        schemaEncodings.forEach((encoding) => {
            templateEncodings.set(encoding, schema.encoding[encoding]);
        });
        return templateEncodings;
    }
    setSingleViewProperties(schema, template) {
        template.description = schema.description;
        template.bounds = schema.bounds;
        template.width = schema.width;
        template.height = schema.height;
        template.config = schema.config;
        template.datasets = schema.datasets;
        template.projection = schema.projection;
        if (template instanceof CompositionTemplate_1.CompositionTemplate) {
            template.spacing = schema.spacing;
            template.columns = schema.columns;
        }
    }
    getNonRepeatSubtrees(template) {
        const nonRepeatSubtrees = [];
        template.visualElements.forEach(t => {
            if (!(t instanceof RepeatTemplate_1.RepeatTemplate)) {
                nonRepeatSubtrees.push(t);
                nonRepeatSubtrees.push(...this.getNonRepeatSubtrees(t));
            }
        });
        return nonRepeatSubtrees;
    }
    /**
     * In a repeat spec, the bindings inside the child templates can reference the repeated fields
     * instead of fields from the data. In order to render such a template without its parent,
     * modify this binding to the first entries in the repeated fields of the parent
     */
    removeRepeatFromChildTemplates(template) {
        const nonRepeatSubTemplates = this.getNonRepeatSubtrees(template);
        nonRepeatSubTemplates.forEach(childTemplate => {
            const repeatedFields = template.repeat.column.concat(template.repeat.row);
            childTemplate.encodings.forEach((value, key) => {
                if (channeldef_1.isFieldDef(value)) {
                    if (channeldef_1.isRepeatRef(value.field)) {
                        const index = Math.floor(Math.random() * repeatedFields.length);
                        const fieldRef = {
                            field: repeatedFields[index],
                            type: value.type
                        };
                        childTemplate.overwrittenEncodings.set(key, fieldRef);
                    }
                }
            });
        });
    }
    getRepeatTemplate(schema) {
        const template = new RepeatTemplate_1.RepeatTemplate([]);
        template.repeat = schema.repeat;
        const childTemplate = this.parse(schema.spec);
        template.visualElements = [childTemplate];
        this.removeRepeatFromChildTemplates(template);
        return template;
    }
    getFacetTemplate(schema) {
        const template = new FacetTemplate_1.FacetTemplate([]);
        const visualElements = [];
        if (schema.facet !== undefined) {
            template.facet = JSON.parse(JSON.stringify(schema.facet));
            delete schema.facet;
            visualElements.push(this.parse(schema.spec));
        }
        else if (schema.encoding.facet !== undefined) {
            template.isInlineFacetted = true;
            template.facet = JSON.parse(JSON.stringify(schema.encoding.facet));
            delete schema.encoding.facet;
            visualElements.push(this.parse(schema));
        }
        template.visualElements = visualElements;
        return template;
    }
    getLayerTemplate(schema) {
        const template = new LayerTemplate_1.LayerTemplate([]);
        if (schema.encoding !== undefined) {
            const groupEncodings = Object.keys(schema.encoding);
            groupEncodings.forEach((encoding) => {
                template.groupEncodings.set(encoding, schema.encoding[encoding]);
            });
        }
        schema.layer.forEach((layer) => {
            template.visualElements.push(this.parse(layer));
        });
        return template;
    }
    getConcatTemplate(schema) {
        const template = new ConcatTemplate_1.ConcatTemplate([]);
        if (spec_1.isVConcatSpec(schema)) {
            template.isVertical = true;
            template.isWrappable = false;
            schema.vconcat.forEach((layer) => {
                template.visualElements.push(this.parse(layer));
            });
        }
        else if (spec_1.isHConcatSpec(schema)) {
            template.isVertical = false;
            template.isWrappable = false;
            schema.hconcat.forEach((layer) => {
                template.visualElements.push(this.parse(layer));
            });
        }
        else if (concat_1.isConcatSpec(schema)) {
            template.isVertical = false;
            template.isWrappable = true;
            schema.concat.forEach((layer) => {
                template.visualElements.push(this.parse(layer));
            });
        }
        return template;
    }
    getCompositionTemplate(schema) {
        let template = null;
        if (SpecUtils_1.isRepeatSchema(schema)) {
            template = this.getRepeatTemplate(schema);
        }
        else if (SpecUtils_1.isOverlaySchema(schema)) {
            template = this.getLayerTemplate(schema);
        }
        else if (SpecUtils_1.isFacetSchema(schema)) {
            template = this.getFacetTemplate(schema);
        }
        else if (SpecUtils_1.isConcatenateSchema(schema)) {
            template = this.getConcatTemplate(schema);
        }
        const encodings = this.getEncodingsMapFromPlotSchema(schema);
        template.encodings = encodings;
        template.resolve = schema.resolve;
        template.visualElements.forEach(t => t.parent = template);
        template.encodings.forEach((value, key) => {
            template.visualElements.forEach(t => {
                t.overwrittenEncodings.set(key, value);
            });
        });
        return template;
    }
    getPlotTemplate(schema) {
        const plotTemplate = new PlotTemplate_1.PlotTemplate(null);
        plotTemplate.mark = schema.mark;
        const encodings = this.getEncodingsMapFromPlotSchema(schema);
        const properties = SpecUtils_1.getMarkPropertiesAsMap(schema.mark);
        plotTemplate.encodings = encodings;
        plotTemplate.staticMarkProperties = properties;
        return plotTemplate;
    }
    getRootDatasetNode(schema) {
        const data = schema.data;
        if (data === undefined) {
            return null;
        }
        let rootNode = null;
        if (data_1.isUrlData(data)) {
            rootNode = new URLDatasetNode_1.URLDatasetNode();
        }
        else if (data_1.isNamedData(data)) {
            rootNode = new NamedDataSourceNode_1.NamedDataSourceNode();
        }
        else if (data_1.isInlineData(data)) {
            rootNode = new InlineDatasetNode_1.InlineDatasetNode();
        }
        rootNode.setSchema(data);
        return rootNode;
    }
    getLeafTransformNode(schema, rootNode) {
        const transforms = schema.transform;
        let workingNode = rootNode;
        if (transforms === undefined) {
            return rootNode;
        }
        // create linear transformation list from the spec by creating a new transformation node for
        // each entry in the spec and linking it to the existin graph
        if (transforms !== undefined) {
            transforms.forEach(t => {
                const transformNode = new TranformNode_1.TransformNode();
                transformNode.transform = t;
                DataModel_1.transformNames.forEach(transformName => {
                    if (transformName in t) {
                        transformNode.type = transformName;
                    }
                });
                transformNode.parent = workingNode;
                workingNode.children.push(transformNode);
                workingNode = transformNode;
            });
        }
        return workingNode;
    }
    parseDataTransformation(schema) {
        const rootDataset = this.getRootDatasetNode(schema);
        if (rootDataset === null) {
            return rootDataset;
        }
        else {
            return this.getLeafTransformNode(schema, rootDataset);
        }
    }
    parse(schema) {
        let template = null;
        if (SpecUtils_1.isCompositionSchema(schema)) {
            template = this.getCompositionTemplate(schema);
        }
        else if (SpecUtils_1.isPlotSchema(schema)) {
            template = this.getPlotTemplate(schema);
        }
        this.setSingleViewProperties(schema, template);
        const dataTransformation = this.parseDataTransformation(schema);
        template.dataTransformationNode = dataTransformation;
        const datasets = SpecUtils_1.getJoinedDatasetsOfChildNodes(template);
        if (template instanceof PlotTemplate_1.PlotTemplate) {
            template.selection = schema.selection;
        }
        return template;
    }
}
exports.SpecParser = SpecParser;


/***/ }),

/***/ "./node_modules/remodel-vis/dist/TemplateModel/SpecUtils.js":
/*!******************************************************************!*\
  !*** ./node_modules/remodel-vis/dist/TemplateModel/SpecUtils.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const spec_1 = __webpack_require__(/*! vega-lite/build/src/spec */ "./node_modules/vega-lite/build/src/spec/index.js");
const concat_1 = __webpack_require__(/*! vega-lite/build/src/spec/concat */ "./node_modules/vega-lite/build/src/spec/concat.js");
const MarkEncoding_1 = __webpack_require__(/*! ./MarkEncoding */ "./node_modules/remodel-vis/dist/TemplateModel/MarkEncoding.js");
function isAtomicSchema(schema) {
    return spec_1.isUnitSpec(schema) && !isFacetSchema(schema);
}
exports.isAtomicSchema = isAtomicSchema;
;
function isOverlaySchema(schema) {
    return spec_1.isLayerSpec(schema);
}
exports.isOverlaySchema = isOverlaySchema;
;
function isRepeatSchema(schema) {
    return spec_1.isRepeatSpec(schema);
}
exports.isRepeatSchema = isRepeatSchema;
;
function isConcatenateSchema(schema) {
    return spec_1.isAnyConcatSpec(schema) || concat_1.isConcatSpec(schema);
}
exports.isConcatenateSchema = isConcatenateSchema;
;
function isInlineFacetSchema(schema) {
    return (schema.encoding !== undefined && schema.encoding.facet !== undefined);
}
exports.isInlineFacetSchema = isInlineFacetSchema;
function isFacetSchema(schema) {
    return spec_1.isFacetSpec(schema) || isInlineFacetSchema(schema);
}
exports.isFacetSchema = isFacetSchema;
;
function isCompositionSchema(schema) {
    return isOverlaySchema(schema)
        || isRepeatSchema(schema)
        || isConcatenateSchema(schema)
        || isFacetSchema(schema);
}
exports.isCompositionSchema = isCompositionSchema;
;
function isPlotSchema(schema) {
    return isAtomicSchema(schema);
}
exports.isPlotSchema = isPlotSchema;
;
function getCompositionType(schema) {
    if (isOverlaySchema(schema)) {
        return 'overlay';
    }
    else if (isRepeatSchema(schema)) {
        return 'repeat';
    }
    else if (isConcatenateSchema(schema)) {
        return 'concatenate';
    }
    else if (isFacetSchema(schema)) {
        return 'facet';
    }
    return null;
}
exports.getCompositionType = getCompositionType;
;
function getLayerAbstraction(schema) {
    const currentLayers = JSON.parse(JSON.stringify(schema.layer));
    let currentEncoding;
    if (schema.encoding !== undefined) {
        currentEncoding = JSON.parse(JSON.stringify(schema.encoding));
    }
    delete schema.layer;
    delete schema.encoding;
    const abstraction = {
        layer: currentLayers
    };
    if (currentEncoding !== undefined) {
        abstraction.encoding = currentEncoding;
    }
    return abstraction;
}
exports.getLayerAbstraction = getLayerAbstraction;
;
function getRepeatAbstraction(schema) {
    const currentSpec = JSON.parse(JSON.stringify(schema.spec));
    const currentRepeat = JSON.parse(JSON.stringify(schema.repeat));
    const abstraction = {
        spec: currentSpec,
        repeat: currentRepeat
    };
    delete schema.spec;
    delete schema.repeat;
    return abstraction;
}
exports.getRepeatAbstraction = getRepeatAbstraction;
;
function getFacetAbstraction(schema) {
    const currentSpec = JSON.parse(JSON.stringify(schema.spec));
    const currentFacet = JSON.parse(JSON.stringify(schema.facet));
    const abstraction = {
        spec: currentSpec,
        facet: currentFacet
    };
    delete schema.spec;
    delete schema.facet;
    return abstraction;
}
exports.getFacetAbstraction = getFacetAbstraction;
;
function getConcatAbstraction(schema) {
    let currentConcat = null;
    let concatProp = null;
    if (concat_1.isConcatSpec(schema)) {
        concatProp = 'concat';
    }
    else if (concat_1.isHConcatSpec(schema)) {
        concatProp = 'hconcat';
    }
    else if (concat_1.isVConcatSpec(schema)) {
        concatProp = 'vconcat';
    }
    currentConcat = JSON.parse(JSON.stringify(schema[concatProp]));
    delete schema[concatProp];
    const abstraction = {};
    abstraction[concatProp] = currentConcat;
    return abstraction;
}
exports.getConcatAbstraction = getConcatAbstraction;
;
function getMarkPropertiesAsMap(mark) {
    const properties = new Map();
    // since every mark encoding could potentially be statically set for a mark, just go through
    // all of them and find the ones that are configured
    MarkEncoding_1.markEncodings.forEach(encoding => {
        if (mark[encoding] !== undefined) {
            properties.set(encoding, JSON.parse(JSON.stringify(mark[encoding])));
        }
    });
    return properties;
}
exports.getMarkPropertiesAsMap = getMarkPropertiesAsMap;
;
function getAtomicAbstraction(schema) {
    const abstraction = {
        mark: JSON.parse(JSON.stringify(schema.mark)),
    };
    if (schema.encoding !== undefined) {
        abstraction.encoding = JSON.parse(JSON.stringify(schema.encoding));
    }
    if (schema.selection !== undefined) {
        abstraction.selection = JSON.parse(JSON.stringify(schema.selection));
    }
    const staticProperties = getMarkPropertiesAsMap(schema.mark);
    staticProperties.forEach((property, key) => {
        abstraction[key] = property;
        delete schema[key];
    });
    delete schema.mark;
    delete schema.encoding;
    delete schema.selection;
    if (isRepeatSchema(schema) && abstraction.encoding !== undefined) {
        if (abstraction.encoding.x !== undefined) {
            abstraction.encoding.x = {
                field: { repeat: 'column' },
                type: abstraction.encoding.x.type
            };
        }
        if (abstraction.encoding.y !== undefined) {
            abstraction.encoding.y = {
                field: { repeat: 'row' },
                type: abstraction.encoding.y.type
            };
        }
    }
    else if (isFacetSchema(schema)) {
        if (abstraction.encoding.facet !== undefined) {
            delete abstraction.encoding.facet;
        }
    }
    return abstraction;
}
exports.getAtomicAbstraction = getAtomicAbstraction;
;
function setSingleViewProperties(schema, abstraction) {
    if (schema.bounds !== undefined) {
        abstraction.bounds = JSON.parse(JSON.stringify(schema.bounds));
    }
    if (schema.spacing !== undefined) {
        abstraction.spacing = JSON.parse(JSON.stringify(schema.spacing));
    }
    if (schema.columns !== undefined) {
        abstraction.columns = JSON.parse(JSON.stringify(schema.columns));
    }
    if (schema.width !== undefined) {
        abstraction.width = JSON.parse(JSON.stringify(schema.width));
    }
    if (schema.height !== undefined) {
        abstraction.height = JSON.parse(JSON.stringify(schema.height));
    }
    if (schema.data !== undefined) {
        abstraction.data = JSON.parse(JSON.stringify(schema.data));
    }
    if (schema.datasets !== undefined) {
        abstraction.datasets = JSON.parse(JSON.stringify(schema.datasets));
    }
    if (schema.transform !== undefined) {
        abstraction.transform = JSON.parse(JSON.stringify(schema.transform));
    }
    if (schema.config !== undefined) {
        abstraction.config = JSON.parse(JSON.stringify(schema.config));
    }
    if (schema.resolve !== undefined) {
        abstraction.resolve = JSON.parse(JSON.stringify(schema.resolve));
    }
    return abstraction;
}
exports.setSingleViewProperties = setSingleViewProperties;
;
function getJoinedDatasetsOfChildNodes(template) {
    const joinedDatasets = {};
    const visualElements = template.getFlatHierarchy();
    const childDatasets = visualElements
        .map(d => d.datasets)
        .filter(d => d !== undefined && d !== null);
    childDatasets.forEach(datasets => {
        const datasetKeys = Object.keys(datasets);
        datasetKeys.forEach(datasetKey => {
            joinedDatasets[datasetKey] = datasets[datasetKey];
        });
    });
    return joinedDatasets;
}
exports.getJoinedDatasetsOfChildNodes = getJoinedDatasetsOfChildNodes;
;
function getAllDatasetsInHierarchy(template) {
    const allDatasetsInHierarchy = getJoinedDatasetsOfChildNodes(template);
    let rootTemplate = template;
    // only get datasets that are direct ancestors of the template, as siblings are not relevant
    while (rootTemplate.parent !== null) {
        rootTemplate = rootTemplate.parent;
        if (rootTemplate.datasets) {
            Object.keys(rootTemplate.datasets).forEach(key => {
                allDatasetsInHierarchy[key] = rootTemplate.datasets[key];
            });
        }
    }
    return allDatasetsInHierarchy;
}
exports.getAllDatasetsInHierarchy = getAllDatasetsInHierarchy;
function getAbstraction(schema) {
    let abstraction = null;
    if (isAtomicSchema(schema)) {
        // atomic can either be content of a plot or repeat, indicated by the compositionpropety being
        // set to 'spec'
        abstraction = getAtomicAbstraction(schema);
    }
    else if (isOverlaySchema(schema)) {
        abstraction = getLayerAbstraction(schema);
    }
    else if (isRepeatSchema(schema)) {
        abstraction = getRepeatAbstraction(schema);
    }
    else if (isConcatenateSchema(schema)) {
        abstraction = getConcatAbstraction(schema);
    }
    else if (isFacetSchema(schema)) {
        if (isInlineFacetSchema(schema)) {
            abstraction = getAtomicAbstraction(schema);
        }
        else {
            abstraction = getFacetAbstraction(schema);
        }
    }
    abstraction = setSingleViewProperties(schema, abstraction);
    return abstraction;
}
exports.getAbstraction = getAbstraction;
;
function setSchemaSize(schema, width, height) {
    if (isPlotSchema(schema)) {
        schema.width = width;
        schema.height = height;
    }
    else if (isConcatenateSchema(schema)) {
        schema.width = width;
        schema.height = height;
    }
    else if (isRepeatSchema(schema)) {
        schema.spec.width = width;
        schema.spec.height = height;
    }
    else if (isFacetSchema(schema)) {
        if (isInlineFacetSchema(schema)) {
            schema.width = width;
            schema.height = height;
        }
        else {
            schema.spec.width = width;
            schema.spec.height = height;
        }
    }
    return schema;
}
exports.setSchemaSize = setSchemaSize;
;


/***/ }),

/***/ "./node_modules/remodel-vis/dist/TemplateModel/Template.js":
/*!*****************************************************************!*\
  !*** ./node_modules/remodel-vis/dist/TemplateModel/Template.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
class Template {
    constructor(visualElements, layout, parent) {
        this.visualElements = visualElements;
        this.layout = layout;
        this.parent = parent;
        this.id = `template${Math.round(Math.random() * 10000)}`;
        this.hierarchyLevel = -1;
        this.dataNode = null;
        this.encodings = new Map();
        this.overwrittenEncodings = new Map();
    }
    /**
     * Returns the flattened hierarchy of templates succeeding this one.
     */
    getFlatHierarchy() {
        const successors = [];
        successors.push(this);
        this.visualElements.forEach(successor => {
            successors.push(...successor.getFlatHierarchy());
        });
        return successors;
    }
    /**
     * Returns the hierarchy level of this template, starting at 0.
     */
    getHierarchyLevel() {
        if (this.hierarchyLevel > -1) {
            return this.hierarchyLevel;
        }
        // since the template may have visual elements from different leves, output the highest value
        // between all sub-hierarchies
        if (this.visualElements.length === 0) {
            return 0;
        }
        const subHierarchies = this.visualElements.map(v => v.getHierarchyLevel());
        this.hierarchyLevel = Math.max(...subHierarchies) + 1;
        return this.hierarchyLevel;
    }
    setEncodedValue(encoding, value) {
        this.encodings.set(encoding, value);
    }
    getEncodedValue(encoding) {
        return this.encodings.get(encoding);
    }
    deleteEncodedValue(encoding) {
        this.encodings.delete(encoding);
    }
    set dataTransformationNode(transformNode) {
        this.dataNode = transformNode;
    }
    get dataTransformationNode() {
        return this.dataNode;
    }
    get data() {
        if (this.dataNode === null) {
            return null;
        }
        const data = this.dataNode.getSchema();
        return data;
    }
    get transform() {
        if (this.dataNode === null) {
            return [];
        }
        const transform = this.dataNode.getTransform();
        return transform;
    }
}
exports.Template = Template;


/***/ }),

/***/ "./node_modules/remodel-vis/dist/TemplateModel/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/remodel-vis/dist/TemplateModel/index.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Template_1 = __webpack_require__(/*! ./Template */ "./node_modules/remodel-vis/dist/TemplateModel/Template.js");
exports.Template = Template_1.Template;
var PlotTemplate_1 = __webpack_require__(/*! ./PlotTemplate */ "./node_modules/remodel-vis/dist/TemplateModel/PlotTemplate.js");
exports.PlotTemplate = PlotTemplate_1.PlotTemplate;
var CompositionTemplate_1 = __webpack_require__(/*! ./CompositionTemplate */ "./node_modules/remodel-vis/dist/TemplateModel/CompositionTemplate.js");
exports.CompositionTemplate = CompositionTemplate_1.CompositionTemplate;
var ConcatTemplate_1 = __webpack_require__(/*! ./ConcatTemplate */ "./node_modules/remodel-vis/dist/TemplateModel/ConcatTemplate.js");
exports.ConcatTemplate = ConcatTemplate_1.ConcatTemplate;
var FacetTemplate_1 = __webpack_require__(/*! ./FacetTemplate */ "./node_modules/remodel-vis/dist/TemplateModel/FacetTemplate.js");
exports.FacetTemplate = FacetTemplate_1.FacetTemplate;
var LayerTemplate_1 = __webpack_require__(/*! ./LayerTemplate */ "./node_modules/remodel-vis/dist/TemplateModel/LayerTemplate.js");
exports.LayerTemplate = LayerTemplate_1.LayerTemplate;
var RepeatTemplate_1 = __webpack_require__(/*! ./RepeatTemplate */ "./node_modules/remodel-vis/dist/TemplateModel/RepeatTemplate.js");
exports.RepeatTemplate = RepeatTemplate_1.RepeatTemplate;
var SpecCompiler_1 = __webpack_require__(/*! ./SpecCompiler */ "./node_modules/remodel-vis/dist/TemplateModel/SpecCompiler.js");
exports.SpecCompiler = SpecCompiler_1.SpecCompiler;
var SpecParser_1 = __webpack_require__(/*! ./SpecParser */ "./node_modules/remodel-vis/dist/TemplateModel/SpecParser.js");
exports.SpecParser = SpecParser_1.SpecParser;
var LayoutType_1 = __webpack_require__(/*! ./LayoutType */ "./node_modules/remodel-vis/dist/TemplateModel/LayoutType.js");
exports.COMPOSITION_TYPES = LayoutType_1.COMPOSITION_TYPES;
exports.PLOT_TYPES = LayoutType_1.PLOT_TYPES;
exports.layouts = LayoutType_1.layouts;
var MarkEncoding_1 = __webpack_require__(/*! ./MarkEncoding */ "./node_modules/remodel-vis/dist/TemplateModel/MarkEncoding.js");
exports.positionEncodings = MarkEncoding_1.positionEncodings;
exports.geographicPositionEncodings = MarkEncoding_1.geographicPositionEncodings;
exports.facetChannelEncodings = MarkEncoding_1.facetChannelEncodings;
exports.hyperLinkChannelEncodings = MarkEncoding_1.hyperLinkChannelEncodings;
exports.keyChannelEncodings = MarkEncoding_1.keyChannelEncodings;
exports.loDChannelEncodings = MarkEncoding_1.loDChannelEncodings;
exports.markEncodingGroups = MarkEncoding_1.markEncodingGroups;
exports.markEncodings = MarkEncoding_1.markEncodings;
exports.markPropertiesChannelEncodings = MarkEncoding_1.markPropertiesChannelEncodings;
exports.orderChannelEncodings = MarkEncoding_1.orderChannelEncodings;
exports.textTooltipChannelEncodings = MarkEncoding_1.textTooltipChannelEncodings;
var MarkType_1 = __webpack_require__(/*! ./MarkType */ "./node_modules/remodel-vis/dist/TemplateModel/MarkType.js");
exports.MARK_TYPES = MarkType_1.MARK_TYPES;


/***/ }),

/***/ "./node_modules/remodel-vis/dist/index.js":
/*!************************************************!*\
  !*** ./node_modules/remodel-vis/dist/index.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./TemplateModel/ */ "./node_modules/remodel-vis/dist/TemplateModel/index.js"));
__export(__webpack_require__(/*! ./DataModel/ */ "./node_modules/remodel-vis/dist/DataModel/index.js"));


/***/ }),

/***/ "./node_modules/topojson-client/index.js":
/*!***********************************************!*\
  !*** ./node_modules/topojson-client/index.js ***!
  \***********************************************/
/*! exports provided: bbox, feature, mesh, meshArcs, merge, mergeArcs, neighbors, quantize, transform, untransform */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _src_bbox__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/bbox */ "./node_modules/topojson-client/src/bbox.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bbox", function() { return _src_bbox__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _src_feature__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/feature */ "./node_modules/topojson-client/src/feature.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "feature", function() { return _src_feature__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _src_mesh__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/mesh */ "./node_modules/topojson-client/src/mesh.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mesh", function() { return _src_mesh__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "meshArcs", function() { return _src_mesh__WEBPACK_IMPORTED_MODULE_2__["meshArcs"]; });

/* harmony import */ var _src_merge__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/merge */ "./node_modules/topojson-client/src/merge.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "merge", function() { return _src_merge__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mergeArcs", function() { return _src_merge__WEBPACK_IMPORTED_MODULE_3__["mergeArcs"]; });

/* harmony import */ var _src_neighbors__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./src/neighbors */ "./node_modules/topojson-client/src/neighbors.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "neighbors", function() { return _src_neighbors__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _src_quantize__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./src/quantize */ "./node_modules/topojson-client/src/quantize.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "quantize", function() { return _src_quantize__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _src_transform__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./src/transform */ "./node_modules/topojson-client/src/transform.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "transform", function() { return _src_transform__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony import */ var _src_untransform__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./src/untransform */ "./node_modules/topojson-client/src/untransform.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "untransform", function() { return _src_untransform__WEBPACK_IMPORTED_MODULE_7__["default"]; });











/***/ }),

/***/ "./node_modules/topojson-client/src/bbox.js":
/*!**************************************************!*\
  !*** ./node_modules/topojson-client/src/bbox.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _transform__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./transform */ "./node_modules/topojson-client/src/transform.js");


/* harmony default export */ __webpack_exports__["default"] = (function(topology) {
  var t = Object(_transform__WEBPACK_IMPORTED_MODULE_0__["default"])(topology.transform), key,
      x0 = Infinity, y0 = x0, x1 = -x0, y1 = -x0;

  function bboxPoint(p) {
    p = t(p);
    if (p[0] < x0) x0 = p[0];
    if (p[0] > x1) x1 = p[0];
    if (p[1] < y0) y0 = p[1];
    if (p[1] > y1) y1 = p[1];
  }

  function bboxGeometry(o) {
    switch (o.type) {
      case "GeometryCollection": o.geometries.forEach(bboxGeometry); break;
      case "Point": bboxPoint(o.coordinates); break;
      case "MultiPoint": o.coordinates.forEach(bboxPoint); break;
    }
  }

  topology.arcs.forEach(function(arc) {
    var i = -1, n = arc.length, p;
    while (++i < n) {
      p = t(arc[i], i);
      if (p[0] < x0) x0 = p[0];
      if (p[0] > x1) x1 = p[0];
      if (p[1] < y0) y0 = p[1];
      if (p[1] > y1) y1 = p[1];
    }
  });

  for (key in topology.objects) {
    bboxGeometry(topology.objects[key]);
  }

  return [x0, y0, x1, y1];
});


/***/ }),

/***/ "./node_modules/topojson-client/src/bisect.js":
/*!****************************************************!*\
  !*** ./node_modules/topojson-client/src/bisect.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(a, x) {
  var lo = 0, hi = a.length;
  while (lo < hi) {
    var mid = lo + hi >>> 1;
    if (a[mid] < x) lo = mid + 1;
    else hi = mid;
  }
  return lo;
});


/***/ }),

/***/ "./node_modules/topojson-client/src/feature.js":
/*!*****************************************************!*\
  !*** ./node_modules/topojson-client/src/feature.js ***!
  \*****************************************************/
/*! exports provided: default, feature, object */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "feature", function() { return feature; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "object", function() { return object; });
/* harmony import */ var _reverse__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./reverse */ "./node_modules/topojson-client/src/reverse.js");
/* harmony import */ var _transform__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./transform */ "./node_modules/topojson-client/src/transform.js");



/* harmony default export */ __webpack_exports__["default"] = (function(topology, o) {
  return o.type === "GeometryCollection"
      ? {type: "FeatureCollection", features: o.geometries.map(function(o) { return feature(topology, o); })}
      : feature(topology, o);
});

function feature(topology, o) {
  var id = o.id,
      bbox = o.bbox,
      properties = o.properties == null ? {} : o.properties,
      geometry = object(topology, o);
  return id == null && bbox == null ? {type: "Feature", properties: properties, geometry: geometry}
      : bbox == null ? {type: "Feature", id: id, properties: properties, geometry: geometry}
      : {type: "Feature", id: id, bbox: bbox, properties: properties, geometry: geometry};
}

function object(topology, o) {
  var transformPoint = Object(_transform__WEBPACK_IMPORTED_MODULE_1__["default"])(topology.transform),
      arcs = topology.arcs;

  function arc(i, points) {
    if (points.length) points.pop();
    for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length; k < n; ++k) {
      points.push(transformPoint(a[k], k));
    }
    if (i < 0) Object(_reverse__WEBPACK_IMPORTED_MODULE_0__["default"])(points, n);
  }

  function point(p) {
    return transformPoint(p);
  }

  function line(arcs) {
    var points = [];
    for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);
    if (points.length < 2) points.push(points[0]); // This should never happen per the specification.
    return points;
  }

  function ring(arcs) {
    var points = line(arcs);
    while (points.length < 4) points.push(points[0]); // This may happen if an arc has only two points.
    return points;
  }

  function polygon(arcs) {
    return arcs.map(ring);
  }

  function geometry(o) {
    var type = o.type, coordinates;
    switch (type) {
      case "GeometryCollection": return {type: type, geometries: o.geometries.map(geometry)};
      case "Point": coordinates = point(o.coordinates); break;
      case "MultiPoint": coordinates = o.coordinates.map(point); break;
      case "LineString": coordinates = line(o.arcs); break;
      case "MultiLineString": coordinates = o.arcs.map(line); break;
      case "Polygon": coordinates = polygon(o.arcs); break;
      case "MultiPolygon": coordinates = o.arcs.map(polygon); break;
      default: return null;
    }
    return {type: type, coordinates: coordinates};
  }

  return geometry(o);
}


/***/ }),

/***/ "./node_modules/topojson-client/src/identity.js":
/*!******************************************************!*\
  !*** ./node_modules/topojson-client/src/identity.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(x) {
  return x;
});


/***/ }),

/***/ "./node_modules/topojson-client/src/merge.js":
/*!***************************************************!*\
  !*** ./node_modules/topojson-client/src/merge.js ***!
  \***************************************************/
/*! exports provided: default, mergeArcs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mergeArcs", function() { return mergeArcs; });
/* harmony import */ var _feature__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./feature */ "./node_modules/topojson-client/src/feature.js");
/* harmony import */ var _stitch__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stitch */ "./node_modules/topojson-client/src/stitch.js");



function planarRingArea(ring) {
  var i = -1, n = ring.length, a, b = ring[n - 1], area = 0;
  while (++i < n) a = b, b = ring[i], area += a[0] * b[1] - a[1] * b[0];
  return Math.abs(area); // Note: doubled area!
}

/* harmony default export */ __webpack_exports__["default"] = (function(topology) {
  return Object(_feature__WEBPACK_IMPORTED_MODULE_0__["object"])(topology, mergeArcs.apply(this, arguments));
});

function mergeArcs(topology, objects) {
  var polygonsByArc = {},
      polygons = [],
      groups = [];

  objects.forEach(geometry);

  function geometry(o) {
    switch (o.type) {
      case "GeometryCollection": o.geometries.forEach(geometry); break;
      case "Polygon": extract(o.arcs); break;
      case "MultiPolygon": o.arcs.forEach(extract); break;
    }
  }

  function extract(polygon) {
    polygon.forEach(function(ring) {
      ring.forEach(function(arc) {
        (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);
      });
    });
    polygons.push(polygon);
  }

  function area(ring) {
    return planarRingArea(Object(_feature__WEBPACK_IMPORTED_MODULE_0__["object"])(topology, {type: "Polygon", arcs: [ring]}).coordinates[0]);
  }

  polygons.forEach(function(polygon) {
    if (!polygon._) {
      var group = [],
          neighbors = [polygon];
      polygon._ = 1;
      groups.push(group);
      while (polygon = neighbors.pop()) {
        group.push(polygon);
        polygon.forEach(function(ring) {
          ring.forEach(function(arc) {
            polygonsByArc[arc < 0 ? ~arc : arc].forEach(function(polygon) {
              if (!polygon._) {
                polygon._ = 1;
                neighbors.push(polygon);
              }
            });
          });
        });
      }
    }
  });

  polygons.forEach(function(polygon) {
    delete polygon._;
  });

  return {
    type: "MultiPolygon",
    arcs: groups.map(function(polygons) {
      var arcs = [], n;

      // Extract the exterior (unique) arcs.
      polygons.forEach(function(polygon) {
        polygon.forEach(function(ring) {
          ring.forEach(function(arc) {
            if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) {
              arcs.push(arc);
            }
          });
        });
      });

      // Stitch the arcs into one or more rings.
      arcs = Object(_stitch__WEBPACK_IMPORTED_MODULE_1__["default"])(topology, arcs);

      // If more than one ring is returned,
      // at most one of these rings can be the exterior;
      // choose the one with the greatest absolute area.
      if ((n = arcs.length) > 1) {
        for (var i = 1, k = area(arcs[0]), ki, t; i < n; ++i) {
          if ((ki = area(arcs[i])) > k) {
            t = arcs[0], arcs[0] = arcs[i], arcs[i] = t, k = ki;
          }
        }
      }

      return arcs;
    })
  };
}


/***/ }),

/***/ "./node_modules/topojson-client/src/mesh.js":
/*!**************************************************!*\
  !*** ./node_modules/topojson-client/src/mesh.js ***!
  \**************************************************/
/*! exports provided: default, meshArcs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "meshArcs", function() { return meshArcs; });
/* harmony import */ var _feature__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./feature */ "./node_modules/topojson-client/src/feature.js");
/* harmony import */ var _stitch__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stitch */ "./node_modules/topojson-client/src/stitch.js");



/* harmony default export */ __webpack_exports__["default"] = (function(topology) {
  return Object(_feature__WEBPACK_IMPORTED_MODULE_0__["object"])(topology, meshArcs.apply(this, arguments));
});

function meshArcs(topology, object, filter) {
  var arcs, i, n;
  if (arguments.length > 1) arcs = extractArcs(topology, object, filter);
  else for (i = 0, arcs = new Array(n = topology.arcs.length); i < n; ++i) arcs[i] = i;
  return {type: "MultiLineString", arcs: Object(_stitch__WEBPACK_IMPORTED_MODULE_1__["default"])(topology, arcs)};
}

function extractArcs(topology, object, filter) {
  var arcs = [],
      geomsByArc = [],
      geom;

  function extract0(i) {
    var j = i < 0 ? ~i : i;
    (geomsByArc[j] || (geomsByArc[j] = [])).push({i: i, g: geom});
  }

  function extract1(arcs) {
    arcs.forEach(extract0);
  }

  function extract2(arcs) {
    arcs.forEach(extract1);
  }

  function extract3(arcs) {
    arcs.forEach(extract2);
  }

  function geometry(o) {
    switch (geom = o, o.type) {
      case "GeometryCollection": o.geometries.forEach(geometry); break;
      case "LineString": extract1(o.arcs); break;
      case "MultiLineString": case "Polygon": extract2(o.arcs); break;
      case "MultiPolygon": extract3(o.arcs); break;
    }
  }

  geometry(object);

  geomsByArc.forEach(filter == null
      ? function(geoms) { arcs.push(geoms[0].i); }
      : function(geoms) { if (filter(geoms[0].g, geoms[geoms.length - 1].g)) arcs.push(geoms[0].i); });

  return arcs;
}


/***/ }),

/***/ "./node_modules/topojson-client/src/neighbors.js":
/*!*******************************************************!*\
  !*** ./node_modules/topojson-client/src/neighbors.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _bisect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bisect */ "./node_modules/topojson-client/src/bisect.js");


/* harmony default export */ __webpack_exports__["default"] = (function(objects) {
  var indexesByArc = {}, // arc index -> array of object indexes
      neighbors = objects.map(function() { return []; });

  function line(arcs, i) {
    arcs.forEach(function(a) {
      if (a < 0) a = ~a;
      var o = indexesByArc[a];
      if (o) o.push(i);
      else indexesByArc[a] = [i];
    });
  }

  function polygon(arcs, i) {
    arcs.forEach(function(arc) { line(arc, i); });
  }

  function geometry(o, i) {
    if (o.type === "GeometryCollection") o.geometries.forEach(function(o) { geometry(o, i); });
    else if (o.type in geometryType) geometryType[o.type](o.arcs, i);
  }

  var geometryType = {
    LineString: line,
    MultiLineString: polygon,
    Polygon: polygon,
    MultiPolygon: function(arcs, i) { arcs.forEach(function(arc) { polygon(arc, i); }); }
  };

  objects.forEach(geometry);

  for (var i in indexesByArc) {
    for (var indexes = indexesByArc[i], m = indexes.length, j = 0; j < m; ++j) {
      for (var k = j + 1; k < m; ++k) {
        var ij = indexes[j], ik = indexes[k], n;
        if ((n = neighbors[ij])[i = Object(_bisect__WEBPACK_IMPORTED_MODULE_0__["default"])(n, ik)] !== ik) n.splice(i, 0, ik);
        if ((n = neighbors[ik])[i = Object(_bisect__WEBPACK_IMPORTED_MODULE_0__["default"])(n, ij)] !== ij) n.splice(i, 0, ij);
      }
    }
  }

  return neighbors;
});


/***/ }),

/***/ "./node_modules/topojson-client/src/quantize.js":
/*!******************************************************!*\
  !*** ./node_modules/topojson-client/src/quantize.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _bbox__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bbox */ "./node_modules/topojson-client/src/bbox.js");
/* harmony import */ var _untransform__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./untransform */ "./node_modules/topojson-client/src/untransform.js");



/* harmony default export */ __webpack_exports__["default"] = (function(topology, transform) {
  if (topology.transform) throw new Error("already quantized");

  if (!transform || !transform.scale) {
    if (!((n = Math.floor(transform)) >= 2)) throw new Error("n must be ≥2");
    box = topology.bbox || Object(_bbox__WEBPACK_IMPORTED_MODULE_0__["default"])(topology);
    var x0 = box[0], y0 = box[1], x1 = box[2], y1 = box[3], n;
    transform = {scale: [x1 - x0 ? (x1 - x0) / (n - 1) : 1, y1 - y0 ? (y1 - y0) / (n - 1) : 1], translate: [x0, y0]};
  } else {
    box = topology.bbox;
  }

  var t = Object(_untransform__WEBPACK_IMPORTED_MODULE_1__["default"])(transform), box, key, inputs = topology.objects, outputs = {};

  function quantizePoint(point) {
    return t(point);
  }

  function quantizeGeometry(input) {
    var output;
    switch (input.type) {
      case "GeometryCollection": output = {type: "GeometryCollection", geometries: input.geometries.map(quantizeGeometry)}; break;
      case "Point": output = {type: "Point", coordinates: quantizePoint(input.coordinates)}; break;
      case "MultiPoint": output = {type: "MultiPoint", coordinates: input.coordinates.map(quantizePoint)}; break;
      default: return input;
    }
    if (input.id != null) output.id = input.id;
    if (input.bbox != null) output.bbox = input.bbox;
    if (input.properties != null) output.properties = input.properties;
    return output;
  }

  function quantizeArc(input) {
    var i = 0, j = 1, n = input.length, p, output = new Array(n); // pessimistic
    output[0] = t(input[0], 0);
    while (++i < n) if ((p = t(input[i], i))[0] || p[1]) output[j++] = p; // non-coincident points
    if (j === 1) output[j++] = [0, 0]; // an arc must have at least two points
    output.length = j;
    return output;
  }

  for (key in inputs) outputs[key] = quantizeGeometry(inputs[key]);

  return {
    type: "Topology",
    bbox: box,
    transform: transform,
    objects: outputs,
    arcs: topology.arcs.map(quantizeArc)
  };
});


/***/ }),

/***/ "./node_modules/topojson-client/src/reverse.js":
/*!*****************************************************!*\
  !*** ./node_modules/topojson-client/src/reverse.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(array, n) {
  var t, j = array.length, i = j - n;
  while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;
});


/***/ }),

/***/ "./node_modules/topojson-client/src/stitch.js":
/*!****************************************************!*\
  !*** ./node_modules/topojson-client/src/stitch.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(topology, arcs) {
  var stitchedArcs = {},
      fragmentByStart = {},
      fragmentByEnd = {},
      fragments = [],
      emptyIndex = -1;

  // Stitch empty arcs first, since they may be subsumed by other arcs.
  arcs.forEach(function(i, j) {
    var arc = topology.arcs[i < 0 ? ~i : i], t;
    if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {
      t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;
    }
  });

  arcs.forEach(function(i) {
    var e = ends(i),
        start = e[0],
        end = e[1],
        f, g;

    if (f = fragmentByEnd[start]) {
      delete fragmentByEnd[f.end];
      f.push(i);
      f.end = end;
      if (g = fragmentByStart[end]) {
        delete fragmentByStart[g.start];
        var fg = g === f ? f : f.concat(g);
        fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;
      } else {
        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;
      }
    } else if (f = fragmentByStart[end]) {
      delete fragmentByStart[f.start];
      f.unshift(i);
      f.start = start;
      if (g = fragmentByEnd[start]) {
        delete fragmentByEnd[g.end];
        var gf = g === f ? f : g.concat(f);
        fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;
      } else {
        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;
      }
    } else {
      f = [i];
      fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;
    }
  });

  function ends(i) {
    var arc = topology.arcs[i < 0 ? ~i : i], p0 = arc[0], p1;
    if (topology.transform) p1 = [0, 0], arc.forEach(function(dp) { p1[0] += dp[0], p1[1] += dp[1]; });
    else p1 = arc[arc.length - 1];
    return i < 0 ? [p1, p0] : [p0, p1];
  }

  function flush(fragmentByEnd, fragmentByStart) {
    for (var k in fragmentByEnd) {
      var f = fragmentByEnd[k];
      delete fragmentByStart[f.start];
      delete f.start;
      delete f.end;
      f.forEach(function(i) { stitchedArcs[i < 0 ? ~i : i] = 1; });
      fragments.push(f);
    }
  }

  flush(fragmentByEnd, fragmentByStart);
  flush(fragmentByStart, fragmentByEnd);
  arcs.forEach(function(i) { if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]); });

  return fragments;
});


/***/ }),

/***/ "./node_modules/topojson-client/src/transform.js":
/*!*******************************************************!*\
  !*** ./node_modules/topojson-client/src/transform.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _identity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./identity */ "./node_modules/topojson-client/src/identity.js");


/* harmony default export */ __webpack_exports__["default"] = (function(transform) {
  if (transform == null) return _identity__WEBPACK_IMPORTED_MODULE_0__["default"];
  var x0,
      y0,
      kx = transform.scale[0],
      ky = transform.scale[1],
      dx = transform.translate[0],
      dy = transform.translate[1];
  return function(input, i) {
    if (!i) x0 = y0 = 0;
    var j = 2, n = input.length, output = new Array(n);
    output[0] = (x0 += input[0]) * kx + dx;
    output[1] = (y0 += input[1]) * ky + dy;
    while (j < n) output[j] = input[j], ++j;
    return output;
  };
});


/***/ }),

/***/ "./node_modules/topojson-client/src/untransform.js":
/*!*********************************************************!*\
  !*** ./node_modules/topojson-client/src/untransform.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _identity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./identity */ "./node_modules/topojson-client/src/identity.js");


/* harmony default export */ __webpack_exports__["default"] = (function(transform) {
  if (transform == null) return _identity__WEBPACK_IMPORTED_MODULE_0__["default"];
  var x0,
      y0,
      kx = transform.scale[0],
      ky = transform.scale[1],
      dx = transform.translate[0],
      dy = transform.translate[1];
  return function(input, i) {
    if (!i) x0 = y0 = 0;
    var j = 2,
        n = input.length,
        output = new Array(n),
        x1 = Math.round((input[0] - dx) / kx),
        y1 = Math.round((input[1] - dy) / ky);
    output[0] = x1 - x0, x0 = x1;
    output[1] = y1 - y0, y0 = y1;
    while (j < n) output[j] = input[j], ++j;
    return output;
  };
});


/***/ }),

/***/ "./node_modules/tslib/tslib.es6.js":
/*!*****************************************!*\
  !*** ./node_modules/tslib/tslib.es6.js ***!
  \*****************************************/
/*! exports provided: __extends, __assign, __rest, __decorate, __param, __metadata, __awaiter, __generator, __exportStar, __values, __read, __spread, __await, __asyncGenerator, __asyncDelegator, __asyncValues, __makeTemplateObject, __importStar, __importDefault */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__extends", function() { return __extends; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__assign", function() { return __assign; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__rest", function() { return __rest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__decorate", function() { return __decorate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__param", function() { return __param; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__metadata", function() { return __metadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__awaiter", function() { return __awaiter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__generator", function() { return __generator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__exportStar", function() { return __exportStar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__values", function() { return __values; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__read", function() { return __read; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__spread", function() { return __spread; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__await", function() { return __await; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncGenerator", function() { return __asyncGenerator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncDelegator", function() { return __asyncDelegator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncValues", function() { return __asyncValues; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__makeTemplateObject", function() { return __makeTemplateObject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__importStar", function() { return __importStar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__importDefault", function() { return __importDefault; });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __exportStar(m, exports) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
    if (m) return m.call(o);
    return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}


/***/ }),

/***/ "./node_modules/vega-canvas/index.browser.js":
/*!***************************************************!*\
  !*** ./node_modules/vega-canvas/index.browser.js ***!
  \***************************************************/
/*! exports provided: domCanvas, canvas, image */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _src_domCanvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/domCanvas */ "./node_modules/vega-canvas/src/domCanvas.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "domCanvas", function() { return _src_domCanvas__WEBPACK_IMPORTED_MODULE_0__["domCanvas"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "canvas", function() { return _src_domCanvas__WEBPACK_IMPORTED_MODULE_0__["domCanvas"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "image", function() { return _src_domCanvas__WEBPACK_IMPORTED_MODULE_0__["domImage"]; });




/***/ }),

/***/ "./node_modules/vega-canvas/src/domCanvas.js":
/*!***************************************************!*\
  !*** ./node_modules/vega-canvas/src/domCanvas.js ***!
  \***************************************************/
/*! exports provided: domCanvas, domImage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "domCanvas", function() { return domCanvas; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "domImage", function() { return domImage; });
function domCanvas(w, h) {
  if (typeof document !== 'undefined' && document.createElement) {
    var c = document.createElement('canvas');
    if (c && c.getContext) {
      c.width = w;
      c.height = h;
      return c;
    }
  }
  return null;
}

function domImage() {
  return typeof Image !== 'undefined' ? Image : null;
}


/***/ }),

/***/ "./node_modules/vega-crossfilter/index.js":
/*!************************************************!*\
  !*** ./node_modules/vega-crossfilter/index.js ***!
  \************************************************/
/*! exports provided: crossfilter, resolvefilter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _src_CrossFilter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/CrossFilter */ "./node_modules/vega-crossfilter/src/CrossFilter.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "crossfilter", function() { return _src_CrossFilter__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _src_ResolveFilter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/ResolveFilter */ "./node_modules/vega-crossfilter/src/ResolveFilter.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "resolvefilter", function() { return _src_ResolveFilter__WEBPACK_IMPORTED_MODULE_1__["default"]; });





/***/ }),

/***/ "./node_modules/vega-crossfilter/src/Bitmaps.js":
/*!******************************************************!*\
  !*** ./node_modules/vega-crossfilter/src/Bitmaps.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Bitmaps; });
/* harmony import */ var _arrays__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./arrays */ "./node_modules/vega-crossfilter/src/arrays.js");


/**
 * Maintains CrossFilter state.
 */
function Bitmaps() {

  var width = 8,
      data = [],
      seen = Object(_arrays__WEBPACK_IMPORTED_MODULE_0__["array32"])(0),
      curr = array(0, width),
      prev = array(0, width);

  return {

    data: function() { return data; },

    seen: function() {
      return (seen = lengthen(seen, data.length));
    },

    add: function(array) {
      for (var i=0, j=data.length, n=array.length, t; i<n; ++i) {
        t = array[i];
        t._index = j++;
        data.push(t);
      }
    },

    remove: function(num, map) { // map: index -> boolean (true => remove)
      var n = data.length,
          copy = Array(n - num),
          reindex = data, // reuse old data array for index map
          t, i, j;

      // seek forward to first removal
      for (i=0; !map[i] && i<n; ++i) {
        copy[i] = data[i];
        reindex[i] = i;
      }

      // condense arrays
      for (j=i; i<n; ++i) {
        t = data[i];
        if (!map[i]) {
          reindex[i] = j;
          curr[j] = curr[i];
          prev[j] = prev[i];
          copy[j] = t;
          t._index = j++;
        } else {
          reindex[i] = -1;
        }
        curr[i] = 0; // clear unused bits
      }

      data = copy;
      return reindex;
    },

    size: function() { return data.length; },

    curr: function() { return curr; },

    prev: function() { return prev; },

    reset: function(k) { prev[k] = curr[k]; },

    all: function() {
      return width < 0x101 ? 0xff : width < 0x10001 ? 0xffff : 0xffffffff;
    },

    set: function(k, one) { curr[k] |= one; },

    clear: function(k, one) { curr[k] &= ~one; },

    resize: function(n, m) {
      var k = curr.length;
      if (n > k || m > width) {
        width = Math.max(m, width);
        curr = array(n, width, curr);
        prev = array(n, width);
      }
    }
  };
}

function lengthen(array, length, copy) {
  if (array.length >= length) return array;
  copy = copy || new array.constructor(length);
  copy.set(array);
  return copy;
}

function array(n, m, array) {
  var copy = (m < 0x101 ? _arrays__WEBPACK_IMPORTED_MODULE_0__["array8"] : m < 0x10001 ? _arrays__WEBPACK_IMPORTED_MODULE_0__["array16"] : _arrays__WEBPACK_IMPORTED_MODULE_0__["array32"])(n);
  if (array) copy.set(array);
  return copy;
}


/***/ }),

/***/ "./node_modules/vega-crossfilter/src/CrossFilter.js":
/*!**********************************************************!*\
  !*** ./node_modules/vega-crossfilter/src/CrossFilter.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return CrossFilter; });
/* harmony import */ var _Bitmaps__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Bitmaps */ "./node_modules/vega-crossfilter/src/Bitmaps.js");
/* harmony import */ var _Dimension__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Dimension */ "./node_modules/vega-crossfilter/src/Dimension.js");
/* harmony import */ var _SortedIndex__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./SortedIndex */ "./node_modules/vega-crossfilter/src/SortedIndex.js");
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");






/**
 * An indexed multi-dimensional filter.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {Array<function(object): *>} params.fields - An array of dimension accessors to filter.
 * @param {Array} params.query - An array of per-dimension range queries.
 */
function CrossFilter(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_3__["Transform"].call(this, Object(_Bitmaps__WEBPACK_IMPORTED_MODULE_0__["default"])(), params);
  this._indices = null;
  this._dims = null;
}

CrossFilter.Definition = {
  "type": "CrossFilter",
  "metadata": {},
  "params": [
    { "name": "fields", "type": "field", "array": true, "required": true },
    { "name": "query", "type": "array", "array": true, "required": true,
      "content": {"type": "number", "array": true, "length": 2} }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["inherits"])(CrossFilter, vega_dataflow__WEBPACK_IMPORTED_MODULE_3__["Transform"]);

prototype.transform = function(_, pulse) {
  if (!this._dims) {
    return this.init(_, pulse);
  } else {
    var init = _.modified('fields')
          || _.fields.some(function(f) { return pulse.modified(f.fields); });

    return init
      ? this.reinit(_, pulse)
      : this.eval(_, pulse);
  }
};

prototype.init = function(_, pulse) {
  var fields = _.fields,
      query = _.query,
      indices = this._indices = {},
      dims = this._dims = [],
      m = query.length,
      i = 0, key, index;

  // instantiate indices and dimensions
  for (; i<m; ++i) {
    key = fields[i].fname;
    index = indices[key] || (indices[key] = Object(_SortedIndex__WEBPACK_IMPORTED_MODULE_2__["default"])());
    dims.push(Object(_Dimension__WEBPACK_IMPORTED_MODULE_1__["default"])(index, i, query[i]));
  }

  return this.eval(_, pulse);
};

prototype.reinit = function(_, pulse) {
  var output = pulse.materialize().fork(),
      fields = _.fields,
      query = _.query,
      indices = this._indices,
      dims = this._dims,
      bits = this.value,
      curr = bits.curr(),
      prev = bits.prev(),
      all = bits.all(),
      out = (output.rem = output.add),
      mod = output.mod,
      m = query.length,
      adds = {}, add, index, key,
      mods, remMap, modMap, i, n, f;

  // set prev to current state
  prev.set(curr);

  // if pulse has remove tuples, process them first
  if (pulse.rem.length) {
    remMap = this.remove(_, pulse, output);
  }

  // if pulse has added tuples, add them to state
  if (pulse.add.length) {
    bits.add(pulse.add);
  }

  // if pulse has modified tuples, create an index map
  if (pulse.mod.length) {
    modMap = {};
    for (mods=pulse.mod, i=0, n=mods.length; i<n; ++i) {
      modMap[mods[i]._index] = 1;
    }
  }

  // re-initialize indices as needed, update curr bitmap
  for (i=0; i<m; ++i) {
    f = fields[i];
    if (!dims[i] || _.modified('fields', i) || pulse.modified(f.fields)) {
      key = f.fname;
      if (!(add = adds[key])) {
        indices[key] = index = Object(_SortedIndex__WEBPACK_IMPORTED_MODULE_2__["default"])();
        adds[key] = add = index.insert(f, pulse.source, 0);
      }
      dims[i] = Object(_Dimension__WEBPACK_IMPORTED_MODULE_1__["default"])(index, i, query[i]).onAdd(add, curr);
    }
  }

  // visit each tuple
  // if filter state changed, push index to add/rem
  // else if in mod and passes a filter, push index to mod
  for (i=0, n=bits.data().length; i<n; ++i) {
    if (remMap[i]) { // skip if removed tuple
      continue;
    } else if (prev[i] !== curr[i]) { // add if state changed
      out.push(i);
    } else if (modMap[i] && curr[i] !== all) { // otherwise, pass mods through
      mod.push(i);
    }
  }

  bits.mask = (1 << m) - 1;
  return output;
};

prototype.eval = function(_, pulse) {
  var output = pulse.materialize().fork(),
      m = this._dims.length,
      mask = 0;

  if (pulse.rem.length) {
    this.remove(_, pulse, output);
    mask |= (1 << m) - 1;
  }

  if (_.modified('query') && !_.modified('fields')) {
    mask |= this.update(_, pulse, output);
  }

  if (pulse.add.length) {
    this.insert(_, pulse, output);
    mask |= (1 << m) - 1;
  }

  if (pulse.mod.length) {
    this.modify(pulse, output);
    mask |= (1 << m) - 1;
  }

  this.value.mask = mask;
  return output;
};

prototype.insert = function(_, pulse, output) {
  var tuples = pulse.add,
      bits = this.value,
      dims = this._dims,
      indices = this._indices,
      fields = _.fields,
      adds = {},
      out = output.add,
      k = bits.size(),
      n = k + tuples.length,
      m = dims.length, j, key, add;

  // resize bitmaps and add tuples as needed
  bits.resize(n, m);
  bits.add(tuples);

  var curr = bits.curr(),
      prev = bits.prev(),
      all  = bits.all();

  // add to dimensional indices
  for (j=0; j<m; ++j) {
    key = fields[j].fname;
    add = adds[key] || (adds[key] = indices[key].insert(fields[j], tuples, k));
    dims[j].onAdd(add, curr);
  }

  // set previous filters, output if passes at least one filter
  for (; k<n; ++k) {
    prev[k] = all;
    if (curr[k] !== all) out.push(k);
  }
};

prototype.modify = function(pulse, output) {
  var out = output.mod,
      bits = this.value,
      curr = bits.curr(),
      all  = bits.all(),
      tuples = pulse.mod,
      i, n, k;

  for (i=0, n=tuples.length; i<n; ++i) {
    k = tuples[i]._index;
    if (curr[k] !== all) out.push(k);
  }
};

prototype.remove = function(_, pulse, output) {
  var indices = this._indices,
      bits = this.value,
      curr = bits.curr(),
      prev = bits.prev(),
      all  = bits.all(),
      map = {},
      out = output.rem,
      tuples = pulse.rem,
      i, n, k, f;

  // process tuples, output if passes at least one filter
  for (i=0, n=tuples.length; i<n; ++i) {
    k = tuples[i]._index;
    map[k] = 1; // build index map
    prev[k] = (f = curr[k]);
    curr[k] = all;
    if (f !== all) out.push(k);
  }

  // remove from dimensional indices
  for (k in indices) {
    indices[k].remove(n, map);
  }

  this.reindex(pulse, n, map);
  return map;
};

// reindex filters and indices after propagation completes
prototype.reindex = function(pulse, num, map) {
  var indices = this._indices,
      bits = this.value;

  pulse.runAfter(function() {
    var indexMap = bits.remove(num, map);
    for (var key in indices) indices[key].reindex(indexMap);
  });
};

prototype.update = function(_, pulse, output) {
  var dims = this._dims,
      query = _.query,
      stamp = pulse.stamp,
      m = dims.length,
      mask = 0, i, q;

  // survey how many queries have changed
  output.filters = 0;
  for (q=0; q<m; ++q) {
    if (_.modified('query', q)) { i = q; ++mask; }
  }

  if (mask === 1) {
    // only one query changed, use more efficient update
    mask = dims[i].one;
    this.incrementOne(dims[i], query[i], output.add, output.rem);
  } else {
    // multiple queries changed, perform full record keeping
    for (q=0, mask=0; q<m; ++q) {
      if (!_.modified('query', q)) continue;
      mask |= dims[q].one;
      this.incrementAll(dims[q], query[q], stamp, output.add);
      output.rem = output.add; // duplicate add/rem for downstream resolve
    }
  }

  return mask;
};

prototype.incrementAll = function(dim, query, stamp, out) {
  var bits = this.value,
      seen = bits.seen(),
      curr = bits.curr(),
      prev = bits.prev(),
      index = dim.index(),
      old = dim.bisect(dim.range),
      range = dim.bisect(query),
      lo1 = range[0],
      hi1 = range[1],
      lo0 = old[0],
      hi0 = old[1],
      one = dim.one,
      i, j, k;

  // Fast incremental update based on previous lo index.
  if (lo1 < lo0) {
    for (i = lo1, j = Math.min(lo0, hi1); i < j; ++i) {
      k = index[i];
      if (seen[k] !== stamp) {
        prev[k] = curr[k];
        seen[k] = stamp;
        out.push(k);
      }
      curr[k] ^= one;
    }
  } else if (lo1 > lo0) {
    for (i = lo0, j = Math.min(lo1, hi0); i < j; ++i) {
      k = index[i];
      if (seen[k] !== stamp) {
        prev[k] = curr[k];
        seen[k] = stamp;
        out.push(k);
      }
      curr[k] ^= one;
    }
  }

  // Fast incremental update based on previous hi index.
  if (hi1 > hi0) {
    for (i = Math.max(lo1, hi0), j = hi1; i < j; ++i) {
      k = index[i];
      if (seen[k] !== stamp) {
        prev[k] = curr[k];
        seen[k] = stamp;
        out.push(k);
      }
      curr[k] ^= one;
    }
  } else if (hi1 < hi0) {
    for (i = Math.max(lo0, hi1), j = hi0; i < j; ++i) {
      k = index[i];
      if (seen[k] !== stamp) {
        prev[k] = curr[k];
        seen[k] = stamp;
        out.push(k);
      }
      curr[k] ^= one;
    }
  }

  dim.range = query.slice();
};

prototype.incrementOne = function(dim, query, add, rem) {
  var bits = this.value,
      curr = bits.curr(),
      index = dim.index(),
      old = dim.bisect(dim.range),
      range = dim.bisect(query),
      lo1 = range[0],
      hi1 = range[1],
      lo0 = old[0],
      hi0 = old[1],
      one = dim.one,
      i, j, k;

  // Fast incremental update based on previous lo index.
  if (lo1 < lo0) {
    for (i = lo1, j = Math.min(lo0, hi1); i < j; ++i) {
      k = index[i];
      curr[k] ^= one;
      add.push(k);
    }
  } else if (lo1 > lo0) {
    for (i = lo0, j = Math.min(lo1, hi0); i < j; ++i) {
      k = index[i];
      curr[k] ^= one;
      rem.push(k);
    }
  }

  // Fast incremental update based on previous hi index.
  if (hi1 > hi0) {
    for (i = Math.max(lo1, hi0), j = hi1; i < j; ++i) {
      k = index[i];
      curr[k] ^= one;
      add.push(k);
    }
  } else if (hi1 < hi0) {
    for (i = Math.max(lo0, hi1), j = hi0; i < j; ++i) {
      k = index[i];
      curr[k] ^= one;
      rem.push(k);
    }
  }

  dim.range = query.slice();
};


/***/ }),

/***/ "./node_modules/vega-crossfilter/src/Dimension.js":
/*!********************************************************!*\
  !*** ./node_modules/vega-crossfilter/src/Dimension.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(index, i, query) {
  var bit = (1 << i);

  return {
    one:     bit,
    zero:    ~bit,
    range:   query.slice(),
    bisect:  index.bisect,
    index:   index.index,
    size:    index.size,

    onAdd: function(added, curr) {
      var dim = this,
          range = dim.bisect(dim.range, added.value),
          idx = added.index,
          lo = range[0],
          hi = range[1],
          n1 = idx.length, i;

      for (i=0;  i<lo; ++i) curr[idx[i]] |= bit;
      for (i=hi; i<n1; ++i) curr[idx[i]] |= bit;
      return dim;
    }
  };
});


/***/ }),

/***/ "./node_modules/vega-crossfilter/src/ResolveFilter.js":
/*!************************************************************!*\
  !*** ./node_modules/vega-crossfilter/src/ResolveFilter.js ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return ResolveFilter; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");



/**
 * Selectively filters tuples by resolving against a filter bitmap.
 * Useful for processing the output of a cross-filter transform.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {object} params.ignore - A bit mask indicating which filters to ignore.
 * @param {object} params.filter - The per-tuple filter bitmaps. Typically this
 *   parameter value is a reference to a {@link CrossFilter} transform.
 */
function ResolveFilter(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, null, params);
}

ResolveFilter.Definition = {
  "type": "ResolveFilter",
  "metadata": {},
  "params": [
    { "name": "ignore", "type": "number", "required": true,
      "description": "A bit mask indicating which filters to ignore." },
    { "name": "filter", "type": "object", "required": true,
      "description": "Per-tuple filter bitmaps from a CrossFilter transform." }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(ResolveFilter, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

prototype.transform = function(_, pulse) {
  var ignore = ~(_.ignore || 0), // bit mask where zeros -> dims to ignore
      bitmap = _.filter,
      mask = bitmap.mask;

  // exit early if no relevant filter changes
  if ((mask & ignore) === 0) return pulse.StopPropagation;

  var output = pulse.fork(pulse.ALL),
      data = bitmap.data(),
      curr = bitmap.curr(),
      prev = bitmap.prev(),
      pass = function(k) {
        return !(curr[k] & ignore) ? data[k] : null;
      };

  // propagate all mod tuples that pass the filter
  output.filter(output.MOD, pass);

  // determine add & rem tuples via filter functions
  // for efficiency, we do *not* populate new arrays,
  // instead we add filter functions applied downstream

  if (!(mask & (mask-1))) { // only one filter changed
    output.filter(output.ADD, pass);
    output.filter(output.REM, function(k) {
      return (curr[k] & ignore) === mask ? data[k] : null;
    });

  } else { // multiple filters changed
    output.filter(output.ADD, function(k) {
      var c = curr[k] & ignore,
          f = !c && (c ^ (prev[k] & ignore));
      return f ? data[k] : null;
    });
    output.filter(output.REM, function(k) {
      var c = curr[k] & ignore,
          f = c && !(c ^ (c ^ (prev[k] & ignore)));
      return f ? data[k] : null;
    });
  }

  // add filter to source data in case of reflow...
  return output.filter(output.SOURCE, function(t) { return pass(t._index); });
};


/***/ }),

/***/ "./node_modules/vega-crossfilter/src/SortedIndex.js":
/*!**********************************************************!*\
  !*** ./node_modules/vega-crossfilter/src/SortedIndex.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return SortedIndex; });
/* harmony import */ var _arrays__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./arrays */ "./node_modules/vega-crossfilter/src/arrays.js");
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");



/**
 * Maintains a list of values, sorted by key.
 */
function SortedIndex() {
  var index = Object(_arrays__WEBPACK_IMPORTED_MODULE_0__["array32"])(0),
      value = [],
      size = 0;

  function insert(key, data, base) {
    if (!data.length) return [];

    var n0 = size,
        n1 = data.length,
        addv = Array(n1),
        addi = Object(_arrays__WEBPACK_IMPORTED_MODULE_0__["array32"])(n1),
        oldv, oldi, i;

    for (i=0; i<n1; ++i) {
      addv[i] = key(data[i]);
      addi[i] = i;
    }
    addv = sort(addv, addi);

    if (n0) {
      oldv = value;
      oldi = index;
      value = Array(n0 + n1);
      index = Object(_arrays__WEBPACK_IMPORTED_MODULE_0__["array32"])(n0 + n1);
      merge(base, oldv, oldi, n0, addv, addi, n1, value, index);
    } else {
      if (base > 0) for (i=0; i<n1; ++i) {
        addi[i] += base;
      }
      value = addv;
      index = addi;
    }
    size = n0 + n1;

    return {index: addi, value: addv};
  }

  function remove(num, map) {
    // map: index -> remove
    var n = size,
        idx, i, j;

    // seek forward to first removal
    for (i=0; !map[index[i]] && i<n; ++i);

    // condense index and value arrays
    for (j=i; i<n; ++i) {
      if (!map[idx=index[i]]) {
        index[j] = idx;
        value[j] = value[i];
        ++j;
      }
    }

    size = n - num;
  }

  function reindex(map) {
    for (var i=0, n=size; i<n; ++i) {
      index[i] = map[index[i]];
    }
  }

  function bisect(range, array) {
    var n;
    if (array) {
      n = array.length;
    } else {
      array = value;
      n = size;
    }
    return [
      Object(d3_array__WEBPACK_IMPORTED_MODULE_1__["bisectLeft"])(array, range[0], 0, n),
      Object(d3_array__WEBPACK_IMPORTED_MODULE_1__["bisectRight"])(array, range[1], 0, n)
    ];
  }

  return {
    insert:  insert,
    remove:  remove,
    bisect:  bisect,
    reindex: reindex,
    index:   function() { return index; },
    size:    function() { return size; }
  };
}

function sort(values, index) {
  values.sort.call(index, function(a, b) {
    var x = values[a],
        y = values[b];
    return x < y ? -1 : x > y ? 1 : 0;
  });
  return Object(d3_array__WEBPACK_IMPORTED_MODULE_1__["permute"])(values, index);
}

function merge(base, value0, index0, n0, value1, index1, n1, value, index) {
  var i0 = 0, i1 = 0, i;

  for (i=0; i0 < n0 && i1 < n1; ++i) {
    if (value0[i0] < value1[i1]) {
      value[i] = value0[i0];
      index[i] = index0[i0++];
    } else {
      value[i] = value1[i1];
      index[i] = index1[i1++] + base;
    }
  }

  for (; i0 < n0; ++i0, ++i) {
    value[i] = value0[i0];
    index[i] = index0[i0];
  }

  for (; i1 < n1; ++i1, ++i) {
    value[i] = value1[i1];
    index[i] = index1[i1] + base;
  }
}


/***/ }),

/***/ "./node_modules/vega-crossfilter/src/arrays.js":
/*!*****************************************************!*\
  !*** ./node_modules/vega-crossfilter/src/arrays.js ***!
  \*****************************************************/
/*! exports provided: array8, array16, array32 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "array8", function() { return array8; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "array16", function() { return array16; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "array32", function() { return array32; });
function array8(n) { return new Uint8Array(n); }

function array16(n) { return new Uint16Array(n); }

function array32(n) { return new Uint32Array(n); }


/***/ }),

/***/ "./node_modules/vega-dataflow/index.js":
/*!*********************************************!*\
  !*** ./node_modules/vega-dataflow/index.js ***!
  \*********************************************/
/*! exports provided: UniqueList, asyncCallback, changeset, isChangeSet, Dataflow, EventStream, Parameters, Pulse, MultiPulse, Operator, Transform, derive, rederive, ingest, isTuple, replace, tupleid, definition, transform, transforms */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _src_util_UniqueList__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/util/UniqueList */ "./node_modules/vega-dataflow/src/util/UniqueList.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UniqueList", function() { return _src_util_UniqueList__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _src_util_asyncCallback__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/util/asyncCallback */ "./node_modules/vega-dataflow/src/util/asyncCallback.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "asyncCallback", function() { return _src_util_asyncCallback__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _src_ChangeSet__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/ChangeSet */ "./node_modules/vega-dataflow/src/ChangeSet.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "changeset", function() { return _src_ChangeSet__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isChangeSet", function() { return _src_ChangeSet__WEBPACK_IMPORTED_MODULE_2__["isChangeSet"]; });

/* harmony import */ var _src_dataflow_Dataflow__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/dataflow/Dataflow */ "./node_modules/vega-dataflow/src/dataflow/Dataflow.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Dataflow", function() { return _src_dataflow_Dataflow__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _src_EventStream__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./src/EventStream */ "./node_modules/vega-dataflow/src/EventStream.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EventStream", function() { return _src_EventStream__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _src_Parameters__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./src/Parameters */ "./node_modules/vega-dataflow/src/Parameters.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Parameters", function() { return _src_Parameters__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _src_Pulse__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./src/Pulse */ "./node_modules/vega-dataflow/src/Pulse.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Pulse", function() { return _src_Pulse__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony import */ var _src_MultiPulse__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./src/MultiPulse */ "./node_modules/vega-dataflow/src/MultiPulse.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MultiPulse", function() { return _src_MultiPulse__WEBPACK_IMPORTED_MODULE_7__["default"]; });

/* harmony import */ var _src_Operator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./src/Operator */ "./node_modules/vega-dataflow/src/Operator.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Operator", function() { return _src_Operator__WEBPACK_IMPORTED_MODULE_8__["default"]; });

/* harmony import */ var _src_Transform__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./src/Transform */ "./node_modules/vega-dataflow/src/Transform.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Transform", function() { return _src_Transform__WEBPACK_IMPORTED_MODULE_9__["default"]; });

/* harmony import */ var _src_Tuple__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./src/Tuple */ "./node_modules/vega-dataflow/src/Tuple.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "derive", function() { return _src_Tuple__WEBPACK_IMPORTED_MODULE_10__["derive"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "rederive", function() { return _src_Tuple__WEBPACK_IMPORTED_MODULE_10__["rederive"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ingest", function() { return _src_Tuple__WEBPACK_IMPORTED_MODULE_10__["ingest"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isTuple", function() { return _src_Tuple__WEBPACK_IMPORTED_MODULE_10__["isTuple"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "replace", function() { return _src_Tuple__WEBPACK_IMPORTED_MODULE_10__["replace"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tupleid", function() { return _src_Tuple__WEBPACK_IMPORTED_MODULE_10__["tupleid"]; });

/* harmony import */ var _src_register__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./src/register */ "./node_modules/vega-dataflow/src/register.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "definition", function() { return _src_register__WEBPACK_IMPORTED_MODULE_11__["definition"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "transform", function() { return _src_register__WEBPACK_IMPORTED_MODULE_11__["transform"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "transforms", function() { return _src_register__WEBPACK_IMPORTED_MODULE_11__["transforms"]; });

// Utilities



// Core Runtime










// Transform Registry



/***/ }),

/***/ "./node_modules/vega-dataflow/src/ChangeSet.js":
/*!*****************************************************!*\
  !*** ./node_modules/vega-dataflow/src/ChangeSet.js ***!
  \*****************************************************/
/*! exports provided: isChangeSet, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isChangeSet", function() { return isChangeSet; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return changeset; });
/* harmony import */ var _Tuple__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tuple */ "./node_modules/vega-dataflow/src/Tuple.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");



function isChangeSet(v) {
  return v && v.constructor === changeset;
}

function changeset() {
  var add = [],  // insert tuples
      rem = [],  // remove tuples
      mod = [],  // modify tuples
      remp = [], // remove by predicate
      modp = [], // modify by predicate
      reflow = false;

  return {
    constructor: changeset,
    insert: function(t) {
      var d = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["array"])(t), i = 0, n = d.length;
      for (; i<n; ++i) add.push(d[i]);
      return this;
    },
    remove: function(t) {
      var a = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isFunction"])(t) ? remp : rem,
          d = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["array"])(t), i = 0, n = d.length;
      for (; i<n; ++i) a.push(d[i]);
      return this;
    },
    modify: function(t, field, value) {
      var m = {field: field, value: Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["constant"])(value)};
      if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isFunction"])(t)) {
        m.filter = t;
        modp.push(m);
      } else {
        m.tuple = t;
        mod.push(m);
      }
      return this;
    },
    encode: function(t, set) {
      if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isFunction"])(t)) modp.push({filter: t, field: set});
      else mod.push({tuple: t, field: set});
      return this;
    },
    reflow: function() {
      reflow = true;
      return this;
    },
    pulse: function(pulse, tuples) {
      var cur = {}, out = {}, i, n, m, f, t, id;

      // build lookup table of current tuples
      for (i=0, n=tuples.length; i<n; ++i) {
        cur[Object(_Tuple__WEBPACK_IMPORTED_MODULE_0__["tupleid"])(tuples[i])] = 1;
      }

      // process individual tuples to remove
      for (i=0, n=rem.length; i<n; ++i) {
        t = rem[i];
        cur[Object(_Tuple__WEBPACK_IMPORTED_MODULE_0__["tupleid"])(t)] = -1;
      }

      // process predicate-based removals
      for (i=0, n=remp.length; i<n; ++i) {
        f = remp[i];
        tuples.forEach(function(t) {
          if (f(t)) cur[Object(_Tuple__WEBPACK_IMPORTED_MODULE_0__["tupleid"])(t)] = -1;
        });
      }

      // process all add tuples
      for (i=0, n=add.length; i<n; ++i) {
        t = add[i];
        id = Object(_Tuple__WEBPACK_IMPORTED_MODULE_0__["tupleid"])(t);
        if (cur[id]) {
          // tuple already resides in dataset
          // if flagged for both add and remove, cancel
          cur[id] = 1;
        } else {
          // tuple does not reside in dataset, add
          pulse.add.push(Object(_Tuple__WEBPACK_IMPORTED_MODULE_0__["ingest"])(add[i]));
        }
      }

      // populate pulse rem list
      for (i=0, n=tuples.length; i<n; ++i) {
        t = tuples[i];
        if (cur[Object(_Tuple__WEBPACK_IMPORTED_MODULE_0__["tupleid"])(t)] < 0) pulse.rem.push(t);
      }

      // modify helper method
      function modify(t, f, v) {
        if (v) {
          t[f] = v(t);
        } else {
          pulse.encode = f;
        }
        if (!reflow) out[Object(_Tuple__WEBPACK_IMPORTED_MODULE_0__["tupleid"])(t)] = t;
      }

      // process individual tuples to modify
      for (i=0, n=mod.length; i<n; ++i) {
        m = mod[i];
        t = m.tuple;
        f = m.field;
        id = cur[Object(_Tuple__WEBPACK_IMPORTED_MODULE_0__["tupleid"])(t)];
        if (id > 0) {
          modify(t, f, m.value);
          pulse.modifies(f);
        }
      }

      // process predicate-based modifications
      for (i=0, n=modp.length; i<n; ++i) {
        m = modp[i];
        f = m.filter;
        tuples.forEach(function(t) {
          if (f(t) && cur[Object(_Tuple__WEBPACK_IMPORTED_MODULE_0__["tupleid"])(t)] > 0) {
            modify(t, m.field, m.value);
          }
        });
        pulse.modifies(m.field);
      }

      // upon reflow request, populate mod with all non-removed tuples
      // otherwise, populate mod with modified tuples only
      if (reflow) {
        pulse.mod = rem.length || remp.length
          ? tuples.filter(function(t) { return cur[Object(_Tuple__WEBPACK_IMPORTED_MODULE_0__["tupleid"])(t)] > 0; })
          : tuples.slice();
      } else {
        for (id in out) pulse.mod.push(out[id]);
      }

      return pulse;
    }
  };
}


/***/ }),

/***/ "./node_modules/vega-dataflow/src/EventStream.js":
/*!*******************************************************!*\
  !*** ./node_modules/vega-dataflow/src/EventStream.js ***!
  \*******************************************************/
/*! exports provided: default, stream */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return EventStream; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "stream", function() { return stream; });
/* harmony import */ var _util_UniqueList__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/UniqueList */ "./node_modules/vega-dataflow/src/util/UniqueList.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");



var STREAM_ID = 0;

/**
 * Models an event stream.
 * @constructor
 * @param {function(Object, number): boolean} [filter] - Filter predicate.
 *   Events pass through when truthy, events are suppressed when falsy.
 * @param {function(Object): *} [apply] - Applied to input events to produce
 *   new event values.
 * @param {function(Object)} [receive] - Event callback function to invoke
 *   upon receipt of a new event. Use to override standard event processing.
 */
function EventStream(filter, apply, receive) {
  this.id = ++STREAM_ID;
  this.value = null;
  if (receive) this.receive = receive;
  if (filter) this._filter = filter;
  if (apply) this._apply = apply;
}

/**
 * Creates a new event stream instance with the provided
 * (optional) filter, apply and receive functions.
 * @param {function(Object, number): boolean} [filter] - Filter predicate.
 *   Events pass through when truthy, events are suppressed when falsy.
 * @param {function(Object): *} [apply] - Applied to input events to produce
 *   new event values.
 * @see EventStream
 */
function stream(filter, apply, receive) {
  return new EventStream(filter, apply, receive);
}

var prototype = EventStream.prototype;

prototype._filter = vega_util__WEBPACK_IMPORTED_MODULE_1__["truthy"];

prototype._apply = vega_util__WEBPACK_IMPORTED_MODULE_1__["identity"];

prototype.targets = function() {
  return this._targets || (this._targets = Object(_util_UniqueList__WEBPACK_IMPORTED_MODULE_0__["default"])(vega_util__WEBPACK_IMPORTED_MODULE_1__["id"]));
};

prototype.consume = function(_) {
  if (!arguments.length) return !!this._consume;
  this._consume = !!_;
  return this;
};

prototype.receive = function(evt) {
  if (this._filter(evt)) {
    var val = (this.value = this._apply(evt)),
        trg = this._targets,
        n = trg ? trg.length : 0,
        i = 0;

    for (; i<n; ++i) trg[i].receive(val);

    if (this._consume) {
      evt.preventDefault();
      evt.stopPropagation();
    }
  }
};

prototype.filter = function(filter) {
  var s = stream(filter);
  this.targets().add(s);
  return s;
};

prototype.apply = function(apply) {
  var s = stream(null, apply);
  this.targets().add(s);
  return s;
};

prototype.merge = function() {
  var s = stream();

  this.targets().add(s);
  for (var i=0, n=arguments.length; i<n; ++i) {
    arguments[i].targets().add(s);
  }

  return s;
};

prototype.throttle = function(pause) {
  var t = -1;
  return this.filter(function() {
    var now = Date.now();
    if ((now - t) > pause) {
      t = now;
      return 1;
    } else {
      return 0;
    }
  });
};

prototype.debounce = function(delay) {
  var s = stream();

  this.targets().add(stream(null, null,
    Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["debounce"])(delay, function(e) {
      var df = e.dataflow;
      s.receive(e);
      if (df && df.run) df.run();
    })
  ));

  return s;
};

prototype.between = function(a, b) {
  var active = false;
  a.targets().add(stream(null, null, function() { active = true; }));
  b.targets().add(stream(null, null, function() { active = false; }));
  return this.filter(function() { return active; });
};


/***/ }),

/***/ "./node_modules/vega-dataflow/src/MultiPulse.js":
/*!******************************************************!*\
  !*** ./node_modules/vega-dataflow/src/MultiPulse.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return MultiPulse; });
/* harmony import */ var _Pulse__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Pulse */ "./node_modules/vega-dataflow/src/Pulse.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");



/**
 * Represents a set of multiple pulses. Used as input for operators
 * that accept multiple pulses at a time. Contained pulses are
 * accessible via the public "pulses" array property. This pulse doe
 * not carry added, removed or modified tuples directly. However,
 * the visit method can be used to traverse all such tuples contained
 * in sub-pulses with a timestamp matching this parent multi-pulse.
 * @constructor
 * @param {Dataflow} dataflow - The backing dataflow instance.
 * @param {number} stamp - The timestamp.
 * @param {Array<Pulse>} pulses - The sub-pulses for this multi-pulse.
 */
function MultiPulse(dataflow, stamp, pulses, encode) {
  var p = this,
      c = 0,
      pulse, hash, i, n, f;

  this.dataflow = dataflow;
  this.stamp = stamp;
  this.fields = null;
  this.encode = encode || null;
  this.pulses = pulses;

  for (i=0, n=pulses.length; i<n; ++i) {
    pulse = pulses[i];
    if (pulse.stamp !== stamp) continue;

    if (pulse.fields) {
      hash = p.fields || (p.fields = {});
      for (f in pulse.fields) { hash[f] = 1; }
    }

    if (pulse.changed(p.ADD)) c |= p.ADD;
    if (pulse.changed(p.REM)) c |= p.REM;
    if (pulse.changed(p.MOD)) c |= p.MOD;
  }

  this.changes = c;
}

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(MultiPulse, _Pulse__WEBPACK_IMPORTED_MODULE_0__["default"]);

/**
 * Creates a new pulse based on the values of this pulse.
 * The dataflow, time stamp and field modification values are copied over.
 * @return {Pulse}
 */
prototype.fork = function(flags) {
  var p = new _Pulse__WEBPACK_IMPORTED_MODULE_0__["default"](this.dataflow).init(this, flags & this.NO_FIELDS);
  if (flags !== undefined) {
    if (flags & p.ADD) {
      this.visit(p.ADD, function(t) { return p.add.push(t); });
    }
    if (flags & p.REM) {
      this.visit(p.REM, function(t) { return p.rem.push(t); });
    }
    if (flags & p.MOD) {
      this.visit(p.MOD, function(t) { return p.mod.push(t); });
    }
  }
  return p;
};

prototype.changed = function(flags) {
  return this.changes & flags;
};

prototype.modified = function(_) {
  var p = this, fields = p.fields;
  return !(fields && (p.changes & p.MOD)) ? 0
    : Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(_) ? _.some(function(f) { return fields[f]; })
    : fields[_];
};

prototype.filter = function() {
  Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["error"])('MultiPulse does not support filtering.');
};

prototype.materialize = function() {
  Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["error"])('MultiPulse does not support materialization.');
};

prototype.visit = function(flags, visitor) {
  var p = this,
      pulses = p.pulses,
      n = pulses.length,
      i = 0;

  if (flags & p.SOURCE) {
    for (; i<n; ++i) {
      pulses[i].visit(flags, visitor);
    }
  } else {
    for (; i<n; ++i) {
      if (pulses[i].stamp === p.stamp) {
        pulses[i].visit(flags, visitor);
      }
    }
  }

  return p;
};


/***/ }),

/***/ "./node_modules/vega-dataflow/src/Operator.js":
/*!****************************************************!*\
  !*** ./node_modules/vega-dataflow/src/Operator.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Operator; });
/* harmony import */ var _Parameters__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Parameters */ "./node_modules/vega-dataflow/src/Parameters.js");
/* harmony import */ var _util_UniqueList__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/UniqueList */ "./node_modules/vega-dataflow/src/util/UniqueList.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");




var OP_ID = 0;
var PULSE = 'pulse';
var NO_PARAMS = new _Parameters__WEBPACK_IMPORTED_MODULE_0__["default"]();

// Boolean Flags
var SKIP     = 1,
    MODIFIED = 2;

/**
 * An Operator is a processing node in a dataflow graph.
 * Each operator stores a value and an optional value update function.
 * Operators can accept a hash of named parameters. Parameter values can
 * either be direct (JavaScript literals, arrays, objects) or indirect
 * (other operators whose values will be pulled dynamically). Operators
 * included as parameters will have this operator added as a dependency.
 * @constructor
 * @param {*} [init] - The initial value for this operator.
 * @param {function(object, Pulse)} [update] - An update function. Upon
 *   evaluation of this operator, the update function will be invoked and the
 *   return value will be used as the new value of this operator.
 * @param {object} [params] - The parameters for this operator.
 * @param {boolean} [react=true] - Flag indicating if this operator should
 *   listen for changes to upstream operators included as parameters.
 * @see parameters
 */
function Operator(init, update, params, react) {
  this.id = ++OP_ID;
  this.value = init;
  this.stamp = -1;
  this.rank = -1;
  this.qrank = -1;
  this.flags = 0;

  if (update) {
    this._update = update;
  }
  if (params) this.parameters(params, react);
}

var prototype = Operator.prototype;

/**
 * Returns a list of target operators dependent on this operator.
 * If this list does not exist, it is created and then returned.
 * @return {UniqueList}
 */
prototype.targets = function() {
  return this._targets || (this._targets = Object(_util_UniqueList__WEBPACK_IMPORTED_MODULE_1__["default"])(vega_util__WEBPACK_IMPORTED_MODULE_2__["id"]));
};

/**
 * Sets the value of this operator.
 * @param {*} value - the value to set.
 * @return {Number} Returns 1 if the operator value has changed
 *   according to strict equality, returns 0 otherwise.
 */
prototype.set = function(value) {
  if (this.value !== value) {
    this.value = value;
    return 1;
  } else {
    return 0;
  }
};

function flag(bit) {
  return function(state) {
    var f = this.flags;
    if (arguments.length === 0) return !!(f & bit);
    this.flags = state ? (f | bit) : (f & ~bit);
    return this;
  };
}

/**
 * Indicates that operator evaluation should be skipped on the next pulse.
 * This operator will still propagate incoming pulses, but its update function
 * will not be invoked. The skip flag is reset after every pulse, so calling
 * this method will affect processing of the next pulse only.
 */
prototype.skip = flag(SKIP);

/**
 * Indicates that this operator's value has been modified on its most recent
 * pulse. Normally modification is checked via strict equality; however, in
 * some cases it is more efficient to update the internal state of an object.
 * In those cases, the modified flag can be used to trigger propagation. Once
 * set, the modification flag persists across pulses until unset. The flag can
 * be used with the last timestamp to test if a modification is recent.
 */
prototype.modified = flag(MODIFIED);

/**
 * Sets the parameters for this operator. The parameter values are analyzed for
 * operator instances. If found, this operator will be added as a dependency
 * of the parameterizing operator. Operator values are dynamically marshalled
 * from each operator parameter prior to evaluation. If a parameter value is
 * an array, the array will also be searched for Operator instances. However,
 * the search does not recurse into sub-arrays or object properties.
 * @param {object} params - A hash of operator parameters.
 * @param {boolean} [react=true] - A flag indicating if this operator should
 *   automatically update (react) when parameter values change. In other words,
 *   this flag determines if the operator registers itself as a listener on
 *   any upstream operators included in the parameters.
 * @param {boolean} [initonly=false] - A flag indicating if this operator
 *   should calculate an update only upon its initiatal evaluation, then
 *   deregister dependencies and suppress all future update invocations.
 * @return {Operator[]} - An array of upstream dependencies.
 */
prototype.parameters = function(params, react, initonly) {
  react = react !== false;
  var self = this,
      argval = (self._argval = self._argval || new _Parameters__WEBPACK_IMPORTED_MODULE_0__["default"]()),
      argops = (self._argops = self._argops || []),
      deps = [],
      name, value, n, i;

  function add(name, index, value) {
    if (value instanceof Operator) {
      if (value !== self) {
        if (react) value.targets().add(self);
        deps.push(value);
      }
      argops.push({op:value, name:name, index:index});
    } else {
      argval.set(name, index, value);
    }
  }

  for (name in params) {
    value = params[name];

    if (name === PULSE) {
      Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["array"])(value).forEach(function(op) {
        if (!(op instanceof Operator)) {
          Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["error"])('Pulse parameters must be operator instances.');
        } else if (op !== self) {
          op.targets().add(self);
          deps.push(op);
        }
      });
      self.source = value;
    } else if (Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["isArray"])(value)) {
      argval.set(name, -1, Array(n = value.length));
      for (i=0; i<n; ++i) add(name, i, value[i]);
    } else {
      add(name, -1, value);
    }
  }

  this.marshall().clear(); // initialize values
  if (initonly) argops.initonly = true;

  return deps;
};

/**
 * Internal method for marshalling parameter values.
 * Visits each operator dependency to pull the latest value.
 * @return {Parameters} A Parameters object to pass to the update function.
 */
prototype.marshall = function(stamp) {
  var argval = this._argval || NO_PARAMS,
      argops = this._argops, item, i, n, op, mod;

  if (argops) {
    for (i=0, n=argops.length; i<n; ++i) {
      item = argops[i];
      op = item.op;
      mod = op.modified() && op.stamp === stamp;
      argval.set(item.name, item.index, op.value, mod);
    }

    if (argops.initonly) {
      for (i=0; i<n; ++i) {
        item = argops[i];
        item.op.targets().remove(this);
      }
      this._argops = null;
      this._update = null;
    }
  }
  return argval;
};

/**
 * Delegate method to perform operator processing.
 * Subclasses can override this method to perform custom processing.
 * By default, it marshalls parameters and calls the update function
 * if that function is defined. If the update function does not
 * change the operator value then StopPropagation is returned.
 * If no update function is defined, this method does nothing.
 * @param {Pulse} pulse - the current dataflow pulse.
 * @return The output pulse or StopPropagation. A falsy return value
 *   (including undefined) will let the input pulse pass through.
 */
prototype.evaluate = function(pulse) {
  var update = this._update;
  if (update) {
    var params = this.marshall(pulse.stamp),
        v = update.call(this, params, pulse);

    params.clear();
    if (v !== this.value) {
      this.value = v;
    } else if (!this.modified()) {
      return pulse.StopPropagation;
    }
  }
};

/**
 * Run this operator for the current pulse. If this operator has already
 * been run at (or after) the pulse timestamp, returns StopPropagation.
 * Internally, this method calls {@link evaluate} to perform processing.
 * If {@link evaluate} returns a falsy value, the input pulse is returned.
 * This method should NOT be overridden, instead overrride {@link evaluate}.
 * @param {Pulse} pulse - the current dataflow pulse.
 * @return the output pulse for this operator (or StopPropagation)
 */
prototype.run = function(pulse) {
  if (pulse.stamp <= this.stamp) return pulse.StopPropagation;
  var rv;
  if (this.skip()) {
    this.skip(false);
    rv = 0;
  } else {
    rv = this.evaluate(pulse);
  }
  this.stamp = pulse.stamp;
  return (this.pulse = rv || pulse);
};


/***/ }),

/***/ "./node_modules/vega-dataflow/src/Parameters.js":
/*!******************************************************!*\
  !*** ./node_modules/vega-dataflow/src/Parameters.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Parameters; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");


var CACHE = '_:mod:_';

/**
 * Hash that tracks modifications to assigned values.
 * Callers *must* use the set method to update values.
 */
function Parameters() {
  Object.defineProperty(this, CACHE, {writable: true, value: {}});
}

var prototype = Parameters.prototype;

/**
 * Set a parameter value. If the parameter value changes, the parameter
 * will be recorded as modified.
 * @param {string} name - The parameter name.
 * @param {number} index - The index into an array-value parameter. Ignored if
 *   the argument is undefined, null or less than zero.
 * @param {*} value - The parameter value to set.
 * @param {boolean} [force=false] - If true, records the parameter as modified
 *   even if the value is unchanged.
 * @return {Parameters} - This parameter object.
 */
prototype.set = function(name, index, value, force) {
  var o = this,
      v = o[name],
      mod = o[CACHE];

  if (index != null && index >= 0) {
    if (v[index] !== value || force) {
      v[index] = value;
      mod[index + ':' + name] = -1;
      mod[name] = -1;
    }
  } else if (v !== value || force) {
    o[name] = value;
    mod[name] = Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isArray"])(value) ? 1 + value.length : -1;
  }

  return o;
};

/**
 * Tests if one or more parameters has been modified. If invoked with no
 * arguments, returns true if any parameter value has changed. If the first
 * argument is array, returns trues if any parameter name in the array has
 * changed. Otherwise, tests if the given name and optional array index has
 * changed.
 * @param {string} name - The parameter name to test.
 * @param {number} [index=undefined] - The parameter array index to test.
 * @return {boolean} - Returns true if a queried parameter was modified.
 */
prototype.modified = function(name, index) {
  var mod = this[CACHE], k;
  if (!arguments.length) {
    for (k in mod) { if (mod[k]) return true; }
    return false;
  } else if (Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isArray"])(name)) {
    for (k=0; k<name.length; ++k) {
      if (mod[name[k]]) return true;
    }
    return false;
  }
  return (index != null && index >= 0)
    ? (index + 1 < mod[name] || !!mod[index + ':' + name])
    : !!mod[name];
};

/**
 * Clears the modification records. After calling this method,
 * all parameters are considered unmodified.
 */
prototype.clear = function() {
  this[CACHE] = {};
  return this;
};


/***/ }),

/***/ "./node_modules/vega-dataflow/src/Pulse.js":
/*!*************************************************!*\
  !*** ./node_modules/vega-dataflow/src/Pulse.js ***!
  \*************************************************/
/*! exports provided: StopPropagation, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StopPropagation", function() { return StopPropagation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Pulse; });
/* harmony import */ var _Tuple__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tuple */ "./node_modules/vega-dataflow/src/Tuple.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");



/**
 * Sentinel value indicating pulse propagation should stop.
 */
var StopPropagation = {};

// Pulse visit type flags
var ADD       = (1 << 0),
    REM       = (1 << 1),
    MOD       = (1 << 2),
    ADD_REM   = ADD | REM,
    ADD_MOD   = ADD | MOD,
    ALL       = ADD | REM | MOD,
    REFLOW    = (1 << 3),
    SOURCE    = (1 << 4),
    NO_SOURCE = (1 << 5),
    NO_FIELDS = (1 << 6);

/**
 * A Pulse enables inter-operator communication during a run of the
 * dataflow graph. In addition to the current timestamp, a pulse may also
 * contain a change-set of added, removed or modified data tuples, as well as
 * a pointer to a full backing data source. Tuple change sets may not
 * be fully materialized; for example, to prevent needless array creation
 * a change set may include larger arrays and corresponding filter functions.
 * The pulse provides a {@link visit} method to enable proper and efficient
 * iteration over requested data tuples.
 *
 * In addition, each pulse can track modification flags for data tuple fields.
 * Responsible transform operators should call the {@link modifies} method to
 * indicate changes to data fields. The {@link modified} method enables
 * querying of this modification state.
 *
 * @constructor
 * @param {Dataflow} dataflow - The backing dataflow instance.
 * @param {number} stamp - The current propagation timestamp.
 * @param {string} [encode] - An optional encoding set name, which is then
 *   accessible as Pulse.encode. Operators can respond to (or ignore) this
 *   setting as appropriate. This parameter can be used in conjunction with
 *   the Encode transform in the vega-encode module.
 */
function Pulse(dataflow, stamp, encode) {
  this.dataflow = dataflow;
  this.stamp = stamp == null ? -1 : stamp;
  this.add = [];
  this.rem = [];
  this.mod = [];
  this.fields = null;
  this.encode = encode || null;
}

var prototype = Pulse.prototype;

/**
 * Sentinel value indicating pulse propagation should stop.
 */
prototype.StopPropagation = StopPropagation;

/**
 * Boolean flag indicating ADD (added) tuples.
 */
prototype.ADD = ADD;

/**
 * Boolean flag indicating REM (removed) tuples.
 */
prototype.REM = REM;

/**
 * Boolean flag indicating MOD (modified) tuples.
 */
prototype.MOD = MOD;

/**
 * Boolean flag indicating ADD (added) and REM (removed) tuples.
 */
prototype.ADD_REM = ADD_REM;

/**
 * Boolean flag indicating ADD (added) and MOD (modified) tuples.
 */
prototype.ADD_MOD = ADD_MOD;

/**
 * Boolean flag indicating ADD, REM and MOD tuples.
 */
prototype.ALL = ALL;

/**
 * Boolean flag indicating all tuples in a data source
 * except for the ADD, REM and MOD tuples.
 */
prototype.REFLOW = REFLOW;

/**
 * Boolean flag indicating a 'pass-through' to a
 * backing data source, ignoring ADD, REM and MOD tuples.
 */
prototype.SOURCE = SOURCE;

/**
 * Boolean flag indicating that source data should be
 * suppressed when creating a forked pulse.
 */
prototype.NO_SOURCE = NO_SOURCE;

/**
 * Boolean flag indicating that field modifications should be
 * suppressed when creating a forked pulse.
 */
prototype.NO_FIELDS = NO_FIELDS;

/**
 * Creates a new pulse based on the values of this pulse.
 * The dataflow, time stamp and field modification values are copied over.
 * By default, new empty ADD, REM and MOD arrays are created.
 * @param {number} flags - Integer of boolean flags indicating which (if any)
 *   tuple arrays should be copied to the new pulse. The supported flag values
 *   are ADD, REM and MOD. Array references are copied directly: new array
 *   instances are not created.
 * @return {Pulse} - The forked pulse instance.
 * @see init
 */
prototype.fork = function(flags) {
  return new Pulse(this.dataflow).init(this, flags);
};

/**
 * Creates a copy of this pulse with new materialized array
 * instances for the ADD, REM, MOD, and SOURCE arrays.
 * The dataflow, time stamp and field modification values are copied over.
 * @return {Pulse} - The cloned pulse instance.
 * @see init
 */
prototype.clone = function() {
  var p = this.fork(ALL);
  p.add = p.add.slice();
  p.rem = p.rem.slice();
  p.mod = p.mod.slice();
  if (p.source) p.source = p.source.slice();
  return p.materialize(ALL | SOURCE);
};

/**
 * Returns a pulse that adds all tuples from a backing source. This is
 * useful for cases where operators are added to a dataflow after an
 * upstream data pipeline has already been processed, ensuring that
 * new operators can observe all tuples within a stream.
 * @return {Pulse} - A pulse instance with all source tuples included
 *   in the add array. If the current pulse already has all source
 *   tuples in its add array, it is returned directly. If the current
 *   pulse does not have a backing source, it is returned directly.
 */
prototype.addAll = function() {
  var p = this;
  if (!this.source || this.source.length === this.add.length) {
    return p;
  } else {
    p = new Pulse(this.dataflow).init(this);
    p.add = p.source;
    return p;
  }
};

/**
 * Initialize this pulse based on the values of another pulse. This method
 * is used internally by {@link fork} to initialize a new forked tuple.
 * The dataflow, time stamp and field modification values are copied over.
 * By default, new empty ADD, REM and MOD arrays are created.
 * @param {Pulse} src - The source pulse to copy from.
 * @param {number} flags - Integer of boolean flags indicating which (if any)
 *   tuple arrays should be copied to the new pulse. The supported flag values
 *   are ADD, REM and MOD. Array references are copied directly: new array
 *   instances are not created. By default, source data arrays are copied
 *   to the new pulse. Use the NO_SOURCE flag to enforce a null source.
 * @return {Pulse} - Returns this Pulse instance.
 */
prototype.init = function(src, flags) {
  var p = this;
  p.stamp = src.stamp;
  p.encode = src.encode;

  if (src.fields && !(flags & NO_FIELDS)) {
    p.fields = src.fields;
  }

  if (flags & ADD) {
    p.addF = src.addF;
    p.add = src.add;
  } else {
    p.addF = null;
    p.add = [];
  }

  if (flags & REM) {
    p.remF = src.remF;
    p.rem = src.rem;
  } else {
    p.remF = null;
    p.rem = [];
  }

  if (flags & MOD) {
    p.modF = src.modF;
    p.mod = src.mod;
  } else {
    p.modF = null;
    p.mod = [];
  }

  if (flags & NO_SOURCE) {
    p.srcF = null;
    p.source = null;
  } else {
    p.srcF = src.srcF;
    p.source = src.source;
  }

  return p;
};

/**
 * Schedules a function to run after pulse propagation completes.
 * @param {function} func - The function to run.
 */
prototype.runAfter = function(func) {
  this.dataflow.runAfter(func);
};

/**
 * Indicates if tuples have been added, removed or modified.
 * @param {number} [flags] - The tuple types (ADD, REM or MOD) to query.
 *   Defaults to ALL, returning true if any tuple type has changed.
 * @return {boolean} - Returns true if one or more queried tuple types have
 *   changed, false otherwise.
 */
prototype.changed = function(flags) {
  var f = flags || ALL;
  return ((f & ADD) && this.add.length)
      || ((f & REM) && this.rem.length)
      || ((f & MOD) && this.mod.length);
};

/**
 * Forces a "reflow" of tuple values, such that all tuples in the backing
 * source are added to the MOD set, unless already present in the ADD set.
 * @param {boolean} [fork=false] - If true, returns a forked copy of this
 *   pulse, and invokes reflow on that derived pulse.
 * @return {Pulse} - The reflowed pulse instance.
 */
prototype.reflow = function(fork) {
  if (fork) return this.fork(ALL).reflow();

  var len = this.add.length,
      src = this.source && this.source.length;
  if (src && src !== len) {
    this.mod = this.source;
    if (len) this.filter(MOD, filter(this, ADD));
  }
  return this;
};

/**
 * Marks one or more data field names as modified to assist dependency
 * tracking and incremental processing by transform operators.
 * @param {string|Array<string>} _ - The field(s) to mark as modified.
 * @return {Pulse} - This pulse instance.
 */
prototype.modifies = function(_) {
  var fields = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["array"])(_),
      hash = this.fields || (this.fields = {});
  fields.forEach(function(f) { hash[f] = true; });
  return this;
};

/**
 * Checks if one or more data fields have been modified during this pulse
 * propagation timestamp.
 * @param {string|Array<string>} _ - The field(s) to check for modified.
 * @return {boolean} - Returns true if any of the provided fields has been
 *   marked as modified, false otherwise.
 */
prototype.modified = function(_) {
  var fields = this.fields;
  return !(this.mod.length && fields) ? false
    : !arguments.length ? !!fields
    : Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(_) ? _.some(function(f) { return fields[f]; })
    : fields[_];
};

/**
 * Adds a filter function to one more tuple sets. Filters are applied to
 * backing tuple arrays, to determine the actual set of tuples considered
 * added, removed or modified. They can be used to delay materialization of
 * a tuple set in order to avoid expensive array copies. In addition, the
 * filter functions can serve as value transformers: unlike standard predicate
 * function (which return boolean values), Pulse filters should return the
 * actual tuple value to process. If a tuple set is already filtered, the
 * new filter function will be appended into a conjuntive ('and') query.
 * @param {number} flags - Flags indicating the tuple set(s) to filter.
 * @param {function(*):object} filter - Filter function that will be applied
 *   to the tuple set array, and should return a data tuple if the value
 *   should be included in the tuple set, and falsy (or null) otherwise.
 * @return {Pulse} - Returns this pulse instance.
 */
prototype.filter = function(flags, filter) {
  var p = this;
  if (flags & ADD) p.addF = addFilter(p.addF, filter);
  if (flags & REM) p.remF = addFilter(p.remF, filter);
  if (flags & MOD) p.modF = addFilter(p.modF, filter);
  if (flags & SOURCE) p.srcF = addFilter(p.srcF, filter);
  return p;
};

function addFilter(a, b) {
  return a ? function(t,i) { return a(t,i) && b(t,i); } : b;
}

/**
 * Materialize one or more tuple sets in this pulse. If the tuple set(s) have
 * a registered filter function, it will be applied and the tuple set(s) will
 * be replaced with materialized tuple arrays.
 * @param {number} flags - Flags indicating the tuple set(s) to materialize.
 * @return {Pulse} - Returns this pulse instance.
 */
prototype.materialize = function(flags) {
  flags = flags || ALL;
  var p = this;
  if ((flags & ADD) && p.addF) {
    p.add = materialize(p.add, p.addF);
    p.addF = null;
  }
  if ((flags & REM) && p.remF) {
    p.rem = materialize(p.rem, p.remF);
    p.remF = null;
  }
  if ((flags & MOD) && p.modF) {
    p.mod = materialize(p.mod, p.modF);
    p.modF = null;
  }
  if ((flags & SOURCE) && p.srcF) {
    p.source = p.source.filter(p.srcF);
    p.srcF = null;
  }
  return p;
};

function materialize(data, filter) {
  var out = [];
  Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["visitArray"])(data, filter, function(_) { out.push(_); });
  return out;
}

function filter(pulse, flags) {
  var map = {};
  pulse.visit(flags, function(t) { map[Object(_Tuple__WEBPACK_IMPORTED_MODULE_0__["tupleid"])(t)] = 1; });
  return function(t) { return map[Object(_Tuple__WEBPACK_IMPORTED_MODULE_0__["tupleid"])(t)] ? null : t; };
}

/**
 * Visit one or more tuple sets in this pulse.
 * @param {number} flags - Flags indicating the tuple set(s) to visit.
 *   Legal values are ADD, REM, MOD and SOURCE (if a backing data source
 *   has been set).
 * @param {function(object):*} - Visitor function invoked per-tuple.
 * @return {Pulse} - Returns this pulse instance.
 */
prototype.visit = function(flags, visitor) {
  var p = this, v = visitor, src, sum;

  if (flags & SOURCE) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["visitArray"])(p.source, p.srcF, v);
    return p;
  }

  if (flags & ADD) Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["visitArray"])(p.add, p.addF, v);
  if (flags & REM) Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["visitArray"])(p.rem, p.remF, v);
  if (flags & MOD) Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["visitArray"])(p.mod, p.modF, v);

  if ((flags & REFLOW) && (src = p.source)) {
    sum = p.add.length + p.mod.length;
    if (sum === src.length) {
      // do nothing
    } else if (sum) {
      Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["visitArray"])(src, filter(p, ADD_MOD), v);
    } else {
      // if no add/rem/mod tuples, visit source
      Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["visitArray"])(src, p.srcF, v);
    }
  }

  return p;
};


/***/ }),

/***/ "./node_modules/vega-dataflow/src/Transform.js":
/*!*****************************************************!*\
  !*** ./node_modules/vega-dataflow/src/Transform.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Transform; });
/* harmony import */ var _Operator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Operator */ "./node_modules/vega-dataflow/src/Operator.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");



/**
 * Abstract class for operators that process data tuples.
 * Subclasses must provide a {@link transform} method for operator processing.
 * @constructor
 * @param {*} [init] - The initial value for this operator.
 * @param {object} [params] - The parameters for this operator.
 * @param {Operator} [source] - The operator from which to receive pulses.
 */
function Transform(init, params) {
  _Operator__WEBPACK_IMPORTED_MODULE_0__["default"].call(this, init, null, params);
}

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(Transform, _Operator__WEBPACK_IMPORTED_MODULE_0__["default"]);

/**
 * Overrides {@link Operator.evaluate} for transform operators.
 * Internally, this method calls {@link evaluate} to perform processing.
 * If {@link evaluate} returns a falsy value, the input pulse is returned.
 * This method should NOT be overridden, instead overrride {@link evaluate}.
 * @param {Pulse} pulse - the current dataflow pulse.
 * @return the output pulse for this operator (or StopPropagation)
 */
prototype.run = function(pulse) {
  if (pulse.stamp <= this.stamp) return pulse.StopPropagation;

  var rv;
  if (this.skip()) {
    this.skip(false);
  } else {
    rv = this.evaluate(pulse);
  }
  rv = rv || pulse;

  this.stamp = pulse.stamp;

  if (rv.then) {
    rv = rv.then(_ => this.pulse =_);
  } else if (rv !== pulse.StopPropagation) {
    this.pulse = rv;
  }

  return rv;
};

/**
 * Overrides {@link Operator.evaluate} for transform operators.
 * Marshalls parameter values and then invokes {@link transform}.
 * @param {Pulse} pulse - the current dataflow pulse.
 * @return {Pulse} The output pulse (or StopPropagation). A falsy return
     value (including undefined) will let the input pulse pass through.
 */
prototype.evaluate = function(pulse) {
  var params = this.marshall(pulse.stamp),
      out = this.transform(params, pulse);
  params.clear();
  return out;
};

/**
 * Process incoming pulses.
 * Subclasses should override this method to implement transforms.
 * @param {Parameters} _ - The operator parameter values.
 * @param {Pulse} pulse - The current dataflow pulse.
 * @return {Pulse} The output pulse (or StopPropagation). A falsy return
 *   value (including undefined) will let the input pulse pass through.
 */
prototype.transform = function() {};


/***/ }),

/***/ "./node_modules/vega-dataflow/src/Tuple.js":
/*!*************************************************!*\
  !*** ./node_modules/vega-dataflow/src/Tuple.js ***!
  \*************************************************/
/*! exports provided: reset, isTuple, tupleid, ingest, derive, rederive, replace */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "reset", function() { return reset; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isTuple", function() { return isTuple; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tupleid", function() { return tupleid; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ingest", function() { return ingest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "derive", function() { return derive; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rederive", function() { return rederive; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "replace", function() { return replace; });
var TUPLE_ID_KEY = Symbol('vega_id'),
    TUPLE_ID = 1;

/**
 * Resets the internal tuple id counter to one.
 */
function reset() {
  TUPLE_ID = 1;
}

/**
 * Checks if an input value is a registered tuple.
 * @param {*} t - The value to check.
 * @return {boolean} True if the input is a tuple, false otherwise.
 */
function isTuple(t) {
  return !!(t && tupleid(t));
}

/**
 * Returns the id of a tuple.
 * @param {object} t - The input tuple.
 * @return {*} the tuple id.
 */
function tupleid(t) {
  return t[TUPLE_ID_KEY];
}

/**
 * Sets the id of a tuple.
 * @param {object} t - The input tuple.
 * @param {*} id - The id value to set.
 * @return {object} the input tuple.
 */
function setid(t, id) {
  t[TUPLE_ID_KEY] = id;
  return t;
}

/**
 * Ingest an object or value as a data tuple.
 * If the input value is an object, an id field will be added to it. For
 * efficiency, the input object is modified directly. A copy is not made.
 * If the input value is a literal, it will be wrapped in a new object
 * instance, with the value accessible as the 'data' property.
 * @param datum - The value to ingest.
 * @return {object} The ingested data tuple.
 */
function ingest(datum) {
  var t = (datum === Object(datum)) ? datum : {data: datum};
  return tupleid(t) ? t : setid(t, TUPLE_ID++);
}

/**
 * Given a source tuple, return a derived copy.
 * @param {object} t - The source tuple.
 * @return {object} The derived tuple.
 */
function derive(t) {
  return rederive(t, ingest({}));
}

/**
 * Rederive a derived tuple by copying values from the source tuple.
 * @param {object} t - The source tuple.
 * @param {object} d - The derived tuple.
 * @return {object} The derived tuple.
 */
function rederive(t, d) {
  for (var k in t) d[k] = t[k];
  return d;
}

/**
 * Replace an existing tuple with a new tuple.
 * @param {object} t - The existing data tuple.
 * @param {object} d - The new tuple that replaces the old.
 * @return {object} The new tuple.
 */
function replace(t, d) {
  return setid(d, tupleid(t));
}


/***/ }),

/***/ "./node_modules/vega-dataflow/src/dataflow/Dataflow.js":
/*!*************************************************************!*\
  !*** ./node_modules/vega-dataflow/src/dataflow/Dataflow.js ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Dataflow; });
/* harmony import */ var _add__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./add */ "./node_modules/vega-dataflow/src/dataflow/add.js");
/* harmony import */ var _connect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./connect */ "./node_modules/vega-dataflow/src/dataflow/connect.js");
/* harmony import */ var _events__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./events */ "./node_modules/vega-dataflow/src/dataflow/events.js");
/* harmony import */ var _load__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./load */ "./node_modules/vega-dataflow/src/dataflow/load.js");
/* harmony import */ var _on__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./on */ "./node_modules/vega-dataflow/src/dataflow/on.js");
/* harmony import */ var _rank__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./rank */ "./node_modules/vega-dataflow/src/dataflow/rank.js");
/* harmony import */ var _run__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./run */ "./node_modules/vega-dataflow/src/dataflow/run.js");
/* harmony import */ var _update__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./update */ "./node_modules/vega-dataflow/src/dataflow/update.js");
/* harmony import */ var _ChangeSet__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../ChangeSet */ "./node_modules/vega-dataflow/src/ChangeSet.js");
/* harmony import */ var _util_Heap__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../util/Heap */ "./node_modules/vega-dataflow/src/util/Heap.js");
/* harmony import */ var _util_UniqueList__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../util/UniqueList */ "./node_modules/vega-dataflow/src/util/UniqueList.js");
/* harmony import */ var vega_loader__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! vega-loader */ "./node_modules/vega-loader/index.browser.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");














/**
 * A dataflow graph for reactive processing of data streams.
 * @constructor
 */
function Dataflow() {
  this.logger(Object(vega_util__WEBPACK_IMPORTED_MODULE_12__["logger"])());
  this.logLevel(vega_util__WEBPACK_IMPORTED_MODULE_12__["Error"]);

  this._clock = 0;
  this._rank = 0;
  try {
    this._loader = Object(vega_loader__WEBPACK_IMPORTED_MODULE_11__["loader"])();
  } catch (e) {
    // do nothing if loader module is unavailable
  }

  this._touched = Object(_util_UniqueList__WEBPACK_IMPORTED_MODULE_10__["default"])(vega_util__WEBPACK_IMPORTED_MODULE_12__["id"]);
  this._pulses = {};
  this._pulse = null;

  this._heap = Object(_util_Heap__WEBPACK_IMPORTED_MODULE_9__["default"])((a, b) => a.qrank - b.qrank);
  this._postrun = [];
}

var prototype = Dataflow.prototype;

/**
 * The current timestamp of this dataflow. This value reflects the
 * timestamp of the previous dataflow run. The dataflow is initialized
 * with a stamp value of 0. The initial run of the dataflow will have
 * a timestap of 1, and so on. This value will match the
 * {@link Pulse.stamp} property.
 * @return {number} - The current timestamp value.
 */
prototype.stamp = function() {
  return this._clock;
};

/**
 * Gets or sets the loader instance to use for data file loading. A
 * loader object must provide a "load" method for loading files and a
 * "sanitize" method for checking URL/filename validity. Both methods
 * should accept a URI and options hash as arguments, and return a Promise
 * that resolves to the loaded file contents (load) or a hash containing
 * sanitized URI data with the sanitized url assigned to the "href" property
 * (sanitize).
 * @param {object} _ - The loader instance to use.
 * @return {object|Dataflow} - If no arguments are provided, returns
 *   the current loader instance. Otherwise returns this Dataflow instance.
 */
prototype.loader = function(_) {
  if (arguments.length) {
    this._loader = _;
    return this;
  } else {
    return this._loader;
  }
};

/**
 * Empty entry threshold for garbage cleaning. Map data structures will
 * perform cleaning once the number of empty entries exceeds this value.
 */
prototype.cleanThreshold = 1e4;

// OPERATOR REGISTRATION
prototype.add = _add__WEBPACK_IMPORTED_MODULE_0__["default"];
prototype.connect = _connect__WEBPACK_IMPORTED_MODULE_1__["default"];
prototype.rank = _rank__WEBPACK_IMPORTED_MODULE_5__["rank"];
prototype.rerank = _rank__WEBPACK_IMPORTED_MODULE_5__["rerank"];

// OPERATOR UPDATES
prototype.pulse = _update__WEBPACK_IMPORTED_MODULE_7__["pulse"];
prototype.touch = _update__WEBPACK_IMPORTED_MODULE_7__["touch"];
prototype.update = _update__WEBPACK_IMPORTED_MODULE_7__["update"];
prototype.changeset = _ChangeSet__WEBPACK_IMPORTED_MODULE_8__["default"];

// DATA LOADING
prototype.ingest = _load__WEBPACK_IMPORTED_MODULE_3__["ingest"];
prototype.parse  = _load__WEBPACK_IMPORTED_MODULE_3__["parse"];
prototype.preload = _load__WEBPACK_IMPORTED_MODULE_3__["preload"];
prototype.request = _load__WEBPACK_IMPORTED_MODULE_3__["request"];

// EVENT HANDLING
prototype.events = _events__WEBPACK_IMPORTED_MODULE_2__["default"];
prototype.on = _on__WEBPACK_IMPORTED_MODULE_4__["default"];

// PULSE PROPAGATION
prototype.evaluate = _run__WEBPACK_IMPORTED_MODULE_6__["evaluate"];
prototype.run = _run__WEBPACK_IMPORTED_MODULE_6__["run"];
prototype.runAsync = _run__WEBPACK_IMPORTED_MODULE_6__["runAsync"];
prototype.runAfter = _run__WEBPACK_IMPORTED_MODULE_6__["runAfter"];
prototype._enqueue = _run__WEBPACK_IMPORTED_MODULE_6__["enqueue"];
prototype._getPulse = _run__WEBPACK_IMPORTED_MODULE_6__["getPulse"];

// LOGGING AND ERROR HANDLING

function logMethod(method) {
  return function() {
    return this._log[method].apply(this, arguments);
  };
}

/**
 * Get or set the logger instance used to log messages. If no arguments are
 * provided, returns the current logger instance. Otherwise, sets the logger
 * and return this Dataflow instance. Provided loggers must support the full
 * API of logger objects generated by the vega-util logger method. Note that
 * by default the log level of the new logger will be used; use the logLevel
 * method to adjust the log level as needed.
 */
prototype.logger = function(logger) {
  if (arguments.length) {
    this._log = logger;
    return this;
  } else {
    return this._log;
  }
};

/**
 * Logs an error message. By default, logged messages are written to console
 * output. The message will only be logged if the current log level is high
 * enough to permit error messages.
 */
prototype.error = logMethod('error');

/**
 * Logs a warning message. By default, logged messages are written to console
 * output. The message will only be logged if the current log level is high
 * enough to permit warning messages.
 */
prototype.warn = logMethod('warn');

/**
 * Logs a information message. By default, logged messages are written to
 * console output. The message will only be logged if the current log level is
 * high enough to permit information messages.
 */
prototype.info = logMethod('info');

/**
 * Logs a debug message. By default, logged messages are written to console
 * output. The message will only be logged if the current log level is high
 * enough to permit debug messages.
 */
prototype.debug = logMethod('debug');

/**
 * Get or set the current log level. If an argument is provided, it
 * will be used as the new log level.
 * @param {number} [level] - Should be one of None, Warn, Info
 * @return {number} - The current log level.
 */
prototype.logLevel = logMethod('level');


/***/ }),

/***/ "./node_modules/vega-dataflow/src/dataflow/add.js":
/*!********************************************************!*\
  !*** ./node_modules/vega-dataflow/src/dataflow/add.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Operator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Operator */ "./node_modules/vega-dataflow/src/Operator.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");



/**
 * Add an operator to the dataflow graph. This function accepts a
 * variety of input argument types. The basic signature supports an
 * initial value, update function and parameters. If the first parameter
 * is an Operator instance, it will be added directly. If it is a
 * constructor for an Operator subclass, a new instance will be instantiated.
 * Otherwise, if the first parameter is a function instance, it will be used
 * as the update function and a null initial value is assumed.
 * @param {*} init - One of: the operator to add, the initial value of
 *   the operator, an operator class to instantiate, or an update function.
 * @param {function} [update] - The operator update function.
 * @param {object} [params] - The operator parameters.
 * @param {boolean} [react=true] - Flag indicating if this operator should
 *   listen for changes to upstream operators included as parameters.
 * @return {Operator} - The added operator.
 */
/* harmony default export */ __webpack_exports__["default"] = (function(init, update, params, react) {
  var shift = 1,
    op;

  if (init instanceof _Operator__WEBPACK_IMPORTED_MODULE_0__["default"]) {
    op = init;
  } else if (init && init.prototype instanceof _Operator__WEBPACK_IMPORTED_MODULE_0__["default"]) {
    op = new init();
  } else if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isFunction"])(init)) {
    op = new _Operator__WEBPACK_IMPORTED_MODULE_0__["default"](null, init);
  } else {
    shift = 0;
    op = new _Operator__WEBPACK_IMPORTED_MODULE_0__["default"](init, update);
  }

  this.rank(op);
  if (shift) {
    react = params;
    params = update;
  }
  if (params) this.connect(op, op.parameters(params, react));
  this.touch(op);

  return op;
});


/***/ }),

/***/ "./node_modules/vega-dataflow/src/dataflow/connect.js":
/*!************************************************************!*\
  !*** ./node_modules/vega-dataflow/src/dataflow/connect.js ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * Connect a target operator as a dependent of source operators.
 * If necessary, this method will rerank the target operator and its
 * dependents to ensure propagation proceeds in a topologically sorted order.
 * @param {Operator} target - The target operator.
 * @param {Array<Operator>} - The source operators that should propagate
 *   to the target operator.
 */
/* harmony default export */ __webpack_exports__["default"] = (function(target, sources) {
  var targetRank = target.rank, i, n;

  for (i=0, n=sources.length; i<n; ++i) {
    if (targetRank < sources[i].rank) {
      this.rerank(target);
      return;
    }
  }
});


/***/ }),

/***/ "./node_modules/vega-dataflow/src/dataflow/events.js":
/*!***********************************************************!*\
  !*** ./node_modules/vega-dataflow/src/dataflow/events.js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _EventStream__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../EventStream */ "./node_modules/vega-dataflow/src/EventStream.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");



/**
 * Create a new event stream from an event source.
 * @param {object} source - The event source to monitor. The input must
 *  support the addEventListener method.
 * @param {string} type - The event type.
 * @param {function(object): boolean} [filter] - Event filter function.
 * @param {function(object): *} [apply] - Event application function.
 *   If provided, this function will be invoked and the result will be
 *   used as the downstream event value.
 * @return {EventStream}
 */
/* harmony default export */ __webpack_exports__["default"] = (function(source, type, filter, apply) {
  var df = this,
      s = Object(_EventStream__WEBPACK_IMPORTED_MODULE_0__["stream"])(filter, apply),
      send = function(e) {
        e.dataflow = df;
        try {
          s.receive(e);
        } catch (error) {
          df.error(error);
        } finally {
          df.run();
        }
      },
      sources;

  if (typeof source === 'string' && typeof document !== 'undefined') {
    sources = document.querySelectorAll(source);
  } else {
    sources = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["array"])(source);
  }

  for (var i=0, n=sources.length; i<n; ++i) {
    sources[i].addEventListener(type, send);
  }

  return s;
});


/***/ }),

/***/ "./node_modules/vega-dataflow/src/dataflow/load.js":
/*!*********************************************************!*\
  !*** ./node_modules/vega-dataflow/src/dataflow/load.js ***!
  \*********************************************************/
/*! exports provided: parse, ingest, request, preload */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parse", function() { return parse; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ingest", function() { return ingest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "request", function() { return request; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "preload", function() { return preload; });
/* harmony import */ var vega_loader__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-loader */ "./node_modules/vega-loader/index.browser.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");



const parse = vega_loader__WEBPACK_IMPORTED_MODULE_0__["read"];

/**
 * Ingests new data into the dataflow. First parses the data using the
 * vega-loader read method, then pulses a changeset to the target operator.
 * @param {Operator} target - The Operator to target with ingested data,
 *   typically a Collect transform instance.
 * @param {*} data - The input data, prior to parsing. For JSON this may
 *   be a string or an object. For CSV, TSV, etc should be a string.
 * @param {object} format - The data format description for parsing
 *   loaded data. This object is passed to the vega-loader read method.
 * @returns {Dataflow}
 */
function ingest(target, data, format) {
  return this.pulse(target, this.changeset().insert(parse(data, format)));
}

/**
 * Request data from an external source, parse it, and return a Promise.
 * @param {string} url - The URL from which to load the data. This string
 *   is passed to the vega-loader load method.
 * @param {object} [format] - The data format description for parsing
 *   loaded data. This object is passed to the vega-loader read method.
 * @return {Promise} A Promise that resolves upon completion of the request.
 *   The resolved object contains the following properties:
 *   - data: an array of parsed data (or null upon error)
 *   - status: a code for success (0), load fail (-1), or parse fail (-2)
 */
async function request(url, format) {
  const df = this;
  let status = 0, data;

  try {
    data = await df.loader().load(url, {
      context: 'dataflow',
      response: Object(vega_loader__WEBPACK_IMPORTED_MODULE_0__["responseType"])(format && format.type)
    });
    try {
      data = parse(data, format);
    } catch (err) {
      status = -2;
      df.warn('Data ingestion failed', url, err);
    }
  } catch (err) {
    status = -1;
    df.warn('Loading failed', url, err);
  }

  return {data, status};
}

async function preload(target, url, format) {
  const df = this,
        pending = df._pending || loadPending(df);

  pending.requests += 1;

  const res = await df.request(url, format);
  df.pulse(target, df.changeset().remove(vega_util__WEBPACK_IMPORTED_MODULE_1__["truthy"]).insert(res.data || []));

  pending.done();
  return res;
}

function loadPending(df) {
  var pending = new Promise(function(a) { accept = a; }),
      accept;

  pending.requests = 0;

  pending.done = function() {
    if (--pending.requests === 0) {
      df._pending = null;
      accept(df);
    }
  };

  return (df._pending = pending);
}


/***/ }),

/***/ "./node_modules/vega-dataflow/src/dataflow/on.js":
/*!*******************************************************!*\
  !*** ./node_modules/vega-dataflow/src/dataflow/on.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Operator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Operator */ "./node_modules/vega-dataflow/src/Operator.js");
/* harmony import */ var _ChangeSet__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ChangeSet */ "./node_modules/vega-dataflow/src/ChangeSet.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");




var SKIP = {skip: true};

/**
 * Perform operator updates in response to events. Applies an
 * update function to compute a new operator value. If the update function
 * returns a {@link ChangeSet}, the operator will be pulsed with those tuple
 * changes. Otherwise, the operator value will be updated to the return value.
 * @param {EventStream|Operator} source - The event source to react to.
 *   This argument can be either an EventStream or an Operator.
 * @param {Operator|function(object):Operator} target - The operator to update.
 *   This argument can either be an Operator instance or (if the source
 *   argument is an EventStream), a function that accepts an event object as
 *   input and returns an Operator to target.
 * @param {function(Parameters,Event): *} [update] - Optional update function
 *   to compute the new operator value, or a literal value to set. Update
 *   functions expect to receive a parameter object and event as arguments.
 *   This function can either return a new operator value or (if the source
 *   argument is an EventStream) a {@link ChangeSet} instance to pulse
 *   the target operator with tuple changes.
 * @param {object} [params] - The update function parameters.
 * @param {object} [options] - Additional options hash. If not overridden,
 *   updated operators will be skipped by default.
 * @param {boolean} [options.skip] - If true, the operator will
 *  be skipped: it will not be evaluated, but its dependents will be.
 * @param {boolean} [options.force] - If true, the operator will
 *   be re-evaluated even if its value has not changed.
 * @return {Dataflow}
 */
/* harmony default export */ __webpack_exports__["default"] = (function(source, target, update, params, options) {
  var fn = source instanceof _Operator__WEBPACK_IMPORTED_MODULE_0__["default"] ? onOperator : onStream;
  fn(this, source, target, update, params, options);
  return this;
});

function onStream(df, stream, target, update, params, options) {
  var opt = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["extend"])({}, options, SKIP), func, op;

  if (!Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["isFunction"])(target)) target = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["constant"])(target);

  if (update === undefined) {
    func = e => df.touch(target(e));
  } else if (Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["isFunction"])(update)) {
    op = new _Operator__WEBPACK_IMPORTED_MODULE_0__["default"](null, update, params, false);
    func = e => {
      op.evaluate(e);
      const t = target(e), v = op.value;
      Object(_ChangeSet__WEBPACK_IMPORTED_MODULE_1__["isChangeSet"])(v) ? df.pulse(t, v, options) : df.update(t, v, opt);
    };
  } else {
    func = e => df.update(target(e), update, opt);
  }

  stream.apply(func);
}

function onOperator(df, source, target, update, params, options) {
  if (update === undefined) {
    source.targets().add(target);
  } else {
    const opt = options || {},
          op = new _Operator__WEBPACK_IMPORTED_MODULE_0__["default"](null, updater(target, update), params, false);
    op.modified(opt.force);
    op.rank = source.rank;       // immediately follow source
    source.targets().add(op);    // add dependency

    if (target) {
      op.skip(true);             // skip first invocation
      op.value = target.value;   // initialize value
      op.targets().add(target);  // chain dependencies
      df.connect(target, [op]);  // rerank as needed, #1672
    }
  }
}

function updater(target, update) {
  update = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["isFunction"])(update) ? update : Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["constant"])(update);
  return target
    ? function(_, pulse) {
        const value = update(_, pulse);
        if (!target.skip()) {
          target.skip(value !== this.value).value = value;
        }
        return value;
      }
    : update;
}


/***/ }),

/***/ "./node_modules/vega-dataflow/src/dataflow/rank.js":
/*!*********************************************************!*\
  !*** ./node_modules/vega-dataflow/src/dataflow/rank.js ***!
  \*********************************************************/
/*! exports provided: rank, rerank */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rank", function() { return rank; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rerank", function() { return rerank; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");


/**
 * Assigns a rank to an operator. Ranks are assigned in increasing order
 * by incrementing an internal rank counter.
 * @param {Operator} op - The operator to assign a rank.
 */
function rank(op) {
  op.rank = ++this._rank;
}

/**
 * Re-ranks an operator and all downstream target dependencies. This
 * is necessary when upstream dependencies of higher rank are added to
 * a target operator.
 * @param {Operator} op - The operator to re-rank.
 */
function rerank(op) {
  var queue = [op],
      cur, list, i;

  while (queue.length) {
    this.rank(cur = queue.pop());
    if (list = cur._targets) {
      for (i=list.length; --i >= 0;) {
        queue.push(cur = list[i]);
        if (cur === op) Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["error"])('Cycle detected in dataflow graph.');
      }
    }
  }
}


/***/ }),

/***/ "./node_modules/vega-dataflow/src/dataflow/run.js":
/*!********************************************************!*\
  !*** ./node_modules/vega-dataflow/src/dataflow/run.js ***!
  \********************************************************/
/*! exports provided: evaluate, runAsync, run, runAfter, enqueue, getPulse */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "evaluate", function() { return evaluate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "runAsync", function() { return runAsync; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "run", function() { return run; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "runAfter", function() { return runAfter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "enqueue", function() { return enqueue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getPulse", function() { return getPulse; });
/* harmony import */ var _Pulse__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Pulse */ "./node_modules/vega-dataflow/src/Pulse.js");
/* harmony import */ var _MultiPulse__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../MultiPulse */ "./node_modules/vega-dataflow/src/MultiPulse.js");
/* harmony import */ var _util_asyncCallback__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/asyncCallback */ "./node_modules/vega-dataflow/src/util/asyncCallback.js");
/* harmony import */ var _util_UniqueList__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/UniqueList */ "./node_modules/vega-dataflow/src/util/UniqueList.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");






/**
 * Evaluates the dataflow and returns a Promise that resolves when pulse
 * propagation completes. This method will increment the current timestamp
 * and process all updated, pulsed and touched operators. When invoked for
 * the first time, all registered operators will be processed. This method
 * should not be invoked by third-party clients, use {@link runAsync} or
 * {@link run} instead.
 * @param {string} [encode] - The name of an encoding set to invoke during
 *   propagation. This value is added to generated Pulse instances;
 *   operators can then respond to (or ignore) this setting as appropriate.
 *   This parameter can be used in conjunction with the Encode transform in
 *   the vega-encode package.
 * @param {function} [prerun] - An optional callback function to invoke
 *   immediately before dataflow evaluation commences.
 * @param {function} [postrun] - An optional callback function to invoke
 *   after dataflow evaluation completes. The callback will be invoked
 *   after those registered via {@link runAfter}.
 * @return {Promise} - A promise that resolves to this dataflow after
 *   evaluation completes.
 */
async function evaluate(encode, prerun, postrun) {
  const df = this,
        level = df.logLevel();

  // if the pulse value is set, this is a re-entrant call
  if (df._pulse) return reentrant(df);

  // wait for pending datasets to load
  if (df._pending) {
    await df._pending;
  }

  // invoke prerun function, if provided
  if (prerun) await Object(_util_asyncCallback__WEBPACK_IMPORTED_MODULE_2__["default"])(df, prerun);

  // exit early if there are no updates
  if (!df._touched.length) {
    df.info('Dataflow invoked, but nothing to do.');
    return df;
  }

  // increment timestamp clock
  let stamp = ++df._clock,
      count = 0, op, next, dt, error;

  // set the current pulse
  df._pulse = new _Pulse__WEBPACK_IMPORTED_MODULE_0__["default"](df, stamp, encode);

  if (level >= vega_util__WEBPACK_IMPORTED_MODULE_4__["Info"]) {
    dt = Date.now();
    df.debug('-- START PROPAGATION (' + stamp + ') -----');
  }

  // initialize priority queue, reset touched operators
  df._touched.forEach(function(op) { df._enqueue(op, true); });
  df._touched = Object(_util_UniqueList__WEBPACK_IMPORTED_MODULE_3__["default"])(vega_util__WEBPACK_IMPORTED_MODULE_4__["id"]);

  try {
    while (df._heap.size() > 0) {
      // dequeue operator with highest priority
      op = df._heap.pop();

      // re-queue if rank changed
      if (op.rank !== op.qrank) { df._enqueue(op, true); continue; }

      // otherwise, evaluate the operator
      next = op.run(df._getPulse(op, encode));

      // await if operator returned a promise
      if (next.then) {
        next = await next;
      }

      if (level >= vega_util__WEBPACK_IMPORTED_MODULE_4__["Debug"]) {
        df.debug(op.id, next === _Pulse__WEBPACK_IMPORTED_MODULE_0__["StopPropagation"] ? 'STOP' : next, op);
      }

      // propagate evaluation, enqueue dependent operators
      if (next !== _Pulse__WEBPACK_IMPORTED_MODULE_0__["StopPropagation"]) {
        df._pulse = next;
        if (op._targets) op._targets.forEach(op => df._enqueue(op));
      }

      // increment visit counter
      ++count;
    }
  } catch (err) {
    error = err;
  }

  // reset pulse map
  df._pulses = {};
  df._pulse = null;

  if (level >= vega_util__WEBPACK_IMPORTED_MODULE_4__["Info"]) {
    dt = Date.now() - dt;
    df.info('> Pulse ' + stamp + ': ' + count + ' operators; ' + dt + 'ms');
  }

  if (error) {
    df._postrun = [];
    df.error(error);
  }

  // invoke callbacks queued via runAfter
  if (df._postrun.length) {
    const pr = df._postrun.sort((a, b) => b.priority - a.priority);
    df._postrun = [];
    for (let i=0; i<pr.length; ++i) {
      await Object(_util_asyncCallback__WEBPACK_IMPORTED_MODULE_2__["default"])(df, pr[i].callback);
    }
  }

  // invoke postrun function, if provided
  if (postrun) await Object(_util_asyncCallback__WEBPACK_IMPORTED_MODULE_2__["default"])(df, postrun);

  return df;
}

/**
 * Queues dataflow evaluation to run once any other queued evaluations have
 * completed and returns a Promise that resolves when the queued pulse
 * propagation completes. If provided, a callback function will be invoked
 * immediately before evaluation commences. This method will ensure a
 * separate evaluation is invoked for each time it is called.
 * @param {string} [encode] - The name of an encoding set to invoke during
 *   propagation. This value is added to generated Pulse instances;
 *   operators can then respond to (or ignore) this setting as appropriate.
 *   This parameter can be used in conjunction with the Encode transform in
 *   the vega-encode package.
 * @param {function} [prerun] - An optional callback function to invoke
 *   immediately before dataflow evaluation commences.
 * @param {function} [postrun] - An optional callback function to invoke
 *   after dataflow evaluation completes. The callback will be invoked
 *   after those registered via {@link runAfter}.
 * @return {Promise} - A promise that resolves to this dataflow after
 *   evaluation completes.
 */
async function runAsync(encode, prerun, postrun) {
  // await previously queued functions
  while (this._running) await this._running;

  // run dataflow, manage running promise
  const clear = () => this._running = null;
  (this._running = this.evaluate(encode, prerun, postrun))
    .then(clear, clear);

  return this._running;
}

/**
 * Requests dataflow evaluation and the immediately returns this dataflow
 * instance. If there are pending data loading or other asynchronous
 * operations, the dataflow will evaluate asynchronously after this method
 * has been invoked. To track when dataflow evaluation completes, use the
 * {@link runAsync} method instead. This method will raise an error if
 * invoked while the dataflow is already in the midst of evaluation.
 * @param {string} [encode] - The name of an encoding set to invoke during
 *   propagation. This value is added to generated Pulse instances;
 *   operators can then respond to (or ignore) this setting as appropriate.
 *   This parameter can be used in conjunction with the Encode transform in
 *   the vega-encode module.
 * @param {function} [prerun] - An optional callback function to invoke
 *   immediately before dataflow evaluation commences.
 * @param {function} [postrun] - An optional callback function to invoke
 *   after dataflow evaluation completes. The callback will be invoked
 *   after those registered via {@link runAfter}.
 * @return {Dataflow} - This dataflow instance.
 */
function run(encode, prerun, postrun) {
  return this._pulse ? reentrant(this)
    : (this.evaluate(encode, prerun, postrun), this);
}

/**
 * Schedules a callback function to be invoked after the current pulse
 * propagation completes. If no propagation is currently occurring,
 * the function is invoked immediately. Callbacks scheduled via runAfter
 * are invoked immediately upon completion of the current cycle, before
 * any request queued via runAsync. This method is primarily intended for
 * internal use. Third-party callers using runAfter to schedule a callback
 * that invokes {@link run} or {@link runAsync} should not use this method,
 * but instead use {@link runAsync} with prerun or postrun arguments.
 * @param {function(Dataflow)} callback - The callback function to run.
 *   The callback will be invoked with this Dataflow instance as its
 *   sole argument.
 * @param {boolean} enqueue - A boolean flag indicating that the
 *   callback should be queued up to run after the next propagation
 *   cycle, suppressing immediate invocation when propagation is not
 *   currently occurring.
 * @param {number} [priority] - A priority value used to sort registered
 *   callbacks to determine execution order. This argument is intended
 *   for internal Vega use only.
 */
function runAfter(callback, enqueue, priority) {
  if (this._pulse || enqueue) {
    // pulse propagation is currently running, queue to run after
    this._postrun.push({
      priority: priority || 0,
      callback: callback
    });
  } else {
    // pulse propagation already complete, invoke immediately
    try { callback(this); } catch (err) { this.error(err); }
  }
}

/**
 * Raise an error for re-entrant dataflow evaluation.
 */
function reentrant(df) {
  df.error('Dataflow already running. Use runAsync() to chain invocations.');
  return df;
}

/**
 * Enqueue an operator into the priority queue for evaluation. The operator
 * will be enqueued if it has no registered pulse for the current cycle, or if
 * the force argument is true. Upon enqueue, this method also sets the
 * operator's qrank to the current rank value.
 * @param {Operator} op - The operator to enqueue.
 * @param {boolean} [force] - A flag indicating if the operator should be
 *   forceably added to the queue, even if it has already been previously
 *   enqueued during the current pulse propagation. This is useful when the
 *   dataflow graph is dynamically modified and the operator rank changes.
 */
function enqueue(op, force) {
  var p = !this._pulses[op.id];
  if (p) this._pulses[op.id] = this._pulse;
  if (p || force) {
    op.qrank = op.rank;
    this._heap.push(op);
  }
}

/**
 * Provide a correct pulse for evaluating an operator. If the operator has an
 * explicit source operator, we will try to pull the pulse(s) from it.
 * If there is an array of source operators, we build a multi-pulse.
 * Otherwise, we return a current pulse with correct source data.
 * If the pulse is the pulse map has an explicit target set, we use that.
 * Else if the pulse on the upstream source operator is current, we use that.
 * Else we use the pulse from the pulse map, but copy the source tuple array.
 * @param {Operator} op - The operator for which to get an input pulse.
 * @param {string} [encode] - An (optional) encoding set name with which to
 *   annotate the returned pulse. See {@link run} for more information.
 */
function getPulse(op, encode) {
  var s = op.source,
      stamp = this._clock,
      p;

  if (s && Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["isArray"])(s)) {
    p = s.map(function(_) { return _.pulse; });
    return new _MultiPulse__WEBPACK_IMPORTED_MODULE_1__["default"](this, stamp, p, encode);
  }

  p = this._pulses[op.id];
  if (s) {
    s = s.pulse;
    if (!s || s === _Pulse__WEBPACK_IMPORTED_MODULE_0__["StopPropagation"]) {
      p.source = [];
    } else if (s.stamp === stamp && p.target !== op) {
      p = s;
    } else {
      p.source = s.source;
    }
  }

  return p;
}


/***/ }),

/***/ "./node_modules/vega-dataflow/src/dataflow/update.js":
/*!***********************************************************!*\
  !*** ./node_modules/vega-dataflow/src/dataflow/update.js ***!
  \***********************************************************/
/*! exports provided: touch, update, pulse */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "touch", function() { return touch; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "update", function() { return update; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pulse", function() { return pulse; });
/* harmony import */ var _Pulse__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Pulse */ "./node_modules/vega-dataflow/src/Pulse.js");


var NO_OPT = {skip: false, force: false};

/**
 * Touches an operator, scheduling it to be evaluated. If invoked outside of
 * a pulse propagation, the operator will be evaluated the next time this
 * dataflow is run. If invoked in the midst of pulse propagation, the operator
 * will be queued for evaluation if and only if the operator has not yet been
 * evaluated on the current propagation timestamp.
 * @param {Operator} op - The operator to touch.
 * @param {object} [options] - Additional options hash.
 * @param {boolean} [options.skip] - If true, the operator will
 *   be skipped: it will not be evaluated, but its dependents will be.
 * @return {Dataflow}
 */
function touch(op, options) {
  var opt = options || NO_OPT;
  if (this._pulse) {
    // if in midst of propagation, add to priority queue
    this._enqueue(op);
  } else {
    // otherwise, queue for next propagation
    this._touched.add(op);
  }
  if (opt.skip) op.skip(true);
  return this;
}

/**
 * Updates the value of the given operator.
 * @param {Operator} op - The operator to update.
 * @param {*} value - The value to set.
 * @param {object} [options] - Additional options hash.
 * @param {boolean} [options.force] - If true, the operator will
 *   be re-evaluated even if its value has not changed.
 * @param {boolean} [options.skip] - If true, the operator will
 *   be skipped: it will not be evaluated, but its dependents will be.
 * @return {Dataflow}
 */
function update(op, value, options) {
  var opt = options || NO_OPT;
  if (op.set(value) || opt.force) {
    this.touch(op, opt);
  }
  return this;
}

/**
 * Pulses an operator with a changeset of tuples. If invoked outside of
 * a pulse propagation, the pulse will be applied the next time this
 * dataflow is run. If invoked in the midst of pulse propagation, the pulse
 * will be added to the set of active pulses and will be applied if and
 * only if the target operator has not yet been evaluated on the current
 * propagation timestamp.
 * @param {Operator} op - The operator to pulse.
 * @param {ChangeSet} value - The tuple changeset to apply.
 * @param {object} [options] - Additional options hash.
 * @param {boolean} [options.skip] - If true, the operator will
 *   be skipped: it will not be evaluated, but its dependents will be.
 * @return {Dataflow}
 */
function pulse(op, changeset, options) {
  this.touch(op, options || NO_OPT);

  var p = new _Pulse__WEBPACK_IMPORTED_MODULE_0__["default"](this, this._clock + (this._pulse ? 0 : 1)),
      t = op.pulse && op.pulse.source || [];
  p.target = op;
  this._pulses[op.id] = changeset.pulse(p, t);

  return this;
}


/***/ }),

/***/ "./node_modules/vega-dataflow/src/register.js":
/*!****************************************************!*\
  !*** ./node_modules/vega-dataflow/src/register.js ***!
  \****************************************************/
/*! exports provided: transforms, definition, transform */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transforms", function() { return transforms; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "definition", function() { return definition; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transform", function() { return transform; });
var transforms = {};

function definition(type) {
  var t = transform(type);
  return t && t.Definition || null;
}

function transform(type) {
  type = type && type.toLowerCase();
  return transforms.hasOwnProperty(type) ? transforms[type] : null;
}


/***/ }),

/***/ "./node_modules/vega-dataflow/src/util/Heap.js":
/*!*****************************************************!*\
  !*** ./node_modules/vega-dataflow/src/util/Heap.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Heap; });
function Heap(cmp) {
  var nodes = [];
  return {
    size: () => nodes.length,
    peek: () => nodes[0],
    push: x => {
      nodes.push(x);
      return siftdown(nodes, 0, nodes.length - 1, cmp);
    },
    pop: () => {
      var last = nodes.pop(), item;
      if (nodes.length) {
        item = nodes[0];
        nodes[0] = last;
        siftup(nodes, 0, cmp);
      } else {
        item = last;
      }
      return item;
    }
  };
}

function siftdown(array, start, idx, cmp) {
  var item, parent, pidx;

  item = array[idx];
  while (idx > start) {
    pidx = (idx - 1) >> 1;
    parent = array[pidx];
    if (cmp(item, parent) < 0) {
      array[idx] = parent;
      idx = pidx;
      continue;
    }
    break;
  }
  return (array[idx] = item);
}

function siftup(array, idx, cmp) {
  var start = idx,
      end = array.length,
      item = array[idx],
      cidx = (idx << 1) + 1, ridx;

  while (cidx < end) {
    ridx = cidx + 1;
    if (ridx < end && cmp(array[cidx], array[ridx]) >= 0) {
      cidx = ridx;
    }
    array[idx] = array[cidx];
    idx = cidx;
    cidx = (idx << 1) + 1;
  }
  array[idx] = item;
  return siftdown(array, start, idx, cmp);
}


/***/ }),

/***/ "./node_modules/vega-dataflow/src/util/UniqueList.js":
/*!***********************************************************!*\
  !*** ./node_modules/vega-dataflow/src/util/UniqueList.js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return UniqueList; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");


function UniqueList(idFunc) {
  var $ = idFunc || vega_util__WEBPACK_IMPORTED_MODULE_0__["identity"],
      list = [],
      ids = {};

  list.add = function(_) {
    var id = $(_);
    if (!ids[id]) {
      ids[id] = 1;
      list.push(_);
    }
    return list;
  };

  list.remove = function(_) {
    var id = $(_), idx;
    if (ids[id]) {
      ids[id] = 0;
      if ((idx = list.indexOf(_)) >= 0) {
        list.splice(idx, 1);
      }
    }
    return list;
  };

  return list;
}


/***/ }),

/***/ "./node_modules/vega-dataflow/src/util/asyncCallback.js":
/*!**************************************************************!*\
  !*** ./node_modules/vega-dataflow/src/util/asyncCallback.js ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * Invoke and await a potentially async callback function. If
 * an error occurs, trap it and route to Dataflow.error.
 * @param {Dataflow} df - The dataflow instance
 * @param {function} callback - A callback function to invoke
 *   and then await. The dataflow will be passed as the single
 *   argument to the function.
 */
/* harmony default export */ __webpack_exports__["default"] = (async function(df, callback) {
  try { await callback(df); } catch (err) { df.error(err); }
});


/***/ }),

/***/ "./node_modules/vega-embed/build/src/embed.js":
/*!****************************************************!*\
  !*** ./node_modules/vega-embed/build/src/embed.js ***!
  \****************************************************/
/*! exports provided: vega, vl, guessMode, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vega", function() { return vega; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vl", function() { return vl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "guessMode", function() { return guessMode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return embed; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-selection */ "./node_modules/d3-selection/src/index.js");
/* harmony import */ var json_stringify_pretty_compact__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! json-stringify-pretty-compact */ "./node_modules/json-stringify-pretty-compact/index.js");
/* harmony import */ var json_stringify_pretty_compact__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(json_stringify_pretty_compact__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var semver__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! semver */ "./node_modules/vega-embed/node_modules/semver/semver.js");
/* harmony import */ var semver__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(semver__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var vega__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! vega */ "./node_modules/vega/index.js");
/* harmony import */ var vega_lite__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! vega-lite */ "./node_modules/vega-lite/build/src/index.js");
/* harmony import */ var vega_schema_url_parser__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! vega-schema-url-parser */ "./node_modules/vega-schema-url-parser/index.js");
/* harmony import */ var vega_schema_url_parser__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(vega_schema_url_parser__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var vega_themes__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! vega-themes */ "./node_modules/vega-themes/build/index.js");
/* harmony import */ var vega_tooltip__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! vega-tooltip */ "./node_modules/vega-tooltip/build/index.js");
/* harmony import */ var _post__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./post */ "./node_modules/vega-embed/build/src/post.js");
/* harmony import */ var _style__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./style */ "./node_modules/vega-embed/build/src/style.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./util */ "./node_modules/vega-embed/build/src/util.js");












const vega = vega__WEBPACK_IMPORTED_MODULE_4__;
const vl = vega_lite__WEBPACK_IMPORTED_MODULE_5__;
const I18N = {
    CLICK_TO_VIEW_ACTIONS: 'Click to view actions',
    COMPILED_ACTION: 'View Compiled Vega',
    EDITOR_ACTION: 'Open in Vega Editor',
    PNG_ACTION: 'Save as PNG',
    SOURCE_ACTION: 'View Source',
    SVG_ACTION: 'Save as SVG'
};
const NAMES = {
    vega: 'Vega',
    'vega-lite': 'Vega-Lite'
};
const VERSION = {
    vega: vega.version,
    'vega-lite': vl ? vl.version : 'not available'
};
const PREPROCESSOR = {
    vega: vgjson => vgjson,
    'vega-lite': (vljson, config) => vl.compile(vljson, { config: config }).spec
};
const SVG_CIRCLES = `
<svg viewBox="0 0 16 16" fill="currentColor" stroke="none" stroke-width="1" stroke-linecap="round" stroke-linejoin="round" width="14" height="14">
  <circle r="2" cy="8" cx="2"></circle>
  <circle r="2" cy="8" cx="8"></circle>
  <circle r="2" cy="8" cx="14"></circle>
</svg>`;
function isTooltipHandler(h) {
    return typeof h === 'function';
}
function viewSource(source, sourceHeader, sourceFooter, mode) {
    const header = `<html><head>${sourceHeader}</head><body><pre><code class="json">`;
    const footer = `</code></pre>${sourceFooter}</body></html>`;
    const win = window.open('');
    win.document.write(header + source + footer);
    win.document.title = `${NAMES[mode]} JSON Source`;
}
/**
 * Try to guess the type of spec.
 *
 * @param spec Vega or Vega-Lite spec.
 */
function guessMode(spec, providedMode) {
    // Decide mode
    if (spec.$schema) {
        const parsed = vega_schema_url_parser__WEBPACK_IMPORTED_MODULE_6___default()(spec.$schema);
        if (providedMode && providedMode !== parsed.library) {
            console.warn(`The given visualization spec is written in ${NAMES[parsed.library]}, but mode argument sets ${NAMES[providedMode] || providedMode}.`);
        }
        const mode = parsed.library;
        if (!Object(semver__WEBPACK_IMPORTED_MODULE_3__["satisfies"])(VERSION[mode], `^${parsed.version.slice(1)}`)) {
            console.warn(`The input spec uses ${NAMES[mode]} ${parsed.version}, but the current version of ${NAMES[mode]} is v${VERSION[mode]}.`);
        }
        return mode;
    }
    // try to guess from the provided spec
    if ('mark' in spec ||
        'encoding' in spec ||
        'layer' in spec ||
        'hconcat' in spec ||
        'vconcat' in spec ||
        'facet' in spec ||
        'repeat' in spec) {
        return 'vega-lite';
    }
    if ('marks' in spec || 'signals' in spec || 'scales' in spec || 'axes' in spec) {
        return 'vega';
    }
    return providedMode || 'vega';
}
function isLoader(o) {
    return !!(o && 'load' in o);
}
/**
 * Embed a Vega visualization component in a web page. This function returns a promise.
 *
 * @param el        DOM element in which to place component (DOM node or CSS selector).
 * @param spec      String : A URL string from which to load the Vega specification.
 *                  Object : The Vega/Vega-Lite specification as a parsed JSON object.
 * @param opt       A JavaScript object containing options for embedding.
 */
function embed(el, spec, opt = {}) {
    return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
        const loader = isLoader(opt.loader) ? opt.loader : vega.loader(opt.loader);
        // Load the visualization specification.
        if (vega.isString(spec)) {
            const data = yield loader.load(spec);
            return embed(el, JSON.parse(data), opt);
        }
        // eslint-disable-next-line no-param-reassign, dot-notation
        opt = Object(_util__WEBPACK_IMPORTED_MODULE_11__["mergeDeep"])(opt, spec.usermeta && spec.usermeta['embedOptions']);
        const patch = opt.patch || opt.onBeforeParse;
        const actions = opt.actions === true || opt.actions === false
            ? opt.actions
            : Object(_util__WEBPACK_IMPORTED_MODULE_11__["mergeDeep"])({}, { export: { svg: true, png: true }, source: true, compiled: true, editor: true }, opt.actions || {});
        const i18n = Object.assign({}, I18N, opt.i18n);
        const renderer = opt.renderer || 'canvas';
        const logLevel = opt.logLevel || vega.Warn;
        const downloadFileName = opt.downloadFileName || 'visualization';
        // Load Vega theme/configuration.
        let config = opt.config || {};
        if (vega.isString(config)) {
            const data = yield loader.load(config);
            return embed(el, spec, Object.assign({}, opt, { config: JSON.parse(data) }));
        }
        if (opt.defaultStyle !== false) {
            // Add a default stylesheet to the head of the document.
            const ID = 'vega-embed-style';
            if (!document.getElementById(ID)) {
                const style = document.createElement('style');
                style.id = ID;
                style.innerText =
                    opt.defaultStyle === undefined || opt.defaultStyle === true ? (_style__WEBPACK_IMPORTED_MODULE_10__["default"] || '').toString() : opt.defaultStyle;
                document.head.appendChild(style);
            }
        }
        if (opt.theme) {
            config = Object(_util__WEBPACK_IMPORTED_MODULE_11__["mergeDeep"])({}, vega_themes__WEBPACK_IMPORTED_MODULE_7__[opt.theme], config);
        }
        const mode = guessMode(spec, opt.mode);
        let vgSpec = PREPROCESSOR[mode](spec, config);
        if (mode === 'vega-lite') {
            if (vgSpec.$schema) {
                const parsed = vega_schema_url_parser__WEBPACK_IMPORTED_MODULE_6___default()(vgSpec.$schema);
                if (!Object(semver__WEBPACK_IMPORTED_MODULE_3__["satisfies"])(VERSION.vega, `^${parsed.version.slice(1)}`)) {
                    console.warn(`The compiled spec uses Vega ${parsed.version}, but current version is v${VERSION.vega}.`);
                }
            }
        }
        // ensure container div has class 'vega-embed'
        const div = d3_selection__WEBPACK_IMPORTED_MODULE_1__["select"](el) // d3.select supports elements and strings
            .classed('vega-embed', true)
            .html(''); // clear container
        if (patch) {
            if (patch instanceof Function) {
                vgSpec = patch(vgSpec);
            }
            else if (vega.isString(patch)) {
                const patchString = yield loader.load(patch);
                vgSpec = Object(_util__WEBPACK_IMPORTED_MODULE_11__["mergeDeep"])(vgSpec, JSON.parse(patchString));
            }
            else {
                vgSpec = Object(_util__WEBPACK_IMPORTED_MODULE_11__["mergeDeep"])(vgSpec, patch);
            }
        }
        // Do not apply the config to Vega when we have already applied it to Vega-Lite.
        // This call may throw an Error if parsing fails.
        const runtime = vega.parse(vgSpec, mode === 'vega-lite' ? {} : config);
        const view = new vega.View(runtime, {
            loader,
            logLevel,
            renderer
        });
        if (opt.tooltip !== false) {
            let handler;
            if (isTooltipHandler(opt.tooltip)) {
                handler = opt.tooltip;
            }
            else {
                // user provided boolean true or tooltip options
                handler = new vega_tooltip__WEBPACK_IMPORTED_MODULE_8__["Handler"](opt.tooltip === true ? {} : opt.tooltip).call;
            }
            view.tooltip(handler);
        }
        let { hover } = opt;
        // Enable hover for Vega by default.
        if (hover === undefined) {
            hover = mode !== 'vega-lite';
        }
        if (hover) {
            const { hoverSet, updateSet } = (typeof hover === 'boolean' ? {} : hover);
            view.hover(hoverSet, updateSet);
        }
        if (opt) {
            if (opt.width) {
                view.width(opt.width);
            }
            if (opt.height) {
                view.height(opt.height);
            }
            if (opt.padding) {
                view.padding(opt.padding);
            }
        }
        yield view.initialize(el).runAsync();
        if (actions !== false) {
            let wrapper = div;
            if (opt.defaultStyle !== false) {
                const details = div.append('details').attr('title', i18n.CLICK_TO_VIEW_ACTIONS);
                wrapper = details;
                const summary = details.insert('summary');
                summary.html(SVG_CIRCLES);
                const dn = details.node();
                document.addEventListener('click', evt => {
                    if (!dn.contains(evt.target)) {
                        dn.removeAttribute('open');
                    }
                });
            }
            const ctrl = wrapper.insert('div').attr('class', 'vega-actions');
            // add 'Export' action
            if (actions === true || actions.export !== false) {
                for (const ext of ['svg', 'png']) {
                    if (actions === true || actions.export === true || actions.export[ext]) {
                        const i18nExportAction = i18n[`${ext.toUpperCase()}_ACTION`];
                        ctrl
                            .append('a')
                            .text(i18nExportAction)
                            .attr('href', '#')
                            .attr('target', '_blank')
                            .attr('download', `${downloadFileName}.${ext}`)
                            // eslint-disable-next-line func-names
                            .on('mousedown', function () {
                            view
                                .toImageURL(ext, opt.scaleFactor)
                                .then(url => {
                                this.href = url;
                            })
                                .catch(error => {
                                throw error;
                            });
                            d3_selection__WEBPACK_IMPORTED_MODULE_1__["event"].preventDefault();
                        });
                    }
                }
            }
            // add 'View Source' action
            if (actions === true || actions.source !== false) {
                ctrl
                    .append('a')
                    .text(i18n.SOURCE_ACTION)
                    .attr('href', '#')
                    .on('mousedown', () => {
                    viewSource(json_stringify_pretty_compact__WEBPACK_IMPORTED_MODULE_2___default()(spec), opt.sourceHeader || '', opt.sourceFooter || '', mode);
                    d3_selection__WEBPACK_IMPORTED_MODULE_1__["event"].preventDefault();
                });
            }
            // add 'View Compiled' action
            if (mode === 'vega-lite' && (actions === true || actions.compiled !== false)) {
                ctrl
                    .append('a')
                    .text(i18n.COMPILED_ACTION)
                    .attr('href', '#')
                    .on('mousedown', () => {
                    viewSource(json_stringify_pretty_compact__WEBPACK_IMPORTED_MODULE_2___default()(vgSpec), opt.sourceHeader || '', opt.sourceFooter || '', 'vega');
                    d3_selection__WEBPACK_IMPORTED_MODULE_1__["event"].preventDefault();
                });
            }
            // add 'Open in Vega Editor' action
            if (actions === true || actions.editor !== false) {
                const editorUrl = opt.editorUrl || 'https://vega.github.io/editor/';
                ctrl
                    .append('a')
                    .text(i18n.EDITOR_ACTION)
                    .attr('href', '#')
                    .on('mousedown', () => {
                    Object(_post__WEBPACK_IMPORTED_MODULE_9__["default"])(window, editorUrl, {
                        config: config,
                        mode,
                        renderer,
                        spec: json_stringify_pretty_compact__WEBPACK_IMPORTED_MODULE_2___default()(spec)
                    });
                    d3_selection__WEBPACK_IMPORTED_MODULE_1__["event"].preventDefault();
                });
            }
        }
        return { view, spec, vgSpec };
    });
}
//# sourceMappingURL=embed.js.map

/***/ }),

/***/ "./node_modules/vega-embed/build/src/post.js":
/*!***************************************************!*\
  !*** ./node_modules/vega-embed/build/src/post.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * Open editor url in a new window, and pass a message.
 */
/* harmony default export */ __webpack_exports__["default"] = (function (window, url, data) {
    const editor = window.open(url);
    const wait = 10000;
    const step = 250;
    // eslint-disable-next-line no-bitwise
    let count = ~~(wait / step);
    function listen(evt) {
        if (evt.source === editor) {
            count = 0;
            window.removeEventListener('message', listen, false);
        }
    }
    window.addEventListener('message', listen, false);
    // send message
    // periodically resend until ack received or timeout
    function send() {
        if (count <= 0) {
            return;
        }
        editor.postMessage(data, '*');
        setTimeout(send, step);
        count -= 1;
    }
    setTimeout(send, step);
});
//# sourceMappingURL=post.js.map

/***/ }),

/***/ "./node_modules/vega-embed/build/src/style.js":
/*!****************************************************!*\
  !*** ./node_modules/vega-embed/build/src/style.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// generated with build-style.sh
/* harmony default export */ __webpack_exports__["default"] = (`.vega-embed {
  position: relative;
  display: inline-block;
  padding-right: 38px; }
  .vega-embed details:not([open]) > :not(summary) {
    display: none !important; }
  .vega-embed summary {
    list-style: none;
    display: flex;
    position: absolute;
    top: 0;
    right: 0;
    padding: 6px;
    z-index: 1000;
    background: white;
    box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.1);
    color: #1b1e23;
    border: 1px solid #aaa;
    border-radius: 999px;
    opacity: 0.2;
    transition: opacity 0.4s ease-in;
    outline: none;
    cursor: pointer; }
    .vega-embed summary::-webkit-details-marker {
      display: none; }
  .vega-embed details[open] summary {
    opacity: 0.7; }
  .vega-embed:hover summary,
  .vega-embed:focus summary {
    opacity: 1 !important;
    transition: opacity 0.2s ease; }
  .vega-embed .vega-actions {
    position: absolute;
    top: 35px;
    right: -9px;
    display: flex;
    flex-direction: column;
    padding-bottom: 8px;
    padding-top: 8px;
    border-radius: 4px;
    box-shadow: 0 2px 8px 0 rgba(0, 0, 0, 0.2);
    border: 1px solid #d9d9d9;
    background: white;
    animation-duration: 0.15s;
    animation-name: scale-in;
    animation-timing-function: cubic-bezier(0.2, 0, 0.13, 1.5); }
    .vega-embed .vega-actions a {
      padding: 8px 16px;
      font-family: sans-serif;
      font-size: 14px;
      font-weight: 600;
      white-space: nowrap;
      color: #434a56;
      text-decoration: none; }
      .vega-embed .vega-actions a:hover {
        background-color: #f7f7f9;
        color: black; }
    .vega-embed .vega-actions::before, .vega-embed .vega-actions::after {
      content: "";
      display: inline-block;
      position: absolute; }
    .vega-embed .vega-actions::before {
      left: auto;
      right: 14px;
      top: -16px;
      border: 8px solid #0000;
      border-bottom-color: #d9d9d9; }
    .vega-embed .vega-actions::after {
      left: auto;
      right: 15px;
      top: -14px;
      border: 7px solid #0000;
      border-bottom-color: #fff; }

.vega-embed-wrapper {
  max-width: 100%;
  overflow: scroll;
  padding-right: 14px; }

@keyframes scale-in {
  from {
    opacity: 0;
    transform: scale(0.6); }
  to {
    opacity: 1;
    transform: scale(1); } }
`);
//# sourceMappingURL=style.js.map

/***/ }),

/***/ "./node_modules/vega-embed/build/src/util.js":
/*!***************************************************!*\
  !*** ./node_modules/vega-embed/build/src/util.js ***!
  \***************************************************/
/*! exports provided: mergeDeep, isURL */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mergeDeep", function() { return mergeDeep; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isURL", function() { return isURL; });
/* harmony import */ var vega__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega */ "./node_modules/vega/index.js");

/* eslint-disable */
function deepMerge_(dest, src) {
    if (typeof src !== 'object' || src === null) {
        return dest;
    }
    for (const p in src) {
        if (!src.hasOwnProperty(p)) {
            continue;
        }
        if (src[p] === undefined) {
            continue;
        }
        if (typeof src[p] !== 'object' || Object(vega__WEBPACK_IMPORTED_MODULE_0__["isArray"])(src[p]) || src[p] === null) {
            dest[p] = src[p];
        }
        else if (typeof dest[p] !== 'object' || dest[p] === null) {
            dest[p] = mergeDeep(Object(vega__WEBPACK_IMPORTED_MODULE_0__["isArray"])(src[p].constructor) ? [] : {}, src[p]);
        }
        else {
            mergeDeep(dest[p], src[p]);
        }
    }
    return dest;
}
/* eslint-enable */
function mergeDeep(dest, ...src) {
    for (const s of src) {
        // eslint-disable-next-line no-param-reassign
        dest = deepMerge_(dest, s);
    }
    return dest;
}
// polyfill for IE
if (!String.prototype.startsWith) {
    // eslint-disable-next-line no-extend-native,func-names
    String.prototype.startsWith = function (search, pos) {
        return this.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;
    };
}
function isURL(s) {
    return s.startsWith('http://') || s.startsWith('https://') || s.startsWith('//');
}
//# sourceMappingURL=util.js.map

/***/ }),

/***/ "./node_modules/vega-embed/node_modules/semver/semver.js":
/*!***************************************************************!*\
  !*** ./node_modules/vega-embed/node_modules/semver/semver.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process) {exports = module.exports = SemVer

var debug
/* istanbul ignore next */
if (typeof process === 'object' &&
    process.env &&
    process.env.NODE_DEBUG &&
    /\bsemver\b/i.test(process.env.NODE_DEBUG)) {
  debug = function () {
    var args = Array.prototype.slice.call(arguments, 0)
    args.unshift('SEMVER')
    console.log.apply(console, args)
  }
} else {
  debug = function () {}
}

// Note: this is the semver.org version of the spec that it implements
// Not necessarily the package version of this code.
exports.SEMVER_SPEC_VERSION = '2.0.0'

var MAX_LENGTH = 256
var MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||
  /* istanbul ignore next */ 9007199254740991

// Max safe segment length for coercion.
var MAX_SAFE_COMPONENT_LENGTH = 16

// The actual regexps go on exports.re
var re = exports.re = []
var src = exports.src = []
var R = 0

// The following Regular Expressions can be used for tokenizing,
// validating, and parsing SemVer version strings.

// ## Numeric Identifier
// A single `0`, or a non-zero digit followed by zero or more digits.

var NUMERICIDENTIFIER = R++
src[NUMERICIDENTIFIER] = '0|[1-9]\\d*'
var NUMERICIDENTIFIERLOOSE = R++
src[NUMERICIDENTIFIERLOOSE] = '[0-9]+'

// ## Non-numeric Identifier
// Zero or more digits, followed by a letter or hyphen, and then zero or
// more letters, digits, or hyphens.

var NONNUMERICIDENTIFIER = R++
src[NONNUMERICIDENTIFIER] = '\\d*[a-zA-Z-][a-zA-Z0-9-]*'

// ## Main Version
// Three dot-separated numeric identifiers.

var MAINVERSION = R++
src[MAINVERSION] = '(' + src[NUMERICIDENTIFIER] + ')\\.' +
                   '(' + src[NUMERICIDENTIFIER] + ')\\.' +
                   '(' + src[NUMERICIDENTIFIER] + ')'

var MAINVERSIONLOOSE = R++
src[MAINVERSIONLOOSE] = '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\.' +
                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\.' +
                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')'

// ## Pre-release Version Identifier
// A numeric identifier, or a non-numeric identifier.

var PRERELEASEIDENTIFIER = R++
src[PRERELEASEIDENTIFIER] = '(?:' + src[NUMERICIDENTIFIER] +
                            '|' + src[NONNUMERICIDENTIFIER] + ')'

var PRERELEASEIDENTIFIERLOOSE = R++
src[PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[NUMERICIDENTIFIERLOOSE] +
                                 '|' + src[NONNUMERICIDENTIFIER] + ')'

// ## Pre-release Version
// Hyphen, followed by one or more dot-separated pre-release version
// identifiers.

var PRERELEASE = R++
src[PRERELEASE] = '(?:-(' + src[PRERELEASEIDENTIFIER] +
                  '(?:\\.' + src[PRERELEASEIDENTIFIER] + ')*))'

var PRERELEASELOOSE = R++
src[PRERELEASELOOSE] = '(?:-?(' + src[PRERELEASEIDENTIFIERLOOSE] +
                       '(?:\\.' + src[PRERELEASEIDENTIFIERLOOSE] + ')*))'

// ## Build Metadata Identifier
// Any combination of digits, letters, or hyphens.

var BUILDIDENTIFIER = R++
src[BUILDIDENTIFIER] = '[0-9A-Za-z-]+'

// ## Build Metadata
// Plus sign, followed by one or more period-separated build metadata
// identifiers.

var BUILD = R++
src[BUILD] = '(?:\\+(' + src[BUILDIDENTIFIER] +
             '(?:\\.' + src[BUILDIDENTIFIER] + ')*))'

// ## Full Version String
// A main version, followed optionally by a pre-release version and
// build metadata.

// Note that the only major, minor, patch, and pre-release sections of
// the version string are capturing groups.  The build metadata is not a
// capturing group, because it should not ever be used in version
// comparison.

var FULL = R++
var FULLPLAIN = 'v?' + src[MAINVERSION] +
                src[PRERELEASE] + '?' +
                src[BUILD] + '?'

src[FULL] = '^' + FULLPLAIN + '$'

// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.
// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty
// common in the npm registry.
var LOOSEPLAIN = '[v=\\s]*' + src[MAINVERSIONLOOSE] +
                 src[PRERELEASELOOSE] + '?' +
                 src[BUILD] + '?'

var LOOSE = R++
src[LOOSE] = '^' + LOOSEPLAIN + '$'

var GTLT = R++
src[GTLT] = '((?:<|>)?=?)'

// Something like "2.*" or "1.2.x".
// Note that "x.x" is a valid xRange identifer, meaning "any version"
// Only the first item is strictly required.
var XRANGEIDENTIFIERLOOSE = R++
src[XRANGEIDENTIFIERLOOSE] = src[NUMERICIDENTIFIERLOOSE] + '|x|X|\\*'
var XRANGEIDENTIFIER = R++
src[XRANGEIDENTIFIER] = src[NUMERICIDENTIFIER] + '|x|X|\\*'

var XRANGEPLAIN = R++
src[XRANGEPLAIN] = '[v=\\s]*(' + src[XRANGEIDENTIFIER] + ')' +
                   '(?:\\.(' + src[XRANGEIDENTIFIER] + ')' +
                   '(?:\\.(' + src[XRANGEIDENTIFIER] + ')' +
                   '(?:' + src[PRERELEASE] + ')?' +
                   src[BUILD] + '?' +
                   ')?)?'

var XRANGEPLAINLOOSE = R++
src[XRANGEPLAINLOOSE] = '[v=\\s]*(' + src[XRANGEIDENTIFIERLOOSE] + ')' +
                        '(?:\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +
                        '(?:\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +
                        '(?:' + src[PRERELEASELOOSE] + ')?' +
                        src[BUILD] + '?' +
                        ')?)?'

var XRANGE = R++
src[XRANGE] = '^' + src[GTLT] + '\\s*' + src[XRANGEPLAIN] + '$'
var XRANGELOOSE = R++
src[XRANGELOOSE] = '^' + src[GTLT] + '\\s*' + src[XRANGEPLAINLOOSE] + '$'

// Coercion.
// Extract anything that could conceivably be a part of a valid semver
var COERCE = R++
src[COERCE] = '(^|[^\\d])' +
              '(\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '})' +
              '(?:\\.(\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +
              '(?:\\.(\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +
              '(?:$|[^\\d])'
var COERCERTL = R++
re[COERCERTL] = new RegExp(src[COERCE], 'g')

// Tilde ranges.
// Meaning is "reasonably at or greater than"
var LONETILDE = R++
src[LONETILDE] = '(?:~>?)'

var TILDETRIM = R++
src[TILDETRIM] = '(\\s*)' + src[LONETILDE] + '\\s+'
re[TILDETRIM] = new RegExp(src[TILDETRIM], 'g')
var tildeTrimReplace = '$1~'

var TILDE = R++
src[TILDE] = '^' + src[LONETILDE] + src[XRANGEPLAIN] + '$'
var TILDELOOSE = R++
src[TILDELOOSE] = '^' + src[LONETILDE] + src[XRANGEPLAINLOOSE] + '$'

// Caret ranges.
// Meaning is "at least and backwards compatible with"
var LONECARET = R++
src[LONECARET] = '(?:\\^)'

var CARETTRIM = R++
src[CARETTRIM] = '(\\s*)' + src[LONECARET] + '\\s+'
re[CARETTRIM] = new RegExp(src[CARETTRIM], 'g')
var caretTrimReplace = '$1^'

var CARET = R++
src[CARET] = '^' + src[LONECARET] + src[XRANGEPLAIN] + '$'
var CARETLOOSE = R++
src[CARETLOOSE] = '^' + src[LONECARET] + src[XRANGEPLAINLOOSE] + '$'

// A simple gt/lt/eq thing, or just "" to indicate "any version"
var COMPARATORLOOSE = R++
src[COMPARATORLOOSE] = '^' + src[GTLT] + '\\s*(' + LOOSEPLAIN + ')$|^$'
var COMPARATOR = R++
src[COMPARATOR] = '^' + src[GTLT] + '\\s*(' + FULLPLAIN + ')$|^$'

// An expression to strip any whitespace between the gtlt and the thing
// it modifies, so that `> 1.2.3` ==> `>1.2.3`
var COMPARATORTRIM = R++
src[COMPARATORTRIM] = '(\\s*)' + src[GTLT] +
                      '\\s*(' + LOOSEPLAIN + '|' + src[XRANGEPLAIN] + ')'

// this one has to use the /g flag
re[COMPARATORTRIM] = new RegExp(src[COMPARATORTRIM], 'g')
var comparatorTrimReplace = '$1$2$3'

// Something like `1.2.3 - 1.2.4`
// Note that these all use the loose form, because they'll be
// checked against either the strict or loose comparator form
// later.
var HYPHENRANGE = R++
src[HYPHENRANGE] = '^\\s*(' + src[XRANGEPLAIN] + ')' +
                   '\\s+-\\s+' +
                   '(' + src[XRANGEPLAIN] + ')' +
                   '\\s*$'

var HYPHENRANGELOOSE = R++
src[HYPHENRANGELOOSE] = '^\\s*(' + src[XRANGEPLAINLOOSE] + ')' +
                        '\\s+-\\s+' +
                        '(' + src[XRANGEPLAINLOOSE] + ')' +
                        '\\s*$'

// Star ranges basically just allow anything at all.
var STAR = R++
src[STAR] = '(<|>)?=?\\s*\\*'

// Compile to actual regexp objects.
// All are flag-free, unless they were created above with a flag.
for (var i = 0; i < R; i++) {
  debug(i, src[i])
  if (!re[i]) {
    re[i] = new RegExp(src[i])
  }
}

exports.parse = parse
function parse (version, options) {
  if (!options || typeof options !== 'object') {
    options = {
      loose: !!options,
      includePrerelease: false
    }
  }

  if (version instanceof SemVer) {
    return version
  }

  if (typeof version !== 'string') {
    return null
  }

  if (version.length > MAX_LENGTH) {
    return null
  }

  var r = options.loose ? re[LOOSE] : re[FULL]
  if (!r.test(version)) {
    return null
  }

  try {
    return new SemVer(version, options)
  } catch (er) {
    return null
  }
}

exports.valid = valid
function valid (version, options) {
  var v = parse(version, options)
  return v ? v.version : null
}

exports.clean = clean
function clean (version, options) {
  var s = parse(version.trim().replace(/^[=v]+/, ''), options)
  return s ? s.version : null
}

exports.SemVer = SemVer

function SemVer (version, options) {
  if (!options || typeof options !== 'object') {
    options = {
      loose: !!options,
      includePrerelease: false
    }
  }
  if (version instanceof SemVer) {
    if (version.loose === options.loose) {
      return version
    } else {
      version = version.version
    }
  } else if (typeof version !== 'string') {
    throw new TypeError('Invalid Version: ' + version)
  }

  if (version.length > MAX_LENGTH) {
    throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters')
  }

  if (!(this instanceof SemVer)) {
    return new SemVer(version, options)
  }

  debug('SemVer', version, options)
  this.options = options
  this.loose = !!options.loose

  var m = version.trim().match(options.loose ? re[LOOSE] : re[FULL])

  if (!m) {
    throw new TypeError('Invalid Version: ' + version)
  }

  this.raw = version

  // these are actually numbers
  this.major = +m[1]
  this.minor = +m[2]
  this.patch = +m[3]

  if (this.major > MAX_SAFE_INTEGER || this.major < 0) {
    throw new TypeError('Invalid major version')
  }

  if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {
    throw new TypeError('Invalid minor version')
  }

  if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {
    throw new TypeError('Invalid patch version')
  }

  // numberify any prerelease numeric ids
  if (!m[4]) {
    this.prerelease = []
  } else {
    this.prerelease = m[4].split('.').map(function (id) {
      if (/^[0-9]+$/.test(id)) {
        var num = +id
        if (num >= 0 && num < MAX_SAFE_INTEGER) {
          return num
        }
      }
      return id
    })
  }

  this.build = m[5] ? m[5].split('.') : []
  this.format()
}

SemVer.prototype.format = function () {
  this.version = this.major + '.' + this.minor + '.' + this.patch
  if (this.prerelease.length) {
    this.version += '-' + this.prerelease.join('.')
  }
  return this.version
}

SemVer.prototype.toString = function () {
  return this.version
}

SemVer.prototype.compare = function (other) {
  debug('SemVer.compare', this.version, this.options, other)
  if (!(other instanceof SemVer)) {
    other = new SemVer(other, this.options)
  }

  return this.compareMain(other) || this.comparePre(other)
}

SemVer.prototype.compareMain = function (other) {
  if (!(other instanceof SemVer)) {
    other = new SemVer(other, this.options)
  }

  return compareIdentifiers(this.major, other.major) ||
         compareIdentifiers(this.minor, other.minor) ||
         compareIdentifiers(this.patch, other.patch)
}

SemVer.prototype.comparePre = function (other) {
  if (!(other instanceof SemVer)) {
    other = new SemVer(other, this.options)
  }

  // NOT having a prerelease is > having one
  if (this.prerelease.length && !other.prerelease.length) {
    return -1
  } else if (!this.prerelease.length && other.prerelease.length) {
    return 1
  } else if (!this.prerelease.length && !other.prerelease.length) {
    return 0
  }

  var i = 0
  do {
    var a = this.prerelease[i]
    var b = other.prerelease[i]
    debug('prerelease compare', i, a, b)
    if (a === undefined && b === undefined) {
      return 0
    } else if (b === undefined) {
      return 1
    } else if (a === undefined) {
      return -1
    } else if (a === b) {
      continue
    } else {
      return compareIdentifiers(a, b)
    }
  } while (++i)
}

SemVer.prototype.compareBuild = function (other) {
  if (!(other instanceof SemVer)) {
    other = new SemVer(other, this.options)
  }

  var i = 0
  do {
    var a = this.build[i]
    var b = other.build[i]
    debug('prerelease compare', i, a, b)
    if (a === undefined && b === undefined) {
      return 0
    } else if (b === undefined) {
      return 1
    } else if (a === undefined) {
      return -1
    } else if (a === b) {
      continue
    } else {
      return compareIdentifiers(a, b)
    }
  } while (++i)
}

// preminor will bump the version up to the next minor release, and immediately
// down to pre-release. premajor and prepatch work the same way.
SemVer.prototype.inc = function (release, identifier) {
  switch (release) {
    case 'premajor':
      this.prerelease.length = 0
      this.patch = 0
      this.minor = 0
      this.major++
      this.inc('pre', identifier)
      break
    case 'preminor':
      this.prerelease.length = 0
      this.patch = 0
      this.minor++
      this.inc('pre', identifier)
      break
    case 'prepatch':
      // If this is already a prerelease, it will bump to the next version
      // drop any prereleases that might already exist, since they are not
      // relevant at this point.
      this.prerelease.length = 0
      this.inc('patch', identifier)
      this.inc('pre', identifier)
      break
    // If the input is a non-prerelease version, this acts the same as
    // prepatch.
    case 'prerelease':
      if (this.prerelease.length === 0) {
        this.inc('patch', identifier)
      }
      this.inc('pre', identifier)
      break

    case 'major':
      // If this is a pre-major version, bump up to the same major version.
      // Otherwise increment major.
      // 1.0.0-5 bumps to 1.0.0
      // 1.1.0 bumps to 2.0.0
      if (this.minor !== 0 ||
          this.patch !== 0 ||
          this.prerelease.length === 0) {
        this.major++
      }
      this.minor = 0
      this.patch = 0
      this.prerelease = []
      break
    case 'minor':
      // If this is a pre-minor version, bump up to the same minor version.
      // Otherwise increment minor.
      // 1.2.0-5 bumps to 1.2.0
      // 1.2.1 bumps to 1.3.0
      if (this.patch !== 0 || this.prerelease.length === 0) {
        this.minor++
      }
      this.patch = 0
      this.prerelease = []
      break
    case 'patch':
      // If this is not a pre-release version, it will increment the patch.
      // If it is a pre-release it will bump up to the same patch version.
      // 1.2.0-5 patches to 1.2.0
      // 1.2.0 patches to 1.2.1
      if (this.prerelease.length === 0) {
        this.patch++
      }
      this.prerelease = []
      break
    // This probably shouldn't be used publicly.
    // 1.0.0 "pre" would become 1.0.0-0 which is the wrong direction.
    case 'pre':
      if (this.prerelease.length === 0) {
        this.prerelease = [0]
      } else {
        var i = this.prerelease.length
        while (--i >= 0) {
          if (typeof this.prerelease[i] === 'number') {
            this.prerelease[i]++
            i = -2
          }
        }
        if (i === -1) {
          // didn't increment anything
          this.prerelease.push(0)
        }
      }
      if (identifier) {
        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,
        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0
        if (this.prerelease[0] === identifier) {
          if (isNaN(this.prerelease[1])) {
            this.prerelease = [identifier, 0]
          }
        } else {
          this.prerelease = [identifier, 0]
        }
      }
      break

    default:
      throw new Error('invalid increment argument: ' + release)
  }
  this.format()
  this.raw = this.version
  return this
}

exports.inc = inc
function inc (version, release, loose, identifier) {
  if (typeof (loose) === 'string') {
    identifier = loose
    loose = undefined
  }

  try {
    return new SemVer(version, loose).inc(release, identifier).version
  } catch (er) {
    return null
  }
}

exports.diff = diff
function diff (version1, version2) {
  if (eq(version1, version2)) {
    return null
  } else {
    var v1 = parse(version1)
    var v2 = parse(version2)
    var prefix = ''
    if (v1.prerelease.length || v2.prerelease.length) {
      prefix = 'pre'
      var defaultResult = 'prerelease'
    }
    for (var key in v1) {
      if (key === 'major' || key === 'minor' || key === 'patch') {
        if (v1[key] !== v2[key]) {
          return prefix + key
        }
      }
    }
    return defaultResult // may be undefined
  }
}

exports.compareIdentifiers = compareIdentifiers

var numeric = /^[0-9]+$/
function compareIdentifiers (a, b) {
  var anum = numeric.test(a)
  var bnum = numeric.test(b)

  if (anum && bnum) {
    a = +a
    b = +b
  }

  return a === b ? 0
    : (anum && !bnum) ? -1
    : (bnum && !anum) ? 1
    : a < b ? -1
    : 1
}

exports.rcompareIdentifiers = rcompareIdentifiers
function rcompareIdentifiers (a, b) {
  return compareIdentifiers(b, a)
}

exports.major = major
function major (a, loose) {
  return new SemVer(a, loose).major
}

exports.minor = minor
function minor (a, loose) {
  return new SemVer(a, loose).minor
}

exports.patch = patch
function patch (a, loose) {
  return new SemVer(a, loose).patch
}

exports.compare = compare
function compare (a, b, loose) {
  return new SemVer(a, loose).compare(new SemVer(b, loose))
}

exports.compareLoose = compareLoose
function compareLoose (a, b) {
  return compare(a, b, true)
}

exports.compareBuild = compareBuild
function compareBuild (a, b, loose) {
  var versionA = new SemVer(a, loose)
  var versionB = new SemVer(b, loose)
  return versionA.compare(versionB) || versionA.compareBuild(versionB)
}

exports.rcompare = rcompare
function rcompare (a, b, loose) {
  return compare(b, a, loose)
}

exports.sort = sort
function sort (list, loose) {
  return list.sort(function (a, b) {
    return exports.compareBuild(a, b, loose)
  })
}

exports.rsort = rsort
function rsort (list, loose) {
  return list.sort(function (a, b) {
    return exports.compareBuild(b, a, loose)
  })
}

exports.gt = gt
function gt (a, b, loose) {
  return compare(a, b, loose) > 0
}

exports.lt = lt
function lt (a, b, loose) {
  return compare(a, b, loose) < 0
}

exports.eq = eq
function eq (a, b, loose) {
  return compare(a, b, loose) === 0
}

exports.neq = neq
function neq (a, b, loose) {
  return compare(a, b, loose) !== 0
}

exports.gte = gte
function gte (a, b, loose) {
  return compare(a, b, loose) >= 0
}

exports.lte = lte
function lte (a, b, loose) {
  return compare(a, b, loose) <= 0
}

exports.cmp = cmp
function cmp (a, op, b, loose) {
  switch (op) {
    case '===':
      if (typeof a === 'object')
        a = a.version
      if (typeof b === 'object')
        b = b.version
      return a === b

    case '!==':
      if (typeof a === 'object')
        a = a.version
      if (typeof b === 'object')
        b = b.version
      return a !== b

    case '':
    case '=':
    case '==':
      return eq(a, b, loose)

    case '!=':
      return neq(a, b, loose)

    case '>':
      return gt(a, b, loose)

    case '>=':
      return gte(a, b, loose)

    case '<':
      return lt(a, b, loose)

    case '<=':
      return lte(a, b, loose)

    default:
      throw new TypeError('Invalid operator: ' + op)
  }
}

exports.Comparator = Comparator
function Comparator (comp, options) {
  if (!options || typeof options !== 'object') {
    options = {
      loose: !!options,
      includePrerelease: false
    }
  }

  if (comp instanceof Comparator) {
    if (comp.loose === !!options.loose) {
      return comp
    } else {
      comp = comp.value
    }
  }

  if (!(this instanceof Comparator)) {
    return new Comparator(comp, options)
  }

  debug('comparator', comp, options)
  this.options = options
  this.loose = !!options.loose
  this.parse(comp)

  if (this.semver === ANY) {
    this.value = ''
  } else {
    this.value = this.operator + this.semver.version
  }

  debug('comp', this)
}

var ANY = {}
Comparator.prototype.parse = function (comp) {
  var r = this.options.loose ? re[COMPARATORLOOSE] : re[COMPARATOR]
  var m = comp.match(r)

  if (!m) {
    throw new TypeError('Invalid comparator: ' + comp)
  }

  this.operator = m[1] !== undefined ? m[1] : ''
  if (this.operator === '=') {
    this.operator = ''
  }

  // if it literally is just '>' or '' then allow anything.
  if (!m[2]) {
    this.semver = ANY
  } else {
    this.semver = new SemVer(m[2], this.options.loose)
  }
}

Comparator.prototype.toString = function () {
  return this.value
}

Comparator.prototype.test = function (version) {
  debug('Comparator.test', version, this.options.loose)

  if (this.semver === ANY || version === ANY) {
    return true
  }

  if (typeof version === 'string') {
    try {
      version = new SemVer(version, this.options)
    } catch (er) {
      return false
    }
  }

  return cmp(version, this.operator, this.semver, this.options)
}

Comparator.prototype.intersects = function (comp, options) {
  if (!(comp instanceof Comparator)) {
    throw new TypeError('a Comparator is required')
  }

  if (!options || typeof options !== 'object') {
    options = {
      loose: !!options,
      includePrerelease: false
    }
  }

  var rangeTmp

  if (this.operator === '') {
    if (this.value === '') {
      return true
    }
    rangeTmp = new Range(comp.value, options)
    return satisfies(this.value, rangeTmp, options)
  } else if (comp.operator === '') {
    if (comp.value === '') {
      return true
    }
    rangeTmp = new Range(this.value, options)
    return satisfies(comp.semver, rangeTmp, options)
  }

  var sameDirectionIncreasing =
    (this.operator === '>=' || this.operator === '>') &&
    (comp.operator === '>=' || comp.operator === '>')
  var sameDirectionDecreasing =
    (this.operator === '<=' || this.operator === '<') &&
    (comp.operator === '<=' || comp.operator === '<')
  var sameSemVer = this.semver.version === comp.semver.version
  var differentDirectionsInclusive =
    (this.operator === '>=' || this.operator === '<=') &&
    (comp.operator === '>=' || comp.operator === '<=')
  var oppositeDirectionsLessThan =
    cmp(this.semver, '<', comp.semver, options) &&
    ((this.operator === '>=' || this.operator === '>') &&
    (comp.operator === '<=' || comp.operator === '<'))
  var oppositeDirectionsGreaterThan =
    cmp(this.semver, '>', comp.semver, options) &&
    ((this.operator === '<=' || this.operator === '<') &&
    (comp.operator === '>=' || comp.operator === '>'))

  return sameDirectionIncreasing || sameDirectionDecreasing ||
    (sameSemVer && differentDirectionsInclusive) ||
    oppositeDirectionsLessThan || oppositeDirectionsGreaterThan
}

exports.Range = Range
function Range (range, options) {
  if (!options || typeof options !== 'object') {
    options = {
      loose: !!options,
      includePrerelease: false
    }
  }

  if (range instanceof Range) {
    if (range.loose === !!options.loose &&
        range.includePrerelease === !!options.includePrerelease) {
      return range
    } else {
      return new Range(range.raw, options)
    }
  }

  if (range instanceof Comparator) {
    return new Range(range.value, options)
  }

  if (!(this instanceof Range)) {
    return new Range(range, options)
  }

  this.options = options
  this.loose = !!options.loose
  this.includePrerelease = !!options.includePrerelease

  // First, split based on boolean or ||
  this.raw = range
  this.set = range.split(/\s*\|\|\s*/).map(function (range) {
    return this.parseRange(range.trim())
  }, this).filter(function (c) {
    // throw out any that are not relevant for whatever reason
    return c.length
  })

  if (!this.set.length) {
    throw new TypeError('Invalid SemVer Range: ' + range)
  }

  this.format()
}

Range.prototype.format = function () {
  this.range = this.set.map(function (comps) {
    return comps.join(' ').trim()
  }).join('||').trim()
  return this.range
}

Range.prototype.toString = function () {
  return this.range
}

Range.prototype.parseRange = function (range) {
  var loose = this.options.loose
  range = range.trim()
  // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`
  var hr = loose ? re[HYPHENRANGELOOSE] : re[HYPHENRANGE]
  range = range.replace(hr, hyphenReplace)
  debug('hyphen replace', range)
  // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`
  range = range.replace(re[COMPARATORTRIM], comparatorTrimReplace)
  debug('comparator trim', range, re[COMPARATORTRIM])

  // `~ 1.2.3` => `~1.2.3`
  range = range.replace(re[TILDETRIM], tildeTrimReplace)

  // `^ 1.2.3` => `^1.2.3`
  range = range.replace(re[CARETTRIM], caretTrimReplace)

  // normalize spaces
  range = range.split(/\s+/).join(' ')

  // At this point, the range is completely trimmed and
  // ready to be split into comparators.

  var compRe = loose ? re[COMPARATORLOOSE] : re[COMPARATOR]
  var set = range.split(' ').map(function (comp) {
    return parseComparator(comp, this.options)
  }, this).join(' ').split(/\s+/)
  if (this.options.loose) {
    // in loose mode, throw out any that are not valid comparators
    set = set.filter(function (comp) {
      return !!comp.match(compRe)
    })
  }
  set = set.map(function (comp) {
    return new Comparator(comp, this.options)
  }, this)

  return set
}

Range.prototype.intersects = function (range, options) {
  if (!(range instanceof Range)) {
    throw new TypeError('a Range is required')
  }

  return this.set.some(function (thisComparators) {
    return (
      isSatisfiable(thisComparators, options) &&
      range.set.some(function (rangeComparators) {
        return (
          isSatisfiable(rangeComparators, options) &&
          thisComparators.every(function (thisComparator) {
            return rangeComparators.every(function (rangeComparator) {
              return thisComparator.intersects(rangeComparator, options)
            })
          })
        )
      })
    )
  })
}

// take a set of comparators and determine whether there
// exists a version which can satisfy it
function isSatisfiable (comparators, options) {
  var result = true
  var remainingComparators = comparators.slice()
  var testComparator = remainingComparators.pop()

  while (result && remainingComparators.length) {
    result = remainingComparators.every(function (otherComparator) {
      return testComparator.intersects(otherComparator, options)
    })

    testComparator = remainingComparators.pop()
  }

  return result
}

// Mostly just for testing and legacy API reasons
exports.toComparators = toComparators
function toComparators (range, options) {
  return new Range(range, options).set.map(function (comp) {
    return comp.map(function (c) {
      return c.value
    }).join(' ').trim().split(' ')
  })
}

// comprised of xranges, tildes, stars, and gtlt's at this point.
// already replaced the hyphen ranges
// turn into a set of JUST comparators.
function parseComparator (comp, options) {
  debug('comp', comp, options)
  comp = replaceCarets(comp, options)
  debug('caret', comp)
  comp = replaceTildes(comp, options)
  debug('tildes', comp)
  comp = replaceXRanges(comp, options)
  debug('xrange', comp)
  comp = replaceStars(comp, options)
  debug('stars', comp)
  return comp
}

function isX (id) {
  return !id || id.toLowerCase() === 'x' || id === '*'
}

// ~, ~> --> * (any, kinda silly)
// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0
// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0
// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0
// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0
// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0
function replaceTildes (comp, options) {
  return comp.trim().split(/\s+/).map(function (comp) {
    return replaceTilde(comp, options)
  }).join(' ')
}

function replaceTilde (comp, options) {
  var r = options.loose ? re[TILDELOOSE] : re[TILDE]
  return comp.replace(r, function (_, M, m, p, pr) {
    debug('tilde', comp, _, M, m, p, pr)
    var ret

    if (isX(M)) {
      ret = ''
    } else if (isX(m)) {
      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'
    } else if (isX(p)) {
      // ~1.2 == >=1.2.0 <1.3.0
      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'
    } else if (pr) {
      debug('replaceTilde pr', pr)
      ret = '>=' + M + '.' + m + '.' + p + '-' + pr +
            ' <' + M + '.' + (+m + 1) + '.0'
    } else {
      // ~1.2.3 == >=1.2.3 <1.3.0
      ret = '>=' + M + '.' + m + '.' + p +
            ' <' + M + '.' + (+m + 1) + '.0'
    }

    debug('tilde return', ret)
    return ret
  })
}

// ^ --> * (any, kinda silly)
// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0
// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0
// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0
// ^1.2.3 --> >=1.2.3 <2.0.0
// ^1.2.0 --> >=1.2.0 <2.0.0
function replaceCarets (comp, options) {
  return comp.trim().split(/\s+/).map(function (comp) {
    return replaceCaret(comp, options)
  }).join(' ')
}

function replaceCaret (comp, options) {
  debug('caret', comp, options)
  var r = options.loose ? re[CARETLOOSE] : re[CARET]
  return comp.replace(r, function (_, M, m, p, pr) {
    debug('caret', comp, _, M, m, p, pr)
    var ret

    if (isX(M)) {
      ret = ''
    } else if (isX(m)) {
      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'
    } else if (isX(p)) {
      if (M === '0') {
        ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'
      } else {
        ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0'
      }
    } else if (pr) {
      debug('replaceCaret pr', pr)
      if (M === '0') {
        if (m === '0') {
          ret = '>=' + M + '.' + m + '.' + p + '-' + pr +
                ' <' + M + '.' + m + '.' + (+p + 1)
        } else {
          ret = '>=' + M + '.' + m + '.' + p + '-' + pr +
                ' <' + M + '.' + (+m + 1) + '.0'
        }
      } else {
        ret = '>=' + M + '.' + m + '.' + p + '-' + pr +
              ' <' + (+M + 1) + '.0.0'
      }
    } else {
      debug('no pr')
      if (M === '0') {
        if (m === '0') {
          ret = '>=' + M + '.' + m + '.' + p +
                ' <' + M + '.' + m + '.' + (+p + 1)
        } else {
          ret = '>=' + M + '.' + m + '.' + p +
                ' <' + M + '.' + (+m + 1) + '.0'
        }
      } else {
        ret = '>=' + M + '.' + m + '.' + p +
              ' <' + (+M + 1) + '.0.0'
      }
    }

    debug('caret return', ret)
    return ret
  })
}

function replaceXRanges (comp, options) {
  debug('replaceXRanges', comp, options)
  return comp.split(/\s+/).map(function (comp) {
    return replaceXRange(comp, options)
  }).join(' ')
}

function replaceXRange (comp, options) {
  comp = comp.trim()
  var r = options.loose ? re[XRANGELOOSE] : re[XRANGE]
  return comp.replace(r, function (ret, gtlt, M, m, p, pr) {
    debug('xRange', comp, ret, gtlt, M, m, p, pr)
    var xM = isX(M)
    var xm = xM || isX(m)
    var xp = xm || isX(p)
    var anyX = xp

    if (gtlt === '=' && anyX) {
      gtlt = ''
    }

    // if we're including prereleases in the match, then we need
    // to fix this to -0, the lowest possible prerelease value
    pr = options.includePrerelease ? '-0' : ''

    if (xM) {
      if (gtlt === '>' || gtlt === '<') {
        // nothing is allowed
        ret = '<0.0.0-0'
      } else {
        // nothing is forbidden
        ret = '*'
      }
    } else if (gtlt && anyX) {
      // we know patch is an x, because we have any x at all.
      // replace X with 0
      if (xm) {
        m = 0
      }
      p = 0

      if (gtlt === '>') {
        // >1 => >=2.0.0
        // >1.2 => >=1.3.0
        // >1.2.3 => >= 1.2.4
        gtlt = '>='
        if (xm) {
          M = +M + 1
          m = 0
          p = 0
        } else {
          m = +m + 1
          p = 0
        }
      } else if (gtlt === '<=') {
        // <=0.7.x is actually <0.8.0, since any 0.7.x should
        // pass.  Similarly, <=7.x is actually <8.0.0, etc.
        gtlt = '<'
        if (xm) {
          M = +M + 1
        } else {
          m = +m + 1
        }
      }

      ret = gtlt + M + '.' + m + '.' + p + pr
    } else if (xm) {
      ret = '>=' + M + '.0.0' + pr + ' <' + (+M + 1) + '.0.0' + pr
    } else if (xp) {
      ret = '>=' + M + '.' + m + '.0' + pr +
        ' <' + M + '.' + (+m + 1) + '.0' + pr
    }

    debug('xRange return', ret)

    return ret
  })
}

// Because * is AND-ed with everything else in the comparator,
// and '' means "any version", just remove the *s entirely.
function replaceStars (comp, options) {
  debug('replaceStars', comp, options)
  // Looseness is ignored here.  star is always as loose as it gets!
  return comp.trim().replace(re[STAR], '')
}

// This function is passed to string.replace(re[HYPHENRANGE])
// M, m, patch, prerelease, build
// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5
// 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do
// 1.2 - 3.4 => >=1.2.0 <3.5.0
function hyphenReplace ($0,
  from, fM, fm, fp, fpr, fb,
  to, tM, tm, tp, tpr, tb) {
  if (isX(fM)) {
    from = ''
  } else if (isX(fm)) {
    from = '>=' + fM + '.0.0'
  } else if (isX(fp)) {
    from = '>=' + fM + '.' + fm + '.0'
  } else {
    from = '>=' + from
  }

  if (isX(tM)) {
    to = ''
  } else if (isX(tm)) {
    to = '<' + (+tM + 1) + '.0.0'
  } else if (isX(tp)) {
    to = '<' + tM + '.' + (+tm + 1) + '.0'
  } else if (tpr) {
    to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr
  } else {
    to = '<=' + to
  }

  return (from + ' ' + to).trim()
}

// if ANY of the sets match ALL of its comparators, then pass
Range.prototype.test = function (version) {
  if (!version) {
    return false
  }

  if (typeof version === 'string') {
    try {
      version = new SemVer(version, this.options)
    } catch (er) {
      return false
    }
  }

  for (var i = 0; i < this.set.length; i++) {
    if (testSet(this.set[i], version, this.options)) {
      return true
    }
  }
  return false
}

function testSet (set, version, options) {
  for (var i = 0; i < set.length; i++) {
    if (!set[i].test(version)) {
      return false
    }
  }

  if (version.prerelease.length && !options.includePrerelease) {
    // Find the set of versions that are allowed to have prereleases
    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0
    // That should allow `1.2.3-pr.2` to pass.
    // However, `1.2.4-alpha.notready` should NOT be allowed,
    // even though it's within the range set by the comparators.
    for (i = 0; i < set.length; i++) {
      debug(set[i].semver)
      if (set[i].semver === ANY) {
        continue
      }

      if (set[i].semver.prerelease.length > 0) {
        var allowed = set[i].semver
        if (allowed.major === version.major &&
            allowed.minor === version.minor &&
            allowed.patch === version.patch) {
          return true
        }
      }
    }

    // Version has a -pre, but it's not one of the ones we like.
    return false
  }

  return true
}

exports.satisfies = satisfies
function satisfies (version, range, options) {
  try {
    range = new Range(range, options)
  } catch (er) {
    return false
  }
  return range.test(version)
}

exports.maxSatisfying = maxSatisfying
function maxSatisfying (versions, range, options) {
  var max = null
  var maxSV = null
  try {
    var rangeObj = new Range(range, options)
  } catch (er) {
    return null
  }
  versions.forEach(function (v) {
    if (rangeObj.test(v)) {
      // satisfies(v, range, options)
      if (!max || maxSV.compare(v) === -1) {
        // compare(max, v, true)
        max = v
        maxSV = new SemVer(max, options)
      }
    }
  })
  return max
}

exports.minSatisfying = minSatisfying
function minSatisfying (versions, range, options) {
  var min = null
  var minSV = null
  try {
    var rangeObj = new Range(range, options)
  } catch (er) {
    return null
  }
  versions.forEach(function (v) {
    if (rangeObj.test(v)) {
      // satisfies(v, range, options)
      if (!min || minSV.compare(v) === 1) {
        // compare(min, v, true)
        min = v
        minSV = new SemVer(min, options)
      }
    }
  })
  return min
}

exports.minVersion = minVersion
function minVersion (range, loose) {
  range = new Range(range, loose)

  var minver = new SemVer('0.0.0')
  if (range.test(minver)) {
    return minver
  }

  minver = new SemVer('0.0.0-0')
  if (range.test(minver)) {
    return minver
  }

  minver = null
  for (var i = 0; i < range.set.length; ++i) {
    var comparators = range.set[i]

    comparators.forEach(function (comparator) {
      // Clone to avoid manipulating the comparator's semver object.
      var compver = new SemVer(comparator.semver.version)
      switch (comparator.operator) {
        case '>':
          if (compver.prerelease.length === 0) {
            compver.patch++
          } else {
            compver.prerelease.push(0)
          }
          compver.raw = compver.format()
          /* fallthrough */
        case '':
        case '>=':
          if (!minver || gt(minver, compver)) {
            minver = compver
          }
          break
        case '<':
        case '<=':
          /* Ignore maximum versions */
          break
        /* istanbul ignore next */
        default:
          throw new Error('Unexpected operation: ' + comparator.operator)
      }
    })
  }

  if (minver && range.test(minver)) {
    return minver
  }

  return null
}

exports.validRange = validRange
function validRange (range, options) {
  try {
    // Return '*' instead of '' so that truthiness works.
    // This will throw if it's invalid anyway
    return new Range(range, options).range || '*'
  } catch (er) {
    return null
  }
}

// Determine if version is less than all the versions possible in the range
exports.ltr = ltr
function ltr (version, range, options) {
  return outside(version, range, '<', options)
}

// Determine if version is greater than all the versions possible in the range.
exports.gtr = gtr
function gtr (version, range, options) {
  return outside(version, range, '>', options)
}

exports.outside = outside
function outside (version, range, hilo, options) {
  version = new SemVer(version, options)
  range = new Range(range, options)

  var gtfn, ltefn, ltfn, comp, ecomp
  switch (hilo) {
    case '>':
      gtfn = gt
      ltefn = lte
      ltfn = lt
      comp = '>'
      ecomp = '>='
      break
    case '<':
      gtfn = lt
      ltefn = gte
      ltfn = gt
      comp = '<'
      ecomp = '<='
      break
    default:
      throw new TypeError('Must provide a hilo val of "<" or ">"')
  }

  // If it satisifes the range it is not outside
  if (satisfies(version, range, options)) {
    return false
  }

  // From now on, variable terms are as if we're in "gtr" mode.
  // but note that everything is flipped for the "ltr" function.

  for (var i = 0; i < range.set.length; ++i) {
    var comparators = range.set[i]

    var high = null
    var low = null

    comparators.forEach(function (comparator) {
      if (comparator.semver === ANY) {
        comparator = new Comparator('>=0.0.0')
      }
      high = high || comparator
      low = low || comparator
      if (gtfn(comparator.semver, high.semver, options)) {
        high = comparator
      } else if (ltfn(comparator.semver, low.semver, options)) {
        low = comparator
      }
    })

    // If the edge version comparator has a operator then our version
    // isn't outside it
    if (high.operator === comp || high.operator === ecomp) {
      return false
    }

    // If the lowest version comparator has an operator and our version
    // is less than it then it isn't higher than the range
    if ((!low.operator || low.operator === comp) &&
        ltefn(version, low.semver)) {
      return false
    } else if (low.operator === ecomp && ltfn(version, low.semver)) {
      return false
    }
  }
  return true
}

exports.prerelease = prerelease
function prerelease (version, options) {
  var parsed = parse(version, options)
  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null
}

exports.intersects = intersects
function intersects (r1, r2, options) {
  r1 = new Range(r1, options)
  r2 = new Range(r2, options)
  return r1.intersects(r2)
}

exports.coerce = coerce
function coerce (version, options) {
  if (version instanceof SemVer) {
    return version
  }

  if (typeof version === 'number') {
    version = String(version)
  }

  if (typeof version !== 'string') {
    return null
  }

  options = options || {}

  var match = null
  if (!options.rtl) {
    match = version.match(re[COERCE])
  } else {
    // Find the right-most coercible string that does not share
    // a terminus with a more left-ward coercible string.
    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'
    //
    // Walk through the string checking with a /g regexp
    // Manually set the index so as to pick up overlapping matches.
    // Stop when we get a match that ends at the string end, since no
    // coercible string can be more right-ward without the same terminus.
    var next
    while ((next = re[COERCERTL].exec(version)) &&
      (!match || match.index + match[0].length !== version.length)
    ) {
      if (!match ||
          next.index + next[0].length !== match.index + match[0].length) {
        match = next
      }
      re[COERCERTL].lastIndex = next.index + next[1].length + next[2].length
    }
    // leave it in a clean state
    re[COERCERTL].lastIndex = -1
  }

  if (match === null) {
    return null
  }

  return parse(match[2] +
    '.' + (match[3] || '0') +
    '.' + (match[4] || '0'), options)
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../process/browser.js */ "./node_modules/process/browser.js")))

/***/ }),

/***/ "./node_modules/vega-encode/index.js":
/*!*******************************************!*\
  !*** ./node_modules/vega-encode/index.js ***!
  \*******************************************/
/*! exports provided: axisticks, datajoin, encode, legendentries, linkpath, pie, scale, sortitems, stack, validTicks */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _src_AxisTicks__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/AxisTicks */ "./node_modules/vega-encode/src/AxisTicks.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "axisticks", function() { return _src_AxisTicks__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _src_DataJoin__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/DataJoin */ "./node_modules/vega-encode/src/DataJoin.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "datajoin", function() { return _src_DataJoin__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _src_Encode__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/Encode */ "./node_modules/vega-encode/src/Encode.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "encode", function() { return _src_Encode__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _src_LegendEntries__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/LegendEntries */ "./node_modules/vega-encode/src/LegendEntries.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "legendentries", function() { return _src_LegendEntries__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _src_LinkPath__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./src/LinkPath */ "./node_modules/vega-encode/src/LinkPath.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "linkpath", function() { return _src_LinkPath__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _src_Pie__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./src/Pie */ "./node_modules/vega-encode/src/Pie.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pie", function() { return _src_Pie__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _src_Scale__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./src/Scale */ "./node_modules/vega-encode/src/Scale.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scale", function() { return _src_Scale__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony import */ var _src_SortItems__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./src/SortItems */ "./node_modules/vega-encode/src/SortItems.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sortitems", function() { return _src_SortItems__WEBPACK_IMPORTED_MODULE_7__["default"]; });

/* harmony import */ var _src_Stack__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./src/Stack */ "./node_modules/vega-encode/src/Stack.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stack", function() { return _src_Stack__WEBPACK_IMPORTED_MODULE_8__["default"]; });

/* harmony import */ var _src_ticks__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./src/ticks */ "./node_modules/vega-encode/src/ticks.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "validTicks", function() { return _src_ticks__WEBPACK_IMPORTED_MODULE_9__["validTicks"]; });













/***/ }),

/***/ "./node_modules/vega-encode/src/AxisTicks.js":
/*!***************************************************!*\
  !*** ./node_modules/vega-encode/src/AxisTicks.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return AxisTicks; });
/* harmony import */ var _ticks__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ticks */ "./node_modules/vega-encode/src/ticks.js");
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");




/**
 * Generates axis ticks for visualizing a spatial scale.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {Scale} params.scale - The scale to generate ticks for.
 * @param {*} [params.count=10] - The approximate number of ticks, or
 *   desired tick interval, to use.
 * @param {Array<*>} [params.values] - The exact tick values to use.
 *   These must be legal domain values for the provided scale.
 *   If provided, the count argument is ignored.
 * @param {function(*):string} [params.formatSpecifier] - A format specifier
 *   to use in conjunction with scale.tickFormat. Legal values are
 *   any valid d3 4.0 format specifier.
 * @param {function(*):string} [params.format] - The format function to use.
 *   If provided, the formatSpecifier argument is ignored.
 */
function AxisTicks(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Transform"].call(this, null, params);
}

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["inherits"])(AxisTicks, vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Transform"]);

prototype.transform = function(_, pulse) {
  if (this.value && !_.modified()) {
    return pulse.StopPropagation;
  }

  var out = pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS),
      ticks = this.value,
      scale = _.scale,
      tally = _.count == null ? (_.values ? _.values.length : 10) : _.count,
      count = Object(_ticks__WEBPACK_IMPORTED_MODULE_0__["tickCount"])(scale, tally, _.minstep),
      format = _.format || Object(_ticks__WEBPACK_IMPORTED_MODULE_0__["tickFormat"])(scale, count, _.formatSpecifier, _.formatType),
      values = _.values ? Object(_ticks__WEBPACK_IMPORTED_MODULE_0__["validTicks"])(scale, _.values, count) : Object(_ticks__WEBPACK_IMPORTED_MODULE_0__["tickValues"])(scale, count);

  if (ticks) out.rem = ticks;

  ticks = values.map(function(value, i) {
    return Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["ingest"])({
      index: i / (values.length - 1 || 1),
      value: value,
      label: format(value)
    });
  });

  if (_.extra && ticks.length) {
    // add an extra tick pegged to the initial domain value
    // this is used to generate axes with 'binned' domains
    ticks.push(Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["ingest"])({
      index: -1,
      extra: {value: ticks[0].value},
      label: ''
    }));
  }

  out.source = ticks;
  out.add = ticks;
  this.value = ticks;

  return out;
};


/***/ }),

/***/ "./node_modules/vega-encode/src/DataJoin.js":
/*!**************************************************!*\
  !*** ./node_modules/vega-encode/src/DataJoin.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return DataJoin; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");



/**
 * Joins a set of data elements against a set of visual items.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(object): object} [params.item] - An item generator function.
 * @param {function(object): *} [params.key] - The key field associating data and visual items.
 */
function DataJoin(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, null, params);
}

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(DataJoin, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

function defaultItemCreate() {
  return Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["ingest"])({});
}

function isExit(t) {
  return t.exit;
}

prototype.transform = function(_, pulse) {
  var df = pulse.dataflow,
      out = pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS),
      item = _.item || defaultItemCreate,
      key = _.key || vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["tupleid"],
      map = this.value;

  // prevent transient (e.g., hover) requests from
  // cascading across marks derived from marks
  if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(out.encode)) {
    out.encode = null;
  }

  if (map && (_.modified('key') || pulse.modified(key))) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["error"])('DataJoin does not support modified key function or fields.');
  }

  if (!map) {
    pulse = pulse.addAll();
    this.value = map = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["fastmap"])().test(isExit);
    map.lookup = function(t) { return map.get(key(t)); };
  }

  pulse.visit(pulse.ADD, function(t) {
    var k = key(t),
        x = map.get(k);

    if (x) {
      if (x.exit) {
        map.empty--;
        out.add.push(x);
      } else {
        out.mod.push(x);
      }
    } else {
      map.set(k, (x = item(t)));
      out.add.push(x);
    }

    x.datum = t;
    x.exit = false;
  });

  pulse.visit(pulse.MOD, function(t) {
    var k = key(t),
        x = map.get(k);

    if (x) {
      x.datum = t;
      out.mod.push(x);
    }
  });

  pulse.visit(pulse.REM, function(t) {
    var k = key(t),
        x = map.get(k);

    if (t === x.datum && !x.exit) {
      out.rem.push(x);
      x.exit = true;
      ++map.empty;
    }
  });

  if (pulse.changed(pulse.ADD_MOD)) out.modifies('datum');

  if (_.clean && map.empty > df.cleanThreshold) df.runAfter(map.clean);

  return out;
};


/***/ }),

/***/ "./node_modules/vega-encode/src/Encode.js":
/*!************************************************!*\
  !*** ./node_modules/vega-encode/src/Encode.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Encode; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");



/**
 * Invokes encoding functions for visual items.
 * @constructor
 * @param {object} params - The parameters to the encoding functions. This
 *   parameter object will be passed through to all invoked encoding functions.
 * @param {object} [params.mod=false] - Flag indicating if tuples in the input
 *   mod set that are unmodified by encoders should be included in the output.
 * @param {object} param.encoders - The encoding functions
 * @param {function(object, object): boolean} [param.encoders.update] - Update encoding set
 * @param {function(object, object): boolean} [param.encoders.enter] - Enter encoding set
 * @param {function(object, object): boolean} [param.encoders.exit] - Exit encoding set
 */
function Encode(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, null, params);
}

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(Encode, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

prototype.transform = function(_, pulse) {
  var out = pulse.fork(pulse.ADD_REM),
      fmod = _.mod || false,
      encoders = _.encoders,
      encode = pulse.encode;

  // if an array, the encode directive includes additional sets
  // that must be defined in order for the primary set to be invoked
  // e.g., only run the update set if the hover set is defined
  if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(encode)) {
    if (out.changed() || encode.every(function(e) { return encoders[e]; })) {
      encode = encode[0];
      out.encode = null; // consume targeted encode directive
    } else {
      return pulse.StopPropagation;
    }
  }

  // marshall encoder functions
  var reenter = encode === 'enter',
      update = encoders.update || vega_util__WEBPACK_IMPORTED_MODULE_1__["falsy"],
      enter = encoders.enter || vega_util__WEBPACK_IMPORTED_MODULE_1__["falsy"],
      exit = encoders.exit || vega_util__WEBPACK_IMPORTED_MODULE_1__["falsy"],
      set = (encode && !reenter ? encoders[encode] : update) || vega_util__WEBPACK_IMPORTED_MODULE_1__["falsy"];

  if (pulse.changed(pulse.ADD)) {
    pulse.visit(pulse.ADD, function(t) { enter(t, _); update(t, _); });
    out.modifies(enter.output);
    out.modifies(update.output);
    if (set !== vega_util__WEBPACK_IMPORTED_MODULE_1__["falsy"] && set !== update) {
      pulse.visit(pulse.ADD, function(t) { set(t, _); });
      out.modifies(set.output);
    }
  }

  if (pulse.changed(pulse.REM) && exit !== vega_util__WEBPACK_IMPORTED_MODULE_1__["falsy"]) {
    pulse.visit(pulse.REM, function(t) { exit(t, _); });
    out.modifies(exit.output);
  }

  if (reenter || set !== vega_util__WEBPACK_IMPORTED_MODULE_1__["falsy"]) {
    var flag = pulse.MOD | (_.modified() ? pulse.REFLOW : 0);
    if (reenter) {
      pulse.visit(flag, function(t) {
        var mod = enter(t, _) || fmod;
        if (set(t, _) || mod) out.mod.push(t);
      });
      if (out.mod.length) out.modifies(enter.output);
    } else {
      pulse.visit(flag, function(t) {
        if (set(t, _) || fmod) out.mod.push(t);
      });
    }
    if (out.mod.length) out.modifies(set.output);
  }

  return out.changed() ? out : pulse.StopPropagation;
};


/***/ }),

/***/ "./node_modules/vega-encode/src/LegendEntries.js":
/*!*******************************************************!*\
  !*** ./node_modules/vega-encode/src/LegendEntries.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return LegendEntries; });
/* harmony import */ var _labels__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./labels */ "./node_modules/vega-encode/src/labels.js");
/* harmony import */ var _legend_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./legend-types */ "./node_modules/vega-encode/src/legend-types.js");
/* harmony import */ var _ticks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ticks */ "./node_modules/vega-encode/src/ticks.js");
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_scale__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! vega-scale */ "./node_modules/vega-scale/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");







/**
 * Generates legend entries for visualizing a scale.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {Scale} params.scale - The scale to generate items for.
 * @param {*} [params.count=5] - The approximate number of items, or
 *   desired tick interval, to use.
 * @param {Array<*>} [params.values] - The exact tick values to use.
 *   These must be legal domain values for the provided scale.
 *   If provided, the count argument is ignored.
 * @param {string} [params.formatSpecifier] - A format specifier
 *   to use in conjunction with scale.tickFormat. Legal values are
 *   any valid D3 format specifier string.
 * @param {function(*):string} [params.format] - The format function to use.
 *   If provided, the formatSpecifier argument is ignored.
 */
function LegendEntries(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_3__["Transform"].call(this, [], params);
}

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_5__["inherits"])(LegendEntries, vega_dataflow__WEBPACK_IMPORTED_MODULE_3__["Transform"]);

prototype.transform = function(_, pulse) {
  if (this.value != null && !_.modified()) {
    return pulse.StopPropagation;
  }

  var out = pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS),
      items = this.value,
      type  = _.type || _legend_types__WEBPACK_IMPORTED_MODULE_1__["Symbols"],
      scale = _.scale,
      count = Object(_ticks__WEBPACK_IMPORTED_MODULE_2__["tickCount"])(scale, _.count == null ? 5 : _.count, _.minstep),
      format = _.format || Object(_labels__WEBPACK_IMPORTED_MODULE_0__["labelFormat"])(scale, count, type, _.formatSpecifier, _.formatType),
      values = _.values || Object(_labels__WEBPACK_IMPORTED_MODULE_0__["labelValues"])(scale, count, type),
      domain, fraction, size, offset;

  if (items) out.rem = items;

  if (type === _legend_types__WEBPACK_IMPORTED_MODULE_1__["Symbols"]) {
    if (Object(vega_util__WEBPACK_IMPORTED_MODULE_5__["isFunction"])(size = _.size)) {
      // if first value maps to size zero, remove from list (vega#717)
      if (!_.values && scale(values[0]) === 0) {
        values = values.slice(1);
      }
      // compute size offset for legend entries
      offset = values.reduce(function(max, value) {
        return Math.max(max, size(value, _));
      }, 0);
    } else {
      size = Object(vega_util__WEBPACK_IMPORTED_MODULE_5__["constant"])(offset = size || 8);
    }

    items = values.map(function(value, index) {
      return Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_3__["ingest"])({
        index:  index,
        label:  format(value, index, values),
        value:  value,
        offset: offset,
        size:   size(value, _)
      });
    });
  }

  else if (type === _legend_types__WEBPACK_IMPORTED_MODULE_1__["Gradient"]) {
    domain = scale.domain(),
    fraction = Object(vega_scale__WEBPACK_IMPORTED_MODULE_4__["scaleFraction"])(scale, domain[0], Object(vega_util__WEBPACK_IMPORTED_MODULE_5__["peek"])(domain));

    // if automatic label generation produces 2 or fewer values,
    // use the domain end points instead (fixes vega/vega#1364)
    if (values.length < 3 && !_.values && domain[0] !== Object(vega_util__WEBPACK_IMPORTED_MODULE_5__["peek"])(domain)) {
      values = [domain[0], Object(vega_util__WEBPACK_IMPORTED_MODULE_5__["peek"])(domain)];
    }

    items = values.map(function(value, index) {
      return Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_3__["ingest"])({
        index: index,
        label: format(value, index, values),
        value: value,
        perc:  fraction(value)
      });
    });
  }

  else {
    size = values.length - 1;
    fraction = Object(_labels__WEBPACK_IMPORTED_MODULE_0__["labelFraction"])(scale);

    items = values.map(function(value, index) {
      return Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_3__["ingest"])({
        index: index,
        label: format(value, index, values),
        value: value,
        perc:  index ? fraction(value) : 0,
        perc2: index === size ? 1 : fraction(values[index+1])
      });
    });
  }

  out.source = items;
  out.add = items;
  this.value = items;

  return out;
};


/***/ }),

/***/ "./node_modules/vega-encode/src/LinkPath.js":
/*!**************************************************!*\
  !*** ./node_modules/vega-encode/src/LinkPath.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return LinkPath; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");



var Paths = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["fastmap"])({
  'line': line,
  'line-radial': lineR,
  'arc': arc,
  'arc-radial': arcR,
  'curve': curve,
  'curve-radial': curveR,
  'orthogonal-horizontal': orthoX,
  'orthogonal-vertical': orthoY,
  'orthogonal-radial': orthoR,
  'diagonal-horizontal': diagonalX,
  'diagonal-vertical': diagonalY,
  'diagonal-radial': diagonalR
});

function sourceX(t) { return t.source.x; }
function sourceY(t) { return t.source.y; }
function targetX(t) { return t.target.x; }
function targetY(t) { return t.target.y; }

 /**
  * Layout paths linking source and target elements.
  * @constructor
  * @param {object} params - The parameters for this operator.
  */
function LinkPath(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, {}, params);
}

LinkPath.Definition = {
  "type": "LinkPath",
  "metadata": {"modifies": true},
  "params": [
    { "name": "sourceX", "type": "field", "default": "source.x" },
    { "name": "sourceY", "type": "field", "default": "source.y" },
    { "name": "targetX", "type": "field", "default": "target.x" },
    { "name": "targetY", "type": "field", "default": "target.y" },
    { "name": "orient", "type": "enum", "default": "vertical",
      "values": ["horizontal", "vertical", "radial"] },
    { "name": "shape", "type": "enum", "default": "line",
      "values": ["line", "arc", "curve", "diagonal", "orthogonal"] },
    { "name": "require", "type": "signal" },
    { "name": "as", "type": "string", "default": "path" }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(LinkPath, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

prototype.transform = function(_, pulse) {
  var sx = _.sourceX || sourceX,
      sy = _.sourceY || sourceY,
      tx = _.targetX || targetX,
      ty = _.targetY || targetY,
      as = _.as || 'path',
      orient = _.orient || 'vertical',
      shape = _.shape || 'line',
      path = Paths.get(shape + '-' + orient) || Paths.get(shape);

  if (!path) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["error"])('LinkPath unsupported type: ' + _.shape
      + (_.orient ? '-' + _.orient : ''));
  }

  pulse.visit(pulse.SOURCE, function(t) {
    t[as] = path(sx(t), sy(t), tx(t), ty(t));
  });

  return pulse.reflow(_.modified()).modifies(as);
};

// -- Link Path Generation Methods -----

function line(sx, sy, tx, ty) {
  return 'M' + sx + ',' + sy +
         'L' + tx + ',' + ty;
}

function lineR(sa, sr, ta, tr) {
  return line(
    sr * Math.cos(sa), sr * Math.sin(sa),
    tr * Math.cos(ta), tr * Math.sin(ta)
  );
}

function arc(sx, sy, tx, ty) {
  var dx = tx - sx,
      dy = ty - sy,
      rr = Math.sqrt(dx * dx + dy * dy) / 2,
      ra = 180 * Math.atan2(dy, dx) / Math.PI;
  return 'M' + sx + ',' + sy +
         'A' + rr + ',' + rr +
         ' ' + ra + ' 0 1' +
         ' ' + tx + ',' + ty;
}

function arcR(sa, sr, ta, tr) {
  return arc(
    sr * Math.cos(sa), sr * Math.sin(sa),
    tr * Math.cos(ta), tr * Math.sin(ta)
  );
}

function curve(sx, sy, tx, ty) {
  var dx = tx - sx,
      dy = ty - sy,
      ix = 0.2 * (dx + dy),
      iy = 0.2 * (dy - dx);
  return 'M' + sx + ',' + sy +
         'C' + (sx+ix) + ',' + (sy+iy) +
         ' ' + (tx+iy) + ',' + (ty-ix) +
         ' ' + tx + ',' + ty;
}

function curveR(sa, sr, ta, tr) {
  return curve(
    sr * Math.cos(sa), sr * Math.sin(sa),
    tr * Math.cos(ta), tr * Math.sin(ta)
  );
}

function orthoX(sx, sy, tx, ty) {
  return 'M' + sx + ',' + sy +
         'V' + ty + 'H' + tx;
}

function orthoY(sx, sy, tx, ty) {
  return 'M' + sx + ',' + sy +
         'H' + tx + 'V' + ty;
}

function orthoR(sa, sr, ta, tr) {
  var sc = Math.cos(sa),
      ss = Math.sin(sa),
      tc = Math.cos(ta),
      ts = Math.sin(ta),
      sf = Math.abs(ta - sa) > Math.PI ? ta <= sa : ta > sa;
  return 'M' + (sr*sc) + ',' + (sr*ss) +
         'A' + sr + ',' + sr + ' 0 0,' + (sf?1:0) +
         ' ' + (sr*tc) + ',' + (sr*ts) +
         'L' + (tr*tc) + ',' + (tr*ts);
}

function diagonalX(sx, sy, tx, ty) {
  var m = (sx + tx) / 2;
  return 'M' + sx + ',' + sy +
         'C' + m  + ',' + sy +
         ' ' + m  + ',' + ty +
         ' ' + tx + ',' + ty;
}

function diagonalY(sx, sy, tx, ty) {
  var m = (sy + ty) / 2;
  return 'M' + sx + ',' + sy +
         'C' + sx + ',' + m +
         ' ' + tx + ',' + m +
         ' ' + tx + ',' + ty;
}

function diagonalR(sa, sr, ta, tr) {
  var sc = Math.cos(sa),
      ss = Math.sin(sa),
      tc = Math.cos(ta),
      ts = Math.sin(ta),
      mr = (sr + tr) / 2;
  return 'M' + (sr*sc) + ',' + (sr*ss) +
         'C' + (mr*sc) + ',' + (mr*ss) +
         ' ' + (mr*tc) + ',' + (mr*ts) +
         ' ' + (tr*tc) + ',' + (tr*ts);
}


/***/ }),

/***/ "./node_modules/vega-encode/src/Pie.js":
/*!*********************************************!*\
  !*** ./node_modules/vega-encode/src/Pie.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Pie; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");




/**
 * Pie and donut chart layout.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(object): *} params.field - The value field to size pie segments.
 * @param {number} [params.startAngle=0] - The start angle (in radians) of the layout.
 * @param {number} [params.endAngle=2π] - The end angle (in radians) of the layout.
 * @param {boolean} [params.sort] - Boolean flag for sorting sectors by value.
 */
function Pie(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, null, params);
}

Pie.Definition = {
  "type": "Pie",
  "metadata": {"modifies": true},
  "params": [
    { "name": "field", "type": "field" },
    { "name": "startAngle", "type": "number", "default": 0 },
    { "name": "endAngle", "type": "number", "default": 6.283185307179586 },
    { "name": "sort", "type": "boolean", "default": false },
    { "name": "as", "type": "string", "array": true, "length": 2, "default": ["startAngle", "endAngle"] }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(Pie, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

prototype.transform = function(_, pulse) {
  var as = _.as || ['startAngle', 'endAngle'],
      startAngle = as[0],
      endAngle = as[1],
      field = _.field || vega_util__WEBPACK_IMPORTED_MODULE_1__["one"],
      start = _.startAngle || 0,
      stop = _.endAngle != null ? _.endAngle : 2 * Math.PI,
      data = pulse.source,
      values = data.map(field),
      n = values.length,
      a = start,
      k = (stop - start) / Object(d3_array__WEBPACK_IMPORTED_MODULE_2__["sum"])(values),
      index = Object(d3_array__WEBPACK_IMPORTED_MODULE_2__["range"])(n),
      i, t, v;

  if (_.sort) {
    index.sort(function(a, b) {
      return values[a] - values[b];
    });
  }

  for (i=0; i<n; ++i) {
    v = values[index[i]];
    t = data[index[i]];
    t[startAngle] = a;
    t[endAngle] = (a += v * k);
  }

  this.value = values;
  return pulse.reflow(_.modified()).modifies(as);
};


/***/ }),

/***/ "./node_modules/vega-encode/src/Scale.js":
/*!***********************************************!*\
  !*** ./node_modules/vega-encode/src/Scale.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Scale; });
/* harmony import */ var _ticks__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ticks */ "./node_modules/vega-encode/src/ticks.js");
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var vega_scale__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vega-scale */ "./node_modules/vega-scale/index.js");
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");
/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! d3-interpolate */ "./node_modules/d3-interpolate/src/index.js");










var DEFAULT_COUNT = 5;

function includeZero(scale) {
  const type = scale.type;
  return !scale.bins && (
    type === vega_scale__WEBPACK_IMPORTED_MODULE_3__["Linear"] || type === vega_scale__WEBPACK_IMPORTED_MODULE_3__["Pow"] || type === vega_scale__WEBPACK_IMPORTED_MODULE_3__["Sqrt"]
  );
}

function includePad(type) {
  return Object(vega_scale__WEBPACK_IMPORTED_MODULE_3__["isContinuous"])(type) && type !== vega_scale__WEBPACK_IMPORTED_MODULE_3__["Sequential"];
}

var SKIP = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["toSet"])([
  'set', 'modified', 'clear', 'type', 'scheme', 'schemeExtent', 'schemeCount',
  'domain', 'domainMin', 'domainMid', 'domainMax',
  'domainRaw', 'domainImplicit', 'nice', 'zero', 'bins',
  'range', 'rangeStep', 'round', 'reverse', 'interpolate', 'interpolateGamma'
]);

/**
 * Maintains a scale function mapping data values to visual channels.
 * @constructor
 * @param {object} params - The parameters for this operator.
 */
function Scale(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Transform"].call(this, null, params);
  this.modified(true); // always treat as modified
}

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["inherits"])(Scale, vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Transform"]);

prototype.transform = function(_, pulse) {
  var df = pulse.dataflow,
      scale = this.value,
      key = scaleKey(_);

  if (!scale || key !== scale.type) {
    this.value = scale = Object(vega_scale__WEBPACK_IMPORTED_MODULE_3__["scale"])(key)();
  }

  for (key in _) if (!SKIP[key]) {
    // padding is a scale property for band/point but not others
    if (key === 'padding' && includePad(scale.type)) continue;
    // invoke scale property setter, raise warning if not found
    Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["isFunction"])(scale[key])
      ? scale[key](_[key])
      : df.warn('Unsupported scale property: ' + key);
  }

  configureRange(scale, _,
    configureBins(scale, _, configureDomain(scale, _, df))
  );

  return pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS);
};

function scaleKey(_) {
  var t = _.type, d = '', n;

  // backwards compatibility pre Vega 5.
  if (t === vega_scale__WEBPACK_IMPORTED_MODULE_3__["Sequential"]) return vega_scale__WEBPACK_IMPORTED_MODULE_3__["Sequential"] + '-' + vega_scale__WEBPACK_IMPORTED_MODULE_3__["Linear"];

  if (isContinuousColor(_)) {
    n = _.rawDomain ? _.rawDomain.length
      : _.domain ? _.domain.length + +(_.domainMid != null)
      : 0;
    d = n === 2 ? vega_scale__WEBPACK_IMPORTED_MODULE_3__["Sequential"] + '-'
      : n === 3 ? vega_scale__WEBPACK_IMPORTED_MODULE_3__["Diverging"] + '-'
      : '';
  }

  return ((d + t) || vega_scale__WEBPACK_IMPORTED_MODULE_3__["Linear"]).toLowerCase();
}

function isContinuousColor(_) {
  const t = _.type;
  return Object(vega_scale__WEBPACK_IMPORTED_MODULE_3__["isContinuous"])(t) && t !== vega_scale__WEBPACK_IMPORTED_MODULE_3__["Time"] && t !== vega_scale__WEBPACK_IMPORTED_MODULE_3__["UTC"] && (
    _.scheme || _.range && _.range.length && _.range.every(vega_util__WEBPACK_IMPORTED_MODULE_2__["isString"])
  );
}

function configureDomain(scale, _, df) {
  // check raw domain, if provided use that and exit early
  var raw = rawDomain(scale, _.domainRaw, df);
  if (raw > -1) return raw;

  var domain = _.domain,
      type = scale.type,
      zero = _.zero || (_.zero === undefined && includeZero(scale)),
      n, mid;

  if (!domain) return 0;

  // adjust continuous domain for minimum pixel padding
  if (includePad(type) && _.padding && domain[0] !== Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["peek"])(domain)) {
    domain = padDomain(type, domain, _.range, _.padding, _.exponent, _.constant);
  }

  // adjust domain based on zero, min, max settings
  if (zero || _.domainMin != null || _.domainMax != null || _.domainMid != null) {
    n = ((domain = domain.slice()).length - 1) || 1;
    if (zero) {
      if (domain[0] > 0) domain[0] = 0;
      if (domain[n] < 0) domain[n] = 0;
    }
    if (_.domainMin != null) domain[0] = _.domainMin;
    if (_.domainMax != null) domain[n] = _.domainMax;

    if (_.domainMid != null) {
      mid = _.domainMid;
      if (mid < domain[0] || mid > domain[n]) {
        df.warn('Scale domainMid exceeds domain min or max.', mid);
      }
      domain.splice(n, 0, mid);
    }
  }

  // set the scale domain
  scale.domain(domainCheck(type, domain, df));

  // if ordinal scale domain is defined, prevent implicit
  // domain construction as side-effect of scale lookup
  if (type === vega_scale__WEBPACK_IMPORTED_MODULE_3__["Ordinal"]) {
    scale.unknown(_.domainImplicit ? vega_scale__WEBPACK_IMPORTED_MODULE_3__["scaleImplicit"] : undefined);
  }

  // perform 'nice' adjustment as requested
  if (_.nice && scale.nice) {
    scale.nice((_.nice !== true && Object(_ticks__WEBPACK_IMPORTED_MODULE_0__["tickCount"])(scale, _.nice)) || null);
  }

  // return the cardinality of the domain
  return domain.length;
}

function rawDomain(scale, raw, df) {
  if (raw) {
    scale.domain(domainCheck(scale.type, raw, df));
    return raw.length;
  } else {
    return -1;
  }
}

function padDomain(type, domain, range, pad, exponent, constant) {
  var span = Math.abs(Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["peek"])(range) - range[0]),
      frac = span / (span - 2 * pad),
      d = type === vega_scale__WEBPACK_IMPORTED_MODULE_3__["Log"]    ? Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["zoomLog"])(domain, null, frac)
        : type === vega_scale__WEBPACK_IMPORTED_MODULE_3__["Sqrt"]   ? Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["zoomPow"])(domain, null, frac, 0.5)
        : type === vega_scale__WEBPACK_IMPORTED_MODULE_3__["Pow"]    ? Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["zoomPow"])(domain, null, frac, exponent || 1)
        : type === vega_scale__WEBPACK_IMPORTED_MODULE_3__["Symlog"] ? Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["zoomSymlog"])(domain, null, frac, constant || 1)
        : Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["zoomLinear"])(domain, null, frac);

  domain = domain.slice();
  domain[0] = d[0];
  domain[domain.length-1] = d[1];
  return domain;
}

function domainCheck(type, domain, df) {
  if (Object(vega_scale__WEBPACK_IMPORTED_MODULE_3__["isLogarithmic"])(type)) {
    // sum signs of domain values
    // if all pos or all neg, abs(sum) === domain.length
    var s = Math.abs(domain.reduce(function(s, v) {
      return s + (v < 0 ? -1 : v > 0 ? 1 : 0);
    }, 0));

    if (s !== domain.length) {
      df.warn('Log scale domain includes zero: ' + Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["stringValue"])(domain));
    }
  }
  return domain;
}

function configureBins(scale, _, count) {
  let bins = _.bins;

  if (bins && !Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["isArray"])(bins)) {
    // generate bin boundary array
    const domain = (bins.start == null || bins.stop == null) && scale.domain(),
          start = bins.start == null ? domain[0] : bins.start,
          stop = bins.stop == null ? Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["peek"])(domain) : bins.stop,
          step = bins.step;

    if (!step) Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["error"])('Scale bins parameter missing step property.');
    bins = Object(d3_array__WEBPACK_IMPORTED_MODULE_4__["range"])(start, stop + step, step);
  }

  if (bins) {
    // assign bin boundaries to scale instance
    scale.bins = bins;
  } else if (scale.bins) {
    // no current bins, remove bins if previously set
    delete scale.bins;
  }

  // special handling for bin-ordinal scales
  if (scale.type === vega_scale__WEBPACK_IMPORTED_MODULE_3__["BinOrdinal"]) {
    if (!bins) {
      // the domain specifies the bins
      scale.bins = scale.domain();
    } else if (!_.domain && !_.domainRaw) {
      // the bins specify the domain
      scale.domain(bins);
      count = bins.length;
    }
  }

  // return domain cardinality
  return count;
}

function configureRange(scale, _, count) {
  var round = _.round || false,
      range = _.range;

  // if range step specified, calculate full range extent
  if (_.rangeStep != null) {
    range = configureRangeStep(scale.type, _, count);
  }

  // else if a range scheme is defined, use that
  else if (_.scheme) {
    range = configureScheme(scale.type, _, count);
    if (Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["isFunction"])(range)) return scale.interpolator(range);
  }

  // given a range array for an interpolating scale, convert to interpolator
  else if (range && Object(vega_scale__WEBPACK_IMPORTED_MODULE_3__["isInterpolating"])(scale.type)) {
    return scale.interpolator(
      Object(vega_scale__WEBPACK_IMPORTED_MODULE_3__["interpolateColors"])(flip(range, _.reverse), _.interpolate, _.interpolateGamma)
    );
  }

  // configure rounding / interpolation
  if (range && _.interpolate && scale.interpolate) {
    scale.interpolate(Object(vega_scale__WEBPACK_IMPORTED_MODULE_3__["interpolate"])(_.interpolate, _.interpolateGamma));
  } else if (Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["isFunction"])(scale.round)) {
    scale.round(round);
  } else if (Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["isFunction"])(scale.rangeRound)) {
    scale.interpolate(round ? d3_interpolate__WEBPACK_IMPORTED_MODULE_5__["interpolateRound"] : d3_interpolate__WEBPACK_IMPORTED_MODULE_5__["interpolate"]);
  }

  if (range) scale.range(flip(range, _.reverse));
}

function configureRangeStep(type, _, count) {
  if (type !== vega_scale__WEBPACK_IMPORTED_MODULE_3__["Band"] && type !== vega_scale__WEBPACK_IMPORTED_MODULE_3__["Point"]) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["error"])('Only band and point scales support rangeStep.');
  }

  // calculate full range based on requested step size and padding
  var outer = (_.paddingOuter != null ? _.paddingOuter : _.padding) || 0,
      inner = type === vega_scale__WEBPACK_IMPORTED_MODULE_3__["Point"] ? 1
            : ((_.paddingInner != null ? _.paddingInner : _.padding) || 0);
  return [0, _.rangeStep * Object(vega_scale__WEBPACK_IMPORTED_MODULE_3__["bandSpace"])(count, inner, outer)];
}

function configureScheme(type, _, count) {
  var extent = _.schemeExtent,
      name, scheme;

  if (Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["isArray"])(_.scheme)) {
    scheme = Object(vega_scale__WEBPACK_IMPORTED_MODULE_3__["interpolateColors"])(_.scheme, _.interpolate, _.interpolateGamma);
  } else {
    name = _.scheme.toLowerCase();
    scheme = Object(vega_scale__WEBPACK_IMPORTED_MODULE_3__["scheme"])(name);
    if (!scheme) Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["error"])('Unrecognized scheme name: ' + _.scheme);
  }

  // determine size for potential discrete range
  count = (type === vega_scale__WEBPACK_IMPORTED_MODULE_3__["Threshold"]) ? count + 1
    : (type === vega_scale__WEBPACK_IMPORTED_MODULE_3__["BinOrdinal"]) ? count - 1
    : (type === vega_scale__WEBPACK_IMPORTED_MODULE_3__["Quantile"] || type === vega_scale__WEBPACK_IMPORTED_MODULE_3__["Quantize"]) ? (+_.schemeCount || DEFAULT_COUNT)
    : count;

  // adjust and/or quantize scheme as appropriate
  return Object(vega_scale__WEBPACK_IMPORTED_MODULE_3__["isInterpolating"])(type) ? adjustScheme(scheme, extent, _.reverse)
    : Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["isFunction"])(scheme) ? Object(vega_scale__WEBPACK_IMPORTED_MODULE_3__["quantizeInterpolator"])(adjustScheme(scheme, extent), count)
    : type === vega_scale__WEBPACK_IMPORTED_MODULE_3__["Ordinal"] ? scheme : scheme.slice(0, count);
}

function adjustScheme(scheme, extent, reverse) {
  return (Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["isFunction"])(scheme) && (extent || reverse))
    ? Object(vega_scale__WEBPACK_IMPORTED_MODULE_3__["interpolateRange"])(scheme, flip(extent || [0, 1], reverse))
    : scheme;
}

function flip(array, reverse) {
  return reverse ? array.slice().reverse() : array;
}



/***/ }),

/***/ "./node_modules/vega-encode/src/SortItems.js":
/*!***************************************************!*\
  !*** ./node_modules/vega-encode/src/SortItems.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return SortItems; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");



/**
 * Sorts scenegraph items in the pulse source array.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(*,*): number} [params.sort] - A comparator
 *   function for sorting tuples.
 */
function SortItems(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, null, params);
}

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(SortItems, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

prototype.transform = function(_, pulse) {
  var mod = _.modified('sort')
         || pulse.changed(pulse.ADD)
         || pulse.modified(_.sort.fields)
         || pulse.modified('datum');

  if (mod) pulse.source.sort(_.sort);

  this.modified(mod);
  return pulse;
};


/***/ }),

/***/ "./node_modules/vega-encode/src/Stack.js":
/*!***********************************************!*\
  !*** ./node_modules/vega-encode/src/Stack.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Stack; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");



var Zero = 'zero',
    Center = 'center',
    Normalize = 'normalize',
    DefOutput = ['y0', 'y1'];

/**
 * Stack layout for visualization elements.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(object): *} params.field - The value field to stack.
 * @param {Array<function(object): *>} [params.groupby] - An array of accessors to groupby.
 * @param {function(object,object): number} [params.sort] - A comparator for stack sorting.
 * @param {string} [offset='zero'] - One of 'zero', 'center', 'normalize'.
 */
function Stack(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, null, params);
}

Stack.Definition = {
  "type": "Stack",
  "metadata": {"modifies": true},
  "params": [
    { "name": "field", "type": "field" },
    { "name": "groupby", "type": "field", "array": true },
    { "name": "sort", "type": "compare" },
    { "name": "offset", "type": "enum", "default": Zero, "values": [Zero, Center, Normalize] },
    { "name": "as", "type": "string", "array": true, "length": 2, "default": DefOutput }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(Stack, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

prototype.transform = function(_, pulse) {
  var as = _.as || DefOutput,
      y0 = as[0],
      y1 = as[1],
      field = _.field || vega_util__WEBPACK_IMPORTED_MODULE_1__["one"],
      stack = _.offset === Center ? stackCenter
            : _.offset === Normalize ? stackNormalize
            : stackZero,
      groups, i, n, max;

  // partition, sum, and sort the stack groups
  groups = partition(pulse.source, _.groupby, _.sort, field);

  // compute stack layouts per group
  for (i=0, n=groups.length, max=groups.max; i<n; ++i) {
    stack(groups[i], max, field, y0, y1);
  }

  return pulse.reflow(_.modified()).modifies(as);
};

function stackCenter(group, max, field, y0, y1) {
  var last = (max - group.sum) / 2,
      m = group.length,
      j = 0, t;

  for (; j<m; ++j) {
    t = group[j];
    t[y0] = last;
    t[y1] = (last += Math.abs(field(t)));
  }
}

function stackNormalize(group, max, field, y0, y1) {
  var scale = 1 / group.sum,
      last = 0,
      m = group.length,
      j = 0, v = 0, t;

  for (; j<m; ++j) {
    t = group[j];
    t[y0] = last;
    t[y1] = last = scale * (v += Math.abs(field(t)));
  }
}

function stackZero(group, max, field, y0, y1) {
  var lastPos = 0,
      lastNeg = 0,
      m = group.length,
      j = 0, v, t;

  for (; j<m; ++j) {
    t = group[j];
    v = +field(t);
    if (v < 0) {
      t[y0] = lastNeg;
      t[y1] = (lastNeg += v);
    } else {
      t[y0] = lastPos;
      t[y1] = (lastPos += v);
    }
  }
}

function partition(data, groupby, sort, field) {
  var groups = [],
      get = function(f) { return f(t); },
      map, i, n, m, t, k, g, s, max;

  // partition data points into stack groups
  if (groupby == null) {
    groups.push(data.slice());
  } else {
    for (map={}, i=0, n=data.length; i<n; ++i) {
      t = data[i];
      k = groupby.map(get);
      g = map[k];
      if (!g) {
        map[k] = (g = []);
        groups.push(g);
      }
      g.push(t);
    }
  }

  // compute sums of groups, sort groups as needed
  for (k=0, max=0, m=groups.length; k<m; ++k) {
    g = groups[k];
    for (i=0, s=0, n=g.length; i<n; ++i) {
      s += Math.abs(field(g[i]));
    }
    g.sum = s;
    if (s > max) max = s;
    if (sort) g.sort(sort);
  }
  groups.max = max;

  return groups;
}


/***/ }),

/***/ "./node_modules/vega-encode/src/labels.js":
/*!************************************************!*\
  !*** ./node_modules/vega-encode/src/labels.js ***!
  \************************************************/
/*! exports provided: labelValues, thresholdFormat, labelFormat, labelFraction */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "labelValues", function() { return labelValues; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "thresholdFormat", function() { return thresholdFormat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "labelFormat", function() { return labelFormat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "labelFraction", function() { return labelFraction; });
/* harmony import */ var _legend_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./legend-types */ "./node_modules/vega-encode/src/legend-types.js");
/* harmony import */ var _ticks__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ticks */ "./node_modules/vega-encode/src/ticks.js");
/* harmony import */ var vega_scale__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-scale */ "./node_modules/vega-scale/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");






const symbols = {
  [vega_scale__WEBPACK_IMPORTED_MODULE_2__["Quantile"]]:  'quantiles',
  [vega_scale__WEBPACK_IMPORTED_MODULE_2__["Quantize"]]:  'thresholds',
  [vega_scale__WEBPACK_IMPORTED_MODULE_2__["Threshold"]]: 'domain'
};

const formats = {
  [vega_scale__WEBPACK_IMPORTED_MODULE_2__["Quantile"]]:  'quantiles',
  [vega_scale__WEBPACK_IMPORTED_MODULE_2__["Quantize"]]:  'domain'
};

function labelValues(scale, count) {
  return scale.bins ? binValues(scale.bins)
    : symbols[scale.type] ? thresholdValues(scale[symbols[scale.type]]())
    : Object(_ticks__WEBPACK_IMPORTED_MODULE_1__["tickValues"])(scale, count);
}

function thresholdFormat(scale, specifier) {
  var _ = scale[formats[scale.type]](),
      n = _.length,
      d = n > 1 ? _[1] - _[0] : _[0], i;

  for (i=1; i<n; ++i) {
    d = Math.min(d, _[i] - _[i-1]);
  }

  // 3 ticks times 10 for increased resolution
  return Object(vega_scale__WEBPACK_IMPORTED_MODULE_2__["tickFormat"])(0, d, 3 * 10, specifier);
}

function thresholdValues(thresholds) {
  const values = [-Infinity].concat(thresholds);
  values.max = +Infinity;

  return values;
}

function binValues(bins) {
  const values = bins.slice(0, -1);
  values.max = Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["peek"])(bins);

  return values;
}

function isDiscreteRange(scale) {
  return symbols[scale.type] || scale.bins;
}

function labelFormat(scale, count, type, specifier, formatType) {
  const format = formats[scale.type] && formatType !== vega_scale__WEBPACK_IMPORTED_MODULE_2__["Time"]
    ? thresholdFormat(scale, specifier)
    : Object(_ticks__WEBPACK_IMPORTED_MODULE_1__["tickFormat"])(scale, count, specifier, formatType);

  return type === _legend_types__WEBPACK_IMPORTED_MODULE_0__["Symbols"] && isDiscreteRange(scale) ? formatRange(format)
    : type === _legend_types__WEBPACK_IMPORTED_MODULE_0__["Discrete"] ? formatDiscrete(format)
    : formatPoint(format);
}

function formatRange(format) {
  return function(value, index, array) {
    var limit = array[index + 1] || array.max || +Infinity,
        lo = formatValue(value, format),
        hi = formatValue(limit, format);
    return lo && hi ? lo + '\u2013' + hi : hi ? '< ' + hi : '\u2265 ' + lo;
  };
}

function formatDiscrete(format) {
  return function(value, index) {
    return index ? format(value) : null;
  }
}

function formatPoint(format) {
  return function(value) {
    return format(value);
  };
}

function formatValue(value, format) {
  return isFinite(value) ? format(value) : null;
}

function labelFraction(scale) {
  var domain = scale.domain(),
      count = domain.length - 1,
      lo = +domain[0],
      hi = +Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["peek"])(domain),
      span = hi - lo;

  if (scale.type === vega_scale__WEBPACK_IMPORTED_MODULE_2__["Threshold"]) {
    var adjust = count ? span / count : 0.1;
    lo -= adjust;
    hi += adjust;
    span = hi - lo;
  }

  return function(value) {
    return (value - lo) / span;
  };
}


/***/ }),

/***/ "./node_modules/vega-encode/src/legend-types.js":
/*!******************************************************!*\
  !*** ./node_modules/vega-encode/src/legend-types.js ***!
  \******************************************************/
/*! exports provided: Symbols, Discrete, Gradient */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Symbols", function() { return Symbols; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Discrete", function() { return Discrete; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Gradient", function() { return Gradient; });
var Symbols  = 'symbol';
var Discrete = 'discrete';
var Gradient = 'gradient';


/***/ }),

/***/ "./node_modules/vega-encode/src/ticks.js":
/*!***********************************************!*\
  !*** ./node_modules/vega-encode/src/ticks.js ***!
  \***********************************************/
/*! exports provided: tickCount, validTicks, tickValues, tickFormat */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tickCount", function() { return tickCount; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "validTicks", function() { return validTicks; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tickValues", function() { return tickValues; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tickFormat", function() { return tickFormat; });
/* harmony import */ var vega_scale__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-scale */ "./node_modules/vega-scale/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var d3_time_format__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-time-format */ "./node_modules/d3-time-format/src/index.js");
/* harmony import */ var d3_format__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3-format */ "./node_modules/d3-format/src/index.js");





/**
 * Determine the tick count or interval function.
 * @param {Scale} scale - The scale for which to generate tick values.
 * @param {*} count - The desired tick count or interval specifier.
 * @param {number} minStep - The desired minimum step between tick values.
 * @return {*} - The tick count or interval function.
 */
function tickCount(scale, count, minStep) {
  var step;

  if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isNumber"])(count) && minStep != null) {
    count = Math.min(count, ~~(Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["span"])(scale.domain()) / minStep) || 1);
  }

  if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isObject"])(count)) {
    step = count.step;
    count = count.interval;
  }

  if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isString"])(count)) {
    count = Object(vega_scale__WEBPACK_IMPORTED_MODULE_0__["timeInterval"])(count, scale.type)
          || Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["error"])('Only time and utc scales accept interval strings.');
    if (step) count = count.every(step);
  }

  return count;
}

/**
 * Filter a set of candidate tick values, ensuring that only tick values
 * that lie within the scale range are included.
 * @param {Scale} scale - The scale for which to generate tick values.
 * @param {Array<*>} ticks - The candidate tick values.
 * @param {*} count - The tick count or interval function.
 * @return {Array<*>} - The filtered tick values.
 */
function validTicks(scale, ticks, count) {
  var range = scale.range(),
      lo = Math.floor(range[0]),
      hi = Math.ceil(Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["peek"])(range));

  if (lo > hi) {
    range = hi;
    hi = lo;
    lo = range;
  }

  ticks = ticks.filter(function(v) {
    v = scale(v);
    return lo <= v && v <= hi;
  });

  if (count > 0 && ticks.length > 1) {
    var endpoints = [ticks[0], Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["peek"])(ticks)];
    while (ticks.length > count && ticks.length >= 3) {
      ticks = ticks.filter(function(_, i) { return !(i % 2); });
    }
    if (ticks.length < 3) {
      ticks = endpoints;
    }
  }

  return ticks;
}

/**
 * Generate tick values for the given scale and approximate tick count or
 * interval value. If the scale has a 'ticks' method, it will be used to
 * generate the ticks, with the count argument passed as a parameter. If the
 * scale lacks a 'ticks' method, the full scale domain will be returned.
 * @param {Scale} scale - The scale for which to generate tick values.
 * @param {*} [count] - The approximate number of desired ticks.
 * @return {Array<*>} - The generated tick values.
 */
function tickValues(scale, count) {
  return scale.bins ? validTicks(scale, binValues(scale.bins, count))
    : scale.ticks ? scale.ticks(count)
    : scale.domain();
}

/**
 * Generate tick values for an array of bin values.
 * @param {Array<*>} bins - An array of bin boundaries.
 * @param {Number} [count] - The approximate number of desired ticks.
 * @return {Array<*>} - The generated tick values.
 */
function binValues(bins, count) {
  var n = bins.length,
      stride = ~~(n / (count || n));

  return stride < 2
    ? bins.slice()
    : bins.filter(function(x, i) { return !(i % stride); });
}

/**
 * Generate a label format function for a scale. If the scale has a
 * 'tickFormat' method, it will be used to generate the formatter, with the
 * count and specifier arguments passed as parameters. If the scale lacks a
 * 'tickFormat' method, the returned formatter performs simple string coercion.
 * If the input scale is a logarithmic scale and the format specifier does not
 * indicate a desired decimal precision, a special variable precision formatter
 * that automatically trims trailing zeroes will be generated.
 * @param {Scale} scale - The scale for which to generate the label formatter.
 * @param {*} [count] - The approximate number of desired ticks.
 * @param {string} [specifier] - The format specifier. Must be a legal d3
 *   specifier string (see https://github.com/d3/d3-format#formatSpecifier).
 * @return {function(*):string} - The generated label formatter.
 */
function tickFormat(scale, count, specifier, formatType) {
  var format = scale.tickFormat ? scale.tickFormat(count, specifier)
    : specifier && formatType === vega_scale__WEBPACK_IMPORTED_MODULE_0__["Time"] ? Object(d3_time_format__WEBPACK_IMPORTED_MODULE_2__["timeFormat"])(specifier)
    : specifier ? Object(d3_format__WEBPACK_IMPORTED_MODULE_3__["format"])(specifier)
    : String;

  if (Object(vega_scale__WEBPACK_IMPORTED_MODULE_0__["isLogarithmic"])(scale.type)) {
    var logfmt = variablePrecision(specifier);
    format = scale.bins ? logfmt : filter(format, logfmt);
  }

  return format;
}

function filter(sourceFormat, targetFormat) {
  return function(_) {
    return sourceFormat(_) ? targetFormat(_) : '';
  };
}

function variablePrecision(specifier) {
  var s = Object(d3_format__WEBPACK_IMPORTED_MODULE_3__["formatSpecifier"])(specifier || ',');

  if (s.precision == null) {
    s.precision = 12;
    switch (s.type) {
      case '%': s.precision -= 2; break;
      case 'e': s.precision -= 1; break;
    }
    return trimZeroes(
      Object(d3_format__WEBPACK_IMPORTED_MODULE_3__["format"])(s),          // number format
      Object(d3_format__WEBPACK_IMPORTED_MODULE_3__["format"])('.1f')(1)[1] // decimal point character
    );
  } else {
    return Object(d3_format__WEBPACK_IMPORTED_MODULE_3__["format"])(s);
  }
}

function trimZeroes(format, decimalChar) {
  return function(x) {
    var str = format(x),
        dec = str.indexOf(decimalChar),
        idx, end;

    if (dec < 0) return str;

    idx = rightmostDigit(str, dec);
    end = idx < str.length ? str.slice(idx) : '';
    while (--idx > dec) if (str[idx] !== '0') { ++idx; break; }

    return str.slice(0, idx) + end;
  };
}

function rightmostDigit(str, dec) {
  var i = str.lastIndexOf('e'), c;
  if (i > 0) return i;
  for (i=str.length; --i > dec;) {
    c = str.charCodeAt(i);
    if (c >= 48 && c <= 57) return i + 1; // is digit
  }
}


/***/ }),

/***/ "./node_modules/vega-event-selector/index.js":
/*!***************************************************!*\
  !*** ./node_modules/vega-event-selector/index.js ***!
  \***************************************************/
/*! exports provided: selector */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _src_event_selector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/event-selector */ "./node_modules/vega-event-selector/src/event-selector.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "selector", function() { return _src_event_selector__WEBPACK_IMPORTED_MODULE_0__["default"]; });




/***/ }),

/***/ "./node_modules/vega-event-selector/src/event-selector.js":
/*!****************************************************************!*\
  !*** ./node_modules/vega-event-selector/src/event-selector.js ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * Parse an event selector string.
 * Returns an array of event stream definitions.
 */
/* harmony default export */ __webpack_exports__["default"] = (function(selector, source, marks) {
  DEFAULT_SOURCE = source || VIEW;
  MARKS = marks || DEFAULT_MARKS;
  return parseMerge(selector.trim()).map(parseSelector);
});

var VIEW    = 'view',
    LBRACK  = '[',
    RBRACK  = ']',
    LBRACE  = '{',
    RBRACE  = '}',
    COLON   = ':',
    COMMA   = ',',
    NAME    = '@',
    GT      = '>',
    ILLEGAL = /[[\]{}]/,
    DEFAULT_SOURCE,
    MARKS,
    DEFAULT_MARKS = {
      '*': 1,
      arc: 1,
      area: 1,
      group: 1,
      image: 1,
      line: 1,
      path: 1,
      rect: 1,
      rule: 1,
      shape: 1,
      symbol: 1,
      text: 1,
      trail: 1
    };

function isMarkType(type) {
  return MARKS.hasOwnProperty(type);
}

function find(s, i, endChar, pushChar, popChar) {
  var count = 0,
      n = s.length,
      c;
  for (; i<n; ++i) {
    c = s[i];
    if (!count && c === endChar) return i;
    else if (popChar && popChar.indexOf(c) >= 0) --count;
    else if (pushChar && pushChar.indexOf(c) >= 0) ++count;
  }
  return i;
}

function parseMerge(s) {
  var output = [],
      start = 0,
      n = s.length,
      i = 0;

  while (i < n) {
    i = find(s, i, COMMA, LBRACK + LBRACE, RBRACK + RBRACE);
    output.push(s.substring(start, i).trim());
    start = ++i;
  }

  if (output.length === 0) {
    throw 'Empty event selector: ' + s;
  }
  return output;
}

function parseSelector(s) {
  return s[0] === '['
    ? parseBetween(s)
    : parseStream(s);
}

function parseBetween(s) {
  var n = s.length,
      i = 1,
      b, stream;

  i = find(s, i, RBRACK, LBRACK, RBRACK);
  if (i === n) {
    throw 'Empty between selector: ' + s;
  }

  b = parseMerge(s.substring(1, i));
  if (b.length !== 2) {
    throw 'Between selector must have two elements: ' + s;
  }

  s = s.slice(i + 1).trim();
  if (s[0] !== GT) {
    throw 'Expected \'>\' after between selector: ' + s;
  }

  b = b.map(parseSelector);

  stream = parseSelector(s.slice(1).trim());
  if (stream.between) {
    return {
      between: b,
      stream: stream
    };
  } else {
    stream.between = b;
  }

  return stream;
}

function parseStream(s) {
  var stream = {source: DEFAULT_SOURCE},
      source = [],
      throttle = [0, 0],
      markname = 0,
      start = 0,
      n = s.length,
      i = 0, j,
      filter;

  // extract throttle from end
  if (s[n-1] === RBRACE) {
    i = s.lastIndexOf(LBRACE);
    if (i >= 0) {
      try {
        throttle = parseThrottle(s.substring(i+1, n-1));
      } catch (e) {
        throw 'Invalid throttle specification: ' + s;
      }
      s = s.slice(0, i).trim();
      n = s.length;
    } else throw 'Unmatched right brace: ' + s;
    i = 0;
  }

  if (!n) throw s;

  // set name flag based on first char
  if (s[0] === NAME) markname = ++i;

  // extract first part of multi-part stream selector
  j = find(s, i, COLON);
  if (j < n) {
    source.push(s.substring(start, j).trim());
    start = i = ++j;
  }

  // extract remaining part of stream selector
  i = find(s, i, LBRACK);
  if (i === n) {
    source.push(s.substring(start, n).trim());
  } else {
    source.push(s.substring(start, i).trim());
    filter = [];
    start = ++i;
    if (start === n) throw 'Unmatched left bracket: ' + s;
  }

  // extract filters
  while (i < n) {
    i = find(s, i, RBRACK);
    if (i === n) throw 'Unmatched left bracket: ' + s;
    filter.push(s.substring(start, i).trim());
    if (i < n-1 && s[++i] !== LBRACK) throw 'Expected left bracket: ' + s;
    start = ++i;
  }

  // marshall event stream specification
  if (!(n = source.length) || ILLEGAL.test(source[n-1])) {
    throw 'Invalid event selector: ' + s;
  }

  if (n > 1) {
    stream.type = source[1];
    if (markname) {
      stream.markname = source[0].slice(1);
    } else if (isMarkType(source[0])) {
      stream.marktype = source[0];
    } else {
      stream.source = source[0];
    }
  } else {
    stream.type = source[0];
  }
  if (stream.type.slice(-1) === '!') {
    stream.consume = true;
    stream.type = stream.type.slice(0, -1)
  }
  if (filter != null) stream.filter = filter;
  if (throttle[0]) stream.throttle = throttle[0];
  if (throttle[1]) stream.debounce = throttle[1];

  return stream;
}

function parseThrottle(s) {
  var a = s.split(COMMA);
  if (!s.length || a.length > 2) throw s;
  return a.map(function(_) {
    var x = +_;
    if (x !== x) throw s;
    return x;
  });
}


/***/ }),

/***/ "./node_modules/vega-expression/index.js":
/*!***********************************************!*\
  !*** ./node_modules/vega-expression/index.js ***!
  \***********************************************/
/*! exports provided: RawCode, Literal, Property, Identifier, ArrayExpression, BinaryExpression, CallExpression, ConditionalExpression, LogicalExpression, MemberExpression, ObjectExpression, UnaryExpression, ASTNode, parse, codegen, functions, constants */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _src_ast__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/ast */ "./node_modules/vega-expression/src/ast.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RawCode", function() { return _src_ast__WEBPACK_IMPORTED_MODULE_0__["RawCode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Literal", function() { return _src_ast__WEBPACK_IMPORTED_MODULE_0__["Literal"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Property", function() { return _src_ast__WEBPACK_IMPORTED_MODULE_0__["Property"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Identifier", function() { return _src_ast__WEBPACK_IMPORTED_MODULE_0__["Identifier"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ArrayExpression", function() { return _src_ast__WEBPACK_IMPORTED_MODULE_0__["ArrayExpression"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BinaryExpression", function() { return _src_ast__WEBPACK_IMPORTED_MODULE_0__["BinaryExpression"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CallExpression", function() { return _src_ast__WEBPACK_IMPORTED_MODULE_0__["CallExpression"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ConditionalExpression", function() { return _src_ast__WEBPACK_IMPORTED_MODULE_0__["ConditionalExpression"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LogicalExpression", function() { return _src_ast__WEBPACK_IMPORTED_MODULE_0__["LogicalExpression"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MemberExpression", function() { return _src_ast__WEBPACK_IMPORTED_MODULE_0__["MemberExpression"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObjectExpression", function() { return _src_ast__WEBPACK_IMPORTED_MODULE_0__["ObjectExpression"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UnaryExpression", function() { return _src_ast__WEBPACK_IMPORTED_MODULE_0__["UnaryExpression"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ASTNode", function() { return _src_ast__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _src_parser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/parser */ "./node_modules/vega-expression/src/parser.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "parse", function() { return _src_parser__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _src_codegen__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/codegen */ "./node_modules/vega-expression/src/codegen.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "codegen", function() { return _src_codegen__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _src_functions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/functions */ "./node_modules/vega-expression/src/functions.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "functions", function() { return _src_functions__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _src_constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./src/constants */ "./node_modules/vega-expression/src/constants.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "constants", function() { return _src_constants__WEBPACK_IMPORTED_MODULE_4__["default"]; });









/***/ }),

/***/ "./node_modules/vega-expression/src/ast.js":
/*!*************************************************!*\
  !*** ./node_modules/vega-expression/src/ast.js ***!
  \*************************************************/
/*! exports provided: RawCode, Literal, Property, Identifier, ArrayExpression, BinaryExpression, CallExpression, ConditionalExpression, LogicalExpression, MemberExpression, ObjectExpression, UnaryExpression, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RawCode", function() { return RawCode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Literal", function() { return Literal; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Property", function() { return Property; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Identifier", function() { return Identifier; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ArrayExpression", function() { return ArrayExpression; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BinaryExpression", function() { return BinaryExpression; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CallExpression", function() { return CallExpression; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ConditionalExpression", function() { return ConditionalExpression; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LogicalExpression", function() { return LogicalExpression; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MemberExpression", function() { return MemberExpression; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ObjectExpression", function() { return ObjectExpression; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UnaryExpression", function() { return UnaryExpression; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return ASTNode; });
var RawCode = 'RawCode';
var Literal = 'Literal';
var Property = 'Property';
var Identifier = 'Identifier';

var ArrayExpression = 'ArrayExpression';
var BinaryExpression = 'BinaryExpression';
var CallExpression = 'CallExpression';
var ConditionalExpression = 'ConditionalExpression';
var LogicalExpression = 'LogicalExpression';
var MemberExpression = 'MemberExpression';
var ObjectExpression = 'ObjectExpression';
var UnaryExpression = 'UnaryExpression';

function ASTNode(type) {
  this.type = type;
}

ASTNode.prototype.visit = function(visitor) {
  var node = this, c, i, n;

  if (visitor(node)) return 1;

  for (c=children(node), i=0, n=c.length; i<n; ++i) {
    if (c[i].visit(visitor)) return 1;
  }
};

function children(node) {
  switch (node.type) {
    case ArrayExpression:
      return node.elements;
    case BinaryExpression:
    case LogicalExpression:
      return [node.left, node.right];
    case CallExpression:
      var args = node.arguments.slice();
      args.unshift(node.callee);
      return args;
    case ConditionalExpression:
      return [node.test, node.consequent, node.alternate];
    case MemberExpression:
      return [node.object, node.property];
    case ObjectExpression:
      return node.properties;
    case Property:
      return [node.key, node.value];
    case UnaryExpression:
      return [node.argument];
    case Identifier:
    case Literal:
    case RawCode:
    default:
      return [];
  }
}


/***/ }),

/***/ "./node_modules/vega-expression/src/codegen.js":
/*!*****************************************************!*\
  !*** ./node_modules/vega-expression/src/codegen.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ "./node_modules/vega-expression/src/constants.js");
/* harmony import */ var _functions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./functions */ "./node_modules/vega-expression/src/functions.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");




function stripQuotes(s) {
  var n = s && s.length - 1;
  return n && (
      (s[0]==='"' && s[n]==='"') ||
      (s[0]==='\'' && s[n]==='\'')
    ) ? s.slice(1, -1) : s;
}

/* harmony default export */ __webpack_exports__["default"] = (function(opt) {
  opt = opt || {};

  var whitelist = opt.whitelist ? Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["toSet"])(opt.whitelist) : {},
      blacklist = opt.blacklist ? Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["toSet"])(opt.blacklist) : {},
      constants = opt.constants || _constants__WEBPACK_IMPORTED_MODULE_0__["default"],
      functions = (opt.functions || _functions__WEBPACK_IMPORTED_MODULE_1__["default"])(visit),
      globalvar = opt.globalvar,
      fieldvar = opt.fieldvar,
      globals = {},
      fields = {},
      memberDepth = 0;

  var outputGlobal = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["isFunction"])(globalvar)
    ? globalvar
    : function (id) { return globalvar + '["' + id + '"]'; };

  function visit(ast) {
    if (Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["isString"])(ast)) return ast;
    var generator = Generators[ast.type];
    if (generator == null) Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["error"])('Unsupported type: ' + ast.type);
    return generator(ast);
  }

  var Generators = {
    Literal: function(n) {
        return n.raw;
      },

    Identifier: function(n) {
      var id = n.name;
      if (memberDepth > 0) {
        return id;
      } else if (blacklist.hasOwnProperty(id)) {
        return Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["error"])('Illegal identifier: ' + id);
      } else if (constants.hasOwnProperty(id)) {
        return constants[id];
      } else if (whitelist.hasOwnProperty(id)) {
        return id;
      } else {
        globals[id] = 1;
        return outputGlobal(id);
      }
    },

    MemberExpression: function(n) {
        var d = !n.computed;
        var o = visit(n.object);
        if (d) memberDepth += 1;
        var p = visit(n.property);
        if (o === fieldvar) {
          // strip quotes to sanitize field name (#1653)
          fields[stripQuotes(p)] = 1;
        }
        if (d) memberDepth -= 1;
        return o + (d ? '.'+p : '['+p+']');
      },

    CallExpression: function(n) {
        if (n.callee.type !== 'Identifier') {
          Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["error"])('Illegal callee type: ' + n.callee.type);
        }
        var callee = n.callee.name;
        var args = n.arguments;
        var fn = functions.hasOwnProperty(callee) && functions[callee];
        if (!fn) Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["error"])('Unrecognized function: ' + callee);
        return Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["isFunction"])(fn)
          ? fn(args)
          : fn + '(' + args.map(visit).join(',') + ')';
      },

    ArrayExpression: function(n) {
        return '[' + n.elements.map(visit).join(',') + ']';
      },

    BinaryExpression: function(n) {
        return '(' + visit(n.left) + n.operator + visit(n.right) + ')';
      },

    UnaryExpression: function(n) {
        return '(' + n.operator + visit(n.argument) + ')';
      },

    ConditionalExpression: function(n) {
        return '(' + visit(n.test) +
          '?' + visit(n.consequent) +
          ':' + visit(n.alternate) +
          ')';
      },

    LogicalExpression: function(n) {
        return '(' + visit(n.left) + n.operator + visit(n.right) + ')';
      },

    ObjectExpression: function(n) {
        return '{' + n.properties.map(visit).join(',') + '}';
      },

    Property: function(n) {
        memberDepth += 1;
        var k = visit(n.key);
        memberDepth -= 1;
        return k + ':' + visit(n.value);
      }
  };

  function codegen(ast) {
    var result = {
      code:    visit(ast),
      globals: Object.keys(globals),
      fields:  Object.keys(fields)
    };
    globals = {};
    fields = {};
    return result;
  }

  codegen.functions = functions;
  codegen.constants = constants;

  return codegen;
});


/***/ }),

/***/ "./node_modules/vega-expression/src/constants.js":
/*!*******************************************************!*\
  !*** ./node_modules/vega-expression/src/constants.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ({
  NaN:       'NaN',
  E:         'Math.E',
  LN2:       'Math.LN2',
  LN10:      'Math.LN10',
  LOG2E:     'Math.LOG2E',
  LOG10E:    'Math.LOG10E',
  PI:        'Math.PI',
  SQRT1_2:   'Math.SQRT1_2',
  SQRT2:     'Math.SQRT2',
  MIN_VALUE: 'Number.MIN_VALUE',
  MAX_VALUE: 'Number.MAX_VALUE'
});


/***/ }),

/***/ "./node_modules/vega-expression/src/functions.js":
/*!*******************************************************!*\
  !*** ./node_modules/vega-expression/src/functions.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");


/* harmony default export */ __webpack_exports__["default"] = (function(codegen) {

  function fncall(name, args, cast, type) {
    var obj = codegen(args[0]);
    if (cast) {
      obj = cast + '(' + obj + ')';
      if (cast.lastIndexOf('new ', 0) === 0) obj = '(' + obj + ')';
    }
    return obj + '.' + name + (type < 0 ? '' : type === 0 ?
      '()' :
      '(' + args.slice(1).map(codegen).join(',') + ')');
  }

  function fn(name, cast, type) {
    return function(args) {
      return fncall(name, args, cast, type);
    };
  }

  var DATE = 'new Date',
      STRING = 'String',
      REGEXP = 'RegExp';

  return {
    // MATH functions
    isNaN:    'isNaN',
    isFinite: 'isFinite',
    abs:      'Math.abs',
    acos:     'Math.acos',
    asin:     'Math.asin',
    atan:     'Math.atan',
    atan2:    'Math.atan2',
    ceil:     'Math.ceil',
    cos:      'Math.cos',
    exp:      'Math.exp',
    floor:    'Math.floor',
    log:      'Math.log',
    max:      'Math.max',
    min:      'Math.min',
    pow:      'Math.pow',
    random:   'Math.random',
    round:    'Math.round',
    sin:      'Math.sin',
    sqrt:     'Math.sqrt',
    tan:      'Math.tan',

    clamp: function(args) {
      if (args.length < 3) Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["error"])('Missing arguments to clamp function.');
      if (args.length > 3) Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["error"])('Too many arguments to clamp function.');
      var a = args.map(codegen);
      return 'Math.max('+a[1]+', Math.min('+a[2]+','+a[0]+'))';
    },

    // DATE functions
    now:             'Date.now',
    utc:             'Date.UTC',
    datetime:        DATE,
    date:            fn('getDate', DATE, 0),
    day:             fn('getDay', DATE, 0),
    year:            fn('getFullYear', DATE, 0),
    month:           fn('getMonth', DATE, 0),
    hours:           fn('getHours', DATE, 0),
    minutes:         fn('getMinutes', DATE, 0),
    seconds:         fn('getSeconds', DATE, 0),
    milliseconds:    fn('getMilliseconds', DATE, 0),
    time:            fn('getTime', DATE, 0),
    timezoneoffset:  fn('getTimezoneOffset', DATE, 0),
    utcdate:         fn('getUTCDate', DATE, 0),
    utcday:          fn('getUTCDay', DATE, 0),
    utcyear:         fn('getUTCFullYear', DATE, 0),
    utcmonth:        fn('getUTCMonth', DATE, 0),
    utchours:        fn('getUTCHours', DATE, 0),
    utcminutes:      fn('getUTCMinutes', DATE, 0),
    utcseconds:      fn('getUTCSeconds', DATE, 0),
    utcmilliseconds: fn('getUTCMilliseconds', DATE, 0),

    // sequence functions
    length:      fn('length', null, -1),
    join:        fn('join', null),
    indexof:     fn('indexOf', null),
    lastindexof: fn('lastIndexOf', null),
    slice:       fn('slice', null),

    reverse: function(args) {
      return '('+codegen(args[0])+').slice().reverse()';
    },

    // STRING functions
    parseFloat:  'parseFloat',
    parseInt:    'parseInt',
    upper:       fn('toUpperCase', STRING, 0),
    lower:       fn('toLowerCase', STRING, 0),
    substring:   fn('substring', STRING),
    split:       fn('split', STRING),
    replace:     fn('replace', STRING),
    trim:        fn('trim', STRING, 0),

    // REGEXP functions
    regexp:  REGEXP,
    test:    fn('test', REGEXP),

    // Control Flow functions
    if: function(args) {
        if (args.length < 3) Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["error"])('Missing arguments to if function.');
        if (args.length > 3) Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["error"])('Too many arguments to if function.');
        var a = args.map(codegen);
        return '('+a[0]+'?'+a[1]+':'+a[2]+')';
      }
  };
});


/***/ }),

/***/ "./node_modules/vega-expression/src/parser.js":
/*!****************************************************!*\
  !*** ./node_modules/vega-expression/src/parser.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ast__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ast */ "./node_modules/vega-expression/src/ast.js");
/*
  The following expression parser is based on Esprima (http://esprima.org/).
  Original header comment and license for Esprima is included here:

  Copyright (C) 2013 Ariya Hidayat <ariya.hidayat@gmail.com>
  Copyright (C) 2013 Thaddee Tyl <thaddee.tyl@gmail.com>
  Copyright (C) 2013 Mathias Bynens <mathias@qiwi.be>
  Copyright (C) 2012 Ariya Hidayat <ariya.hidayat@gmail.com>
  Copyright (C) 2012 Mathias Bynens <mathias@qiwi.be>
  Copyright (C) 2012 Joost-Wim Boekesteijn <joost-wim@boekesteijn.nl>
  Copyright (C) 2012 Kris Kowal <kris.kowal@cixar.com>
  Copyright (C) 2012 Yusuke Suzuki <utatane.tea@gmail.com>
  Copyright (C) 2012 Arpad Borsos <arpad.borsos@googlemail.com>
  Copyright (C) 2011 Ariya Hidayat <ariya.hidayat@gmail.com>

  Redistribution and use in source and binary forms, with or without
  modification, are permitted provided that the following conditions are met:

    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in the
      documentation and/or other materials provided with the distribution.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/


var TokenName,
    source,
    index,
    length,
    lookahead;

var TokenBooleanLiteral = 1,
    TokenEOF = 2,
    TokenIdentifier = 3,
    TokenKeyword = 4,
    TokenNullLiteral = 5,
    TokenNumericLiteral = 6,
    TokenPunctuator = 7,
    TokenStringLiteral = 8,
    TokenRegularExpression = 9;

TokenName = {};
TokenName[TokenBooleanLiteral] = 'Boolean';
TokenName[TokenEOF] = '<end>';
TokenName[TokenIdentifier] = 'Identifier';
TokenName[TokenKeyword] = 'Keyword';
TokenName[TokenNullLiteral] = 'Null';
TokenName[TokenNumericLiteral] = 'Numeric';
TokenName[TokenPunctuator] = 'Punctuator';
TokenName[TokenStringLiteral] = 'String';
TokenName[TokenRegularExpression] = 'RegularExpression';

var SyntaxArrayExpression = 'ArrayExpression',
    SyntaxBinaryExpression = 'BinaryExpression',
    SyntaxCallExpression = 'CallExpression',
    SyntaxConditionalExpression = 'ConditionalExpression',
    SyntaxIdentifier = 'Identifier',
    SyntaxLiteral = 'Literal',
    SyntaxLogicalExpression = 'LogicalExpression',
    SyntaxMemberExpression = 'MemberExpression',
    SyntaxObjectExpression = 'ObjectExpression',
    SyntaxProperty = 'Property',
    SyntaxUnaryExpression = 'UnaryExpression';

// Error messages should be identical to V8.
var MessageUnexpectedToken = 'Unexpected token %0',
    MessageUnexpectedNumber = 'Unexpected number',
    MessageUnexpectedString = 'Unexpected string',
    MessageUnexpectedIdentifier = 'Unexpected identifier',
    MessageUnexpectedReserved = 'Unexpected reserved word',
    MessageUnexpectedEOS = 'Unexpected end of input',
    MessageInvalidRegExp = 'Invalid regular expression',
    MessageUnterminatedRegExp = 'Invalid regular expression: missing /',
    MessageStrictOctalLiteral = 'Octal literals are not allowed in strict mode.',
    MessageStrictDuplicateProperty = 'Duplicate data property in object literal not allowed in strict mode';

var ILLEGAL = 'ILLEGAL',
    DISABLED = 'Disabled.';

// See also tools/generate-unicode-regex.py.
  var RegexNonAsciiIdentifierStart = new RegExp("[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B2\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA7AD\\uA7B0\\uA7B1\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB5F\\uAB64\\uAB65\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]"),
      RegexNonAsciiIdentifierPart = new RegExp("[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B2\\u08E4-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58\\u0C59\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D60-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFC-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA69D\\uA69F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA7AD\\uA7B0\\uA7B1\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C4\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB5F\\uAB64\\uAB65\\uABC0-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2D\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]");

// Ensure the condition is true, otherwise throw an error.
// This is only to have a better contract semantic, i.e. another safety net
// to catch a logic error. The condition shall be fulfilled in normal case.
// Do NOT use this to enforce a certain condition on any user input.

function assert(condition, message) {
  /* istanbul ignore next */
  if (!condition) {
    throw new Error('ASSERT: ' + message);
  }
}

function isDecimalDigit(ch) {
  return (ch >= 0x30 && ch <= 0x39); // 0..9
}

function isHexDigit(ch) {
  return '0123456789abcdefABCDEF'.indexOf(ch) >= 0;
}

function isOctalDigit(ch) {
  return '01234567'.indexOf(ch) >= 0;
}

// 7.2 White Space

function isWhiteSpace(ch) {
  return (ch === 0x20) || (ch === 0x09) || (ch === 0x0B) || (ch === 0x0C) || (ch === 0xA0) ||
    (ch >= 0x1680 && [0x1680, 0x180E, 0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A, 0x202F, 0x205F, 0x3000, 0xFEFF].indexOf(ch) >= 0);
}

// 7.3 Line Terminators

function isLineTerminator(ch) {
  return (ch === 0x0A) || (ch === 0x0D) || (ch === 0x2028) || (ch === 0x2029);
}

// 7.6 Identifier Names and Identifiers

function isIdentifierStart(ch) {
  return (ch === 0x24) || (ch === 0x5F) || // $ (dollar) and _ (underscore)
    (ch >= 0x41 && ch <= 0x5A) || // A..Z
    (ch >= 0x61 && ch <= 0x7A) || // a..z
    (ch === 0x5C) || // \ (backslash)
    ((ch >= 0x80) && RegexNonAsciiIdentifierStart.test(String.fromCharCode(ch)));
}

function isIdentifierPart(ch) {
  return (ch === 0x24) || (ch === 0x5F) || // $ (dollar) and _ (underscore)
    (ch >= 0x41 && ch <= 0x5A) || // A..Z
    (ch >= 0x61 && ch <= 0x7A) || // a..z
    (ch >= 0x30 && ch <= 0x39) || // 0..9
    (ch === 0x5C) || // \ (backslash)
    ((ch >= 0x80) && RegexNonAsciiIdentifierPart.test(String.fromCharCode(ch)));
}

// 7.6.1.1 Keywords

var keywords = {
  'if':1, 'in':1, 'do':1,
  'var':1, 'for':1, 'new':1, 'try':1, 'let':1,
  'this':1, 'else':1, 'case':1, 'void':1, 'with':1, 'enum':1,
  'while':1, 'break':1, 'catch':1, 'throw':1, 'const':1, 'yield':1, 'class':1, 'super':1,
  'return':1, 'typeof':1, 'delete':1, 'switch':1, 'export':1, 'import':1, 'public':1, 'static':1,
  'default':1, 'finally':1, 'extends':1, 'package':1, 'private':1,
  'function':1, 'continue':1, 'debugger':1,
  'interface':1, 'protected':1,
  'instanceof':1, 'implements':1
};

function skipComment() {
  var ch;

  while (index < length) {
    ch = source.charCodeAt(index);

    if (isWhiteSpace(ch) || isLineTerminator(ch)) {
      ++index;
    } else {
      break;
    }
  }
}

function scanHexEscape(prefix) {
  var i, len, ch, code = 0;

  len = (prefix === 'u') ? 4 : 2;
  for (i = 0; i < len; ++i) {
    if (index < length && isHexDigit(source[index])) {
      ch = source[index++];
      code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());
    } else {
      throwError({}, MessageUnexpectedToken, ILLEGAL);
    }
  }
  return String.fromCharCode(code);
}

function scanUnicodeCodePointEscape() {
  var ch, code, cu1, cu2;

  ch = source[index];
  code = 0;

  // At least, one hex digit is required.
  if (ch === '}') {
    throwError({}, MessageUnexpectedToken, ILLEGAL);
  }

  while (index < length) {
    ch = source[index++];
    if (!isHexDigit(ch)) {
      break;
    }
    code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());
  }

  if (code > 0x10FFFF || ch !== '}') {
    throwError({}, MessageUnexpectedToken, ILLEGAL);
  }

  // UTF-16 Encoding
  if (code <= 0xFFFF) {
    return String.fromCharCode(code);
  }
  cu1 = ((code - 0x10000) >> 10) + 0xD800;
  cu2 = ((code - 0x10000) & 1023) + 0xDC00;
  return String.fromCharCode(cu1, cu2);
}

function getEscapedIdentifier() {
  var ch, id;

  ch = source.charCodeAt(index++);
  id = String.fromCharCode(ch);

  // '\u' (U+005C, U+0075) denotes an escaped character.
  if (ch === 0x5C) {
    if (source.charCodeAt(index) !== 0x75) {
      throwError({}, MessageUnexpectedToken, ILLEGAL);
    }
    ++index;
    ch = scanHexEscape('u');
    if (!ch || ch === '\\' || !isIdentifierStart(ch.charCodeAt(0))) {
      throwError({}, MessageUnexpectedToken, ILLEGAL);
    }
    id = ch;
  }

  while (index < length) {
    ch = source.charCodeAt(index);
    if (!isIdentifierPart(ch)) {
      break;
    }
    ++index;
    id += String.fromCharCode(ch);

    // '\u' (U+005C, U+0075) denotes an escaped character.
    if (ch === 0x5C) {
      id = id.substr(0, id.length - 1);
      if (source.charCodeAt(index) !== 0x75) {
        throwError({}, MessageUnexpectedToken, ILLEGAL);
      }
      ++index;
      ch = scanHexEscape('u');
      if (!ch || ch === '\\' || !isIdentifierPart(ch.charCodeAt(0))) {
        throwError({}, MessageUnexpectedToken, ILLEGAL);
      }
      id += ch;
    }
  }

  return id;
}

function getIdentifier() {
  var start, ch;

  start = index++;
  while (index < length) {
    ch = source.charCodeAt(index);
    if (ch === 0x5C) {
      // Blackslash (U+005C) marks Unicode escape sequence.
      index = start;
      return getEscapedIdentifier();
    }
    if (isIdentifierPart(ch)) {
      ++index;
    } else {
      break;
    }
  }

  return source.slice(start, index);
}

function scanIdentifier() {
  var start, id, type;

  start = index;

  // Backslash (U+005C) starts an escaped character.
  id = (source.charCodeAt(index) === 0x5C) ? getEscapedIdentifier() : getIdentifier();

  // There is no keyword or literal with only one character.
  // Thus, it must be an identifier.
  if (id.length === 1) {
    type = TokenIdentifier;
  } else if (keywords.hasOwnProperty(id)) {
    type = TokenKeyword;
  } else if (id === 'null') {
    type = TokenNullLiteral;
  } else if (id === 'true' || id === 'false') {
    type = TokenBooleanLiteral;
  } else {
    type = TokenIdentifier;
  }

  return {
    type: type,
    value: id,
    start: start,
    end: index
  };
}

// 7.7 Punctuators

function scanPunctuator() {
  var start = index,
    code = source.charCodeAt(index),
    code2,
    ch1 = source[index],
    ch2,
    ch3,
    ch4;

  switch (code) {

    // Check for most common single-character punctuators.
    case 0x2E: // . dot
    case 0x28: // ( open bracket
    case 0x29: // ) close bracket
    case 0x3B: // ; semicolon
    case 0x2C: // , comma
    case 0x7B: // { open curly brace
    case 0x7D: // } close curly brace
    case 0x5B: // [
    case 0x5D: // ]
    case 0x3A: // :
    case 0x3F: // ?
    case 0x7E: // ~
      ++index;
      return {
        type: TokenPunctuator,
        value: String.fromCharCode(code),
        start: start,
        end: index
      };

    default:
      code2 = source.charCodeAt(index + 1);

      // '=' (U+003D) marks an assignment or comparison operator.
      if (code2 === 0x3D) {
        switch (code) {
          case 0x2B: // +
          case 0x2D: // -
          case 0x2F: // /
          case 0x3C: // <
          case 0x3E: // >
          case 0x5E: // ^
          case 0x7C: // |
          case 0x25: // %
          case 0x26: // &
          case 0x2A: // *
            index += 2;
            return {
              type: TokenPunctuator,
              value: String.fromCharCode(code) + String.fromCharCode(code2),
              start: start,
              end: index
            };

          case 0x21: // !
          case 0x3D: // =
            index += 2;

            // !== and ===
            if (source.charCodeAt(index) === 0x3D) {
              ++index;
            }
            return {
              type: TokenPunctuator,
              value: source.slice(start, index),
              start: start,
              end: index
            };
        }
      }
  }

  // 4-character punctuator: >>>=

  ch4 = source.substr(index, 4);

  if (ch4 === '>>>=') {
    index += 4;
    return {
      type: TokenPunctuator,
      value: ch4,
      start: start,
      end: index
    };
  }

  // 3-character punctuators: === !== >>> <<= >>=

  ch3 = ch4.substr(0, 3);

  if (ch3 === '>>>' || ch3 === '<<=' || ch3 === '>>=') {
    index += 3;
    return {
      type: TokenPunctuator,
      value: ch3,
      start: start,
      end: index
    };
  }

  // Other 2-character punctuators: ++ -- << >> && ||
  ch2 = ch3.substr(0, 2);

  if ((ch1 === ch2[1] && ('+-<>&|'.indexOf(ch1) >= 0)) || ch2 === '=>') {
    index += 2;
    return {
      type: TokenPunctuator,
      value: ch2,
      start: start,
      end: index
    };
  }

  // 1-character punctuators: < > = ! + - * % & | ^ /

  if ('<>=!+-*%&|^/'.indexOf(ch1) >= 0) {
    ++index;
    return {
      type: TokenPunctuator,
      value: ch1,
      start: start,
      end: index
    };
  }

  throwError({}, MessageUnexpectedToken, ILLEGAL);
}

// 7.8.3 Numeric Literals

function scanHexLiteral(start) {
  var number = '';

  while (index < length) {
    if (!isHexDigit(source[index])) {
      break;
    }
    number += source[index++];
  }

  if (number.length === 0) {
    throwError({}, MessageUnexpectedToken, ILLEGAL);
  }

  if (isIdentifierStart(source.charCodeAt(index))) {
    throwError({}, MessageUnexpectedToken, ILLEGAL);
  }

  return {
    type: TokenNumericLiteral,
    value: parseInt('0x' + number, 16),
    start: start,
    end: index
  };
}

function scanOctalLiteral(start) {
  var number = '0' + source[index++];
  while (index < length) {
    if (!isOctalDigit(source[index])) {
      break;
    }
    number += source[index++];
  }

  if (isIdentifierStart(source.charCodeAt(index)) || isDecimalDigit(source.charCodeAt(index))) {
    throwError({}, MessageUnexpectedToken, ILLEGAL);
  }

  return {
    type: TokenNumericLiteral,
    value: parseInt(number, 8),
    octal: true,
    start: start,
    end: index
  };
}

function scanNumericLiteral() {
  var number, start, ch;

  ch = source[index];
  assert(isDecimalDigit(ch.charCodeAt(0)) || (ch === '.'),
    'Numeric literal must start with a decimal digit or a decimal point');

  start = index;
  number = '';
  if (ch !== '.') {
    number = source[index++];
    ch = source[index];

    // Hex number starts with '0x'.
    // Octal number starts with '0'.
    if (number === '0') {
      if (ch === 'x' || ch === 'X') {
        ++index;
        return scanHexLiteral(start);
      }
      if (isOctalDigit(ch)) {
        return scanOctalLiteral(start);
      }

      // decimal number starts with '0' such as '09' is illegal.
      if (ch && isDecimalDigit(ch.charCodeAt(0))) {
        throwError({}, MessageUnexpectedToken, ILLEGAL);
      }
    }

    while (isDecimalDigit(source.charCodeAt(index))) {
      number += source[index++];
    }
    ch = source[index];
  }

  if (ch === '.') {
    number += source[index++];
    while (isDecimalDigit(source.charCodeAt(index))) {
      number += source[index++];
    }
    ch = source[index];
  }

  if (ch === 'e' || ch === 'E') {
    number += source[index++];

    ch = source[index];
    if (ch === '+' || ch === '-') {
      number += source[index++];
    }
    if (isDecimalDigit(source.charCodeAt(index))) {
      while (isDecimalDigit(source.charCodeAt(index))) {
        number += source[index++];
      }
    } else {
      throwError({}, MessageUnexpectedToken, ILLEGAL);
    }
  }

  if (isIdentifierStart(source.charCodeAt(index))) {
    throwError({}, MessageUnexpectedToken, ILLEGAL);
  }

  return {
    type: TokenNumericLiteral,
    value: parseFloat(number),
    start: start,
    end: index
  };
}

// 7.8.4 String Literals

function scanStringLiteral() {
  var str = '',
    quote, start, ch, code, octal = false;

  quote = source[index];
  assert((quote === '\'' || quote === '"'),
    'String literal must starts with a quote');

  start = index;
  ++index;

  while (index < length) {
    ch = source[index++];

    if (ch === quote) {
      quote = '';
      break;
    } else if (ch === '\\') {
      ch = source[index++];
      if (!ch || !isLineTerminator(ch.charCodeAt(0))) {
        switch (ch) {
          case 'u':
          case 'x':
            if (source[index] === '{') {
              ++index;
              str += scanUnicodeCodePointEscape();
            } else {
              str += scanHexEscape(ch);
            }
            break;
          case 'n':
            str += '\n';
            break;
          case 'r':
            str += '\r';
            break;
          case 't':
            str += '\t';
            break;
          case 'b':
            str += '\b';
            break;
          case 'f':
            str += '\f';
            break;
          case 'v':
            str += '\x0B';
            break;

          default:
            if (isOctalDigit(ch)) {
              code = '01234567'.indexOf(ch);

              // \0 is not octal escape sequence
              if (code !== 0) {
                octal = true;
              }

              if (index < length && isOctalDigit(source[index])) {
                octal = true;
                code = code * 8 + '01234567'.indexOf(source[index++]);

                // 3 digits are only allowed when string starts
                // with 0, 1, 2, 3
                if ('0123'.indexOf(ch) >= 0 &&
                  index < length &&
                  isOctalDigit(source[index])) {
                  code = code * 8 + '01234567'.indexOf(source[index++]);
                }
              }
              str += String.fromCharCode(code);
            } else {
              str += ch;
            }
            break;
        }
      } else {
        if (ch === '\r' && source[index] === '\n') {
          ++index;
        }
      }
    } else if (isLineTerminator(ch.charCodeAt(0))) {
      break;
    } else {
      str += ch;
    }
  }

  if (quote !== '') {
    throwError({}, MessageUnexpectedToken, ILLEGAL);
  }

  return {
    type: TokenStringLiteral,
    value: str,
    octal: octal,
    start: start,
    end: index
  };
}

function testRegExp(pattern, flags) {
  var tmp = pattern;

  if (flags.indexOf('u') >= 0) {
    // Replace each astral symbol and every Unicode code point
    // escape sequence with a single ASCII symbol to avoid throwing on
    // regular expressions that are only valid in combination with the
    // `/u` flag.
    // Note: replacing with the ASCII symbol `x` might cause false
    // negatives in unlikely scenarios. For example, `[\u{61}-b]` is a
    // perfectly valid pattern that is equivalent to `[a-b]`, but it
    // would be replaced by `[x-b]` which throws an error.
    tmp = tmp
      .replace(/\\u\{([0-9a-fA-F]+)\}/g, function($0, $1) {
        if (parseInt($1, 16) <= 0x10FFFF) {
          return 'x';
        }
        throwError({}, MessageInvalidRegExp);
      })
      .replace(/[\uD800-\uDBFF][\uDC00-\uDFFF]/g, 'x');
  }

  // First, detect invalid regular expressions.
  try {
    new RegExp(tmp);
  } catch (e) {
    throwError({}, MessageInvalidRegExp);
  }

  // Return a regular expression object for this pattern-flag pair, or
  // `null` in case the current environment doesn't support the flags it
  // uses.
  try {
    return new RegExp(pattern, flags);
  } catch (exception) {
    return null;
  }
}

function scanRegExpBody() {
  var ch, str, classMarker, terminated, body;

  ch = source[index];
  assert(ch === '/', 'Regular expression literal must start with a slash');
  str = source[index++];

  classMarker = false;
  terminated = false;
  while (index < length) {
    ch = source[index++];
    str += ch;
    if (ch === '\\') {
      ch = source[index++];
      // ECMA-262 7.8.5
      if (isLineTerminator(ch.charCodeAt(0))) {
        throwError({}, MessageUnterminatedRegExp);
      }
      str += ch;
    } else if (isLineTerminator(ch.charCodeAt(0))) {
      throwError({}, MessageUnterminatedRegExp);
    } else if (classMarker) {
      if (ch === ']') {
        classMarker = false;
      }
    } else {
      if (ch === '/') {
        terminated = true;
        break;
      } else if (ch === '[') {
        classMarker = true;
      }
    }
  }

  if (!terminated) {
    throwError({}, MessageUnterminatedRegExp);
  }

  // Exclude leading and trailing slash.
  body = str.substr(1, str.length - 2);
  return {
    value: body,
    literal: str
  };
}

function scanRegExpFlags() {
  var ch, str, flags;

  str = '';
  flags = '';
  while (index < length) {
    ch = source[index];
    if (!isIdentifierPart(ch.charCodeAt(0))) {
      break;
    }

    ++index;
    if (ch === '\\' && index < length) {
      throwError({}, MessageUnexpectedToken, ILLEGAL);
    } else {
      flags += ch;
      str += ch;
    }
  }

  if (flags.search(/[^gimuy]/g) >= 0) {
    throwError({}, MessageInvalidRegExp, flags);
  }

  return {
    value: flags,
    literal: str
  };
}

function scanRegExp() {
  var start, body, flags, value;

  lookahead = null;
  skipComment();
  start = index;

  body = scanRegExpBody();
  flags = scanRegExpFlags();
  value = testRegExp(body.value, flags.value);

  return {
    literal: body.literal + flags.literal,
    value: value,
    regex: {
      pattern: body.value,
      flags: flags.value
    },
    start: start,
    end: index
  };
}

function isIdentifierName(token) {
  return token.type === TokenIdentifier ||
    token.type === TokenKeyword ||
    token.type === TokenBooleanLiteral ||
    token.type === TokenNullLiteral;
}

function advance() {
  var ch;

  skipComment();

  if (index >= length) {
    return {
      type: TokenEOF,
      start: index,
      end: index
    };
  }

  ch = source.charCodeAt(index);

  if (isIdentifierStart(ch)) {
    return scanIdentifier();
  }

  // Very common: ( and ) and ;
  if (ch === 0x28 || ch === 0x29 || ch === 0x3B) {
    return scanPunctuator();
  }

  // String literal starts with single quote (U+0027) or double quote (U+0022).
  if (ch === 0x27 || ch === 0x22) {
    return scanStringLiteral();
  }


  // Dot (.) U+002E can also start a floating-point number, hence the need
  // to check the next character.
  if (ch === 0x2E) {
    if (isDecimalDigit(source.charCodeAt(index + 1))) {
      return scanNumericLiteral();
    }
    return scanPunctuator();
  }

  if (isDecimalDigit(ch)) {
    return scanNumericLiteral();
  }

  return scanPunctuator();
}

function lex() {
  var token;

  token = lookahead;
  index = token.end;

  lookahead = advance();

  index = token.end;

  return token;
}

function peek() {
  var pos;

  pos = index;

  lookahead = advance();
  index = pos;
}

function finishArrayExpression(elements) {
  var node = new _ast__WEBPACK_IMPORTED_MODULE_0__["default"](SyntaxArrayExpression);
  node.elements = elements;
  return node;
}

function finishBinaryExpression(operator, left, right) {
  var node = new _ast__WEBPACK_IMPORTED_MODULE_0__["default"]((operator === '||' || operator === '&&') ? SyntaxLogicalExpression : SyntaxBinaryExpression);
  node.operator = operator;
  node.left = left;
  node.right = right;
  return node;
}

function finishCallExpression(callee, args) {
  var node = new _ast__WEBPACK_IMPORTED_MODULE_0__["default"](SyntaxCallExpression);
  node.callee = callee;
  node.arguments = args;
  return node;
}

function finishConditionalExpression(test, consequent, alternate) {
  var node = new _ast__WEBPACK_IMPORTED_MODULE_0__["default"](SyntaxConditionalExpression);
  node.test = test;
  node.consequent = consequent;
  node.alternate = alternate;
  return node;
}

function finishIdentifier(name) {
  var node = new _ast__WEBPACK_IMPORTED_MODULE_0__["default"](SyntaxIdentifier);
  node.name = name;
  return node;
}

function finishLiteral(token) {
  var node = new _ast__WEBPACK_IMPORTED_MODULE_0__["default"](SyntaxLiteral);
  node.value = token.value;
  node.raw = source.slice(token.start, token.end);
  if (token.regex) {
    if (node.raw === '//') {
      node.raw = '/(?:)/';
    }
    node.regex = token.regex;
  }
  return node;
}

function finishMemberExpression(accessor, object, property) {
  var node = new _ast__WEBPACK_IMPORTED_MODULE_0__["default"](SyntaxMemberExpression);
  node.computed = accessor === '[';
  node.object = object;
  node.property = property;
  if (!node.computed) property.member = true;
  return node;
}

function finishObjectExpression(properties) {
  var node = new _ast__WEBPACK_IMPORTED_MODULE_0__["default"](SyntaxObjectExpression);
  node.properties = properties;
  return node;
}

function finishProperty(kind, key, value) {
  var node = new _ast__WEBPACK_IMPORTED_MODULE_0__["default"](SyntaxProperty);
  node.key = key;
  node.value = value;
  node.kind = kind;
  return node;
}

function finishUnaryExpression(operator, argument) {
  var node = new _ast__WEBPACK_IMPORTED_MODULE_0__["default"](SyntaxUnaryExpression);
  node.operator = operator;
  node.argument = argument;
  node.prefix = true;
  return node;
}

// Throw an exception

function throwError(token, messageFormat) {
  var error,
    args = Array.prototype.slice.call(arguments, 2),
    msg = messageFormat.replace(
      /%(\d)/g,
      function(whole, index) {
        assert(index < args.length, 'Message reference must be in range');
        return args[index];
      }
    );


  error = new Error(msg);
  error.index = index;
  error.description = msg;
  throw error;
}

// Throw an exception because of the token.

function throwUnexpected(token) {
  if (token.type === TokenEOF) {
    throwError(token, MessageUnexpectedEOS);
  }

  if (token.type === TokenNumericLiteral) {
    throwError(token, MessageUnexpectedNumber);
  }

  if (token.type === TokenStringLiteral) {
    throwError(token, MessageUnexpectedString);
  }

  if (token.type === TokenIdentifier) {
    throwError(token, MessageUnexpectedIdentifier);
  }

  if (token.type === TokenKeyword) {
    throwError(token, MessageUnexpectedReserved);
  }

  // BooleanLiteral, NullLiteral, or Punctuator.
  throwError(token, MessageUnexpectedToken, token.value);
}

// Expect the next token to match the specified punctuator.
// If not, an exception will be thrown.

function expect(value) {
  var token = lex();
  if (token.type !== TokenPunctuator || token.value !== value) {
    throwUnexpected(token);
  }
}

// Return true if the next token matches the specified punctuator.

function match(value) {
  return lookahead.type === TokenPunctuator && lookahead.value === value;
}

// Return true if the next token matches the specified keyword

function matchKeyword(keyword) {
  return lookahead.type === TokenKeyword && lookahead.value === keyword;
}

// 11.1.4 Array Initialiser

function parseArrayInitialiser() {
  var elements = [];

  index = lookahead.start;
  expect('[');

  while (!match(']')) {
    if (match(',')) {
      lex();
      elements.push(null);
    } else {
      elements.push(parseConditionalExpression());

      if (!match(']')) {
        expect(',');
      }
    }
  }

  lex();

  return finishArrayExpression(elements);
}

// 11.1.5 Object Initialiser

function parseObjectPropertyKey() {
  var token;

  index = lookahead.start;
  token = lex();

  // Note: This function is called only from parseObjectProperty(), where
  // EOF and Punctuator tokens are already filtered out.

  if (token.type === TokenStringLiteral || token.type === TokenNumericLiteral) {
    if (token.octal) {
      throwError(token, MessageStrictOctalLiteral);
    }
    return finishLiteral(token);
  }

  return finishIdentifier(token.value);
}

function parseObjectProperty() {
  var token, key, id, value;

  index = lookahead.start;
  token = lookahead;

  if (token.type === TokenIdentifier) {
    id = parseObjectPropertyKey();
    expect(':');
    value = parseConditionalExpression();
    return finishProperty('init', id, value);
  }
  if (token.type === TokenEOF || token.type === TokenPunctuator) {
    throwUnexpected(token);
  } else {
    key = parseObjectPropertyKey();
    expect(':');
    value = parseConditionalExpression();
    return finishProperty('init', key, value);
  }
}

function parseObjectInitialiser() {
  var properties = [],
    property, name, key, map = {},
    toString = String;

  index = lookahead.start;
  expect('{');

  while (!match('}')) {
    property = parseObjectProperty();

    if (property.key.type === SyntaxIdentifier) {
      name = property.key.name;
    } else {
      name = toString(property.key.value);
    }

    key = '$' + name;
    if (Object.prototype.hasOwnProperty.call(map, key)) {
      throwError({}, MessageStrictDuplicateProperty);
    } else {
      map[key] = true;
    }

    properties.push(property);

    if (!match('}')) {
      expect(',');
    }
  }

  expect('}');

  return finishObjectExpression(properties);
}

// 11.1.6 The Grouping Operator

function parseGroupExpression() {
  var expr;

  expect('(');

  expr = parseExpression();

  expect(')');

  return expr;
}


// 11.1 Primary Expressions

var legalKeywords = {
  "if": 1,
  "this": 1
};

function parsePrimaryExpression() {
  var type, token, expr;

  if (match('(')) {
    return parseGroupExpression();
  }

  if (match('[')) {
    return parseArrayInitialiser();
  }

  if (match('{')) {
    return parseObjectInitialiser();
  }

  type = lookahead.type;
  index = lookahead.start;


  if (type === TokenIdentifier || legalKeywords[lookahead.value]) {
    expr = finishIdentifier(lex().value);
  } else if (type === TokenStringLiteral || type === TokenNumericLiteral) {
    if (lookahead.octal) {
      throwError(lookahead, MessageStrictOctalLiteral);
    }
    expr = finishLiteral(lex());
  } else if (type === TokenKeyword) {
    throw new Error(DISABLED);
  } else if (type === TokenBooleanLiteral) {
    token = lex();
    token.value = (token.value === 'true');
    expr = finishLiteral(token);
  } else if (type === TokenNullLiteral) {
    token = lex();
    token.value = null;
    expr = finishLiteral(token);
  } else if (match('/') || match('/=')) {
    expr = finishLiteral(scanRegExp());
    peek();
  } else {
    throwUnexpected(lex());
  }

  return expr;
}

// 11.2 Left-Hand-Side Expressions

function parseArguments() {
  var args = [];

  expect('(');

  if (!match(')')) {
    while (index < length) {
      args.push(parseConditionalExpression());
      if (match(')')) {
        break;
      }
      expect(',');
    }
  }

  expect(')');

  return args;
}

function parseNonComputedProperty() {
  var token;
  index = lookahead.start;
  token = lex();

  if (!isIdentifierName(token)) {
    throwUnexpected(token);
  }

  return finishIdentifier(token.value);
}

function parseNonComputedMember() {
  expect('.');

  return parseNonComputedProperty();
}

function parseComputedMember() {
  var expr;

  expect('[');

  expr = parseExpression();

  expect(']');

  return expr;
}

function parseLeftHandSideExpressionAllowCall() {
  var expr, args, property;

  expr = parsePrimaryExpression();

  for (;;) {
    if (match('.')) {
      property = parseNonComputedMember();
      expr = finishMemberExpression('.', expr, property);
    } else if (match('(')) {
      args = parseArguments();
      expr = finishCallExpression(expr, args);
    } else if (match('[')) {
      property = parseComputedMember();
      expr = finishMemberExpression('[', expr, property);
    } else {
      break;
    }
  }

  return expr;
}

// 11.3 Postfix Expressions

function parsePostfixExpression() {
  var expr = parseLeftHandSideExpressionAllowCall();

  if (lookahead.type === TokenPunctuator) {
    if ((match('++') || match('--'))) {
      throw new Error(DISABLED);
    }
  }

  return expr;
}

// 11.4 Unary Operators

function parseUnaryExpression() {
  var token, expr;

  if (lookahead.type !== TokenPunctuator && lookahead.type !== TokenKeyword) {
    expr = parsePostfixExpression();
  } else if (match('++') || match('--')) {
    throw new Error(DISABLED);
  } else if (match('+') || match('-') || match('~') || match('!')) {
    token = lex();
    expr = parseUnaryExpression();
    expr = finishUnaryExpression(token.value, expr);
  } else if (matchKeyword('delete') || matchKeyword('void') || matchKeyword('typeof')) {
    throw new Error(DISABLED);
  } else {
    expr = parsePostfixExpression();
  }

  return expr;
}

function binaryPrecedence(token) {
  var prec = 0;

  if (token.type !== TokenPunctuator && token.type !== TokenKeyword) {
    return 0;
  }

  switch (token.value) {
    case '||':
      prec = 1;
      break;

    case '&&':
      prec = 2;
      break;

    case '|':
      prec = 3;
      break;

    case '^':
      prec = 4;
      break;

    case '&':
      prec = 5;
      break;

    case '==':
    case '!=':
    case '===':
    case '!==':
      prec = 6;
      break;

    case '<':
    case '>':
    case '<=':
    case '>=':
    case 'instanceof':
    case 'in':
      prec = 7;
      break;

    case '<<':
    case '>>':
    case '>>>':
      prec = 8;
      break;

    case '+':
    case '-':
      prec = 9;
      break;

    case '*':
    case '/':
    case '%':
      prec = 11;
      break;

    default:
      break;
  }

  return prec;
}

// 11.5 Multiplicative Operators
// 11.6 Additive Operators
// 11.7 Bitwise Shift Operators
// 11.8 Relational Operators
// 11.9 Equality Operators
// 11.10 Binary Bitwise Operators
// 11.11 Binary Logical Operators

function parseBinaryExpression() {
  var marker, markers, expr, token, prec, stack, right, operator, left, i;

  marker = lookahead;
  left = parseUnaryExpression();

  token = lookahead;
  prec = binaryPrecedence(token);
  if (prec === 0) {
    return left;
  }
  token.prec = prec;
  lex();

  markers = [marker, lookahead];
  right = parseUnaryExpression();

  stack = [left, token, right];

  while ((prec = binaryPrecedence(lookahead)) > 0) {

    // Reduce: make a binary expression from the three topmost entries.
    while ((stack.length > 2) && (prec <= stack[stack.length - 2].prec)) {
      right = stack.pop();
      operator = stack.pop().value;
      left = stack.pop();
      markers.pop();
      expr = finishBinaryExpression(operator, left, right);
      stack.push(expr);
    }

    // Shift.
    token = lex();
    token.prec = prec;
    stack.push(token);
    markers.push(lookahead);
    expr = parseUnaryExpression();
    stack.push(expr);
  }

  // Final reduce to clean-up the stack.
  i = stack.length - 1;
  expr = stack[i];
  markers.pop();
  while (i > 1) {
    markers.pop()
    expr = finishBinaryExpression(stack[i - 1].value, stack[i - 2], expr);
    i -= 2;
  }

  return expr;
}

// 11.12 Conditional Operator

function parseConditionalExpression() {
  var expr, consequent, alternate;

  expr = parseBinaryExpression();

  if (match('?')) {
    lex();
    consequent = parseConditionalExpression();
    expect(':');
    alternate = parseConditionalExpression();

    expr = finishConditionalExpression(expr, consequent, alternate);
  }

  return expr;
}

// 11.14 Comma Operator

function parseExpression() {
  var expr = parseConditionalExpression();

  if (match(',')) {
    throw new Error(DISABLED); // no sequence expressions
  }

  return expr;
}

/* harmony default export */ __webpack_exports__["default"] = (function(code) {
  source = code;
  index = 0;
  length = source.length;
  lookahead = null;

  peek();

  var expr = parseExpression();

  if (lookahead.type !== TokenEOF) {
    throw new Error("Unexpect token after expression.");
  }
  return expr;
});


/***/ }),

/***/ "./node_modules/vega-force/index.js":
/*!******************************************!*\
  !*** ./node_modules/vega-force/index.js ***!
  \******************************************/
/*! exports provided: force */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _src_Force__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/Force */ "./node_modules/vega-force/src/Force.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "force", function() { return _src_Force__WEBPACK_IMPORTED_MODULE_0__["default"]; });




/***/ }),

/***/ "./node_modules/vega-force/src/Force.js":
/*!**********************************************!*\
  !*** ./node_modules/vega-force/src/Force.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Force; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var d3_force__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-force */ "./node_modules/d3-force/src/index.js");




var ForceMap = {
  center: d3_force__WEBPACK_IMPORTED_MODULE_2__["forceCenter"],
  collide: d3_force__WEBPACK_IMPORTED_MODULE_2__["forceCollide"],
  nbody: d3_force__WEBPACK_IMPORTED_MODULE_2__["forceManyBody"],
  link: d3_force__WEBPACK_IMPORTED_MODULE_2__["forceLink"],
  x: d3_force__WEBPACK_IMPORTED_MODULE_2__["forceX"],
  y: d3_force__WEBPACK_IMPORTED_MODULE_2__["forceY"]
};

var Forces = 'forces',
    ForceParams = [
      'alpha', 'alphaMin', 'alphaTarget',
      'velocityDecay', 'forces'
    ],
    ForceConfig = ['static', 'iterations'],
    ForceOutput = ['x', 'y', 'vx', 'vy'];

/**
 * Force simulation layout.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {Array<object>} params.forces - The forces to apply.
 */
function Force(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, null, params);
}

Force.Definition = {
  "type": "Force",
  "metadata": {"modifies": true},
  "params": [
    { "name": "static", "type": "boolean", "default": false },
    { "name": "restart", "type": "boolean", "default": false },
    { "name": "iterations", "type": "number", "default": 300 },
    { "name": "alpha", "type": "number", "default": 1 },
    { "name": "alphaMin", "type": "number", "default": 0.001 },
    { "name": "alphaTarget", "type": "number", "default": 0 },
    { "name": "velocityDecay", "type": "number", "default": 0.4 },
    { "name": "forces", "type": "param", "array": true,
      "params": [
        {
          "key": {"force": "center"},
          "params": [
            { "name": "x", "type": "number", "default": 0 },
            { "name": "y", "type": "number", "default": 0 }
          ]
        },
        {
          "key": {"force": "collide"},
          "params": [
            { "name": "radius", "type": "number", "expr": true },
            { "name": "strength", "type": "number", "default": 0.7 },
            { "name": "iterations", "type": "number", "default": 1 }
          ]
        },
        {
          "key": {"force": "nbody"},
          "params": [
            { "name": "strength", "type": "number", "default": -30 },
            { "name": "theta", "type": "number", "default": 0.9 },
            { "name": "distanceMin", "type": "number", "default": 1 },
            { "name": "distanceMax", "type": "number" }
          ]
        },
        {
          "key": {"force": "link"},
          "params": [
            { "name": "links", "type": "data" },
            { "name": "id", "type": "field" },
            { "name": "distance", "type": "number", "default": 30, "expr": true },
            { "name": "strength", "type": "number", "expr": true },
            { "name": "iterations", "type": "number", "default": 1 }
          ]
        },
        {
          "key": {"force": "x"},
          "params": [
            { "name": "strength", "type": "number", "default": 0.1 },
            { "name": "x", "type": "field" }
          ]
        },
        {
          "key": {"force": "y"},
          "params": [
            { "name": "strength", "type": "number", "default": 0.1 },
            { "name": "y", "type": "field" }
          ]
        }
      ] },
    {
      "name": "as", "type": "string", "array": true, "modify": false,
      "default": ForceOutput
    }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(Force, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

prototype.transform = function(_, pulse) {
  var sim = this.value,
      change = pulse.changed(pulse.ADD_REM),
      params = _.modified(ForceParams),
      iters = _.iterations || 300;

  // configure simulation
  if (!sim) {
    this.value = sim = simulation(pulse.source, _);
    sim.on('tick', rerun(pulse.dataflow, this));
    if (!_.static) {
      change = true;
      sim.tick(); // ensure we run on init
    }
    pulse.modifies('index');
  } else {
    if (change) {
      pulse.modifies('index');
      sim.nodes(pulse.source);
    }
    if (params || pulse.changed(pulse.MOD)) {
      setup(sim, _, 0, pulse);
    }
  }

  // run simulation
  if (params || change || _.modified(ForceConfig)
      || (pulse.changed() && _.restart))
  {
    sim.alpha(Math.max(sim.alpha(), _.alpha || 1))
       .alphaDecay(1 - Math.pow(sim.alphaMin(), 1 / iters));

    if (_.static) {
      for (sim.stop(); --iters >= 0;) sim.tick();
    } else {
      if (sim.stopped()) sim.restart();
      if (!change) return pulse.StopPropagation; // defer to sim ticks
    }
  }

  return this.finish(_, pulse);
};

prototype.finish = function(_, pulse) {
  var dataflow = pulse.dataflow;

  // inspect dependencies, touch link source data
  for (var args=this._argops, j=0, m=args.length, arg; j<m; ++j) {
    arg = args[j];
    if (arg.name !== Forces || arg.op._argval.force !== 'link') {
      continue;
    }
    for (var ops=arg.op._argops, i=0, n=ops.length, op; i<n; ++i) {
      if (ops[i].name === 'links' && (op = ops[i].op.source)) {
        dataflow.pulse(op, dataflow.changeset().reflow());
        break;
      }
    }
  }

  // reflow all nodes
  return pulse.reflow(_.modified()).modifies(ForceOutput);
};

function rerun(df, op) {
  return function() { df.touch(op).run(); }
}

function simulation(nodes, _) {
  var sim = Object(d3_force__WEBPACK_IMPORTED_MODULE_2__["forceSimulation"])(nodes),
      stopped = false,
      stop = sim.stop,
      restart = sim.restart;

  sim.stopped = function() {
    return stopped;
  };
  sim.restart = function() {
    stopped = false;
    return restart();
  };
  sim.stop = function() {
    stopped = true;
    return stop();
  };

  return setup(sim, _, true).on('end', function() { stopped = true; });
}

function setup(sim, _, init, pulse) {
  var f = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["array"])(_.forces), i, n, p, name;

  for (i=0, n=ForceParams.length; i<n; ++i) {
    p = ForceParams[i];
    if (p !== Forces && _.modified(p)) sim[p](_[p]);
  }

  for (i=0, n=f.length; i<n; ++i) {
    name = Forces + i;
    p = init || _.modified(Forces, i) ? getForce(f[i])
      : pulse && modified(f[i], pulse) ? sim.force(name)
      : null;
    if (p) sim.force(name, p);
  }

  for (n=(sim.numForces || 0); i<n; ++i) {
    sim.force(Forces + i, null); // remove
  }

  sim.numForces = f.length;
  return sim;
}

function modified(f, pulse) {
  var k, v;
  for (k in f) {
    if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isFunction"])(v = f[k]) && pulse.modified(Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["accessorFields"])(v)))
      return 1;
  }
  return 0;
}

function getForce(_) {
  var f, p;

  if (!ForceMap.hasOwnProperty(_.force)) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["error"])('Unrecognized force: ' + _.force);
  }
  f = ForceMap[_.force]();

  for (p in _) {
    if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isFunction"])(f[p])) setForceParam(f[p], _[p], _);
  }

  return f;
}

function setForceParam(f, v, _) {
  f(Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isFunction"])(v) ? function(d) { return v(d, _); } : v);
}


/***/ }),

/***/ "./node_modules/vega-functions/index.js":
/*!**********************************************!*\
  !*** ./node_modules/vega-functions/index.js ***!
  \**********************************************/
/*! exports provided: codegenParams, codeGenerator, expressionFunction, functionContext, data, indata, setdata, encode, format, utcFormat, timeFormat, utcParse, timeParse, monthFormat, monthAbbrevFormat, dayFormat, dayAbbrevFormat, geoArea, geoBounds, geoCentroid, inScope, warn, info, debug, merge, modify, pinchDistance, pinchAngle, DataPrefix, IndexPrefix, ScalePrefix, SignalPrefix, range, domain, bandwidth, bandspace, copy, scale, invert, scaleGradient, geoShape, pathShape, treePath, treeAncestors, containerSize, screen, windowSize, dataVisitor, indataVisitor, scaleVisitor, formatLocale, timeFormatLocale */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _src_codegen__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/codegen */ "./node_modules/vega-functions/src/codegen.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "codegenParams", function() { return _src_codegen__WEBPACK_IMPORTED_MODULE_0__["codegenParams"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "codeGenerator", function() { return _src_codegen__WEBPACK_IMPORTED_MODULE_0__["codeGenerator"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "expressionFunction", function() { return _src_codegen__WEBPACK_IMPORTED_MODULE_0__["expressionFunction"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "functionContext", function() { return _src_codegen__WEBPACK_IMPORTED_MODULE_0__["functionContext"]; });

/* harmony import */ var _src_data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/data */ "./node_modules/vega-functions/src/data.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "data", function() { return _src_data__WEBPACK_IMPORTED_MODULE_1__["data"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "indata", function() { return _src_data__WEBPACK_IMPORTED_MODULE_1__["indata"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setdata", function() { return _src_data__WEBPACK_IMPORTED_MODULE_1__["setdata"]; });

/* harmony import */ var _src_encode__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/encode */ "./node_modules/vega-functions/src/encode.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "encode", function() { return _src_encode__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _src_format__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/format */ "./node_modules/vega-functions/src/format.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "format", function() { return _src_format__WEBPACK_IMPORTED_MODULE_3__["format"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcFormat", function() { return _src_format__WEBPACK_IMPORTED_MODULE_3__["utcFormat"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeFormat", function() { return _src_format__WEBPACK_IMPORTED_MODULE_3__["timeFormat"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcParse", function() { return _src_format__WEBPACK_IMPORTED_MODULE_3__["utcParse"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeParse", function() { return _src_format__WEBPACK_IMPORTED_MODULE_3__["timeParse"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "monthFormat", function() { return _src_format__WEBPACK_IMPORTED_MODULE_3__["monthFormat"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "monthAbbrevFormat", function() { return _src_format__WEBPACK_IMPORTED_MODULE_3__["monthAbbrevFormat"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dayFormat", function() { return _src_format__WEBPACK_IMPORTED_MODULE_3__["dayFormat"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dayAbbrevFormat", function() { return _src_format__WEBPACK_IMPORTED_MODULE_3__["dayAbbrevFormat"]; });

/* harmony import */ var _src_geo__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./src/geo */ "./node_modules/vega-functions/src/geo.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoArea", function() { return _src_geo__WEBPACK_IMPORTED_MODULE_4__["geoArea"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoBounds", function() { return _src_geo__WEBPACK_IMPORTED_MODULE_4__["geoBounds"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoCentroid", function() { return _src_geo__WEBPACK_IMPORTED_MODULE_4__["geoCentroid"]; });

/* harmony import */ var _src_inscope__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./src/inscope */ "./node_modules/vega-functions/src/inscope.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "inScope", function() { return _src_inscope__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _src_log__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./src/log */ "./node_modules/vega-functions/src/log.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "warn", function() { return _src_log__WEBPACK_IMPORTED_MODULE_6__["warn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "info", function() { return _src_log__WEBPACK_IMPORTED_MODULE_6__["info"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "debug", function() { return _src_log__WEBPACK_IMPORTED_MODULE_6__["debug"]; });

/* harmony import */ var _src_merge__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./src/merge */ "./node_modules/vega-functions/src/merge.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "merge", function() { return _src_merge__WEBPACK_IMPORTED_MODULE_7__["default"]; });

/* harmony import */ var _src_modify__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./src/modify */ "./node_modules/vega-functions/src/modify.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "modify", function() { return _src_modify__WEBPACK_IMPORTED_MODULE_8__["default"]; });

/* harmony import */ var _src_pinch__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./src/pinch */ "./node_modules/vega-functions/src/pinch.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pinchDistance", function() { return _src_pinch__WEBPACK_IMPORTED_MODULE_9__["pinchDistance"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pinchAngle", function() { return _src_pinch__WEBPACK_IMPORTED_MODULE_9__["pinchAngle"]; });

/* harmony import */ var _src_prefix_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./src/prefix.js */ "./node_modules/vega-functions/src/prefix.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DataPrefix", function() { return _src_prefix_js__WEBPACK_IMPORTED_MODULE_10__["DataPrefix"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "IndexPrefix", function() { return _src_prefix_js__WEBPACK_IMPORTED_MODULE_10__["IndexPrefix"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ScalePrefix", function() { return _src_prefix_js__WEBPACK_IMPORTED_MODULE_10__["ScalePrefix"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SignalPrefix", function() { return _src_prefix_js__WEBPACK_IMPORTED_MODULE_10__["SignalPrefix"]; });

/* harmony import */ var _src_scale__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./src/scale */ "./node_modules/vega-functions/src/scale.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "range", function() { return _src_scale__WEBPACK_IMPORTED_MODULE_11__["range"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "domain", function() { return _src_scale__WEBPACK_IMPORTED_MODULE_11__["domain"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bandwidth", function() { return _src_scale__WEBPACK_IMPORTED_MODULE_11__["bandwidth"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bandspace", function() { return _src_scale__WEBPACK_IMPORTED_MODULE_11__["bandspace"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "copy", function() { return _src_scale__WEBPACK_IMPORTED_MODULE_11__["copy"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scale", function() { return _src_scale__WEBPACK_IMPORTED_MODULE_11__["scale"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "invert", function() { return _src_scale__WEBPACK_IMPORTED_MODULE_11__["invert"]; });

/* harmony import */ var _src_scale_gradient__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./src/scale-gradient */ "./node_modules/vega-functions/src/scale-gradient.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleGradient", function() { return _src_scale_gradient__WEBPACK_IMPORTED_MODULE_12__["default"]; });

/* harmony import */ var _src_shape__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./src/shape */ "./node_modules/vega-functions/src/shape.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoShape", function() { return _src_shape__WEBPACK_IMPORTED_MODULE_13__["geoShape"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pathShape", function() { return _src_shape__WEBPACK_IMPORTED_MODULE_13__["pathShape"]; });

/* harmony import */ var _src_tree__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./src/tree */ "./node_modules/vega-functions/src/tree.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "treePath", function() { return _src_tree__WEBPACK_IMPORTED_MODULE_14__["treePath"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "treeAncestors", function() { return _src_tree__WEBPACK_IMPORTED_MODULE_14__["treeAncestors"]; });

/* harmony import */ var _src_window__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./src/window */ "./node_modules/vega-functions/src/window.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "containerSize", function() { return _src_window__WEBPACK_IMPORTED_MODULE_15__["containerSize"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "screen", function() { return _src_window__WEBPACK_IMPORTED_MODULE_15__["screen"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "windowSize", function() { return _src_window__WEBPACK_IMPORTED_MODULE_15__["windowSize"]; });

/* harmony import */ var _src_visitors__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./src/visitors */ "./node_modules/vega-functions/src/visitors.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dataVisitor", function() { return _src_visitors__WEBPACK_IMPORTED_MODULE_16__["dataVisitor"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "indataVisitor", function() { return _src_visitors__WEBPACK_IMPORTED_MODULE_16__["indataVisitor"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleVisitor", function() { return _src_visitors__WEBPACK_IMPORTED_MODULE_16__["scaleVisitor"]; });

/* harmony import */ var d3_format__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! d3-format */ "./node_modules/d3-format/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "formatLocale", function() { return d3_format__WEBPACK_IMPORTED_MODULE_17__["formatDefaultLocale"]; });

/* harmony import */ var d3_time_format__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! d3-time-format */ "./node_modules/d3-time-format/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeFormatLocale", function() { return d3_time_format__WEBPACK_IMPORTED_MODULE_18__["timeFormatDefaultLocale"]; });








































/***/ }),

/***/ "./node_modules/vega-functions/src/codegen.js":
/*!****************************************************!*\
  !*** ./node_modules/vega-functions/src/codegen.js ***!
  \****************************************************/
/*! exports provided: functionContext, expressionFunction, codegenParams, codeGenerator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "functionContext", function() { return functionContext; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "expressionFunction", function() { return expressionFunction; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "codegenParams", function() { return codegenParams; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "codeGenerator", function() { return codeGenerator; });
/* harmony import */ var vega_expression__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-expression */ "./node_modules/vega-expression/index.js");
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_selections__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-selections */ "./node_modules/vega-selections/index.js");
/* harmony import */ var vega_statistics__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vega-statistics */ "./node_modules/vega-statistics/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");
/* harmony import */ var d3_color__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! d3-color */ "./node_modules/d3-color/src/index.js");
/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./data */ "./node_modules/vega-functions/src/data.js");
/* harmony import */ var _encode__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./encode */ "./node_modules/vega-functions/src/encode.js");
/* harmony import */ var _format__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./format */ "./node_modules/vega-functions/src/format.js");
/* harmony import */ var _geo__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./geo */ "./node_modules/vega-functions/src/geo.js");
/* harmony import */ var _inscope__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./inscope */ "./node_modules/vega-functions/src/inscope.js");
/* harmony import */ var _intersect__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./intersect */ "./node_modules/vega-functions/src/intersect.js");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./log */ "./node_modules/vega-functions/src/log.js");
/* harmony import */ var _merge__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./merge */ "./node_modules/vega-functions/src/merge.js");
/* harmony import */ var _modify__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./modify */ "./node_modules/vega-functions/src/modify.js");
/* harmony import */ var _pinch__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./pinch */ "./node_modules/vega-functions/src/pinch.js");
/* harmony import */ var _scale__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./scale */ "./node_modules/vega-functions/src/scale.js");
/* harmony import */ var _scale_gradient__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./scale-gradient */ "./node_modules/vega-functions/src/scale-gradient.js");
/* harmony import */ var _shape__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./shape */ "./node_modules/vega-functions/src/shape.js");
/* harmony import */ var _tree__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./tree */ "./node_modules/vega-functions/src/tree.js");
/* harmony import */ var _window__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./window */ "./node_modules/vega-functions/src/window.js");
/* harmony import */ var _visitors__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./visitors */ "./node_modules/vega-functions/src/visitors.js");
/* harmony import */ var _prefix__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./prefix */ "./node_modules/vega-functions/src/prefix.js");
















































// Expression function context object
const functionContext = {
  random: function() { return Object(vega_statistics__WEBPACK_IMPORTED_MODULE_3__["random"])(); }, // override default
  isArray: vega_util__WEBPACK_IMPORTED_MODULE_4__["isArray"],
  isBoolean: vega_util__WEBPACK_IMPORTED_MODULE_4__["isBoolean"],
  isDate: vega_util__WEBPACK_IMPORTED_MODULE_4__["isDate"],
  isDefined: function(_) { return _ !== undefined; },
  isNumber: vega_util__WEBPACK_IMPORTED_MODULE_4__["isNumber"],
  isObject: vega_util__WEBPACK_IMPORTED_MODULE_4__["isObject"],
  isRegExp: vega_util__WEBPACK_IMPORTED_MODULE_4__["isRegExp"],
  isString: vega_util__WEBPACK_IMPORTED_MODULE_4__["isString"],
  isTuple: vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["isTuple"],
  isValid: function(_) { return _ != null && _ === _; },
  toBoolean: vega_util__WEBPACK_IMPORTED_MODULE_4__["toBoolean"],
  toDate: vega_util__WEBPACK_IMPORTED_MODULE_4__["toDate"],
  toNumber: vega_util__WEBPACK_IMPORTED_MODULE_4__["toNumber"],
  toString: vega_util__WEBPACK_IMPORTED_MODULE_4__["toString"],
  flush: vega_util__WEBPACK_IMPORTED_MODULE_4__["flush"],
  lerp: vega_util__WEBPACK_IMPORTED_MODULE_4__["lerp"],
  merge: _merge__WEBPACK_IMPORTED_MODULE_14__["default"],
  pad: vega_util__WEBPACK_IMPORTED_MODULE_4__["pad"],
  peek: vega_util__WEBPACK_IMPORTED_MODULE_4__["peek"],
  span: vega_util__WEBPACK_IMPORTED_MODULE_4__["span"],
  inrange: vega_util__WEBPACK_IMPORTED_MODULE_4__["inrange"],
  truncate: vega_util__WEBPACK_IMPORTED_MODULE_4__["truncate"],
  rgb: d3_color__WEBPACK_IMPORTED_MODULE_6__["rgb"],
  lab: d3_color__WEBPACK_IMPORTED_MODULE_6__["lab"],
  hcl: d3_color__WEBPACK_IMPORTED_MODULE_6__["hcl"],
  hsl: d3_color__WEBPACK_IMPORTED_MODULE_6__["hsl"],
  sequence: d3_array__WEBPACK_IMPORTED_MODULE_5__["range"],
  format: _format__WEBPACK_IMPORTED_MODULE_9__["format"],
  utcFormat: _format__WEBPACK_IMPORTED_MODULE_9__["utcFormat"],
  utcParse: _format__WEBPACK_IMPORTED_MODULE_9__["utcParse"],
  timeFormat: _format__WEBPACK_IMPORTED_MODULE_9__["timeFormat"],
  timeParse: _format__WEBPACK_IMPORTED_MODULE_9__["timeParse"],
  monthFormat: _format__WEBPACK_IMPORTED_MODULE_9__["monthFormat"],
  monthAbbrevFormat: _format__WEBPACK_IMPORTED_MODULE_9__["monthAbbrevFormat"],
  dayFormat: _format__WEBPACK_IMPORTED_MODULE_9__["dayFormat"],
  dayAbbrevFormat: _format__WEBPACK_IMPORTED_MODULE_9__["dayAbbrevFormat"],
  quarter: vega_util__WEBPACK_IMPORTED_MODULE_4__["quarter"],
  utcquarter: vega_util__WEBPACK_IMPORTED_MODULE_4__["utcquarter"],
  warn: _log__WEBPACK_IMPORTED_MODULE_13__["warn"],
  info: _log__WEBPACK_IMPORTED_MODULE_13__["info"],
  debug: _log__WEBPACK_IMPORTED_MODULE_13__["debug"],
  extent: vega_util__WEBPACK_IMPORTED_MODULE_4__["extent"],
  inScope: _inscope__WEBPACK_IMPORTED_MODULE_11__["default"],
  intersect: _intersect__WEBPACK_IMPORTED_MODULE_12__["default"],
  clampRange: vega_util__WEBPACK_IMPORTED_MODULE_4__["clampRange"],
  pinchDistance: _pinch__WEBPACK_IMPORTED_MODULE_16__["pinchDistance"],
  pinchAngle: _pinch__WEBPACK_IMPORTED_MODULE_16__["pinchAngle"],
  screen: _window__WEBPACK_IMPORTED_MODULE_21__["screen"],
  containerSize: _window__WEBPACK_IMPORTED_MODULE_21__["containerSize"],
  windowSize: _window__WEBPACK_IMPORTED_MODULE_21__["windowSize"],
  bandspace: _scale__WEBPACK_IMPORTED_MODULE_17__["bandspace"],
  setdata: _data__WEBPACK_IMPORTED_MODULE_7__["setdata"],
  pathShape: _shape__WEBPACK_IMPORTED_MODULE_19__["pathShape"],
  panLinear: vega_util__WEBPACK_IMPORTED_MODULE_4__["panLinear"],
  panLog: vega_util__WEBPACK_IMPORTED_MODULE_4__["panLog"],
  panPow: vega_util__WEBPACK_IMPORTED_MODULE_4__["panPow"],
  panSymlog: vega_util__WEBPACK_IMPORTED_MODULE_4__["panSymlog"],
  zoomLinear: vega_util__WEBPACK_IMPORTED_MODULE_4__["zoomLinear"],
  zoomLog: vega_util__WEBPACK_IMPORTED_MODULE_4__["zoomLog"],
  zoomPow: vega_util__WEBPACK_IMPORTED_MODULE_4__["zoomPow"],
  zoomSymlog: vega_util__WEBPACK_IMPORTED_MODULE_4__["zoomSymlog"],
  encode: _encode__WEBPACK_IMPORTED_MODULE_8__["default"],
  modify: _modify__WEBPACK_IMPORTED_MODULE_15__["default"]
};

const eventFunctions = ['view', 'item', 'group', 'xy', 'x', 'y'], // event functions
      eventPrefix = 'event.vega.', // event function prefix
      thisPrefix = 'this.', // function context prefix
      astVisitors = {}; // AST visitors for dependency analysis

// Build expression function registry
function buildFunctions(codegen) {
  const fn = Object(vega_expression__WEBPACK_IMPORTED_MODULE_0__["functions"])(codegen);
  eventFunctions.forEach(name => fn[name] = eventPrefix + name);
  for (let name in functionContext) { fn[name] = thisPrefix + name; }
  return fn;
}

// Register an expression function
function expressionFunction(name, fn, visitor) {
  if (arguments.length === 1) {
    return functionContext[name];
  }

  // register with the functionContext
  functionContext[name] = fn;

  // if there is an astVisitor register that, too
  if (visitor) astVisitors[name] = visitor;

  // if the code generator has already been initialized,
  // we need to also register the function with it
  if (codeGenerator) codeGenerator.functions[name] = thisPrefix + name;
  return this;
}

// register expression functions with ast visitors
expressionFunction('bandwidth', _scale__WEBPACK_IMPORTED_MODULE_17__["bandwidth"], _visitors__WEBPACK_IMPORTED_MODULE_22__["scaleVisitor"]);
expressionFunction('copy', _scale__WEBPACK_IMPORTED_MODULE_17__["copy"], _visitors__WEBPACK_IMPORTED_MODULE_22__["scaleVisitor"]);
expressionFunction('domain', _scale__WEBPACK_IMPORTED_MODULE_17__["domain"], _visitors__WEBPACK_IMPORTED_MODULE_22__["scaleVisitor"]);
expressionFunction('range', _scale__WEBPACK_IMPORTED_MODULE_17__["range"], _visitors__WEBPACK_IMPORTED_MODULE_22__["scaleVisitor"]);
expressionFunction('invert', _scale__WEBPACK_IMPORTED_MODULE_17__["invert"], _visitors__WEBPACK_IMPORTED_MODULE_22__["scaleVisitor"]);
expressionFunction('scale', _scale__WEBPACK_IMPORTED_MODULE_17__["scale"], _visitors__WEBPACK_IMPORTED_MODULE_22__["scaleVisitor"]);
expressionFunction('gradient', _scale_gradient__WEBPACK_IMPORTED_MODULE_18__["default"], _visitors__WEBPACK_IMPORTED_MODULE_22__["scaleVisitor"]);
expressionFunction('geoArea', _geo__WEBPACK_IMPORTED_MODULE_10__["geoArea"], _visitors__WEBPACK_IMPORTED_MODULE_22__["scaleVisitor"]);
expressionFunction('geoBounds', _geo__WEBPACK_IMPORTED_MODULE_10__["geoBounds"], _visitors__WEBPACK_IMPORTED_MODULE_22__["scaleVisitor"]);
expressionFunction('geoCentroid', _geo__WEBPACK_IMPORTED_MODULE_10__["geoCentroid"], _visitors__WEBPACK_IMPORTED_MODULE_22__["scaleVisitor"]);
expressionFunction('geoShape', _shape__WEBPACK_IMPORTED_MODULE_19__["geoShape"], _visitors__WEBPACK_IMPORTED_MODULE_22__["scaleVisitor"]);
expressionFunction('indata', _data__WEBPACK_IMPORTED_MODULE_7__["indata"], _visitors__WEBPACK_IMPORTED_MODULE_22__["indataVisitor"]);
expressionFunction('data', _data__WEBPACK_IMPORTED_MODULE_7__["data"], _visitors__WEBPACK_IMPORTED_MODULE_22__["dataVisitor"]);
expressionFunction('treePath', _tree__WEBPACK_IMPORTED_MODULE_20__["treePath"], _visitors__WEBPACK_IMPORTED_MODULE_22__["dataVisitor"]);
expressionFunction('treeAncestors', _tree__WEBPACK_IMPORTED_MODULE_20__["treeAncestors"], _visitors__WEBPACK_IMPORTED_MODULE_22__["dataVisitor"]);

// register Vega-Lite selection functions
expressionFunction('vlSelectionTest', vega_selections__WEBPACK_IMPORTED_MODULE_2__["selectionTest"], vega_selections__WEBPACK_IMPORTED_MODULE_2__["selectionVisitor"]);
expressionFunction('vlSelectionResolve', vega_selections__WEBPACK_IMPORTED_MODULE_2__["selectionResolve"], vega_selections__WEBPACK_IMPORTED_MODULE_2__["selectionVisitor"]);

// Export code generator and parameters
const codegenParams = {
  blacklist:  ['_'],
  whitelist:  ['datum', 'event', 'item'],
  fieldvar:   'datum',
  globalvar:  function(id) { return '_[' + Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["stringValue"])(_prefix__WEBPACK_IMPORTED_MODULE_23__["SignalPrefix"] + id) + ']'; },
  functions:  buildFunctions,
  constants:  vega_expression__WEBPACK_IMPORTED_MODULE_0__["constants"],
  visitors:   astVisitors
};

var codeGenerator = Object(vega_expression__WEBPACK_IMPORTED_MODULE_0__["codegen"])(codegenParams);


/***/ }),

/***/ "./node_modules/vega-functions/src/data.js":
/*!*************************************************!*\
  !*** ./node_modules/vega-functions/src/data.js ***!
  \*************************************************/
/*! exports provided: data, indata, setdata */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "data", function() { return data; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "indata", function() { return indata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setdata", function() { return setdata; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");


function data(name) {
  const data = this.context.data[name];
  return data ? data.values.value : [];
}

function indata(name, field, value) {
  const index = this.context.data[name]['index:' + field],
        entry = index ? index.value.get(value) : undefined;
  return entry ? entry.count : entry;
}

function setdata(name, tuples) {
  const df = this.context.dataflow,
        data = this.context.data[name],
        input = data.input;

  df.pulse(input, df.changeset().remove(vega_util__WEBPACK_IMPORTED_MODULE_0__["truthy"]).insert(tuples));
  return 1;
}


/***/ }),

/***/ "./node_modules/vega-functions/src/encode.js":
/*!***************************************************!*\
  !*** ./node_modules/vega-functions/src/encode.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(item, name, retval) {
  if (item) {
    const df = this.context.dataflow,
          target = item.mark.source;
    df.pulse(target, df.changeset().encode(item, name));
  }
  return retval !== undefined ? retval : item;
});


/***/ }),

/***/ "./node_modules/vega-functions/src/format.js":
/*!***************************************************!*\
  !*** ./node_modules/vega-functions/src/format.js ***!
  \***************************************************/
/*! exports provided: format, timeFormat, utcFormat, timeParse, utcParse, monthFormat, monthAbbrevFormat, dayFormat, dayAbbrevFormat */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "format", function() { return format; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "timeFormat", function() { return timeFormat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcFormat", function() { return utcFormat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "timeParse", function() { return timeParse; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcParse", function() { return utcParse; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "monthFormat", function() { return monthFormat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "monthAbbrevFormat", function() { return monthAbbrevFormat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dayFormat", function() { return dayFormat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dayAbbrevFormat", function() { return dayAbbrevFormat; });
/* harmony import */ var d3_format__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-format */ "./node_modules/d3-format/src/index.js");
/* harmony import */ var d3_time_format__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-time-format */ "./node_modules/d3-time-format/src/index.js");




const formatCache = {};

function formatter(type, method, specifier) {
  let k = type + ':' + specifier,
      e = formatCache[k];
  if (!e || e[0] !== method) {
    formatCache[k] = (e = [method, method(specifier)]);
  }
  return e[1];
}

function format(_, specifier) {
  return formatter('format', d3_format__WEBPACK_IMPORTED_MODULE_0__["format"], specifier)(_);
}

function timeFormat(_, specifier) {
  return formatter('timeFormat', d3_time_format__WEBPACK_IMPORTED_MODULE_1__["timeFormat"], specifier)(_);
}

function utcFormat(_, specifier) {
  return formatter('utcFormat', d3_time_format__WEBPACK_IMPORTED_MODULE_1__["utcFormat"], specifier)(_);
}

function timeParse(_, specifier) {
  return formatter('timeParse', d3_time_format__WEBPACK_IMPORTED_MODULE_1__["timeParse"], specifier)(_);
}

function utcParse(_, specifier) {
  return formatter('utcParse', d3_time_format__WEBPACK_IMPORTED_MODULE_1__["utcParse"], specifier)(_);
}

var dateObj = new Date(2000, 0, 1);

function time(month, day, specifier) {
  dateObj.setMonth(month);
  dateObj.setDate(day);
  return timeFormat(dateObj, specifier);
}

function monthFormat(month) {
  return time(month, 1, '%B');
}

function monthAbbrevFormat(month) {
  return time(month, 1, '%b');
}

function dayFormat(day) {
  return time(0, 2 + day, '%A');
}

function dayAbbrevFormat(day) {
  return time(0, 2 + day, '%a');
}


/***/ }),

/***/ "./node_modules/vega-functions/src/geo.js":
/*!************************************************!*\
  !*** ./node_modules/vega-functions/src/geo.js ***!
  \************************************************/
/*! exports provided: geoArea, geoBounds, geoCentroid */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "geoArea", function() { return geoArea; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "geoBounds", function() { return geoBounds; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "geoCentroid", function() { return geoCentroid; });
/* harmony import */ var _scale__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scale */ "./node_modules/vega-functions/src/scale.js");
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");



function geoMethod(methodName, globalMethod) {
  return function(projection, geojson, group) {
    if (projection) {
      // projection defined, use it
      const p = Object(_scale__WEBPACK_IMPORTED_MODULE_0__["getScale"])(projection, (group || this).context);
      return p && p.path[methodName](geojson);
    } else {
      // projection undefined, use global method
      return globalMethod(geojson);
    }
  };
}

const geoArea = geoMethod('area', d3_geo__WEBPACK_IMPORTED_MODULE_1__["geoArea"]);
const geoBounds = geoMethod('bounds', d3_geo__WEBPACK_IMPORTED_MODULE_1__["geoBounds"]);
const geoCentroid = geoMethod('centroid', d3_geo__WEBPACK_IMPORTED_MODULE_1__["geoCentroid"]);


/***/ }),

/***/ "./node_modules/vega-functions/src/inscope.js":
/*!****************************************************!*\
  !*** ./node_modules/vega-functions/src/inscope.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(item) {
  let group = this.context.group,
      value = false;

  if (group) while (item) {
    if (item === group) { value = true; break; }
    item = item.mark.group;
  }
  return value;
});


/***/ }),

/***/ "./node_modules/vega-functions/src/intersect.js":
/*!******************************************************!*\
  !*** ./node_modules/vega-functions/src/intersect.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var vega_scenegraph__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-scenegraph */ "./node_modules/vega-scenegraph/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");



/* harmony default export */ __webpack_exports__["default"] = (function(b, opt, group) {
  if (!b) return [];

  const [u, v] = b,
        box = new vega_scenegraph__WEBPACK_IMPORTED_MODULE_0__["Bounds"]().set(u[0], u[1], v[0], v[1]),
        scene = group || this.context.dataflow.scenegraph().root;

  return Object(vega_scenegraph__WEBPACK_IMPORTED_MODULE_0__["intersect"])(scene, box, filter(opt));
});

function filter(opt) {
  let p = null;

  if (opt) {
    const types = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["array"])(opt.marktype),
          names = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["array"])(opt.markname);
    p = _ => (!types.length || types.some(t => _.marktype === t))
          && (!names.length || names.some(s => _.name === s));
  }

  return p;
}

/***/ }),

/***/ "./node_modules/vega-functions/src/log.js":
/*!************************************************!*\
  !*** ./node_modules/vega-functions/src/log.js ***!
  \************************************************/
/*! exports provided: warn, info, debug */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "warn", function() { return warn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "info", function() { return info; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "debug", function() { return debug; });
function log(df, method, args) {
  try {
    df[method].apply(df, ['EXPRESSION'].concat([].slice.call(args)));
  } catch (err) {
    df.warn(err);
  }
  return args[args.length-1];
}

function warn() {
  return log(this.context.dataflow, 'warn', arguments);
}

function info() {
  return log(this.context.dataflow, 'info', arguments);
}

function debug() {
  return log(this.context.dataflow, 'debug', arguments);
}


/***/ }),

/***/ "./node_modules/vega-functions/src/merge.js":
/*!**************************************************!*\
  !*** ./node_modules/vega-functions/src/merge.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");


/* harmony default export */ __webpack_exports__["default"] = (function() {
  var args = [].slice.call(arguments);
  args.unshift({});
  return vega_util__WEBPACK_IMPORTED_MODULE_0__["extend"].apply(null, args);
});


/***/ }),

/***/ "./node_modules/vega-functions/src/modify.js":
/*!***************************************************!*\
  !*** ./node_modules/vega-functions/src/modify.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");



function equal(a, b) {
  return a === b || a !== a && b !== b ? true
    : Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(a) && Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(b) && a.length === b.length ? equalArray(a, b)
    : false;
}

function equalArray(a, b) {
  for (let i=0, n=a.length; i<n; ++i) {
    if (!equal(a[i], b[i])) return false;
  }
  return true;
}

function removePredicate(props) {
  return function(_) {
    for (let key in props) {
      if (!equal(_[key], props[key])) return false;
    }
    return true;
  };
}

/* harmony default export */ __webpack_exports__["default"] = (function(name, insert, remove, toggle, modify, values) {
  let df = this.context.dataflow,
      data = this.context.data[name],
      input = data.input,
      changes = data.changes,
      stamp = df.stamp(),
      predicate, key;

  if (df._trigger === false || !(input.value.length || insert || toggle)) {
    // nothing to do!
    return 0;
  }

  if (!changes || changes.stamp < stamp) {
    data.changes = (changes = df.changeset());
    changes.stamp = stamp;
    df.runAfter(function() {
      data.modified = true;
      df.pulse(input, changes).run();
    }, true, 1);
  }

  if (remove) {
    predicate = remove === true ? vega_util__WEBPACK_IMPORTED_MODULE_1__["truthy"]
      : (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(remove) || Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["isTuple"])(remove)) ? remove
      : removePredicate(remove);
    changes.remove(predicate);
  }

  if (insert) {
    changes.insert(insert);
  }

  if (toggle) {
    predicate = removePredicate(toggle);
    if (input.value.some(predicate)) {
      changes.remove(predicate);
    } else {
      changes.insert(toggle);
    }
  }

  if (modify) {
    for (key in values) {
      changes.modify(modify, key, values[key]);
    }
  }

  return 1;
});


/***/ }),

/***/ "./node_modules/vega-functions/src/pinch.js":
/*!**************************************************!*\
  !*** ./node_modules/vega-functions/src/pinch.js ***!
  \**************************************************/
/*! exports provided: pinchDistance, pinchAngle */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pinchDistance", function() { return pinchDistance; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pinchAngle", function() { return pinchAngle; });
function pinchDistance(event) {
  const t = event.touches,
        dx = t[0].clientX - t[1].clientX,
        dy = t[0].clientY - t[1].clientY;
  return Math.sqrt(dx * dx + dy * dy);
}

function pinchAngle(event) {
  const t = event.touches;
  return Math.atan2(
    t[0].clientY - t[1].clientY,
    t[0].clientX - t[1].clientX
  );
}


/***/ }),

/***/ "./node_modules/vega-functions/src/prefix.js":
/*!***************************************************!*\
  !*** ./node_modules/vega-functions/src/prefix.js ***!
  \***************************************************/
/*! exports provided: DataPrefix, IndexPrefix, ScalePrefix, SignalPrefix */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DataPrefix", function() { return DataPrefix; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IndexPrefix", function() { return IndexPrefix; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ScalePrefix", function() { return ScalePrefix; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SignalPrefix", function() { return SignalPrefix; });
const DataPrefix   = ':';
const IndexPrefix  = '@';
const ScalePrefix  = '%';
const SignalPrefix = '$';


/***/ }),

/***/ "./node_modules/vega-functions/src/scale-gradient.js":
/*!***********************************************************!*\
  !*** ./node_modules/vega-functions/src/scale-gradient.js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _scale__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scale */ "./node_modules/vega-functions/src/scale.js");
/* harmony import */ var vega_scale__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-scale */ "./node_modules/vega-scale/index.js");
/* harmony import */ var vega_scenegraph__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-scenegraph */ "./node_modules/vega-scenegraph/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");





/* harmony default export */ __webpack_exports__["default"] = (function(scale, p0, p1, count, group) {
  scale = Object(_scale__WEBPACK_IMPORTED_MODULE_0__["getScale"])(scale, (group || this).context);

  const gradient = Object(vega_scenegraph__WEBPACK_IMPORTED_MODULE_2__["Gradient"])(p0, p1);

  let stops = scale.domain(),
      min = stops[0],
      max = Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["peek"])(stops),
      fraction = vega_util__WEBPACK_IMPORTED_MODULE_3__["identity"]

  if (!(max - min)) {
    // expand scale if domain has zero span, fix #1479
    scale = (scale.interpolator
      ? Object(vega_scale__WEBPACK_IMPORTED_MODULE_1__["scale"])('sequential')().interpolator(scale.interpolator())
      : Object(vega_scale__WEBPACK_IMPORTED_MODULE_1__["scale"])('linear')().interpolate(scale.interpolate()).range(scale.range())
    ).domain([min=0, max=1]);
  } else {
    fraction = Object(vega_scale__WEBPACK_IMPORTED_MODULE_1__["scaleFraction"])(scale, min, max);
  }

  if (scale.ticks) {
    stops = scale.ticks(+count || 15);
    if (min !== stops[0]) stops.unshift(min);
    if (max !== Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["peek"])(stops)) stops.push(max);
  }

  stops.forEach(_ => gradient.stop(fraction(_), scale(_)));

  return gradient;
});


/***/ }),

/***/ "./node_modules/vega-functions/src/scale.js":
/*!**************************************************!*\
  !*** ./node_modules/vega-functions/src/scale.js ***!
  \**************************************************/
/*! exports provided: getScale, range, domain, bandwidth, bandspace, copy, scale, invert */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getScale", function() { return getScale; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "range", function() { return range; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "domain", function() { return domain; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bandwidth", function() { return bandwidth; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bandspace", function() { return bandspace; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "copy", function() { return copy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scale", function() { return scale; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "invert", function() { return invert; });
/* harmony import */ var vega_scale__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-scale */ "./node_modules/vega-scale/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");



function getScale(name, ctx) {
  let s;
  return Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isFunction"])(name) ? name
    : Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isString"])(name) ? (s = ctx.scales[name]) && s.value
    : undefined;
}

function range(name, group) {
  const s = getScale(name, (group || this).context);
  return s && s.range ? s.range() : [];
}

function domain(name, group) {
  const s = getScale(name, (group || this).context);
  return s ? s.domain() : [];
}

function bandwidth(name, group) {
  const s = getScale(name, (group || this).context);
  return s && s.bandwidth ? s.bandwidth() : 0;
}

function bandspace(count, paddingInner, paddingOuter) {
  return Object(vega_scale__WEBPACK_IMPORTED_MODULE_0__["bandSpace"])(count || 0, paddingInner || 0, paddingOuter || 0);
}

function copy(name, group) {
  const s = getScale(name, (group || this).context);
  return s ? s.copy() : undefined;
}

function scale(name, value, group) {
  const s = getScale(name, (group || this).context);
  return s && value !== undefined ? s(value) : undefined;
}

function invert(name, range, group) {
  const s = getScale(name, (group || this).context);
  return !s ? undefined
    : Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(range) ? (s.invertRange || s.invert)(range)
    : (s.invert || s.invertExtent)(range);
}


/***/ }),

/***/ "./node_modules/vega-functions/src/shape.js":
/*!**************************************************!*\
  !*** ./node_modules/vega-functions/src/shape.js ***!
  \**************************************************/
/*! exports provided: geoShape, pathShape */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "geoShape", function() { return geoShape; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pathShape", function() { return pathShape; });
/* harmony import */ var _scale__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scale */ "./node_modules/vega-functions/src/scale.js");
/* harmony import */ var vega_scenegraph__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-scenegraph */ "./node_modules/vega-scenegraph/index.js");



function geoShape(projection, geojson, group) {
  const p = Object(_scale__WEBPACK_IMPORTED_MODULE_0__["getScale"])(projection, (group || this).context);
  return function(context) {
    return p ? p.path.context(context)(geojson) : '';
  }
}

function pathShape(path) {
  let p = null;
  return function(context) {
    return context
      ? Object(vega_scenegraph__WEBPACK_IMPORTED_MODULE_1__["pathRender"])(context, (p = p || Object(vega_scenegraph__WEBPACK_IMPORTED_MODULE_1__["pathParse"])(path)))
      : path;
  };
}


/***/ }),

/***/ "./node_modules/vega-functions/src/tree.js":
/*!*************************************************!*\
  !*** ./node_modules/vega-functions/src/tree.js ***!
  \*************************************************/
/*! exports provided: treePath, treeAncestors */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "treePath", function() { return treePath; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "treeAncestors", function() { return treeAncestors; });
/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./data */ "./node_modules/vega-functions/src/data.js");


const EMPTY = {};

function datum(d) { return d.data; }

function treeNodes(name, context) {
  const tree = _data__WEBPACK_IMPORTED_MODULE_0__["data"].call(context, name);
  return tree.root && tree.root.lookup || EMPTY;
}

function treePath(name, source, target) {
  const nodes = treeNodes(name, this),
        s = nodes[source],
        t = nodes[target];
  return s && t ? s.path(t).map(datum) : undefined;
}

function treeAncestors(name, node) {
  const n = treeNodes(name, this)[node];
  return n ? n.ancestors().map(datum) : undefined;
}


/***/ }),

/***/ "./node_modules/vega-functions/src/visitors.js":
/*!*****************************************************!*\
  !*** ./node_modules/vega-functions/src/visitors.js ***!
  \*****************************************************/
/*! exports provided: dataVisitor, indataVisitor, scaleVisitor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dataVisitor", function() { return dataVisitor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "indataVisitor", function() { return indataVisitor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scaleVisitor", function() { return scaleVisitor; });
/* harmony import */ var _prefix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./prefix */ "./node_modules/vega-functions/src/prefix.js");
/* harmony import */ var vega_expression__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-expression */ "./node_modules/vega-expression/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");




function dataVisitor(name, args, scope, params) {
  if (args[0].type !== vega_expression__WEBPACK_IMPORTED_MODULE_1__["Literal"]) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["error"])('First argument to data functions must be a string literal.');
  }

  const data = args[0].value,
        dataName = _prefix__WEBPACK_IMPORTED_MODULE_0__["DataPrefix"] + data;

  if (!params.hasOwnProperty(dataName)) {
    params[dataName] = scope.getData(data).tuplesRef();
  }
}

function indataVisitor(name, args, scope, params) {
  if (args[0].type !== vega_expression__WEBPACK_IMPORTED_MODULE_1__["Literal"]) Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["error"])('First argument to indata must be a string literal.');
  if (args[1].type !== vega_expression__WEBPACK_IMPORTED_MODULE_1__["Literal"]) Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["error"])('Second argument to indata must be a string literal.');

  const data = args[0].value,
        field = args[1].value,
        indexName = _prefix__WEBPACK_IMPORTED_MODULE_0__["IndexPrefix"] + field;

  if (!params.hasOwnProperty(indexName)) {
    params[indexName] = scope.getData(data).indataRef(scope, field);
  }
}

function scaleVisitor(name, args, scope, params) {
  if (args[0].type === vega_expression__WEBPACK_IMPORTED_MODULE_1__["Literal"]) {
    // add scale dependency
    addScaleDependency(scope, params, args[0].value);
  }
  else if (args[0].type === vega_expression__WEBPACK_IMPORTED_MODULE_1__["Identifier"]) {
    // indirect scale lookup; add all scales as parameters
    for (name in scope.scales) {
      addScaleDependency(scope, params, name);
    }
  }
}

function addScaleDependency(scope, params, name) {
  const scaleName = _prefix__WEBPACK_IMPORTED_MODULE_0__["ScalePrefix"] + name;
  if (!params.hasOwnProperty(scaleName)) {
    try {
      params[scaleName] = scope.scaleRef(name);
    } catch (err) {
      // TODO: error handling? warning?
    }
  }
}


/***/ }),

/***/ "./node_modules/vega-functions/src/window.js":
/*!***************************************************!*\
  !*** ./node_modules/vega-functions/src/window.js ***!
  \***************************************************/
/*! exports provided: screen, windowSize, containerSize */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "screen", function() { return screen; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "windowSize", function() { return windowSize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "containerSize", function() { return containerSize; });
const _window = (typeof window !== 'undefined' && window) || null;

function screen() {
  return _window ? _window.screen : {};
}

function windowSize() {
  return _window
    ? [_window.innerWidth, _window.innerHeight]
    : [undefined, undefined];
}

function containerSize() {
  const view = this.context.dataflow,
        el = view.container && view.container();
  return el
    ? [el.clientWidth, el.clientHeight]
    : [undefined, undefined];
}


/***/ }),

/***/ "./node_modules/vega-geo/index.js":
/*!****************************************!*\
  !*** ./node_modules/vega-geo/index.js ***!
  \****************************************/
/*! exports provided: contour, geojson, geopath, geopoint, geoshape, graticule, projection */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _src_Contour__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/Contour */ "./node_modules/vega-geo/src/Contour.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "contour", function() { return _src_Contour__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _src_GeoJSON__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/GeoJSON */ "./node_modules/vega-geo/src/GeoJSON.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geojson", function() { return _src_GeoJSON__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _src_GeoPath__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/GeoPath */ "./node_modules/vega-geo/src/GeoPath.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geopath", function() { return _src_GeoPath__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _src_GeoPoint__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/GeoPoint */ "./node_modules/vega-geo/src/GeoPoint.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geopoint", function() { return _src_GeoPoint__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _src_GeoShape__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./src/GeoShape */ "./node_modules/vega-geo/src/GeoShape.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoshape", function() { return _src_GeoShape__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _src_Graticule__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./src/Graticule */ "./node_modules/vega-geo/src/Graticule.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "graticule", function() { return _src_Graticule__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _src_Projection__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./src/Projection */ "./node_modules/vega-geo/src/Projection.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "projection", function() { return _src_Projection__WEBPACK_IMPORTED_MODULE_6__["default"]; });










/***/ }),

/***/ "./node_modules/vega-geo/src/Contour.js":
/*!**********************************************!*\
  !*** ./node_modules/vega-geo/src/Contour.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Contour; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");
/* harmony import */ var d3_contour__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3-contour */ "./node_modules/d3-contour/src/index.js");





var CONTOUR_PARAMS = ['size', 'smooth'];
var DENSITY_PARAMS = ['x', 'y', 'weight', 'size', 'cellSize', 'bandwidth'];

/**
 * Generate contours based on kernel-density estimation of point data.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {Array<number>} params.size - The dimensions [width, height] over which to compute contours.
 *  If the values parameter is provided, this must be the dimensions of the input data.
 *  If density estimation is performed, this is the output view dimensions in pixels.
 * @param {Array<number>} [params.values] - An array of numeric values representing an
 *  width x height grid of values over which to compute contours. If unspecified, this
 *  transform will instead attempt to compute contours for the kernel density estimate
 *  using values drawn from data tuples in the input pulse.
 * @param {function(object): number} [params.x] - The pixel x-coordinate accessor for density estimation.
 * @param {function(object): number} [params.y] - The pixel y-coordinate accessor for density estimation.
 * @param {function(object): number} [params.weight] - The data point weight accessor for density estimation.
 * @param {number} [params.cellSize] - Contour density calculation cell size.
 * @param {number} [params.bandwidth] - Kernel density estimation bandwidth.
 * @param {Array<number>} [params.thresholds] - Contour threshold array. If
 *   this parameter is set, the count and nice parameters will be ignored.
 * @param {number} [params.count] - The desired number of contours.
 * @param {boolean} [params.nice] - Boolean flag indicating if the contour
 *   threshold values should be automatically aligned to "nice"
 *   human-friendly values. Setting this flag may cause the number of
 *   thresholds to deviate from the specified count.
 * @param {boolean} [params.smooth] - Boolean flag indicating if the contour
 *   polygons should be smoothed using linear interpolation. The default is
 *   true. The parameter is ignored when using density estimation.
 */
function Contour(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, null, params);
}

Contour.Definition = {
  "type": "Contour",
  "metadata": {"generates": true},
  "params": [
    { "name": "size", "type": "number", "array": true, "length": 2, "required": true },
    { "name": "values", "type": "number", "array": true },
    { "name": "x", "type": "field" },
    { "name": "y", "type": "field" },
    { "name": "weight", "type": "field" },
    { "name": "cellSize", "type": "number" },
    { "name": "bandwidth", "type": "number" },
    { "name": "count", "type": "number" },
    { "name": "smooth", "type": "boolean" },
    { "name": "nice", "type": "boolean", "default": false },
    { "name": "thresholds", "type": "number", "array": true }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(Contour, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

prototype.transform = function(_, pulse) {
  if (this.value && !pulse.changed() && !_.modified())
    return pulse.StopPropagation;

  var out = pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS),
      count = _.count || 10,
      contour, params, values;

  if (_.values) {
    contour = Object(d3_contour__WEBPACK_IMPORTED_MODULE_3__["contours"])();
    params = CONTOUR_PARAMS;
    values = _.values;
  } else {
    contour = Object(d3_contour__WEBPACK_IMPORTED_MODULE_3__["contourDensity"])();
    params = DENSITY_PARAMS;
    values = pulse.materialize(pulse.SOURCE).source;
  }

  // set threshold parameter
  contour.thresholds(_.thresholds || (_.nice ? count : quantize(count)));

  // set all other parameters
  params.forEach(function(param) {
    if (_[param] != null) contour[param](_[param]);
  });

  if (this.value) out.rem = this.value;
  values = values && values.length ? contour(values).map(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["ingest"]) : [];
  this.value = out.source = out.add = values;

  return out;
};

function quantize(k) {
  return function(values) {
    var ex = Object(d3_array__WEBPACK_IMPORTED_MODULE_2__["extent"])(values), x0 = ex[0], dx = ex[1] - x0,
        t = [], i = 1;
    for (; i<=k; ++i) t.push(x0 + dx * i / (k + 1));
    return t;
  };
}


/***/ }),

/***/ "./node_modules/vega-geo/src/GeoJSON.js":
/*!**********************************************!*\
  !*** ./node_modules/vega-geo/src/GeoJSON.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return GeoJSON; });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ "./node_modules/vega-geo/src/constants.js");
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");




/**
 * Consolidate an array of [longitude, latitude] points or GeoJSON features
 * into a combined GeoJSON object. This transform is particularly useful for
 * combining geo data for a Projection's fit argument. The resulting GeoJSON
 * data is available as this transform's value. Input pulses are unchanged.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {Array<function(object): *>} [params.fields] - A two-element array
 *   of field accessors for the longitude and latitude values.
 * @param {function(object): *} params.geojson - A field accessor for
 *   retrieving GeoJSON feature data.
 */
function GeoJSON(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Transform"].call(this, null, params);
}

GeoJSON.Definition = {
  "type": "GeoJSON",
  "metadata": {},
  "params": [
    { "name": "fields", "type": "field", "array": true, "length": 2 },
    { "name": "geojson", "type": "field" },
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["inherits"])(GeoJSON, vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Transform"]);

prototype.transform = function(_, pulse) {
  var features = this._features,
      points = this._points,
      fields = _.fields,
      lon = fields && fields[0],
      lat = fields && fields[1],
      geojson = _.geojson,
      flag = pulse.ADD,
      mod;

  mod = _.modified()
    || pulse.changed(pulse.REM)
    || pulse.modified(Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["accessorFields"])(geojson))
    || (lon && (pulse.modified(Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["accessorFields"])(lon))))
    || (lat && (pulse.modified(Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["accessorFields"])(lat))));

  if (!this.value || mod) {
    flag = pulse.SOURCE;
    this._features = (features = []);
    this._points = (points = []);
  }

  if (geojson) {
    pulse.visit(flag, function(t) {
      features.push(geojson(t));
    });
  }

  if (lon && lat) {
    pulse.visit(flag, function(t) {
      var x = lon(t),
          y = lat(t);
      if (x != null && y != null && (x = +x) === x && (y = +y) === y) {
        points.push([x, y]);
      }
    });
    features = features.concat({
      type: _constants__WEBPACK_IMPORTED_MODULE_0__["Feature"],
      geometry: {
        type: _constants__WEBPACK_IMPORTED_MODULE_0__["MultiPoint"],
        coordinates: points
      }
    });
  }

  this.value = {
    type: _constants__WEBPACK_IMPORTED_MODULE_0__["FeatureCollection"],
    features: features
  };
};


/***/ }),

/***/ "./node_modules/vega-geo/src/GeoPath.js":
/*!**********************************************!*\
  !*** ./node_modules/vega-geo/src/GeoPath.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return GeoPath; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_projection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-projection */ "./node_modules/vega-projection/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");




/**
 * Map GeoJSON data to an SVG path string.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(number, number): *} params.projection - The cartographic
 *   projection to apply.
 * @param {function(object): *} [params.field] - The field with GeoJSON data,
 *   or null if the tuple itself is a GeoJSON feature.
 * @param {string} [params.as='path'] - The output field in which to store
 *   the generated path data (default 'path').
 */
function GeoPath(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, null, params);
}

GeoPath.Definition = {
  "type": "GeoPath",
  "metadata": {"modifies": true},
  "params": [
    { "name": "projection", "type": "projection" },
    { "name": "field", "type": "field" },
    { "name": "pointRadius", "type": "number", "expr": true },
    { "name": "as", "type": "string", "default": "path" }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["inherits"])(GeoPath, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

prototype.transform = function(_, pulse) {
  var out = pulse.fork(pulse.ALL),
      path = this.value,
      field = _.field || vega_util__WEBPACK_IMPORTED_MODULE_2__["identity"],
      as = _.as || 'path',
      flag = out.SOURCE;

  function set(t) { t[as] = path(field(t)); }

  if (!path || _.modified()) {
    // parameters updated, reset and reflow
    this.value = path = Object(vega_projection__WEBPACK_IMPORTED_MODULE_1__["getProjectionPath"])(_.projection);
    out.materialize().reflow();
  } else {
    flag = field === vega_util__WEBPACK_IMPORTED_MODULE_2__["identity"] || pulse.modified(field.fields)
      ? out.ADD_MOD
      : out.ADD;
  }

  var prev = initPath(path, _.pointRadius);
  out.visit(flag, set);
  path.pointRadius(prev);

  return out.modifies(as);
};

function initPath(path, pointRadius) {
  var prev = path.pointRadius();
  path.context(null);
  if (pointRadius != null) {
    path.pointRadius(pointRadius);
  }
  return prev;
}


/***/ }),

/***/ "./node_modules/vega-geo/src/GeoPoint.js":
/*!***********************************************!*\
  !*** ./node_modules/vega-geo/src/GeoPoint.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return GeoPoint; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");



/**
 * Geo-code a longitude/latitude point to an x/y coordinate.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(number, number): *} params.projection - The cartographic
 *   projection to apply.
 * @param {Array<function(object): *>} params.fields - A two-element array of
 *   field accessors for the longitude and latitude values.
 * @param {Array<string>} [params.as] - A two-element array of field names
 *   under which to store the result. Defaults to ['x','y'].
 */
function GeoPoint(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, null, params);
}

GeoPoint.Definition = {
  "type": "GeoPoint",
  "metadata": {"modifies": true},
  "params": [
    { "name": "projection", "type": "projection", "required": true },
    { "name": "fields", "type": "field", "array": true, "required": true, "length": 2 },
    { "name": "as", "type": "string", "array": true, "length": 2, "default": ["x", "y"] }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(GeoPoint, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

prototype.transform = function(_, pulse) {
  var proj = _.projection,
      lon = _.fields[0],
      lat = _.fields[1],
      as = _.as || ['x', 'y'],
      x = as[0],
      y = as[1],
      mod;

  function set(t) {
    var xy = proj([lon(t), lat(t)]);
    if (xy) {
      t[x] = xy[0];
      t[y] = xy[1];
    } else {
      t[x] = undefined;
      t[y] = undefined;
    }
  }

  if (_.modified()) {
    // parameters updated, reflow
    pulse = pulse.materialize().reflow(true).visit(pulse.SOURCE, set);
  } else {
    mod = pulse.modified(lon.fields) || pulse.modified(lat.fields);
    pulse.visit(mod ? pulse.ADD_MOD : pulse.ADD, set);
  }

  return pulse.modifies(as);
};


/***/ }),

/***/ "./node_modules/vega-geo/src/GeoShape.js":
/*!***********************************************!*\
  !*** ./node_modules/vega-geo/src/GeoShape.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return GeoShape; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_projection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-projection */ "./node_modules/vega-projection/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");




/**
 * Annotate items with a geopath shape generator.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(number, number): *} params.projection - The cartographic
 *   projection to apply.
 * @param {function(object): *} [params.field] - The field with GeoJSON data,
 *   or null if the tuple itself is a GeoJSON feature.
 * @param {string} [params.as='shape'] - The output field in which to store
 *   the generated path data (default 'shape').
 */
function GeoShape(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, null, params);
}

GeoShape.Definition = {
  "type": "GeoShape",
  "metadata": {"modifies": true, "nomod": true},
  "params": [
    { "name": "projection", "type": "projection" },
    { "name": "field", "type": "field", "default": "datum" },
    { "name": "pointRadius", "type": "number", "expr": true },
    { "name": "as", "type": "string", "default": "shape" }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["inherits"])(GeoShape, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

prototype.transform = function(_, pulse) {
  var out = pulse.fork(pulse.ALL),
      shape = this.value,
      as = _.as || 'shape',
      flag = out.ADD;

  if (!shape || _.modified()) {
    // parameters updated, reset and reflow
    this.value = shape = shapeGenerator(
      Object(vega_projection__WEBPACK_IMPORTED_MODULE_1__["getProjectionPath"])(_.projection),
      _.field || Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["field"])('datum'),
      _.pointRadius
    );
    out.materialize().reflow();
    flag = out.SOURCE;
  }

  out.visit(flag, function(t) { t[as] = shape; });

  return out.modifies(as);
};

function shapeGenerator(path, field, pointRadius) {
  var shape = pointRadius == null
    ? function(_) { return path(field(_)); }
    : function(_) {
      var prev = path.pointRadius(),
          value = path.pointRadius(pointRadius)(field(_));
      path.pointRadius(prev);
      return value;
    };
  shape.context = function(_) {
    path.context(_);
    return shape;
  };

  return shape;
}


/***/ }),

/***/ "./node_modules/vega-geo/src/Graticule.js":
/*!************************************************!*\
  !*** ./node_modules/vega-geo/src/Graticule.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Graticule; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");




/**
 * GeoJSON feature generator for creating graticules.
 * @constructor
 */
function Graticule(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, [], params);
  this.generator = Object(d3_geo__WEBPACK_IMPORTED_MODULE_2__["geoGraticule"])();
}

Graticule.Definition = {
  "type": "Graticule",
  "metadata": {"changes": true},
  "params": [
    { "name": "extent", "type": "array", "array": true, "length": 2,
      "content": {"type": "number", "array": true, "length": 2} },
    { "name": "extentMajor", "type": "array", "array": true, "length": 2,
      "content": {"type": "number", "array": true, "length": 2} },
    { "name": "extentMinor", "type": "array", "array": true, "length": 2,
      "content": {"type": "number", "array": true, "length": 2} },
    { "name": "step", "type": "number", "array": true, "length": 2 },
    { "name": "stepMajor", "type": "number", "array": true, "length": 2, "default": [90, 360] },
    { "name": "stepMinor", "type": "number", "array": true, "length": 2, "default": [10, 10] },
    { "name": "precision", "type": "number", "default": 2.5 }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(Graticule, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

prototype.transform = function(_, pulse) {
  var src = this.value,
      gen = this.generator, t;

  if (!src.length || _.modified()) {
    for (var prop in _) {
      if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isFunction"])(gen[prop])) {
        gen[prop](_[prop]);
      }
    }
  }

  t = gen();
  if (src.length) {
    pulse.mod.push(Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["replace"])(src[0], t));
  } else {
    pulse.add.push(Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["ingest"])(t));
  }
  src[0] = t;

  return pulse;
};


/***/ }),

/***/ "./node_modules/vega-geo/src/Projection.js":
/*!*************************************************!*\
  !*** ./node_modules/vega-geo/src/Projection.js ***!
  \*************************************************/
/*! exports provided: default, collectGeoJSON */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Projection; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "collectGeoJSON", function() { return collectGeoJSON; });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ "./node_modules/vega-geo/src/constants.js");
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_projection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-projection */ "./node_modules/vega-projection/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");





/**
 * Maintains a cartographic projection.
 * @constructor
 * @param {object} params - The parameters for this operator.
 */
function Projection(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Transform"].call(this, null, params);
  this.modified(true); // always treat as modified
}

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["inherits"])(Projection, vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Transform"]);

prototype.transform = function(_, pulse) {
  var proj = this.value;

  if (!proj || _.modified('type')) {
    this.value = (proj = create(_.type));
    vega_projection__WEBPACK_IMPORTED_MODULE_2__["projectionProperties"].forEach(function(prop) {
      if (_[prop] != null) set(proj, prop, _[prop]);
    });
  } else {
    vega_projection__WEBPACK_IMPORTED_MODULE_2__["projectionProperties"].forEach(function(prop) {
      if (_.modified(prop)) set(proj, prop, _[prop]);
    });
  }

  if (_.pointRadius != null) proj.path.pointRadius(_.pointRadius);
  if (_.fit) fit(proj, _);

  return pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS);
};

function fit(proj, _) {
  var data = collectGeoJSON(_.fit);
  _.extent ? proj.fitExtent(_.extent, data)
    : _.size ? proj.fitSize(_.size, data) : 0;
}

function create(type) {
  var constructor = Object(vega_projection__WEBPACK_IMPORTED_MODULE_2__["projection"])((type || 'mercator').toLowerCase());
  if (!constructor) Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["error"])('Unrecognized projection type: ' + type);
  return constructor();
}

function set(proj, key, value) {
   if (Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["isFunction"])(proj[key])) proj[key](value);
}

function collectGeoJSON(data) {
  data = Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["array"])(data);
  return data.length === 1 ? data[0]
    : {
        type: _constants__WEBPACK_IMPORTED_MODULE_0__["FeatureCollection"],
        features: data.reduce((a, f) => a.concat(featurize(f)), [])
      };
}

function featurize(f) {
  return f.type === _constants__WEBPACK_IMPORTED_MODULE_0__["FeatureCollection"]
    ? f.features
    : Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["array"])(f).filter(d => d != null).map(
        d => d.type === _constants__WEBPACK_IMPORTED_MODULE_0__["Feature"] ? d : {type: _constants__WEBPACK_IMPORTED_MODULE_0__["Feature"], geometry: d}
      );
}


/***/ }),

/***/ "./node_modules/vega-geo/src/constants.js":
/*!************************************************!*\
  !*** ./node_modules/vega-geo/src/constants.js ***!
  \************************************************/
/*! exports provided: Feature, FeatureCollection, MultiPoint */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Feature", function() { return Feature; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FeatureCollection", function() { return FeatureCollection; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MultiPoint", function() { return MultiPoint; });
var Feature = 'Feature';
var FeatureCollection = 'FeatureCollection';
var MultiPoint = 'MultiPoint';


/***/ }),

/***/ "./node_modules/vega-hierarchy/index.js":
/*!**********************************************!*\
  !*** ./node_modules/vega-hierarchy/index.js ***!
  \**********************************************/
/*! exports provided: nest, pack, partition, stratify, tree, treelinks, treemap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _src_Nest__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/Nest */ "./node_modules/vega-hierarchy/src/Nest.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "nest", function() { return _src_Nest__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _src_Pack__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/Pack */ "./node_modules/vega-hierarchy/src/Pack.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pack", function() { return _src_Pack__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _src_Partition__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/Partition */ "./node_modules/vega-hierarchy/src/Partition.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "partition", function() { return _src_Partition__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _src_Stratify__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/Stratify */ "./node_modules/vega-hierarchy/src/Stratify.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stratify", function() { return _src_Stratify__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _src_Tree__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./src/Tree */ "./node_modules/vega-hierarchy/src/Tree.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tree", function() { return _src_Tree__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _src_TreeLinks__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./src/TreeLinks */ "./node_modules/vega-hierarchy/src/TreeLinks.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "treelinks", function() { return _src_TreeLinks__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _src_Treemap__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./src/Treemap */ "./node_modules/vega-hierarchy/src/Treemap.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "treemap", function() { return _src_Treemap__WEBPACK_IMPORTED_MODULE_6__["default"]; });










/***/ }),

/***/ "./node_modules/vega-hierarchy/src/HierarchyLayout.js":
/*!************************************************************!*\
  !*** ./node_modules/vega-hierarchy/src/HierarchyLayout.js ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return HierarchyLayout; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");



/**
 * Abstract class for tree layout.
 * @constructor
 * @param {object} params - The parameters for this operator.
 */
function HierarchyLayout(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, null, params);
}

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(HierarchyLayout, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

prototype.transform = function(_, pulse) {
  if (!pulse.source || !pulse.source.root) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["error"])(this.constructor.name
      + ' transform requires a backing tree data source.');
  }

  var layout = this.layout(_.method),
      fields = this.fields,
      root = pulse.source.root,
      as = _.as || fields;

  if (_.field) root.sum(_.field);
  if (_.sort) root.sort(_.sort);

  setParams(layout, this.params, _);
  if (layout.separation) {
    layout.separation(_.separation !== false ? defaultSeparation : vega_util__WEBPACK_IMPORTED_MODULE_1__["one"]);
  }

  try {
    this.value = layout(root);
  } catch (err) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["error"])(err);
  }
  root.each(function(node) { setFields(node, fields, as); });

  return pulse.reflow(_.modified()).modifies(as).modifies('leaf');
};

function setParams(layout, params, _) {
  for (var p, i=0, n=params.length; i<n; ++i) {
    p = params[i];
    if (p in _) layout[p](_[p]);
  }
}

function setFields(node, fields, as) {
  var t = node.data;
  for (var i=0, n=fields.length-1; i<n; ++i) {
    t[as[i]] = node[fields[i]];
  }
  t[as[n]] = node.children ? node.children.length : 0;
}

function defaultSeparation(a, b) {
  return a.parent === b.parent ? 1 : 2;
}


/***/ }),

/***/ "./node_modules/vega-hierarchy/src/Nest.js":
/*!*************************************************!*\
  !*** ./node_modules/vega-hierarchy/src/Nest.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Nest; });
/* harmony import */ var _lookup__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lookup */ "./node_modules/vega-hierarchy/src/lookup.js");
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var d3_hierarchy__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3-hierarchy */ "./node_modules/d3-hierarchy/src/index.js");





 /**
  * Nest tuples into a tree structure, grouped by key values.
  * @constructor
  * @param {object} params - The parameters for this operator.
  * @param {Array<function(object): *>} params.keys - The key fields to nest by, in order.
  * @param {boolean} [params.generate=false] - A boolean flag indicating if
  *   non-leaf nodes generated by this transform should be included in the
  *   output. The default (false) includes only the input data (leaf nodes)
  *   in the data stream.
  */
function Nest(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Transform"].call(this, null, params);
}

Nest.Definition = {
  "type": "Nest",
  "metadata": {"treesource": true, "changes": true},
  "params": [
    { "name": "keys", "type": "field", "array": true },
    { "name": "generate", "type": "boolean" }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["inherits"])(Nest, vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Transform"]);

function children(n) {
  return n.values;
}

prototype.transform = function(_, pulse) {
  if (!pulse.source) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["error"])('Nest transform requires an upstream data source.');
  }

  var gen = _.generate,
      mod = _.modified(),
      out = pulse.clone(),
      tree = this.value;

  if (!tree || mod || pulse.changed()) {
    // collect nodes to remove
    if (tree) {
      tree.each(function(node) {
        if (node.children && Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["isTuple"])(node.data)) {
          out.rem.push(node.data);
        }
      });
    }

    // generate new tree structure
    this.value = tree = Object(d3_hierarchy__WEBPACK_IMPORTED_MODULE_3__["hierarchy"])({
      values: Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["array"])(_.keys)
                .reduce(function(n, k) { n.key(k); return n; }, nest())
                .entries(out.source)
    }, children);

    // collect nodes to add
    if (gen) {
      tree.each(function(node) {
        if (node.children) {
          node = Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["ingest"])(node.data);
          out.add.push(node);
          out.source.push(node);
        }
      });
    }

    // build lookup table
    Object(_lookup__WEBPACK_IMPORTED_MODULE_0__["default"])(tree, vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["tupleid"], vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["tupleid"]);
  }

  out.source.root = tree;
  return out;
};

function nest() {
  var keys = [],
      nest;

  function apply(array, depth) {
    if (depth >= keys.length) {
      return array;
    }

    var i = -1,
        n = array.length,
        key = keys[depth++],
        keyValue,
        value,
        valuesByKey = {},
        values,
        result = {};

    while (++i < n) {
      keyValue = key(value = array[i]) + '';
      if (values = valuesByKey[keyValue]) {
        values.push(value);
      } else {
        valuesByKey[keyValue] = [value];
      }
    }

    for (keyValue in valuesByKey) {
      result[keyValue] = apply(valuesByKey[keyValue], depth);
    }

    return result;
  }

  function entries(map, depth) {
    if (++depth > keys.length) return map;
    var array = [], k;
    for (k in map) {
      array.push({key: k, values: entries(map[k], depth)});
    }
    return array;
  }

  return nest = {
    entries: function(array) { return entries(apply(array, 0), 0); },
    key: function(d) { keys.push(d); return nest; }
  };
}


/***/ }),

/***/ "./node_modules/vega-hierarchy/src/Pack.js":
/*!*************************************************!*\
  !*** ./node_modules/vega-hierarchy/src/Pack.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Pack; });
/* harmony import */ var _HierarchyLayout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./HierarchyLayout */ "./node_modules/vega-hierarchy/src/HierarchyLayout.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var d3_hierarchy__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-hierarchy */ "./node_modules/d3-hierarchy/src/index.js");




var Output = ['x', 'y', 'r', 'depth', 'children'];

/**
 * Packed circle tree layout.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(object): *} params.field - The value field to size nodes.
 */
function Pack(params) {
  _HierarchyLayout__WEBPACK_IMPORTED_MODULE_0__["default"].call(this, params);
}

Pack.Definition = {
  "type": "Pack",
  "metadata": {"tree": true, "modifies": true},
  "params": [
    { "name": "field", "type": "field" },
    { "name": "sort", "type": "compare" },
    { "name": "padding", "type": "number", "default": 0 },
    { "name": "radius", "type": "field", "default": null },
    { "name": "size", "type": "number", "array": true, "length": 2 },
    { "name": "as", "type": "string", "array": true, "length": Output.length, "default": Output }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(Pack, _HierarchyLayout__WEBPACK_IMPORTED_MODULE_0__["default"]);

prototype.layout = d3_hierarchy__WEBPACK_IMPORTED_MODULE_2__["pack"];

prototype.params = ['size', 'padding'];

prototype.fields = Output;


/***/ }),

/***/ "./node_modules/vega-hierarchy/src/Partition.js":
/*!******************************************************!*\
  !*** ./node_modules/vega-hierarchy/src/Partition.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Partition; });
/* harmony import */ var _HierarchyLayout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./HierarchyLayout */ "./node_modules/vega-hierarchy/src/HierarchyLayout.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var d3_hierarchy__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-hierarchy */ "./node_modules/d3-hierarchy/src/index.js");




var Output = ['x0', 'y0', 'x1', 'y1', 'depth', 'children'];

/**
 * Partition tree layout.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(object): *} params.field - The value field to size nodes.
 */
function Partition(params) {
  _HierarchyLayout__WEBPACK_IMPORTED_MODULE_0__["default"].call(this, params);
}

Partition.Definition = {
  "type": "Partition",
  "metadata": {"tree": true, "modifies": true},
  "params": [
    { "name": "field", "type": "field" },
    { "name": "sort", "type": "compare" },
    { "name": "padding", "type": "number", "default": 0 },
    { "name": "round", "type": "boolean", "default": false },
    { "name": "size", "type": "number", "array": true, "length": 2 },
    { "name": "as", "type": "string", "array": true, "length": Output.length, "default": Output }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(Partition, _HierarchyLayout__WEBPACK_IMPORTED_MODULE_0__["default"]);

prototype.layout = d3_hierarchy__WEBPACK_IMPORTED_MODULE_2__["partition"];

prototype.params = ['size', 'round', 'padding'];

prototype.fields = Output;


/***/ }),

/***/ "./node_modules/vega-hierarchy/src/Stratify.js":
/*!*****************************************************!*\
  !*** ./node_modules/vega-hierarchy/src/Stratify.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Stratify; });
/* harmony import */ var _lookup__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lookup */ "./node_modules/vega-hierarchy/src/lookup.js");
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var d3_hierarchy__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3-hierarchy */ "./node_modules/d3-hierarchy/src/index.js");





 /**
  * Stratify a collection of tuples into a tree structure based on
  * id and parent id fields.
  * @constructor
  * @param {object} params - The parameters for this operator.
  * @param {function(object): *} params.key - Unique key field for each tuple.
  * @param {function(object): *} params.parentKey - Field with key for parent tuple.
  */
function Stratify(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Transform"].call(this, null, params);
}

Stratify.Definition = {
  "type": "Stratify",
  "metadata": {"treesource": true},
  "params": [
    { "name": "key", "type": "field", "required": true },
    { "name": "parentKey", "type": "field", "required": true  }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["inherits"])(Stratify, vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Transform"]);

prototype.transform = function(_, pulse) {
  if (!pulse.source) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["error"])('Stratify transform requires an upstream data source.');
  }

  var tree = this.value,
      mod = _.modified(),
      out = pulse.fork(pulse.ALL).materialize(pulse.SOURCE),
      run = !this.value
         || mod
         || pulse.changed(pulse.ADD_REM)
         || pulse.modified(_.key.fields)
         || pulse.modified(_.parentKey.fields);

  // prevent upstream source pollution
  out.source = out.source.slice();

  if (run) {
    if (out.source.length) {
      tree = Object(_lookup__WEBPACK_IMPORTED_MODULE_0__["default"])(
        Object(d3_hierarchy__WEBPACK_IMPORTED_MODULE_3__["stratify"])().id(_.key).parentId(_.parentKey)(out.source)
        , _.key, vega_util__WEBPACK_IMPORTED_MODULE_2__["truthy"]);
    } else {
      tree = Object(_lookup__WEBPACK_IMPORTED_MODULE_0__["default"])(Object(d3_hierarchy__WEBPACK_IMPORTED_MODULE_3__["stratify"])()([{}]), _.key, _.key);
    }
  }

  out.source.root = this.value = tree;
  return out;
};


/***/ }),

/***/ "./node_modules/vega-hierarchy/src/Tree.js":
/*!*************************************************!*\
  !*** ./node_modules/vega-hierarchy/src/Tree.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Tree; });
/* harmony import */ var _HierarchyLayout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./HierarchyLayout */ "./node_modules/vega-hierarchy/src/HierarchyLayout.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var d3_hierarchy__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-hierarchy */ "./node_modules/d3-hierarchy/src/index.js");




var Layouts = {
  tidy: d3_hierarchy__WEBPACK_IMPORTED_MODULE_2__["tree"],
  cluster: d3_hierarchy__WEBPACK_IMPORTED_MODULE_2__["cluster"]
};

var Output = ['x', 'y', 'depth', 'children'];

/**
 * Tree layout. Depending on the method parameter, performs either
 * Reingold-Tilford 'tidy' layout or dendrogram 'cluster' layout.
 * @constructor
 * @param {object} params - The parameters for this operator.
 */
function Tree(params) {
  _HierarchyLayout__WEBPACK_IMPORTED_MODULE_0__["default"].call(this, params);
}

Tree.Definition = {
  "type": "Tree",
  "metadata": {"tree": true, "modifies": true},
  "params": [
    { "name": "field", "type": "field" },
    { "name": "sort", "type": "compare" },
    { "name": "method", "type": "enum", "default": "tidy", "values": ["tidy", "cluster"] },
    { "name": "size", "type": "number", "array": true, "length": 2 },
    { "name": "nodeSize", "type": "number", "array": true, "length": 2 },
    { "name": "separation", "type": "boolean", "default": true },
    { "name": "as", "type": "string", "array": true, "length": Output.length, "default": Output }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(Tree, _HierarchyLayout__WEBPACK_IMPORTED_MODULE_0__["default"]);

/**
 * Tree layout generator. Supports both 'tidy' and 'cluster' layouts.
 */
prototype.layout = function(method) {
  var m = method || 'tidy';
  if (Layouts.hasOwnProperty(m)) return Layouts[m]();
  else Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["error"])('Unrecognized Tree layout method: ' + m);
};

prototype.params = ['size', 'nodeSize'];

prototype.fields = Output;


/***/ }),

/***/ "./node_modules/vega-hierarchy/src/TreeLinks.js":
/*!******************************************************!*\
  !*** ./node_modules/vega-hierarchy/src/TreeLinks.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return TreeLinks; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");



 /**
  * Generate tuples representing links between tree nodes.
  * The resulting tuples will contain 'source' and 'target' fields,
  * which point to parent and child node tuples, respectively.
  * @constructor
  * @param {object} params - The parameters for this operator.
  */
function TreeLinks(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, [], params);
}

TreeLinks.Definition = {
  "type": "TreeLinks",
  "metadata": {"tree": true, "generates": true, "changes": true},
  "params": []
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(TreeLinks, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

prototype.transform = function(_, pulse) {
  var links = this.value,
      tree = pulse.source && pulse.source.root,
      out = pulse.fork(pulse.NO_SOURCE),
      lut = {};

  if (!tree) Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["error"])('TreeLinks transform requires a tree data source.');

  if (pulse.changed(pulse.ADD_REM)) {
    // remove previous links
    out.rem = links;

    // build lookup table of valid tuples
    pulse.visit(pulse.SOURCE, function(t) { lut[Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["tupleid"])(t)] = 1; });

    // generate links for all edges incident on valid tuples
    tree.each(function(node) {
      var t = node.data,
          p = node.parent && node.parent.data;
      if (p && lut[Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["tupleid"])(t)] && lut[Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["tupleid"])(p)]) {
        out.add.push(Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["ingest"])({source: p, target: t}));
      }
    });
    this.value = out.add;
  }

  else if (pulse.changed(pulse.MOD)) {
    // build lookup table of modified tuples
    pulse.visit(pulse.MOD, function(t) { lut[Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["tupleid"])(t)] = 1; });

    // gather links incident on modified tuples
    links.forEach(function(link) {
      if (lut[Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["tupleid"])(link.source)] || lut[Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["tupleid"])(link.target)]) {
        out.mod.push(link);
      }
    });
  }

  return out;
};


/***/ }),

/***/ "./node_modules/vega-hierarchy/src/Treemap.js":
/*!****************************************************!*\
  !*** ./node_modules/vega-hierarchy/src/Treemap.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Treemap; });
/* harmony import */ var _HierarchyLayout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./HierarchyLayout */ "./node_modules/vega-hierarchy/src/HierarchyLayout.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var d3_hierarchy__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-hierarchy */ "./node_modules/d3-hierarchy/src/index.js");




var Tiles = {
  binary: d3_hierarchy__WEBPACK_IMPORTED_MODULE_2__["treemapBinary"],
  dice: d3_hierarchy__WEBPACK_IMPORTED_MODULE_2__["treemapDice"],
  slice: d3_hierarchy__WEBPACK_IMPORTED_MODULE_2__["treemapSlice"],
  slicedice: d3_hierarchy__WEBPACK_IMPORTED_MODULE_2__["treemapSliceDice"],
  squarify: d3_hierarchy__WEBPACK_IMPORTED_MODULE_2__["treemapSquarify"],
  resquarify: d3_hierarchy__WEBPACK_IMPORTED_MODULE_2__["treemapResquarify"]
};

var Output = ['x0', 'y0', 'x1', 'y1', 'depth', 'children'];

/**
 * Treemap layout.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(object): *} params.field - The value field to size nodes.
 */
function Treemap(params) {
  _HierarchyLayout__WEBPACK_IMPORTED_MODULE_0__["default"].call(this, params);
}

Treemap.Definition = {
  "type": "Treemap",
  "metadata": {"tree": true, "modifies": true},
  "params": [
    { "name": "field", "type": "field" },
    { "name": "sort", "type": "compare" },
    { "name": "method", "type": "enum", "default": "squarify",
      "values": ["squarify", "resquarify", "binary", "dice", "slice", "slicedice"] },
    { "name": "padding", "type": "number", "default": 0 },
    { "name": "paddingInner", "type": "number", "default": 0 },
    { "name": "paddingOuter", "type": "number", "default": 0 },
    { "name": "paddingTop", "type": "number", "default": 0 },
    { "name": "paddingRight", "type": "number", "default": 0 },
    { "name": "paddingBottom", "type": "number", "default": 0 },
    { "name": "paddingLeft", "type": "number", "default": 0 },
    { "name": "ratio", "type": "number", "default": 1.618033988749895 },
    { "name": "round", "type": "boolean", "default": false },
    { "name": "size", "type": "number", "array": true, "length": 2 },
    { "name": "as", "type": "string", "array": true, "length": Output.length, "default": Output }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(Treemap, _HierarchyLayout__WEBPACK_IMPORTED_MODULE_0__["default"]);

/**
 * Treemap layout generator. Adds 'method' and 'ratio' parameters
 * to configure the underlying tile method.
 */
prototype.layout = function() {
  var x = Object(d3_hierarchy__WEBPACK_IMPORTED_MODULE_2__["treemap"])();
  x.ratio = function(_) {
    var t = x.tile();
    if (t.ratio) x.tile(t.ratio(_));
  };
  x.method = function(_) {
    if (Tiles.hasOwnProperty(_)) x.tile(Tiles[_]);
    else Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["error"])('Unrecognized Treemap layout method: ' + _);
  };
  return x;
};

prototype.params = [
  'method', 'ratio', 'size', 'round',
  'padding', 'paddingInner', 'paddingOuter',
  'paddingTop', 'paddingRight', 'paddingBottom', 'paddingLeft'
];

prototype.fields = Output;


/***/ }),

/***/ "./node_modules/vega-hierarchy/src/lookup.js":
/*!***************************************************!*\
  !*** ./node_modules/vega-hierarchy/src/lookup.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// Build lookup table mapping tuple keys to tree node instances
/* harmony default export */ __webpack_exports__["default"] = (function(tree, key, filter) {
  var map = {};
  tree.each(function(node) {
    var t = node.data;
    if (filter(t)) map[key(t)] = node;
  });
  tree.lookup = map;
  return tree;
});


/***/ }),

/***/ "./node_modules/vega-lite/build/package.json":
/*!***************************************************!*\
  !*** ./node_modules/vega-lite/build/package.json ***!
  \***************************************************/
/*! exports provided: name, author, version, collaborators, homepage, description, main, unpkg, jsdelivr, module, types, bin, directories, scripts, repository, license, bugs, devDependencies, dependencies, peerDependencies, jest, default */
/***/ (function(module) {

module.exports = JSON.parse("{\"name\":\"vega-lite\",\"author\":\"Dominik Moritz, Kanit \\\"Ham\\\" Wongsuphasawat, Arvind Satyanarayan, Jeffrey Heer\",\"version\":\"3.3.0\",\"collaborators\":[\"Kanit Wongsuphasawat <kanitw@gmail.com> (http://kanitw.yellowpigz.com)\",\"Dominik Moritz <domoritz@cs.washington.edu> (https://www.domoritz.de)\",\"Arvind Satyanarayan (https://arvindsatya.com/)\",\"Jeffrey Heer (https://jheer.org)\"],\"homepage\":\"https://vega.github.io/vega-lite/\",\"description\":\"Vega-Lite is a concise high-level language for interactive visualization.\",\"main\":\"build/vega-lite.js\",\"unpkg\":\"build/vega-lite.min.js\",\"jsdelivr\":\"build/vega-lite.min.js\",\"module\":\"build/src/index\",\"types\":\"build/src/index.d.ts\",\"bin\":{\"vl2png\":\"./bin/vl2png\",\"vl2svg\":\"./bin/vl2svg\",\"vl2vg\":\"./bin/vl2vg\"},\"directories\":{\"test\":\"test\"},\"scripts\":{\"build\":\"npm run build:only\",\"build:only\":\"npm run tsc:src && rollup -c\",\"postbuild\":\"terser build/vega-lite.js -cm --source-map content=build/vega-lite.js.map,filename=build/vega-lite.min.js.map -o build/vega-lite.min.js && npm run schema\",\"build:examples\":\"npm run build:only\",\"postbuild:examples\":\"npm run data && TZ=America/Los_Angeles scripts/build-examples.sh\",\"build:examples-full\":\"npm run build:only\",\"postbuild:examples-full\":\"TZ=America/Los_Angeles scripts/build-examples.sh 1\",\"build:example\":\"TZ=America/Los_Angeles scripts/build-example.sh\",\"build:toc\":\"npm run data && bundle exec jekyll build -q && scripts/generate-toc\",\"build:site\":\"npm run tsc:site && rollup -c site/rollup.config.js\",\"build:versions\":\"scripts/update-version.sh\",\"clean\":\"rm -rf build && rm -f examples/compiled/*.png && find site/examples ! -name 'index.md' -type f -delete\",\"data\":\"rsync -r node_modules/vega-datasets/data/* data\",\"deploy\":\"scripts/deploy.sh\",\"deploy:gh\":\"scripts/deploy-gh.sh\",\"deploy:schema\":\"scripts/deploy-schema.sh\",\"schema\":\"mkdir -p build && node --stack-size=5000 ./node_modules/.bin/ts-json-schema-generator --no-type-check --path src/index.ts --type TopLevelSpec > build/vega-lite-schema.json && npm run renameschema && cp build/vega-lite-schema.json _data/\",\"renameschema\":\"scripts/rename-schema.sh\",\"presite\":\"npm run data && npm run build:site && npm run build:toc && npm run build:versions && scripts/create-example-pages\",\"site\":\"bundle exec jekyll serve --incremental\",\"tsc:src\":\"tsc -b src/tsconfig.src.json\",\"tsc:site\":\"tsc -b site/tsconfig.site.json\",\"prettierbase\":\"prettier '{src,test,test-runtime,site,typings}/**/*.{md,css}'\",\"eslintbase\":\"eslint '{src,test,test-runtime,site,typings}/**/*.{ts,js}'\",\"format\":\"npm run eslintbase -- --fix && npm run prettierbase -- --write\",\"lint\":\"npm run eslintbase && npm run prettierbase -- --check\",\"test\":\"jest test/ && npm run lint && npm run schema && jest examples/ && npm run test:runtime\",\"test:inspect\":\"node --inspect-brk ./node_modules/.bin/jest --runInBand test\",\"test:runtime\":\"TZ=America/Los_Angeles jest test-runtime/\",\"test:runtime:generate\":\"rm -Rf test-runtime/resources && VL_GENERATE_TESTS=true npm run test:runtime\",\"watch:build\":\"npm run build:only && concurrently --kill-others -n Typescript,Rollup 'npm run tsc:src -- -w' 'rollup -c -w'\",\"watch:site\":\"concurrently --kill-others -n Typescript,Rollup 'npm run tsc:site -- -w' 'rollup -c site/rollup.config.js -w'\",\"watch:test\":\"jest --watch\"},\"repository\":{\"type\":\"git\",\"url\":\"https://github.com/vega/vega-lite.git\"},\"license\":\"BSD-3-Clause\",\"bugs\":{\"url\":\"https://github.com/vega/vega-lite/issues\"},\"devDependencies\":{\"@types/chai\":\"^4.1.7\",\"@types/d3\":\"^5.7.2\",\"@types/highlight.js\":\"^9.12.3\",\"@types/jest\":\"^24.0.13\",\"@types/jest-environment-puppeteer\":\"^4.0.0\",\"@types/mkdirp\":\"^0.5.2\",\"@types/node\":\"^12.0.2\",\"@types/puppeteer\":\"^1.12.4\",\"@typescript-eslint/eslint-plugin\":\"^1.9.0\",\"@typescript-eslint/parser\":\"^1.9.0\",\"ajv\":\"^6.10.0\",\"chai\":\"^4.2.0\",\"cheerio\":\"^1.0.0-rc.2\",\"codecov\":\"^3.5.0\",\"concurrently\":\"^4.1.0\",\"d3\":\"^5.9.2\",\"eslint\":\"^5.16.0\",\"eslint-config-prettier\":\"^4.3.0\",\"eslint-plugin-prettier\":\"^3.1.0\",\"highlight.js\":\"^9.15.6\",\"http-server\":\"^0.11.1\",\"jest\":\"^24.8.0\",\"jest-puppeteer\":\"^4.1.1\",\"mkdirp\":\"^0.5.1\",\"prettier\":\"^1.17.1\",\"puppeteer\":\"^1.16.0\",\"rollup\":\"^1.12.1\",\"rollup-plugin-commonjs\":\"^10.0.0\",\"rollup-plugin-json\":\"^4.0.0\",\"rollup-plugin-node-resolve\":\"^5.0.0\",\"rollup-plugin-sourcemaps\":\"^0.4.2\",\"rollup-plugin-terser\":\"^5.0.0\",\"svg2png-many\":\"^0.0.7\",\"terser\":\"^4.0.0\",\"ts-jest\":\"^24.0.2\",\"ts-json-schema-generator\":\"^0.42.0\",\"typescript\":\"^3.4.5\",\"vega-cli\":\"^5.4.0\",\"vega-datasets\":\"^1.25.0\",\"vega-embed\":\"^4.2.0\",\"vega-tooltip\":\"^0.17.0\",\"yaml-front-matter\":\"^4.0.0\"},\"dependencies\":{\"@types/clone\":\"~0.1.30\",\"@types/fast-json-stable-stringify\":\"^2.0.0\",\"clone\":\"~2.1.2\",\"fast-deep-equal\":\"~2.0.1\",\"fast-json-stable-stringify\":\"~2.0.0\",\"json-stringify-pretty-compact\":\"~2.0.0\",\"tslib\":\"~1.9.3\",\"vega-event-selector\":\"~2.0.0\",\"vega-expression\":\"~2.6.0\",\"vega-typings\":\"0.7.1\",\"vega-util\":\"~1.10.0\",\"yargs\":\"~13.2.4\"},\"peerDependencies\":{\"vega\":\"^5.4.0\"},\"jest\":{\"preset\":\"jest-puppeteer\",\"transform\":{\"^.+\\\\.tsx?$\":\"ts-jest\"},\"testRegex\":\"(/__tests__/.*|(\\\\.|/)(test|spec))\\\\.(jsx?|tsx?)$\",\"moduleFileExtensions\":[\"ts\",\"tsx\",\"js\",\"jsx\",\"json\",\"node\"],\"testPathIgnorePatterns\":[\"<rootDir>/node_modules\",\"<rootDir>/build\",\"<rootDir>/_site\",\"<rootDir>/src\"],\"coverageDirectory\":\"./coverage/\",\"collectCoverage\":false}}");

/***/ }),

/***/ "./node_modules/vega-lite/build/src/aggregate.js":
/*!*******************************************************!*\
  !*** ./node_modules/vega-lite/build/src/aggregate.js ***!
  \*******************************************************/
/*! exports provided: isArgminDef, isArgmaxDef, AGGREGATE_OPS, isAggregateOp, COUNTING_OPS, isCountingAggregateOp, isMinMaxOp, SUM_OPS, SHARED_DOMAIN_OPS, SHARED_DOMAIN_OP_INDEX */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isArgminDef", function() { return isArgminDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isArgmaxDef", function() { return isArgmaxDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AGGREGATE_OPS", function() { return AGGREGATE_OPS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isAggregateOp", function() { return isAggregateOp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "COUNTING_OPS", function() { return COUNTING_OPS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isCountingAggregateOp", function() { return isCountingAggregateOp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isMinMaxOp", function() { return isMinMaxOp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SUM_OPS", function() { return SUM_OPS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SHARED_DOMAIN_OPS", function() { return SHARED_DOMAIN_OPS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SHARED_DOMAIN_OP_INDEX", function() { return SHARED_DOMAIN_OP_INDEX; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util */ "./node_modules/vega-lite/build/src/util.js");


const AGGREGATE_OP_INDEX = {
    argmax: 1,
    argmin: 1,
    average: 1,
    count: 1,
    distinct: 1,
    max: 1,
    mean: 1,
    median: 1,
    min: 1,
    missing: 1,
    q1: 1,
    q3: 1,
    ci0: 1,
    ci1: 1,
    stderr: 1,
    stdev: 1,
    stdevp: 1,
    sum: 1,
    valid: 1,
    values: 1,
    variance: 1,
    variancep: 1
};
function isArgminDef(a) {
    return !!a && !!a['argmin'];
}
function isArgmaxDef(a) {
    return !!a && !!a['argmax'];
}
const AGGREGATE_OPS = Object(_util__WEBPACK_IMPORTED_MODULE_1__["flagKeys"])(AGGREGATE_OP_INDEX);
function isAggregateOp(a) {
    return Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isString"])(a) && !!AGGREGATE_OP_INDEX[a];
}
const COUNTING_OPS = ['count', 'valid', 'missing', 'distinct'];
function isCountingAggregateOp(aggregate) {
    return aggregate && Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isString"])(aggregate) && Object(_util__WEBPACK_IMPORTED_MODULE_1__["contains"])(COUNTING_OPS, aggregate);
}
function isMinMaxOp(aggregate) {
    return aggregate && Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isString"])(aggregate) && Object(_util__WEBPACK_IMPORTED_MODULE_1__["contains"])(['min', 'max'], aggregate);
}
/** Additive-based aggregation operations.  These can be applied to stack. */
const SUM_OPS = ['count', 'sum', 'distinct', 'valid', 'missing'];
/**
 * Aggregation operators that always produce values within the range [domainMin, domainMax].
 */
const SHARED_DOMAIN_OPS = ['mean', 'average', 'median', 'q1', 'q3', 'min', 'max'];
const SHARED_DOMAIN_OP_INDEX = Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["toSet"])(SHARED_DOMAIN_OPS);
//# sourceMappingURL=aggregate.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/axis.js":
/*!**************************************************!*\
  !*** ./node_modules/vega-lite/build/src/axis.js ***!
  \**************************************************/
/*! exports provided: AXIS_PARTS, AXIS_PROPERTY_TYPE, isAxisProperty, VG_AXIS_PROPERTIES, AXIS_PROPERTIES */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AXIS_PARTS", function() { return AXIS_PARTS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AXIS_PROPERTY_TYPE", function() { return AXIS_PROPERTY_TYPE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isAxisProperty", function() { return isAxisProperty; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VG_AXIS_PROPERTIES", function() { return VG_AXIS_PROPERTIES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AXIS_PROPERTIES", function() { return AXIS_PROPERTIES; });
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util */ "./node_modules/vega-lite/build/src/util.js");

const AXIS_PARTS = ['domain', 'grid', 'labels', 'ticks', 'title'];
/**
 * A dictionary listing whether a certain axis property is applicable for only main axes or only grid axes.
 * (Properties not listed are applicable for both)
 */
const AXIS_PROPERTY_TYPE = {
    grid: 'grid',
    gridColor: 'grid',
    gridDash: 'grid',
    gridOpacity: 'grid',
    gridScale: 'grid',
    gridWidth: 'grid',
    orient: 'main',
    bandPosition: 'both',
    domain: 'main',
    domainColor: 'main',
    domainOpacity: 'main',
    domainWidth: 'main',
    format: 'main',
    formatType: 'main',
    labelAlign: 'main',
    labelAngle: 'main',
    labelBaseline: 'main',
    labelBound: 'main',
    labelColor: 'main',
    labelFlush: 'main',
    labelFlushOffset: 'main',
    labelFont: 'main',
    labelFontSize: 'main',
    labelFontWeight: 'main',
    labelLimit: 'main',
    labelOpacity: 'main',
    labelOverlap: 'main',
    labelPadding: 'main',
    labels: 'main',
    maxExtent: 'main',
    minExtent: 'main',
    offset: 'main',
    position: 'main',
    tickColor: 'main',
    tickExtra: 'main',
    tickOffset: 'both',
    tickOpacity: 'main',
    tickRound: 'main',
    ticks: 'main',
    tickSize: 'main',
    title: 'main',
    titleAlign: 'main',
    titleAngle: 'main',
    titleBaseline: 'main',
    titleColor: 'main',
    titleFont: 'main',
    titleFontSize: 'main',
    titleFontWeight: 'main',
    titleLimit: 'main',
    titleOpacity: 'main',
    titlePadding: 'main',
    titleX: 'main',
    titleY: 'main',
    tickWidth: 'both',
    tickCount: 'both',
    values: 'both',
    scale: 'both',
    zindex: 'both' // this is actually set afterward, so it doesn't matter
};
const COMMON_AXIS_PROPERTIES_INDEX = {
    orient: 1,
    bandPosition: 1,
    domain: 1,
    domainColor: 1,
    domainDash: 1,
    domainDashOffset: 1,
    domainOpacity: 1,
    domainWidth: 1,
    format: 1,
    formatType: 1,
    grid: 1,
    gridColor: 1,
    gridDash: 1,
    gridDashOffset: 1,
    gridOpacity: 1,
    gridWidth: 1,
    labelAlign: 1,
    labelAngle: 1,
    labelBaseline: 1,
    labelBound: 1,
    labelColor: 1,
    labelFlush: 1,
    labelFlushOffset: 1,
    labelFont: 1,
    labelFontSize: 1,
    labelFontStyle: 1,
    labelFontWeight: 1,
    labelLimit: 1,
    labelOpacity: 1,
    labelOverlap: 1,
    labelPadding: 1,
    labels: 1,
    labelSeparation: 1,
    maxExtent: 1,
    minExtent: 1,
    offset: 1,
    position: 1,
    tickColor: 1,
    tickCount: 1,
    tickDash: 1,
    tickDashOffset: 1,
    tickExtra: 1,
    tickMinStep: 1,
    tickOffset: 1,
    tickOpacity: 1,
    tickRound: 1,
    ticks: 1,
    tickSize: 1,
    tickWidth: 1,
    title: 1,
    titleAlign: 1,
    titleAnchor: 1,
    titleAngle: 1,
    titleBaseline: 1,
    titleColor: 1,
    titleFont: 1,
    titleFontSize: 1,
    titleFontStyle: 1,
    titleFontWeight: 1,
    titleLimit: 1,
    titleOpacity: 1,
    titlePadding: 1,
    titleX: 1,
    titleY: 1,
    values: 1,
    zindex: 1
};
const AXIS_PROPERTIES_INDEX = Object.assign({}, COMMON_AXIS_PROPERTIES_INDEX, { encoding: 1 });
const VG_AXIS_PROPERTIES_INDEX = Object.assign({ gridScale: 1, scale: 1 }, COMMON_AXIS_PROPERTIES_INDEX, { encode: 1 });
function isAxisProperty(prop) {
    return !!AXIS_PROPERTIES_INDEX[prop];
}
const VG_AXIS_PROPERTIES = Object(_util__WEBPACK_IMPORTED_MODULE_0__["flagKeys"])(VG_AXIS_PROPERTIES_INDEX);
// Export for dependent projects
const AXIS_PROPERTIES = Object(_util__WEBPACK_IMPORTED_MODULE_0__["flagKeys"])(AXIS_PROPERTIES_INDEX);
//# sourceMappingURL=axis.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/bin.js":
/*!*************************************************!*\
  !*** ./node_modules/vega-lite/build/src/bin.js ***!
  \*************************************************/
/*! exports provided: binToString, isBinning, isBinned, isBinParams, autoMaxBins */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "binToString", function() { return binToString; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isBinning", function() { return isBinning; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isBinned", function() { return isBinned; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isBinParams", function() { return isBinParams; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "autoMaxBins", function() { return autoMaxBins; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./channel */ "./node_modules/vega-lite/build/src/channel.js");
/* harmony import */ var _channeldef__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./channeldef */ "./node_modules/vega-lite/build/src/channeldef.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./util */ "./node_modules/vega-lite/build/src/util.js");




/**
 * Create a key for the bin configuration. Not for prebinned bin.
 */
function binToString(bin) {
    if (Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isBoolean"])(bin)) {
        bin = Object(_channeldef__WEBPACK_IMPORTED_MODULE_2__["normalizeBin"])(bin, undefined);
    }
    return ('bin' +
        Object(_util__WEBPACK_IMPORTED_MODULE_3__["keys"])(bin)
            .map(p => Object(_util__WEBPACK_IMPORTED_MODULE_3__["varName"])(`_${p}_${bin[p]}`))
            .join(''));
}
/**
 * Vega-Lite should bin the data.
 */
function isBinning(bin) {
    return bin === true || (isBinParams(bin) && !bin.binned);
}
/**
 * The data is already binned and so Vega-Lite should not bin it again.
 */
function isBinned(bin) {
    return bin === 'binned' || (isBinParams(bin) && bin.binned);
}
function isBinParams(bin) {
    return Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isObject"])(bin);
}
function autoMaxBins(channel) {
    switch (channel) {
        case _channel__WEBPACK_IMPORTED_MODULE_1__["ROW"]:
        case _channel__WEBPACK_IMPORTED_MODULE_1__["COLUMN"]:
        case _channel__WEBPACK_IMPORTED_MODULE_1__["SIZE"]:
        case _channel__WEBPACK_IMPORTED_MODULE_1__["COLOR"]:
        case _channel__WEBPACK_IMPORTED_MODULE_1__["FILL"]:
        case _channel__WEBPACK_IMPORTED_MODULE_1__["STROKE"]:
        case _channel__WEBPACK_IMPORTED_MODULE_1__["STROKEWIDTH"]:
        case _channel__WEBPACK_IMPORTED_MODULE_1__["OPACITY"]:
        case _channel__WEBPACK_IMPORTED_MODULE_1__["FILLOPACITY"]:
        case _channel__WEBPACK_IMPORTED_MODULE_1__["STROKEOPACITY"]:
        // Facets and Size shouldn't have too many bins
        // We choose 6 like shape to simplify the rule [falls through]
        case _channel__WEBPACK_IMPORTED_MODULE_1__["SHAPE"]:
            return 6; // Vega's "shape" has 6 distinct values
        default:
            return 10;
    }
}
//# sourceMappingURL=bin.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/channel.js":
/*!*****************************************************!*\
  !*** ./node_modules/vega-lite/build/src/channel.js ***!
  \*****************************************************/
/*! exports provided: ROW, COLUMN, FACET, X, Y, X2, Y2, LATITUDE, LONGITUDE, LATITUDE2, LONGITUDE2, COLOR, FILL, STROKE, SHAPE, SIZE, OPACITY, FILLOPACITY, STROKEOPACITY, STROKEWIDTH, TEXT, ORDER, DETAIL, KEY, TOOLTIP, HREF, isGeoPositionChannel, getPositionChannelFromLatLong, GEOPOSITION_CHANNEL_INDEX, GEOPOSITION_CHANNELS, isColorChannel, FACET_CHANNELS, CHANNELS, SINGLE_DEF_CHANNELS, SINGLE_DEF_UNIT_CHANNELS, isSingleDefUnitChannel, isChannel, SECONDARY_RANGE_CHANNEL, isSecondaryRangeChannel, getMainRangeChannel, UNIT_CHANNELS, NONPOSITION_CHANNELS, POSITION_SCALE_CHANNELS, NONPOSITION_SCALE_CHANNELS, isNonPositionScaleChannel, supportLegend, SCALE_CHANNELS, isScaleChannel, supportMark, rangeType */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ROW", function() { return ROW; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "COLUMN", function() { return COLUMN; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FACET", function() { return FACET; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "X", function() { return X; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Y", function() { return Y; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "X2", function() { return X2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Y2", function() { return Y2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LATITUDE", function() { return LATITUDE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LONGITUDE", function() { return LONGITUDE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LATITUDE2", function() { return LATITUDE2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LONGITUDE2", function() { return LONGITUDE2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "COLOR", function() { return COLOR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FILL", function() { return FILL; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "STROKE", function() { return STROKE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SHAPE", function() { return SHAPE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SIZE", function() { return SIZE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OPACITY", function() { return OPACITY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FILLOPACITY", function() { return FILLOPACITY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "STROKEOPACITY", function() { return STROKEOPACITY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "STROKEWIDTH", function() { return STROKEWIDTH; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TEXT", function() { return TEXT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ORDER", function() { return ORDER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DETAIL", function() { return DETAIL; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "KEY", function() { return KEY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TOOLTIP", function() { return TOOLTIP; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HREF", function() { return HREF; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isGeoPositionChannel", function() { return isGeoPositionChannel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getPositionChannelFromLatLong", function() { return getPositionChannelFromLatLong; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GEOPOSITION_CHANNEL_INDEX", function() { return GEOPOSITION_CHANNEL_INDEX; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GEOPOSITION_CHANNELS", function() { return GEOPOSITION_CHANNELS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isColorChannel", function() { return isColorChannel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FACET_CHANNELS", function() { return FACET_CHANNELS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CHANNELS", function() { return CHANNELS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SINGLE_DEF_CHANNELS", function() { return SINGLE_DEF_CHANNELS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SINGLE_DEF_UNIT_CHANNELS", function() { return SINGLE_DEF_UNIT_CHANNELS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isSingleDefUnitChannel", function() { return isSingleDefUnitChannel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isChannel", function() { return isChannel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SECONDARY_RANGE_CHANNEL", function() { return SECONDARY_RANGE_CHANNEL; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isSecondaryRangeChannel", function() { return isSecondaryRangeChannel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getMainRangeChannel", function() { return getMainRangeChannel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UNIT_CHANNELS", function() { return UNIT_CHANNELS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NONPOSITION_CHANNELS", function() { return NONPOSITION_CHANNELS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "POSITION_SCALE_CHANNELS", function() { return POSITION_SCALE_CHANNELS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NONPOSITION_SCALE_CHANNELS", function() { return NONPOSITION_SCALE_CHANNELS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isNonPositionScaleChannel", function() { return isNonPositionScaleChannel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "supportLegend", function() { return supportLegend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SCALE_CHANNELS", function() { return SCALE_CHANNELS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isScaleChannel", function() { return isScaleChannel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "supportMark", function() { return supportMark; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rangeType", function() { return rangeType; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util */ "./node_modules/vega-lite/build/src/util.js");
/*
 * Constants and utilities for encoding channels (Visual variables)
 * such as 'x', 'y', 'color'.
 */


// Facet
const ROW = 'row';
const COLUMN = 'column';
const FACET = 'facet';
// Position
const X = 'x';
const Y = 'y';
const X2 = 'x2';
const Y2 = 'y2';
// Geo Position
const LATITUDE = 'latitude';
const LONGITUDE = 'longitude';
const LATITUDE2 = 'latitude2';
const LONGITUDE2 = 'longitude2';
// Mark property with scale
const COLOR = 'color';
const FILL = 'fill';
const STROKE = 'stroke';
const SHAPE = 'shape';
const SIZE = 'size';
const OPACITY = 'opacity';
const FILLOPACITY = 'fillOpacity';
const STROKEOPACITY = 'strokeOpacity';
const STROKEWIDTH = 'strokeWidth';
// Non-scale channel
const TEXT = 'text';
const ORDER = 'order';
const DETAIL = 'detail';
const KEY = 'key';
const TOOLTIP = 'tooltip';
const HREF = 'href';
function isGeoPositionChannel(c) {
    switch (c) {
        case LATITUDE:
        case LATITUDE2:
        case LONGITUDE:
        case LONGITUDE2:
            return true;
    }
    return false;
}
function getPositionChannelFromLatLong(channel) {
    switch (channel) {
        case LATITUDE:
            return 'y';
        case LATITUDE2:
            return 'y2';
        case LONGITUDE:
            return 'x';
        case LONGITUDE2:
            return 'x2';
    }
}
const GEOPOSITION_CHANNEL_INDEX = {
    longitude: 1,
    longitude2: 1,
    latitude: 1,
    latitude2: 1
};
const GEOPOSITION_CHANNELS = Object(_util__WEBPACK_IMPORTED_MODULE_1__["flagKeys"])(GEOPOSITION_CHANNEL_INDEX);
const UNIT_CHANNEL_INDEX = Object.assign({ 
    // position
    x: 1, y: 1, x2: 1, y2: 1 }, GEOPOSITION_CHANNEL_INDEX, { 
    // color
    color: 1, fill: 1, stroke: 1, 
    // other non-position with scale
    opacity: 1, fillOpacity: 1, strokeOpacity: 1, strokeWidth: 1, size: 1, shape: 1, 
    // channels without scales
    order: 1, text: 1, detail: 1, key: 1, tooltip: 1, href: 1 });
function isColorChannel(channel) {
    return channel === 'color' || channel === 'fill' || channel === 'stroke';
}
const FACET_CHANNEL_INDEX = {
    row: 1,
    column: 1,
    facet: 1
};
const FACET_CHANNELS = Object(_util__WEBPACK_IMPORTED_MODULE_1__["flagKeys"])(FACET_CHANNEL_INDEX);
const CHANNEL_INDEX = Object.assign({}, UNIT_CHANNEL_INDEX, FACET_CHANNEL_INDEX);
const CHANNELS = Object(_util__WEBPACK_IMPORTED_MODULE_1__["flagKeys"])(CHANNEL_INDEX);
const { order: _o, detail: _d } = CHANNEL_INDEX, SINGLE_DEF_CHANNEL_INDEX = tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"](CHANNEL_INDEX, ["order", "detail"]);
const { order: _o1, detail: _d1, row: _r, column: _c, facet: _f } = CHANNEL_INDEX, SINGLE_DEF_UNIT_CHANNEL_INDEX = tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"](CHANNEL_INDEX, ["order", "detail", "row", "column", "facet"]);
/**
 * Channels that cannot have an array of channelDef.
 * model.fieldDef, getFieldDef only work for these channels.
 *
 * (The only two channels that can have an array of channelDefs are "detail" and "order".
 * Since there can be multiple fieldDefs for detail and order, getFieldDef/model.fieldDef
 * are not applicable for them.  Similarly, selection projection won't work with "detail" and "order".)
 */
const SINGLE_DEF_CHANNELS = Object(_util__WEBPACK_IMPORTED_MODULE_1__["flagKeys"])(SINGLE_DEF_CHANNEL_INDEX);
const SINGLE_DEF_UNIT_CHANNELS = Object(_util__WEBPACK_IMPORTED_MODULE_1__["flagKeys"])(SINGLE_DEF_UNIT_CHANNEL_INDEX);
function isSingleDefUnitChannel(str) {
    return !!SINGLE_DEF_UNIT_CHANNEL_INDEX[str];
}
function isChannel(str) {
    return !!CHANNEL_INDEX[str];
}
const SECONDARY_RANGE_CHANNEL = ['x2', 'y2', 'latitude2', 'longitude2'];
function isSecondaryRangeChannel(c) {
    const main = getMainRangeChannel(c);
    return main !== c;
}
function getMainRangeChannel(channel) {
    switch (channel) {
        case 'x2':
            return 'x';
        case 'y2':
            return 'y';
        case 'latitude2':
            return 'latitude';
        case 'longitude2':
            return 'longitude';
    }
    return channel;
}
// CHANNELS without COLUMN, ROW
const UNIT_CHANNELS = Object(_util__WEBPACK_IMPORTED_MODULE_1__["flagKeys"])(UNIT_CHANNEL_INDEX);
// NONPOSITION_CHANNELS = UNIT_CHANNELS without X, Y, X2, Y2;
const { x: _x, y: _y, 
// x2 and y2 share the same scale as x and y
x2: _x2, y2: _y2, latitude: _latitude, longitude: _longitude, latitude2: _latitude2, longitude2: _longitude2 } = UNIT_CHANNEL_INDEX, 
// The rest of unit channels then have scale
NONPOSITION_CHANNEL_INDEX = tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"](UNIT_CHANNEL_INDEX, ["x", "y", "x2", "y2", "latitude", "longitude", "latitude2", "longitude2"]);
const NONPOSITION_CHANNELS = Object(_util__WEBPACK_IMPORTED_MODULE_1__["flagKeys"])(NONPOSITION_CHANNEL_INDEX);
// POSITION_SCALE_CHANNELS = X and Y;
const POSITION_SCALE_CHANNEL_INDEX = { x: 1, y: 1 };
const POSITION_SCALE_CHANNELS = Object(_util__WEBPACK_IMPORTED_MODULE_1__["flagKeys"])(POSITION_SCALE_CHANNEL_INDEX);
// NON_POSITION_SCALE_CHANNEL = SCALE_CHANNELS without X, Y
const { 
// x2 and y2 share the same scale as x and y
// text and tooltip have format instead of scale,
// href has neither format, nor scale
text: _t, tooltip: _tt, href: _hr, 
// detail and order have no scale
detail: _dd, key: _k, order: _oo } = NONPOSITION_CHANNEL_INDEX, NONPOSITION_SCALE_CHANNEL_INDEX = tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"](NONPOSITION_CHANNEL_INDEX, ["text", "tooltip", "href", "detail", "key", "order"]);
const NONPOSITION_SCALE_CHANNELS = Object(_util__WEBPACK_IMPORTED_MODULE_1__["flagKeys"])(NONPOSITION_SCALE_CHANNEL_INDEX);
function isNonPositionScaleChannel(channel) {
    return !!NONPOSITION_CHANNEL_INDEX[channel];
}
/**
 * @returns whether Vega supports legends for a particular channel
 */
function supportLegend(channel) {
    switch (channel) {
        case COLOR:
        case FILL:
        case STROKE:
        case SIZE:
        case SHAPE:
        case OPACITY:
            return true;
        case FILLOPACITY:
        case STROKEOPACITY:
        case STROKEWIDTH:
            return false;
    }
}
// Declare SCALE_CHANNEL_INDEX
const SCALE_CHANNEL_INDEX = Object.assign({}, POSITION_SCALE_CHANNEL_INDEX, NONPOSITION_SCALE_CHANNEL_INDEX);
/** List of channels with scales */
const SCALE_CHANNELS = Object(_util__WEBPACK_IMPORTED_MODULE_1__["flagKeys"])(SCALE_CHANNEL_INDEX);
function isScaleChannel(channel) {
    return !!SCALE_CHANNEL_INDEX[channel];
}
/**
 * Return whether a channel supports a particular mark type.
 * @param channel  channel name
 * @param mark the mark type
 * @return whether the mark supports the channel
 */
function supportMark(channel, mark) {
    return getSupportedMark(channel)[mark];
}
/**
 * Return a dictionary showing whether a channel supports mark type.
 * @param channel
 * @return A dictionary mapping mark types to 'always', 'binned', or undefined
 */
function getSupportedMark(channel) {
    switch (channel) {
        case COLOR:
        case FILL:
        case STROKE:
        // falls through
        case DETAIL:
        case KEY:
        case TOOLTIP:
        case HREF:
        case ORDER: // TODO: revise (order might not support rect, which is not stackable?)
        case OPACITY:
        case FILLOPACITY:
        case STROKEOPACITY:
        case STROKEWIDTH:
        // falls through
        case FACET:
        case ROW: // falls through
        case COLUMN:
            return {
                // all marks
                point: 'always',
                tick: 'always',
                rule: 'always',
                circle: 'always',
                square: 'always',
                bar: 'always',
                rect: 'always',
                line: 'always',
                trail: 'always',
                area: 'always',
                text: 'always',
                geoshape: 'always'
            };
        case X:
        case Y:
        case LATITUDE:
        case LONGITUDE:
            return {
                // all marks except geoshape. geoshape does not use X, Y -- it uses a projection
                point: 'always',
                tick: 'always',
                rule: 'always',
                circle: 'always',
                square: 'always',
                bar: 'always',
                rect: 'always',
                line: 'always',
                trail: 'always',
                area: 'always',
                text: 'always'
            };
        case X2:
        case Y2:
        case LATITUDE2:
        case LONGITUDE2:
            return {
                rule: 'always',
                bar: 'always',
                rect: 'always',
                area: 'always',
                circle: 'binned',
                point: 'binned',
                square: 'binned',
                tick: 'binned'
            };
        case SIZE:
            return {
                point: 'always',
                tick: 'always',
                rule: 'always',
                circle: 'always',
                square: 'always',
                bar: 'always',
                text: 'always',
                line: 'always',
                trail: 'always'
            };
        case SHAPE:
            return { point: 'always', geoshape: 'always' };
        case TEXT:
            return { text: 'always' };
    }
}
function rangeType(channel) {
    switch (channel) {
        case X:
        case Y:
        case SIZE:
        case STROKEWIDTH:
        case OPACITY:
        case FILLOPACITY:
        case STROKEOPACITY:
        // X2 and Y2 use X and Y scales, so they similarly have continuous range. [falls through]
        case X2:
        case Y2:
            return undefined;
        case FACET:
        case ROW:
        case COLUMN:
        case SHAPE:
        // TEXT, TOOLTIP, and HREF have no scale but have discrete output [falls through]
        case TEXT:
        case TOOLTIP:
        case HREF:
            return 'discrete';
        // Color can be either continuous or discrete, depending on scale type.
        case COLOR:
        case FILL:
        case STROKE:
            return 'flexible';
        // No scale, no range type.
        case LATITUDE:
        case LONGITUDE:
        case LATITUDE2:
        case LONGITUDE2:
        case DETAIL:
        case KEY:
        case ORDER:
            return undefined;
    }
    /* istanbul ignore next: should never reach here. */
    throw new Error('rangeType not implemented for ' + channel);
}
//# sourceMappingURL=channel.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/channeldef.js":
/*!********************************************************!*\
  !*** ./node_modules/vega-lite/build/src/channeldef.js ***!
  \********************************************************/
/*! exports provided: isConditionalSelection, isRepeatRef, toFieldDefBase, isSortableFieldDef, isConditionalDef, hasConditionalFieldDef, hasConditionalValueDef, isFieldDef, isTypedFieldDef, isStringFieldDef, isValueDef, isScaleFieldDef, isPositionFieldDef, isMarkPropFieldDef, isTextFieldDef, vgField, isDiscrete, isContinuous, isCount, verbalTitleFormatter, functionalTitleFormatter, defaultTitleFormatter, setTitleFormatter, resetTitleFormatter, title, getGuide, defaultTitle, format, defaultType, getFieldDef, getTypedFieldDef, normalize, normalizeFieldDef, normalizeBin, channelCompatibility, isNumberFieldDef, isTimeFormatFieldDef, isTimeFieldDef, valueExpr, valueArray, binRequiresRange */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isConditionalSelection", function() { return isConditionalSelection; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isRepeatRef", function() { return isRepeatRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "toFieldDefBase", function() { return toFieldDefBase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isSortableFieldDef", function() { return isSortableFieldDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isConditionalDef", function() { return isConditionalDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hasConditionalFieldDef", function() { return hasConditionalFieldDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hasConditionalValueDef", function() { return hasConditionalValueDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isFieldDef", function() { return isFieldDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isTypedFieldDef", function() { return isTypedFieldDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isStringFieldDef", function() { return isStringFieldDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isValueDef", function() { return isValueDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isScaleFieldDef", function() { return isScaleFieldDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isPositionFieldDef", function() { return isPositionFieldDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isMarkPropFieldDef", function() { return isMarkPropFieldDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isTextFieldDef", function() { return isTextFieldDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vgField", function() { return vgField; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isDiscrete", function() { return isDiscrete; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isContinuous", function() { return isContinuous; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isCount", function() { return isCount; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "verbalTitleFormatter", function() { return verbalTitleFormatter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "functionalTitleFormatter", function() { return functionalTitleFormatter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultTitleFormatter", function() { return defaultTitleFormatter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setTitleFormatter", function() { return setTitleFormatter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "resetTitleFormatter", function() { return resetTitleFormatter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "title", function() { return title; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getGuide", function() { return getGuide; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultTitle", function() { return defaultTitle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "format", function() { return format; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultType", function() { return defaultType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getFieldDef", function() { return getFieldDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getTypedFieldDef", function() { return getTypedFieldDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "normalize", function() { return normalize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "normalizeFieldDef", function() { return normalizeFieldDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "normalizeBin", function() { return normalizeBin; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "channelCompatibility", function() { return channelCompatibility; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isNumberFieldDef", function() { return isNumberFieldDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isTimeFormatFieldDef", function() { return isTimeFormatFieldDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isTimeFieldDef", function() { return isTimeFieldDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "valueExpr", function() { return valueExpr; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "valueArray", function() { return valueArray; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "binRequiresRange", function() { return binRequiresRange; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var _aggregate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./aggregate */ "./node_modules/vega-lite/build/src/aggregate.js");
/* harmony import */ var _bin__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./bin */ "./node_modules/vega-lite/build/src/bin.js");
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./channel */ "./node_modules/vega-lite/build/src/channel.js");
/* harmony import */ var _datetime__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./datetime */ "./node_modules/vega-lite/build/src/datetime.js");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./log */ "./node_modules/vega-lite/build/src/log/index.js");
/* harmony import */ var _spec_facet__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./spec/facet */ "./node_modules/vega-lite/build/src/spec/facet.js");
/* harmony import */ var _timeunit__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./timeunit */ "./node_modules/vega-lite/build/src/timeunit.js");
/* harmony import */ var _type__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./type */ "./node_modules/vega-lite/build/src/type.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./util */ "./node_modules/vega-lite/build/src/util.js");

// Declaration and utility for variants of a field definition object










function isConditionalSelection(c) {
    return c['selection'];
}
function isRepeatRef(field) {
    return field && !Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isString"])(field) && 'repeat' in field;
}
function toFieldDefBase(fieldDef) {
    const { field, timeUnit, bin, aggregate } = fieldDef;
    return Object.assign({}, (timeUnit ? { timeUnit } : {}), (bin ? { bin } : {}), (aggregate ? { aggregate } : {}), { field });
}
function isSortableFieldDef(fieldDef) {
    return isTypedFieldDef(fieldDef) && !!fieldDef['sort'];
}
function isConditionalDef(channelDef) {
    return !!channelDef && !!channelDef.condition;
}
/**
 * Return if a channelDef is a ConditionalValueDef with ConditionFieldDef
 */
function hasConditionalFieldDef(channelDef) {
    return !!channelDef && !!channelDef.condition && !Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(channelDef.condition) && isFieldDef(channelDef.condition);
}
function hasConditionalValueDef(channelDef) {
    return !!channelDef && !!channelDef.condition && (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(channelDef.condition) || isValueDef(channelDef.condition));
}
function isFieldDef(channelDef) {
    return !!channelDef && (!!channelDef['field'] || channelDef['aggregate'] === 'count');
}
function isTypedFieldDef(channelDef) {
    return !!channelDef && ((!!channelDef['field'] && !!channelDef['type']) || channelDef['aggregate'] === 'count');
}
function isStringFieldDef(channelDef) {
    return isFieldDef(channelDef) && Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isString"])(channelDef.field);
}
function isValueDef(channelDef) {
    return channelDef && 'value' in channelDef && channelDef['value'] !== undefined;
}
function isScaleFieldDef(channelDef) {
    return !!channelDef && (!!channelDef['scale'] || !!channelDef['sort']);
}
function isPositionFieldDef(channelDef) {
    return !!channelDef && (!!channelDef['axis'] || !!channelDef['stack'] || !!channelDef['impute']);
}
function isMarkPropFieldDef(channelDef) {
    return !!channelDef && !!channelDef['legend'];
}
function isTextFieldDef(channelDef) {
    return !!channelDef && !!channelDef['format'];
}
function isOpFieldDef(fieldDef) {
    return !!fieldDef['op'];
}
/**
 * Get a Vega field reference from a Vega-Lite field def.
 */
function vgField(fieldDef, opt = {}) {
    let field = fieldDef.field;
    const prefix = opt.prefix;
    let suffix = opt.suffix;
    let argAccessor = ''; // for accessing argmin/argmax field at the end without getting escaped
    if (isCount(fieldDef)) {
        field = Object(_util__WEBPACK_IMPORTED_MODULE_10__["internalField"])('count');
    }
    else {
        let fn;
        if (!opt.nofn) {
            if (isOpFieldDef(fieldDef)) {
                fn = fieldDef.op;
            }
            else {
                const { bin, aggregate, timeUnit } = fieldDef;
                if (Object(_bin__WEBPACK_IMPORTED_MODULE_3__["isBinning"])(bin)) {
                    fn = Object(_bin__WEBPACK_IMPORTED_MODULE_3__["binToString"])(bin);
                    suffix = (opt.binSuffix || '') + (opt.suffix || '');
                }
                else if (aggregate) {
                    if (Object(_aggregate__WEBPACK_IMPORTED_MODULE_2__["isArgmaxDef"])(aggregate)) {
                        argAccessor = `.${field}`;
                        field = `argmax_${aggregate.argmax}`;
                    }
                    else if (Object(_aggregate__WEBPACK_IMPORTED_MODULE_2__["isArgminDef"])(aggregate)) {
                        argAccessor = `.${field}`;
                        field = `argmin_${aggregate.argmin}`;
                    }
                    else {
                        fn = String(aggregate);
                    }
                }
                else if (timeUnit) {
                    fn = String(timeUnit);
                }
            }
        }
        if (fn) {
            field = field ? `${fn}_${field}` : fn;
        }
    }
    if (suffix) {
        field = `${field}_${suffix}`;
    }
    if (prefix) {
        field = `${prefix}_${field}`;
    }
    if (opt.forAs) {
        return field;
    }
    else if (opt.expr) {
        // Expression to access flattened field. No need to escape dots.
        return Object(_util__WEBPACK_IMPORTED_MODULE_10__["flatAccessWithDatum"])(field, opt.expr) + argAccessor;
    }
    else {
        // We flattened all fields so paths should have become dot.
        return Object(_util__WEBPACK_IMPORTED_MODULE_10__["replacePathInField"])(field) + argAccessor;
    }
}
function isDiscrete(fieldDef) {
    switch (fieldDef.type) {
        case 'nominal':
        case 'ordinal':
        case 'geojson':
            return true;
        case 'quantitative':
            return !!fieldDef.bin;
        case 'temporal':
            return false;
    }
    throw new Error(_log__WEBPACK_IMPORTED_MODULE_6__["message"].invalidFieldType(fieldDef.type));
}
function isContinuous(fieldDef) {
    return !isDiscrete(fieldDef);
}
function isCount(fieldDef) {
    return fieldDef.aggregate === 'count';
}
function verbalTitleFormatter(fieldDef, config) {
    const { field, bin, timeUnit, aggregate } = fieldDef;
    if (aggregate === 'count') {
        return config.countTitle;
    }
    else if (Object(_bin__WEBPACK_IMPORTED_MODULE_3__["isBinning"])(bin)) {
        return `${field} (binned)`;
    }
    else if (timeUnit) {
        const units = Object(_timeunit__WEBPACK_IMPORTED_MODULE_8__["getTimeUnitParts"])(timeUnit).join('-');
        return `${field} (${units})`;
    }
    else if (aggregate) {
        if (Object(_aggregate__WEBPACK_IMPORTED_MODULE_2__["isArgmaxDef"])(aggregate)) {
            return `${field} for max ${aggregate.argmax}`;
        }
        else if (Object(_aggregate__WEBPACK_IMPORTED_MODULE_2__["isArgminDef"])(aggregate)) {
            return `${field} for min ${aggregate.argmin}`;
        }
        else {
            return `${Object(_util__WEBPACK_IMPORTED_MODULE_10__["titlecase"])(aggregate)} of ${field}`;
        }
    }
    return field;
}
function functionalTitleFormatter(fieldDef) {
    const { aggregate, bin, timeUnit, field } = fieldDef;
    if (Object(_aggregate__WEBPACK_IMPORTED_MODULE_2__["isArgmaxDef"])(aggregate)) {
        return `${field} for argmax(${aggregate.argmax})`;
    }
    else if (Object(_aggregate__WEBPACK_IMPORTED_MODULE_2__["isArgminDef"])(aggregate)) {
        return `${field} for argmin(${aggregate.argmin})`;
    }
    const fn = aggregate || timeUnit || (Object(_bin__WEBPACK_IMPORTED_MODULE_3__["isBinning"])(bin) && 'bin');
    if (fn) {
        return fn.toUpperCase() + '(' + field + ')';
    }
    else {
        return field;
    }
}
const defaultTitleFormatter = (fieldDef, config) => {
    switch (config.fieldTitle) {
        case 'plain':
            return fieldDef.field;
        case 'functional':
            return functionalTitleFormatter(fieldDef);
        default:
            return verbalTitleFormatter(fieldDef, config);
    }
};
let titleFormatter = defaultTitleFormatter;
function setTitleFormatter(formatter) {
    titleFormatter = formatter;
}
function resetTitleFormatter() {
    setTitleFormatter(defaultTitleFormatter);
}
function title(fieldDef, config, { allowDisabling, includeDefault = true }) {
    const guide = getGuide(fieldDef) || {};
    const guideTitle = guide.title;
    const def = includeDefault ? defaultTitle(fieldDef, config) : undefined;
    if (allowDisabling) {
        return Object(_util__WEBPACK_IMPORTED_MODULE_10__["getFirstDefined"])(guideTitle, fieldDef.title, def);
    }
    else {
        return guideTitle || fieldDef.title || def;
    }
}
function getGuide(fieldDef) {
    if (isPositionFieldDef(fieldDef) && fieldDef.axis) {
        return fieldDef.axis;
    }
    else if (isMarkPropFieldDef(fieldDef) && fieldDef.legend) {
        return fieldDef.legend;
    }
    else if (Object(_spec_facet__WEBPACK_IMPORTED_MODULE_7__["isFacetFieldDef"])(fieldDef) && fieldDef.header) {
        return fieldDef.header;
    }
    return undefined;
}
function defaultTitle(fieldDef, config) {
    return titleFormatter(fieldDef, config);
}
function format(fieldDef) {
    if (isTextFieldDef(fieldDef) && fieldDef.format) {
        return fieldDef.format;
    }
    else {
        const guide = getGuide(fieldDef) || {};
        return guide.format;
    }
}
function defaultType(fieldDef, channel) {
    if (fieldDef.timeUnit) {
        return 'temporal';
    }
    if (Object(_bin__WEBPACK_IMPORTED_MODULE_3__["isBinning"])(fieldDef.bin)) {
        return 'quantitative';
    }
    switch (Object(_channel__WEBPACK_IMPORTED_MODULE_4__["rangeType"])(channel)) {
        case 'continuous':
            return 'quantitative';
        case 'discrete':
            return 'nominal';
        case 'flexible': // color
            return 'nominal';
        default:
            return 'quantitative';
    }
}
/**
 * Returns the fieldDef -- either from the outer channelDef or from the condition of channelDef.
 * @param channelDef
 */
function getFieldDef(channelDef) {
    if (isFieldDef(channelDef)) {
        return channelDef;
    }
    else if (hasConditionalFieldDef(channelDef)) {
        return channelDef.condition;
    }
    return undefined;
}
function getTypedFieldDef(channelDef) {
    if (isFieldDef(channelDef)) {
        return channelDef;
    }
    else if (hasConditionalFieldDef(channelDef)) {
        return channelDef.condition;
    }
    return undefined;
}
/**
 * Convert type to full, lowercase type, or augment the fieldDef with a default type if missing.
 */
function normalize(channelDef, channel) {
    if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isString"])(channelDef) || Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isNumber"])(channelDef) || Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isBoolean"])(channelDef)) {
        const primitiveType = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isString"])(channelDef) ? 'string' : Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isNumber"])(channelDef) ? 'number' : 'boolean';
        _log__WEBPACK_IMPORTED_MODULE_6__["warn"](_log__WEBPACK_IMPORTED_MODULE_6__["message"].primitiveChannelDef(channel, primitiveType, channelDef));
        return { value: channelDef };
    }
    // If a fieldDef contains a field, we need type.
    if (isFieldDef(channelDef)) {
        return normalizeFieldDef(channelDef, channel);
    }
    else if (hasConditionalFieldDef(channelDef)) {
        return Object.assign({}, channelDef, { 
            // Need to cast as normalizeFieldDef normally return FieldDef, but here we know that it is definitely Condition<FieldDef>
            condition: normalizeFieldDef(channelDef.condition, channel) });
    }
    return channelDef;
}
function normalizeFieldDef(fieldDef, channel) {
    const { aggregate, timeUnit, bin } = fieldDef;
    // Drop invalid aggregate
    if (aggregate && !Object(_aggregate__WEBPACK_IMPORTED_MODULE_2__["isAggregateOp"])(aggregate) && !Object(_aggregate__WEBPACK_IMPORTED_MODULE_2__["isArgmaxDef"])(aggregate) && !Object(_aggregate__WEBPACK_IMPORTED_MODULE_2__["isArgminDef"])(aggregate)) {
        const { aggregate: _ } = fieldDef, fieldDefWithoutAggregate = tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"](fieldDef, ["aggregate"]);
        _log__WEBPACK_IMPORTED_MODULE_6__["warn"](_log__WEBPACK_IMPORTED_MODULE_6__["message"].invalidAggregate(aggregate));
        fieldDef = fieldDefWithoutAggregate;
    }
    // Normalize Time Unit
    if (timeUnit) {
        fieldDef = Object.assign({}, fieldDef, { timeUnit: Object(_timeunit__WEBPACK_IMPORTED_MODULE_8__["normalizeTimeUnit"])(timeUnit) });
    }
    // Normalize bin
    if (Object(_bin__WEBPACK_IMPORTED_MODULE_3__["isBinning"])(bin)) {
        fieldDef = Object.assign({}, fieldDef, { bin: normalizeBin(bin, channel) });
    }
    if (Object(_bin__WEBPACK_IMPORTED_MODULE_3__["isBinned"])(bin) && !Object(_util__WEBPACK_IMPORTED_MODULE_10__["contains"])(_channel__WEBPACK_IMPORTED_MODULE_4__["POSITION_SCALE_CHANNELS"], channel)) {
        _log__WEBPACK_IMPORTED_MODULE_6__["warn"](`Channel ${channel} should not be used with "binned" bin`);
    }
    // Normalize Type
    if (isTypedFieldDef(fieldDef)) {
        const { type } = fieldDef;
        const fullType = Object(_type__WEBPACK_IMPORTED_MODULE_9__["getFullName"])(type);
        if (type !== fullType) {
            // convert short type to full type
            fieldDef = Object.assign({}, fieldDef, { type: fullType });
        }
        if (type !== 'quantitative') {
            if (Object(_aggregate__WEBPACK_IMPORTED_MODULE_2__["isCountingAggregateOp"])(aggregate)) {
                _log__WEBPACK_IMPORTED_MODULE_6__["warn"](_log__WEBPACK_IMPORTED_MODULE_6__["message"].invalidFieldTypeForCountAggregate(type, aggregate));
                fieldDef = Object.assign({}, fieldDef, { type: 'quantitative' });
            }
        }
    }
    else if (!Object(_channel__WEBPACK_IMPORTED_MODULE_4__["isSecondaryRangeChannel"])(channel)) {
        // If type is empty / invalid, then augment with default type
        const newType = defaultType(fieldDef, channel);
        _log__WEBPACK_IMPORTED_MODULE_6__["warn"](_log__WEBPACK_IMPORTED_MODULE_6__["message"].missingFieldType(channel, newType));
        fieldDef = Object.assign({}, fieldDef, { type: newType });
    }
    if (isTypedFieldDef(fieldDef)) {
        const { compatible, warning } = channelCompatibility(fieldDef, channel);
        if (!compatible) {
            _log__WEBPACK_IMPORTED_MODULE_6__["warn"](warning);
        }
    }
    return fieldDef;
}
function normalizeBin(bin, channel) {
    if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isBoolean"])(bin)) {
        return { maxbins: Object(_bin__WEBPACK_IMPORTED_MODULE_3__["autoMaxBins"])(channel) };
    }
    else if (bin === 'binned') {
        return {
            binned: true
        };
    }
    else if (!bin.maxbins && !bin.step) {
        return Object.assign({}, bin, { maxbins: Object(_bin__WEBPACK_IMPORTED_MODULE_3__["autoMaxBins"])(channel) });
    }
    else {
        return bin;
    }
}
const COMPATIBLE = { compatible: true };
function channelCompatibility(fieldDef, channel) {
    const type = fieldDef.type;
    if (type === 'geojson' && channel !== 'shape') {
        return {
            compatible: false,
            warning: `Channel ${channel} should not be used with a geojson data.`
        };
    }
    switch (channel) {
        case 'row':
        case 'column':
        case 'facet':
            if (isContinuous(fieldDef)) {
                return {
                    compatible: false,
                    warning: _log__WEBPACK_IMPORTED_MODULE_6__["message"].facetChannelShouldBeDiscrete(channel)
                };
            }
            return COMPATIBLE;
        case 'x':
        case 'y':
        case 'color':
        case 'fill':
        case 'stroke':
        case 'text':
        case 'detail':
        case 'key':
        case 'tooltip':
        case 'href':
            return COMPATIBLE;
        case 'longitude':
        case 'longitude2':
        case 'latitude':
        case 'latitude2':
            if (type !== _type__WEBPACK_IMPORTED_MODULE_9__["QUANTITATIVE"]) {
                return {
                    compatible: false,
                    warning: `Channel ${channel} should be used with a quantitative field only, not ${fieldDef.type} field.`
                };
            }
            return COMPATIBLE;
        case 'opacity':
        case 'fillOpacity':
        case 'strokeOpacity':
        case 'strokeWidth':
        case 'size':
        case 'x2':
        case 'y2':
            if (type === 'nominal' && !fieldDef['sort']) {
                return {
                    compatible: false,
                    warning: `Channel ${channel} should not be used with an unsorted discrete field.`
                };
            }
            return COMPATIBLE;
        case 'shape':
            if (!Object(_util__WEBPACK_IMPORTED_MODULE_10__["contains"])(['ordinal', 'nominal', 'geojson'], fieldDef.type)) {
                return {
                    compatible: false,
                    warning: 'Shape channel should be used with only either discrete or geojson data.'
                };
            }
            return COMPATIBLE;
        case 'order':
            if (fieldDef.type === 'nominal' && !('sort' in fieldDef)) {
                return {
                    compatible: false,
                    warning: `Channel order is inappropriate for nominal field, which has no inherent order.`
                };
            }
            return COMPATIBLE;
    }
    throw new Error('channelCompatability not implemented for channel ' + channel);
}
function isNumberFieldDef(fieldDef) {
    return fieldDef.type === 'quantitative' || Object(_bin__WEBPACK_IMPORTED_MODULE_3__["isBinning"])(fieldDef.bin);
}
/**
 * Check if the field def uses a time format or does not use any format but is temporal (this does not cover field defs that are temporal but use a number format).
 */
function isTimeFormatFieldDef(fieldDef) {
    const formatType = (isPositionFieldDef(fieldDef) && fieldDef.axis && fieldDef.axis.formatType) ||
        (isMarkPropFieldDef(fieldDef) && fieldDef.legend && fieldDef.legend.formatType) ||
        (isTextFieldDef(fieldDef) && fieldDef.formatType);
    return formatType === 'time' || (!formatType && isTimeFieldDef(fieldDef));
}
/**
 * Check if field def has tye `temporal`. If you want to also cover field defs that use a time format, use `isTimeFormatFieldDef`.
 */
function isTimeFieldDef(fieldDef) {
    return fieldDef.type === 'temporal' || !!fieldDef.timeUnit;
}
/**
 * Getting a value associated with a fielddef.
 * Convert the value to Vega expression if applicable (for datetime object, or string if the field def is temporal or has timeUnit)
 */
function valueExpr(v, { timeUnit, type, time, undefinedIfExprNotRequired }) {
    let expr;
    if (Object(_datetime__WEBPACK_IMPORTED_MODULE_5__["isDateTime"])(v)) {
        expr = Object(_datetime__WEBPACK_IMPORTED_MODULE_5__["dateTimeExpr"])(v, true);
    }
    else if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isString"])(v) || Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isNumber"])(v)) {
        if (timeUnit || type === 'temporal') {
            if (Object(_timeunit__WEBPACK_IMPORTED_MODULE_8__["isLocalSingleTimeUnit"])(timeUnit)) {
                expr = Object(_datetime__WEBPACK_IMPORTED_MODULE_5__["dateTimeExpr"])({ [timeUnit]: v }, true);
            }
            else if (Object(_timeunit__WEBPACK_IMPORTED_MODULE_8__["isUtcSingleTimeUnit"])(timeUnit)) {
                // FIXME is this really correct?
                expr = valueExpr(v, { timeUnit: Object(_timeunit__WEBPACK_IMPORTED_MODULE_8__["getLocalTimeUnit"])(timeUnit) });
            }
            else {
                // just pass the string to date function (which will call JS Date.parse())
                expr = `datetime(${JSON.stringify(v)})`;
            }
        }
    }
    if (expr) {
        return time ? `time(${expr})` : expr;
    }
    // number or boolean or normal string
    return undefinedIfExprNotRequired ? undefined : JSON.stringify(v);
}
/**
 * Standardize value array -- convert each value to Vega expression if applicable
 */
function valueArray(fieldDef, values) {
    const { timeUnit, type } = fieldDef;
    return values.map(v => {
        const expr = valueExpr(v, { timeUnit, type, undefinedIfExprNotRequired: true });
        // return signal for the expression if we need an expression
        if (expr !== undefined) {
            return { signal: expr };
        }
        // otherwise just return the original value
        return v;
    });
}
/**
 * Checks whether a fieldDef for a particular channel requires a computed bin range.
 */
function binRequiresRange(fieldDef, channel) {
    if (!Object(_bin__WEBPACK_IMPORTED_MODULE_3__["isBinning"])(fieldDef.bin)) {
        console.warn('Only use this method with binned field defs');
        return false;
    }
    // We need the range only when the user explicitly forces a binned field to be use discrete scale. In this case, bin range is used in axis and legend labels.
    // We could check whether the axis or legend exists (not disabled) but that seems overkill.
    return Object(_channel__WEBPACK_IMPORTED_MODULE_4__["isScaleChannel"])(channel) && Object(_util__WEBPACK_IMPORTED_MODULE_10__["contains"])(['ordinal', 'nominal'], fieldDef.type);
}
//# sourceMappingURL=channeldef.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/axis/assemble.js":
/*!*******************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/axis/assemble.js ***!
  \*******************************************************************/
/*! exports provided: assembleAxis, assembleAxisSignals, assembleAxes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "assembleAxis", function() { return assembleAxis; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "assembleAxisSignals", function() { return assembleAxisSignals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "assembleAxes", function() { return assembleAxes; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var _axis__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../axis */ "./node_modules/vega-lite/build/src/axis.js");
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../channel */ "./node_modules/vega-lite/build/src/channel.js");
/* harmony import */ var _channeldef__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../channeldef */ "./node_modules/vega-lite/build/src/channeldef.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../util */ "./node_modules/vega-lite/build/src/util.js");






function assembleTitle(title, config) {
    if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(title)) {
        return title.map(fieldDef => Object(_channeldef__WEBPACK_IMPORTED_MODULE_4__["defaultTitle"])(fieldDef, config)).join(', ');
    }
    return title;
}
function assembleAxis(axisCmpt, kind, config, opt = { header: false }) {
    const _a = axisCmpt.combine(), { orient, scale, title, zindex } = _a, axis = tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"](_a, ["orient", "scale", "title", "zindex"]);
    // Remove properties that are not valid for this kind of axis
    Object(_util__WEBPACK_IMPORTED_MODULE_5__["keys"])(axis).forEach(key => {
        const propType = _axis__WEBPACK_IMPORTED_MODULE_2__["AXIS_PROPERTY_TYPE"][key];
        if (propType && propType !== kind && propType !== 'both') {
            delete axis[key];
        }
    });
    if (kind === 'grid') {
        if (!axis.grid) {
            return undefined;
        }
        // Remove unnecessary encode block
        if (axis.encode) {
            // Only need to keep encode block for grid
            const { grid } = axis.encode;
            axis.encode = Object.assign({}, (grid ? { grid } : {}));
            if (Object(_util__WEBPACK_IMPORTED_MODULE_5__["keys"])(axis.encode).length === 0) {
                delete axis.encode;
            }
        }
        return Object.assign({ scale,
            orient }, axis, { domain: false, labels: false, 
            // Always set min/maxExtent to 0 to ensure that `config.axis*.minExtent` and `config.axis*.maxExtent`
            // would not affect gridAxis
            maxExtent: 0, minExtent: 0, ticks: false, zindex: Object(_util__WEBPACK_IMPORTED_MODULE_5__["getFirstDefined"])(zindex, 0) // put grid behind marks by default
         });
    }
    else {
        // kind === 'main'
        if (!opt.header && axisCmpt.mainExtracted) {
            // if mainExtracted has been extracted to a separate facet
            return undefined;
        }
        // Remove unnecessary encode block
        if (axis.encode) {
            for (const part of _axis__WEBPACK_IMPORTED_MODULE_2__["AXIS_PARTS"]) {
                if (!axisCmpt.hasAxisPart(part)) {
                    delete axis.encode[part];
                }
            }
            if (Object(_util__WEBPACK_IMPORTED_MODULE_5__["keys"])(axis.encode).length === 0) {
                delete axis.encode;
            }
        }
        const titleString = assembleTitle(title, config);
        return Object.assign({ scale,
            orient, grid: false }, (titleString ? { title: titleString } : {}), axis, { zindex: Object(_util__WEBPACK_IMPORTED_MODULE_5__["getFirstDefined"])(zindex, 1) // put axis line above marks by default
         });
    }
}
/**
 * Add axis signals so grid line works correctly
 * (Fix https://github.com/vega/vega-lite/issues/4226)
 */
function assembleAxisSignals(model) {
    const { axes } = model.component;
    for (const channel of _channel__WEBPACK_IMPORTED_MODULE_3__["POSITION_SCALE_CHANNELS"]) {
        if (axes[channel]) {
            for (const axis of axes[channel]) {
                if (!axis.get('gridScale')) {
                    // If there is x-axis but no y-scale for gridScale, need to set height/weight so x-axis can draw the grid with the right height.  Same for y-axis and width.
                    const sizeType = channel === 'x' ? 'height' : 'width';
                    return [
                        {
                            name: sizeType,
                            update: model.getSizeSignalRef(sizeType).signal
                        }
                    ];
                }
            }
        }
    }
    return [];
}
function assembleAxes(axisComponents, config) {
    const { x = [], y = [] } = axisComponents;
    return [
        ...x.map(a => assembleAxis(a, 'main', config)),
        ...x.map(a => assembleAxis(a, 'grid', config)),
        ...y.map(a => assembleAxis(a, 'main', config)),
        ...y.map(a => assembleAxis(a, 'grid', config))
    ].filter(a => a); // filter undefined
}
//# sourceMappingURL=assemble.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/axis/component.js":
/*!********************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/axis/component.js ***!
  \********************************************************************/
/*! exports provided: AxisComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AxisComponent", function() { return AxisComponent; });
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../util */ "./node_modules/vega-lite/build/src/util.js");
/* harmony import */ var _split__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../split */ "./node_modules/vega-lite/build/src/compile/split.js");


function isFalseOrNull(v) {
    return v === false || v === null;
}
class AxisComponent extends _split__WEBPACK_IMPORTED_MODULE_1__["Split"] {
    constructor(explicit = {}, implicit = {}, mainExtracted = false) {
        super();
        this.explicit = explicit;
        this.implicit = implicit;
        this.mainExtracted = mainExtracted;
    }
    clone() {
        return new AxisComponent(Object(_util__WEBPACK_IMPORTED_MODULE_0__["duplicate"])(this.explicit), Object(_util__WEBPACK_IMPORTED_MODULE_0__["duplicate"])(this.implicit), this.mainExtracted);
    }
    hasAxisPart(part) {
        // FIXME(https://github.com/vega/vega-lite/issues/2552) this method can be wrong if users use a Vega theme.
        if (part === 'axis') {
            // always has the axis container part
            return true;
        }
        if (part === 'grid' || part === 'title') {
            return !!this.get(part);
        }
        // Other parts are enabled by default, so they should not be false or null.
        return !isFalseOrNull(this.get(part));
    }
}
//# sourceMappingURL=component.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/axis/config.js":
/*!*****************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/axis/config.js ***!
  \*****************************************************************/
/*! exports provided: getAxisConfig */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getAxisConfig", function() { return getAxisConfig; });
function getAxisConfig(property, config, channel, orient, scaleType) {
    // configTypes to loop, starting from higher precedence
    const configTypes = [
        ...(scaleType === 'band' ? ['axisBand'] : []),
        channel === 'x' ? 'axisX' : 'axisY',
        // axisTop, axisBottom, ...
        ...(orient ? ['axis' + orient.substr(0, 1).toUpperCase() + orient.substr(1)] : []),
        'axis'
    ];
    for (const configType of configTypes) {
        if (config[configType] && config[configType][property] !== undefined) {
            return config[configType][property];
        }
    }
    return undefined;
}
//# sourceMappingURL=config.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/axis/encode.js":
/*!*****************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/axis/encode.js ***!
  \*****************************************************************/
/*! exports provided: labels */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "labels", function() { return labels; });
/* harmony import */ var _channeldef__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../channeldef */ "./node_modules/vega-lite/build/src/channeldef.js");
/* harmony import */ var _scale__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../scale */ "./node_modules/vega-lite/build/src/scale.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../util */ "./node_modules/vega-lite/build/src/util.js");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common */ "./node_modules/vega-lite/build/src/compile/common.js");




function labels(model, channel, specifiedLabelsSpec) {
    const fieldDef = model.fieldDef(channel) ||
        (channel === 'x' ? model.fieldDef('x2') : channel === 'y' ? model.fieldDef('y2') : undefined);
    const axis = model.axis(channel);
    const config = model.config;
    let labelsSpec = {};
    // We use a label encoding instead of setting the `format` property because Vega does not let us determine how the format should be interpreted.
    if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_0__["isTimeFormatFieldDef"])(fieldDef)) {
        const isUTCScale = model.getScaleComponent(channel).get('type') === _scale__WEBPACK_IMPORTED_MODULE_1__["ScaleType"].UTC;
        const expr = Object(_common__WEBPACK_IMPORTED_MODULE_3__["timeFormatExpression"])('datum.value', fieldDef.timeUnit, axis.format, config.axis.shortTimeLabels, null, isUTCScale);
        if (expr) {
            labelsSpec.text = { signal: expr };
        }
    }
    labelsSpec = Object.assign({}, labelsSpec, specifiedLabelsSpec);
    return Object(_util__WEBPACK_IMPORTED_MODULE_2__["keys"])(labelsSpec).length === 0 ? undefined : labelsSpec;
}
//# sourceMappingURL=encode.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/axis/parse.js":
/*!****************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/axis/parse.js ***!
  \****************************************************************/
/*! exports provided: parseUnitAxes, parseLayerAxes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseUnitAxes", function() { return parseUnitAxes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseLayerAxes", function() { return parseLayerAxes; });
/* harmony import */ var _axis__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../axis */ "./node_modules/vega-lite/build/src/axis.js");
/* harmony import */ var _bin__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../bin */ "./node_modules/vega-lite/build/src/bin.js");
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../channel */ "./node_modules/vega-lite/build/src/channel.js");
/* harmony import */ var _channeldef__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../channeldef */ "./node_modules/vega-lite/build/src/channeldef.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../util */ "./node_modules/vega-lite/build/src/util.js");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../common */ "./node_modules/vega-lite/build/src/compile/common.js");
/* harmony import */ var _guide__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../guide */ "./node_modules/vega-lite/build/src/compile/guide.js");
/* harmony import */ var _resolve__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../resolve */ "./node_modules/vega-lite/build/src/compile/resolve.js");
/* harmony import */ var _split__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../split */ "./node_modules/vega-lite/build/src/compile/split.js");
/* harmony import */ var _component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./component */ "./node_modules/vega-lite/build/src/compile/axis/component.js");
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./config */ "./node_modules/vega-lite/build/src/compile/axis/config.js");
/* harmony import */ var _encode__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./encode */ "./node_modules/vega-lite/build/src/compile/axis/encode.js");
/* harmony import */ var _properties__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./properties */ "./node_modules/vega-lite/build/src/compile/axis/properties.js");













function parseUnitAxes(model) {
    return _channel__WEBPACK_IMPORTED_MODULE_2__["POSITION_SCALE_CHANNELS"].reduce((axis, channel) => {
        if (model.component.scales[channel] && model.axis(channel)) {
            axis[channel] = [parseAxis(channel, model)];
        }
        return axis;
    }, {});
}
const OPPOSITE_ORIENT = {
    bottom: 'top',
    top: 'bottom',
    left: 'right',
    right: 'left'
};
function parseLayerAxes(model) {
    const { axes, resolve } = model.component;
    const axisCount = { top: 0, bottom: 0, right: 0, left: 0 };
    for (const child of model.children) {
        child.parseAxesAndHeaders();
        for (const channel of Object(_util__WEBPACK_IMPORTED_MODULE_4__["keys"])(child.component.axes)) {
            resolve.axis[channel] = Object(_resolve__WEBPACK_IMPORTED_MODULE_7__["parseGuideResolve"])(model.component.resolve, channel);
            if (resolve.axis[channel] === 'shared') {
                // If the resolve says shared (and has not been overridden)
                // We will try to merge and see if there is a conflict
                axes[channel] = mergeAxisComponents(axes[channel], child.component.axes[channel]);
                if (!axes[channel]) {
                    // If merge returns nothing, there is a conflict so we cannot make the axis shared.
                    // Thus, mark axis as independent and remove the axis component.
                    resolve.axis[channel] = 'independent';
                    delete axes[channel];
                }
            }
        }
    }
    // Move axes to layer's axis component and merge shared axes
    for (const channel of [_channel__WEBPACK_IMPORTED_MODULE_2__["X"], _channel__WEBPACK_IMPORTED_MODULE_2__["Y"]]) {
        for (const child of model.children) {
            if (!child.component.axes[channel]) {
                // skip if the child does not have a particular axis
                continue;
            }
            if (resolve.axis[channel] === 'independent') {
                // If axes are independent, concat the axisComponent array.
                axes[channel] = (axes[channel] || []).concat(child.component.axes[channel]);
                // Automatically adjust orient
                for (const axisComponent of child.component.axes[channel]) {
                    const { value: orient, explicit } = axisComponent.getWithExplicit('orient');
                    if (axisCount[orient] > 0 && !explicit) {
                        // Change axis orient if the number do not match
                        const oppositeOrient = OPPOSITE_ORIENT[orient];
                        if (axisCount[orient] > axisCount[oppositeOrient]) {
                            axisComponent.set('orient', oppositeOrient, false);
                        }
                    }
                    axisCount[orient]++;
                    // TODO(https://github.com/vega/vega-lite/issues/2634): automatically add extra offset?
                }
            }
            // After merging, make sure to remove axes from child
            delete child.component.axes[channel];
        }
        // Suppress grid lines for dual axis charts (https://github.com/vega/vega-lite/issues/4676)
        if (resolve.axis[channel] === 'independent' && axes[channel] && axes[channel].length > 1) {
            for (const axisCmpt of axes[channel]) {
                if (!!axisCmpt.get('grid') && !axisCmpt.explicit.grid) {
                    axisCmpt.implicit.grid = false;
                }
            }
        }
    }
}
function mergeAxisComponents(mergedAxisCmpts, childAxisCmpts) {
    if (mergedAxisCmpts) {
        // FIXME: this is a bit wrong once we support multiple axes
        if (mergedAxisCmpts.length !== childAxisCmpts.length) {
            return undefined; // Cannot merge axis component with different number of axes.
        }
        const length = mergedAxisCmpts.length;
        for (let i = 0; i < length; i++) {
            const merged = mergedAxisCmpts[i];
            const child = childAxisCmpts[i];
            if (!!merged !== !!child) {
                return undefined;
            }
            else if (merged && child) {
                const mergedOrient = merged.getWithExplicit('orient');
                const childOrient = child.getWithExplicit('orient');
                if (mergedOrient.explicit && childOrient.explicit && mergedOrient.value !== childOrient.value) {
                    // TODO: throw warning if resolve is explicit (We don't have info about explicit/implicit resolve yet.)
                    // Cannot merge due to inconsistent orient
                    return undefined;
                }
                else {
                    mergedAxisCmpts[i] = mergeAxisComponent(merged, child);
                }
            }
        }
    }
    else {
        // For first one, return a copy of the child
        return childAxisCmpts.map(axisComponent => axisComponent.clone());
    }
    return mergedAxisCmpts;
}
function mergeAxisComponent(merged, child) {
    for (const prop of _axis__WEBPACK_IMPORTED_MODULE_0__["VG_AXIS_PROPERTIES"]) {
        const mergedValueWithExplicit = Object(_split__WEBPACK_IMPORTED_MODULE_8__["mergeValuesWithExplicit"])(merged.getWithExplicit(prop), child.getWithExplicit(prop), prop, 'axis', 
        // Tie breaker function
        (v1, v2) => {
            switch (prop) {
                case 'title':
                    return Object(_common__WEBPACK_IMPORTED_MODULE_5__["mergeTitleComponent"])(v1, v2);
                case 'gridScale':
                    return {
                        explicit: v1.explicit,
                        value: Object(_util__WEBPACK_IMPORTED_MODULE_4__["getFirstDefined"])(v1.value, v2.value)
                    };
            }
            return Object(_split__WEBPACK_IMPORTED_MODULE_8__["defaultTieBreaker"])(v1, v2, prop, 'axis');
        });
        merged.setWithExplicit(prop, mergedValueWithExplicit);
    }
    return merged;
}
function getFieldDefTitle(model, channel) {
    const channel2 = channel === 'x' ? 'x2' : 'y2';
    const fieldDef = model.fieldDef(channel);
    const fieldDef2 = model.fieldDef(channel2);
    const title1 = fieldDef ? fieldDef.title : undefined;
    const title2 = fieldDef2 ? fieldDef2.title : undefined;
    if (title1 && title2) {
        return Object(_common__WEBPACK_IMPORTED_MODULE_5__["mergeTitle"])(title1, title2);
    }
    else if (title1) {
        return title1;
    }
    else if (title2) {
        return title2;
    }
    else if (title1 !== undefined) {
        // falsy value to disable config
        return title1;
    }
    else if (title2 !== undefined) {
        // falsy value to disable config
        return title2;
    }
    return undefined;
}
function isExplicit(value, property, axis, model, channel) {
    switch (property) {
        case 'titleAngle':
        case 'labelAngle':
            return value === Object(_util__WEBPACK_IMPORTED_MODULE_4__["normalizeAngle"])(axis[property]);
        case 'values':
            return !!axis.values;
        // specified axis.values is already respected, but may get transformed.
        case 'encode':
            // both VL axis.encoding and axis.labelAngle affect VG axis.encode
            return !!axis.encoding || !!axis.labelAngle;
        case 'title':
            // title can be explicit if fieldDef.title is set
            if (value === getFieldDefTitle(model, channel)) {
                return true;
            }
    }
    // Otherwise, things are explicit if the returned value matches the specified property
    return value === axis[property];
}
function parseAxis(channel, model) {
    const axis = model.axis(channel);
    const axisComponent = new _component__WEBPACK_IMPORTED_MODULE_9__["AxisComponent"]();
    // 1.2. Add properties
    _axis__WEBPACK_IMPORTED_MODULE_0__["VG_AXIS_PROPERTIES"].forEach(property => {
        const value = getProperty(property, axis, channel, model);
        if (value !== undefined) {
            const explicit = isExplicit(value, property, axis, model, channel);
            const configValue = Object(_config__WEBPACK_IMPORTED_MODULE_10__["getAxisConfig"])(property, model.config, channel, axisComponent.get('orient'), model.getScaleComponent(channel).get('type'));
            // only set property if it is explicitly set or has no config value (otherwise we will accidentally override config)
            if (explicit || configValue === undefined) {
                // Do not apply implicit rule if there is a config value
                axisComponent.set(property, value, explicit);
            }
            else if (Object(_util__WEBPACK_IMPORTED_MODULE_4__["contains"])(['grid', 'orient'], property) && configValue) {
                // - Grid is an exception because we need to set grid = true to generate another grid axis
                // - Orient is not an axis config in Vega, so we need to set too.
                axisComponent.set(property, configValue, false);
            }
        }
    });
    // 2) Add guide encode definition groups
    const axisEncoding = axis.encoding || {};
    const axisEncode = _axis__WEBPACK_IMPORTED_MODULE_0__["AXIS_PARTS"].reduce((e, part) => {
        if (!axisComponent.hasAxisPart(part)) {
            // No need to create encode for a disabled part.
            return e;
        }
        const axisEncodingPart = Object(_guide__WEBPACK_IMPORTED_MODULE_6__["guideEncodeEntry"])(axisEncoding[part] || {}, model);
        const value = part === 'labels' ? _encode__WEBPACK_IMPORTED_MODULE_11__["labels"](model, channel, axisEncodingPart) : axisEncodingPart;
        if (value !== undefined && Object(_util__WEBPACK_IMPORTED_MODULE_4__["keys"])(value).length > 0) {
            e[part] = { update: value };
        }
        return e;
    }, {});
    // FIXME: By having encode as one property, we won't have fine grained encode merging.
    if (Object(_util__WEBPACK_IMPORTED_MODULE_4__["keys"])(axisEncode).length > 0) {
        axisComponent.set('encode', axisEncode, !!axis.encoding || axis.labelAngle !== undefined);
    }
    return axisComponent;
}
function getProperty(property, specifiedAxis, channel, model) {
    const fieldDef = model.fieldDef(channel);
    // Some properties depend on labelAngle so we have to declare it here.
    // Also, we don't use `getFirstDefined` for labelAngle
    // as we want to normalize specified value to be within [0,360)
    const labelAngle = _properties__WEBPACK_IMPORTED_MODULE_12__["labelAngle"](model, specifiedAxis, channel, fieldDef);
    const orient = Object(_util__WEBPACK_IMPORTED_MODULE_4__["getFirstDefined"])(specifiedAxis.orient, _properties__WEBPACK_IMPORTED_MODULE_12__["orient"](channel));
    switch (property) {
        case 'scale':
            return model.scaleName(channel);
        case 'gridScale':
            return _properties__WEBPACK_IMPORTED_MODULE_12__["gridScale"](model, channel);
        case 'format':
            // We don't include temporal field here as we apply format in encode block
            if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_3__["isTimeFormatFieldDef"])(fieldDef)) {
                return undefined;
            }
            return Object(_common__WEBPACK_IMPORTED_MODULE_5__["numberFormat"])(fieldDef, specifiedAxis.format, model.config);
        case 'formatType':
            // Same as format, We don't include temporal field here as we apply format in encode block
            if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_3__["isTimeFormatFieldDef"])(fieldDef)) {
                return undefined;
            }
            return specifiedAxis.formatType;
        case 'grid': {
            if (Object(_bin__WEBPACK_IMPORTED_MODULE_1__["isBinned"])(model.fieldDef(channel).bin)) {
                return false;
            }
            else {
                const scaleType = model.getScaleComponent(channel).get('type');
                return Object(_util__WEBPACK_IMPORTED_MODULE_4__["getFirstDefined"])(specifiedAxis.grid, _properties__WEBPACK_IMPORTED_MODULE_12__["defaultGrid"](scaleType, fieldDef));
            }
        }
        case 'labelAlign':
            return Object(_util__WEBPACK_IMPORTED_MODULE_4__["getFirstDefined"])(specifiedAxis.labelAlign, _properties__WEBPACK_IMPORTED_MODULE_12__["defaultLabelAlign"](labelAngle, orient));
        case 'labelAngle':
            return labelAngle;
        case 'labelBaseline':
            return Object(_util__WEBPACK_IMPORTED_MODULE_4__["getFirstDefined"])(specifiedAxis.labelBaseline, _properties__WEBPACK_IMPORTED_MODULE_12__["defaultLabelBaseline"](labelAngle, orient));
        case 'labelFlush':
            return Object(_util__WEBPACK_IMPORTED_MODULE_4__["getFirstDefined"])(specifiedAxis.labelFlush, _properties__WEBPACK_IMPORTED_MODULE_12__["defaultLabelFlush"](fieldDef, channel));
        case 'labelOverlap': {
            const scaleType = model.getScaleComponent(channel).get('type');
            return Object(_util__WEBPACK_IMPORTED_MODULE_4__["getFirstDefined"])(specifiedAxis.labelOverlap, _properties__WEBPACK_IMPORTED_MODULE_12__["defaultLabelOverlap"](fieldDef, scaleType));
        }
        case 'orient':
            return orient;
        case 'tickCount': {
            const scaleType = model.getScaleComponent(channel).get('type');
            const sizeType = channel === 'x' ? 'width' : channel === 'y' ? 'height' : undefined;
            const size = sizeType ? model.getSizeSignalRef(sizeType) : undefined;
            return Object(_util__WEBPACK_IMPORTED_MODULE_4__["getFirstDefined"])(specifiedAxis.tickCount, _properties__WEBPACK_IMPORTED_MODULE_12__["defaultTickCount"]({ fieldDef, scaleType, size }));
        }
        case 'title': {
            const channel2 = channel === 'x' ? 'x2' : 'y2';
            const fieldDef2 = model.fieldDef(channel2);
            // Keep undefined so we use default if title is unspecified.
            // For other falsy value, keep them so we will hide the title.
            return Object(_util__WEBPACK_IMPORTED_MODULE_4__["getFirstDefined"])(specifiedAxis.title, getFieldDefTitle(model, channel), // If title not specified, store base parts of fieldDef (and fieldDef2 if exists)
            Object(_common__WEBPACK_IMPORTED_MODULE_5__["mergeTitleFieldDefs"])([Object(_channeldef__WEBPACK_IMPORTED_MODULE_3__["toFieldDefBase"])(fieldDef)], fieldDef2 ? [Object(_channeldef__WEBPACK_IMPORTED_MODULE_3__["toFieldDefBase"])(fieldDef2)] : []));
        }
        case 'values':
            return _properties__WEBPACK_IMPORTED_MODULE_12__["values"](specifiedAxis, model, fieldDef);
    }
    // Otherwise, return specified property.
    return Object(_axis__WEBPACK_IMPORTED_MODULE_0__["isAxisProperty"])(property) ? specifiedAxis[property] : undefined;
}
//# sourceMappingURL=parse.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/axis/properties.js":
/*!*********************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/axis/properties.js ***!
  \*********************************************************************/
/*! exports provided: defaultGrid, gridScale, labelAngle, defaultLabelBaseline, defaultLabelAlign, defaultLabelFlush, defaultLabelOverlap, orient, defaultTickCount, values */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultGrid", function() { return defaultGrid; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "gridScale", function() { return gridScale; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "labelAngle", function() { return labelAngle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultLabelBaseline", function() { return defaultLabelBaseline; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultLabelAlign", function() { return defaultLabelAlign; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultLabelFlush", function() { return defaultLabelFlush; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultLabelOverlap", function() { return defaultLabelOverlap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "orient", function() { return orient; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultTickCount", function() { return defaultTickCount; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "values", function() { return values; });
/* harmony import */ var _bin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../bin */ "./node_modules/vega-lite/build/src/bin.js");
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../channel */ "./node_modules/vega-lite/build/src/channel.js");
/* harmony import */ var _channeldef__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../channeldef */ "./node_modules/vega-lite/build/src/channeldef.js");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../log */ "./node_modules/vega-lite/build/src/log/index.js");
/* harmony import */ var _scale__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../scale */ "./node_modules/vega-lite/build/src/scale.js");
/* harmony import */ var _type__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../type */ "./node_modules/vega-lite/build/src/type.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../util */ "./node_modules/vega-lite/build/src/util.js");
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./config */ "./node_modules/vega-lite/build/src/compile/axis/config.js");








// TODO: we need to refactor this method after we take care of config refactoring
/**
 * Default rules for whether to show a grid should be shown for a channel.
 * If `grid` is unspecified, the default value is `true` for ordinal scales that are not binned
 */
function defaultGrid(scaleType, fieldDef) {
    return !Object(_scale__WEBPACK_IMPORTED_MODULE_4__["hasDiscreteDomain"])(scaleType) && !Object(_bin__WEBPACK_IMPORTED_MODULE_0__["isBinning"])(fieldDef.bin);
}
function gridScale(model, channel) {
    const gridChannel = channel === 'x' ? 'y' : 'x';
    if (model.getScaleComponent(gridChannel)) {
        return model.scaleName(gridChannel);
    }
    return undefined;
}
function labelAngle(model, specifiedAxis, channel, fieldDef) {
    // try axis value
    if (specifiedAxis.labelAngle !== undefined) {
        return Object(_util__WEBPACK_IMPORTED_MODULE_6__["normalizeAngle"])(specifiedAxis.labelAngle);
    }
    else {
        // try axis config value
        const angle = Object(_config__WEBPACK_IMPORTED_MODULE_7__["getAxisConfig"])('labelAngle', model.config, channel, orient(channel), model.getScaleComponent(channel).get('type'));
        if (angle !== undefined) {
            return Object(_util__WEBPACK_IMPORTED_MODULE_6__["normalizeAngle"])(angle);
        }
        else {
            // get default value
            if (channel === _channel__WEBPACK_IMPORTED_MODULE_1__["X"] && Object(_util__WEBPACK_IMPORTED_MODULE_6__["contains"])([_type__WEBPACK_IMPORTED_MODULE_5__["NOMINAL"], _type__WEBPACK_IMPORTED_MODULE_5__["ORDINAL"]], fieldDef.type)) {
                return 270;
            }
            // no default
            return undefined;
        }
    }
}
function defaultLabelBaseline(angle, axisOrient) {
    if (angle !== undefined) {
        angle = Object(_util__WEBPACK_IMPORTED_MODULE_6__["normalizeAngle"])(angle);
        if (axisOrient === 'top' || axisOrient === 'bottom') {
            if (angle <= 45 || 315 <= angle) {
                return axisOrient === 'top' ? 'bottom' : 'top';
            }
            else if (135 <= angle && angle <= 225) {
                return axisOrient === 'top' ? 'top' : 'bottom';
            }
            else {
                return 'middle';
            }
        }
        else {
            if (angle <= 45 || 315 <= angle || (135 <= angle && angle <= 225)) {
                return 'middle';
            }
            else if (45 <= angle && angle <= 135) {
                return axisOrient === 'left' ? 'top' : 'bottom';
            }
            else {
                return axisOrient === 'left' ? 'bottom' : 'top';
            }
        }
    }
    return undefined;
}
function defaultLabelAlign(angle, axisOrient) {
    if (angle !== undefined) {
        angle = Object(_util__WEBPACK_IMPORTED_MODULE_6__["normalizeAngle"])(angle);
        if (axisOrient === 'top' || axisOrient === 'bottom') {
            if (angle % 180 === 0) {
                return 'center';
            }
            else if (0 < angle && angle < 180) {
                return axisOrient === 'top' ? 'right' : 'left';
            }
            else {
                return axisOrient === 'top' ? 'left' : 'right';
            }
        }
        else {
            if ((angle + 90) % 180 === 0) {
                return 'center';
            }
            else if (90 <= angle && angle < 270) {
                return axisOrient === 'left' ? 'left' : 'right';
            }
            else {
                return axisOrient === 'left' ? 'right' : 'left';
            }
        }
    }
    return undefined;
}
function defaultLabelFlush(fieldDef, channel) {
    if (channel === 'x' && Object(_util__WEBPACK_IMPORTED_MODULE_6__["contains"])(['quantitative', 'temporal'], fieldDef.type)) {
        return true;
    }
    return undefined;
}
function defaultLabelOverlap(fieldDef, scaleType) {
    // do not prevent overlap for nominal data because there is no way to infer what the missing labels are
    if (fieldDef.type !== 'nominal') {
        if (scaleType === 'log') {
            return 'greedy';
        }
        return true;
    }
    return undefined;
}
function orient(channel) {
    switch (channel) {
        case _channel__WEBPACK_IMPORTED_MODULE_1__["X"]:
            return 'bottom';
        case _channel__WEBPACK_IMPORTED_MODULE_1__["Y"]:
            return 'left';
    }
    /* istanbul ignore next: This should never happen. */
    throw new Error(_log__WEBPACK_IMPORTED_MODULE_3__["message"].INVALID_CHANNEL_FOR_AXIS);
}
function defaultTickCount({ fieldDef, scaleType, size }) {
    if (!Object(_scale__WEBPACK_IMPORTED_MODULE_4__["hasDiscreteDomain"])(scaleType) &&
        scaleType !== 'log' &&
        !Object(_util__WEBPACK_IMPORTED_MODULE_6__["contains"])(['month', 'hours', 'day', 'quarter'], fieldDef.timeUnit)) {
        if (Object(_bin__WEBPACK_IMPORTED_MODULE_0__["isBinning"])(fieldDef.bin)) {
            // for binned data, we don't want more ticks than maxbins
            return { signal: `ceil(${size.signal}/10)` };
        }
        return { signal: `ceil(${size.signal}/40)` };
    }
    return undefined;
}
function values(specifiedAxis, model, fieldDef) {
    const vals = specifiedAxis.values;
    if (vals) {
        return Object(_channeldef__WEBPACK_IMPORTED_MODULE_2__["valueArray"])(fieldDef, vals);
    }
    return undefined;
}
//# sourceMappingURL=properties.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/baseconcat.js":
/*!****************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/baseconcat.js ***!
  \****************************************************************/
/*! exports provided: BaseConcatModel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BaseConcatModel", function() { return BaseConcatModel; });
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ "./node_modules/vega-lite/build/src/util.js");
/* harmony import */ var _data_parse__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./data/parse */ "./node_modules/vega-lite/build/src/compile/data/parse.js");
/* harmony import */ var _layoutsize_assemble__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./layoutsize/assemble */ "./node_modules/vega-lite/build/src/compile/layoutsize/assemble.js");
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./model */ "./node_modules/vega-lite/build/src/compile/model.js");




class BaseConcatModel extends _model__WEBPACK_IMPORTED_MODULE_3__["Model"] {
    constructor(spec, specType, parent, parentGivenName, config, repeater, resolve) {
        super(spec, specType, parent, parentGivenName, config, repeater, resolve);
    }
    parseData() {
        this.component.data = Object(_data_parse__WEBPACK_IMPORTED_MODULE_1__["parseData"])(this);
        this.children.forEach(child => {
            child.parseData();
        });
    }
    parseSelections() {
        // Merge selections up the hierarchy so that they may be referenced
        // across unit specs. Persist their definitions within each child
        // to assemble signals which remain within output Vega unit groups.
        this.component.selection = {};
        for (const child of this.children) {
            child.parseSelections();
            Object(_util__WEBPACK_IMPORTED_MODULE_0__["keys"])(child.component.selection).forEach(key => {
                this.component.selection[key] = child.component.selection[key];
            });
        }
    }
    parseMarkGroup() {
        for (const child of this.children) {
            child.parseMarkGroup();
        }
    }
    parseAxesAndHeaders() {
        for (const child of this.children) {
            child.parseAxesAndHeaders();
        }
        // TODO(#2415): support shared axes
    }
    assembleSelectionTopLevelSignals(signals) {
        return this.children.reduce((sg, child) => child.assembleSelectionTopLevelSignals(sg), signals);
    }
    assembleSignals() {
        this.children.forEach(child => child.assembleSignals());
        return [];
    }
    assembleLayoutSignals() {
        return this.children.reduce((signals, child) => {
            return [...signals, ...child.assembleLayoutSignals()];
        }, Object(_layoutsize_assemble__WEBPACK_IMPORTED_MODULE_2__["assembleLayoutSignals"])(this));
    }
    assembleSelectionData(data) {
        return this.children.reduce((db, child) => child.assembleSelectionData(db), data);
    }
    assembleMarks() {
        // only children have marks
        return this.children.map(child => {
            const title = child.assembleTitle();
            const style = child.assembleGroupStyle();
            const encodeEntry = child.assembleGroupEncodeEntry(false);
            return Object.assign({ type: 'group', name: child.getName('group') }, (title ? { title } : {}), (style ? { style } : {}), (encodeEntry ? { encode: { update: encodeEntry } } : {}), child.assembleGroup());
        });
    }
}
//# sourceMappingURL=baseconcat.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/buildmodel.js":
/*!****************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/buildmodel.js ***!
  \****************************************************************/
/*! exports provided: buildModel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "buildModel", function() { return buildModel; });
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../log */ "./node_modules/vega-lite/build/src/log/index.js");
/* harmony import */ var _spec__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../spec */ "./node_modules/vega-lite/build/src/spec/index.js");
/* harmony import */ var _concat__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./concat */ "./node_modules/vega-lite/build/src/compile/concat.js");
/* harmony import */ var _facet__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./facet */ "./node_modules/vega-lite/build/src/compile/facet.js");
/* harmony import */ var _layer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./layer */ "./node_modules/vega-lite/build/src/compile/layer.js");
/* harmony import */ var _repeat__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./repeat */ "./node_modules/vega-lite/build/src/compile/repeat.js");
/* harmony import */ var _unit__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./unit */ "./node_modules/vega-lite/build/src/compile/unit.js");







function buildModel(spec, parent, parentGivenName, unitSize, repeater, config, fit) {
    if (Object(_spec__WEBPACK_IMPORTED_MODULE_1__["isFacetSpec"])(spec)) {
        return new _facet__WEBPACK_IMPORTED_MODULE_3__["FacetModel"](spec, parent, parentGivenName, repeater, config);
    }
    if (Object(_spec__WEBPACK_IMPORTED_MODULE_1__["isLayerSpec"])(spec)) {
        return new _layer__WEBPACK_IMPORTED_MODULE_4__["LayerModel"](spec, parent, parentGivenName, unitSize, repeater, config, fit);
    }
    if (Object(_spec__WEBPACK_IMPORTED_MODULE_1__["isUnitSpec"])(spec)) {
        return new _unit__WEBPACK_IMPORTED_MODULE_6__["UnitModel"](spec, parent, parentGivenName, unitSize, repeater, config, fit);
    }
    if (Object(_spec__WEBPACK_IMPORTED_MODULE_1__["isRepeatSpec"])(spec)) {
        return new _repeat__WEBPACK_IMPORTED_MODULE_5__["RepeatModel"](spec, parent, parentGivenName, repeater, config);
    }
    if (Object(_spec__WEBPACK_IMPORTED_MODULE_1__["isAnyConcatSpec"])(spec)) {
        return new _concat__WEBPACK_IMPORTED_MODULE_2__["ConcatModel"](spec, parent, parentGivenName, repeater, config);
    }
    throw new Error(_log__WEBPACK_IMPORTED_MODULE_0__["message"].INVALID_SPEC);
}
//# sourceMappingURL=buildmodel.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/common.js":
/*!************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/common.js ***!
  \************************************************************/
/*! exports provided: applyMarkConfig, getStyles, getMarkConfig, getStyleConfig, formatSignalRef, numberFormat, numberFormatExpr, binFormatExpression, timeFormatExpression, sortParams, mergeTitleFieldDefs, mergeTitle, mergeTitleComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "applyMarkConfig", function() { return applyMarkConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getStyles", function() { return getStyles; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getMarkConfig", function() { return getMarkConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getStyleConfig", function() { return getStyleConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "formatSignalRef", function() { return formatSignalRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "numberFormat", function() { return numberFormat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "numberFormatExpr", function() { return numberFormatExpr; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "binFormatExpression", function() { return binFormatExpression; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "timeFormatExpression", function() { return timeFormatExpression; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sortParams", function() { return sortParams; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mergeTitleFieldDefs", function() { return mergeTitleFieldDefs; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mergeTitle", function() { return mergeTitle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mergeTitleComponent", function() { return mergeTitleComponent; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var _bin__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../bin */ "./node_modules/vega-lite/build/src/bin.js");
/* harmony import */ var _channeldef__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../channeldef */ "./node_modules/vega-lite/build/src/channeldef.js");
/* harmony import */ var _scale__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../scale */ "./node_modules/vega-lite/build/src/scale.js");
/* harmony import */ var _timeunit__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../timeunit */ "./node_modules/vega-lite/build/src/timeunit.js");
/* harmony import */ var _type__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../type */ "./node_modules/vega-lite/build/src/type.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util */ "./node_modules/vega-lite/build/src/util.js");







function applyMarkConfig(e, model, propsList) {
    for (const property of propsList) {
        const value = getMarkConfig(property, model.markDef, model.config);
        if (value !== undefined) {
            e[property] = { value: value };
        }
    }
    return e;
}
function getStyles(mark) {
    return [].concat(mark.type, mark.style || []);
}
/**
 * Return property value from style or mark specific config property if exists.
 * Otherwise, return general mark specific config.
 */
function getMarkConfig(channel, mark, config, { vgChannel } = {} // Note: Ham: I use `any` here as it's too hard to make TS knows that MarkConfig[vgChannel] would have the same type as MarkConfig[P]
) {
    return Object(_util__WEBPACK_IMPORTED_MODULE_6__["getFirstDefined"])(
    // style config has highest precedence
    vgChannel ? getStyleConfig(channel, mark, config.style) : undefined, getStyleConfig(channel, mark, config.style), 
    // then mark-specific config
    vgChannel ? config[mark.type][vgChannel] : undefined, config[mark.type][channel], 
    // If there is vgChannel, skip vl channel.
    // For example, vl size for text is vg fontSize, but config.mark.size is only for point size.
    vgChannel ? config.mark[vgChannel] : config.mark[channel]);
}
function getStyleConfig(prop, mark, styleConfigIndex) {
    const styles = getStyles(mark);
    let value;
    for (const style of styles) {
        const styleConfig = styleConfigIndex[style];
        // MarkConfig extends VgMarkConfig so a prop may not be a valid property for style
        // However here we also check if it is defined, so it is okay to cast here
        const p = prop;
        if (styleConfig && styleConfig[p] !== undefined) {
            value = styleConfig[p];
        }
    }
    return value;
}
function formatSignalRef(fieldDef, specifiedFormat, expr, config) {
    if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_2__["isTimeFormatFieldDef"])(fieldDef)) {
        const isUTCScale = Object(_channeldef__WEBPACK_IMPORTED_MODULE_2__["isScaleFieldDef"])(fieldDef) && fieldDef['scale'] && fieldDef['scale'].type === _scale__WEBPACK_IMPORTED_MODULE_3__["ScaleType"].UTC;
        return {
            signal: timeFormatExpression(Object(_channeldef__WEBPACK_IMPORTED_MODULE_2__["vgField"])(fieldDef, {
                expr
            }), fieldDef.timeUnit, specifiedFormat, config.text.shortTimeLabels, config.timeFormat, isUTCScale, true)
        };
    }
    else {
        const format = numberFormat(fieldDef, specifiedFormat, config);
        if (Object(_bin__WEBPACK_IMPORTED_MODULE_1__["isBinning"])(fieldDef.bin)) {
            const startField = Object(_channeldef__WEBPACK_IMPORTED_MODULE_2__["vgField"])(fieldDef, { expr });
            const endField = Object(_channeldef__WEBPACK_IMPORTED_MODULE_2__["vgField"])(fieldDef, { expr, binSuffix: 'end' });
            return {
                signal: binFormatExpression(startField, endField, format, config)
            };
        }
        else if (fieldDef.type === 'quantitative') {
            return {
                signal: `${formatExpr(Object(_channeldef__WEBPACK_IMPORTED_MODULE_2__["vgField"])(fieldDef, { expr, binSuffix: 'range' }), format)}`
            };
        }
        else {
            return { signal: `''+${Object(_channeldef__WEBPACK_IMPORTED_MODULE_2__["vgField"])(fieldDef, { expr })}` };
        }
    }
}
/**
 * Returns number format for a fieldDef
 */
function numberFormat(fieldDef, specifiedFormat, config) {
    // Specified format in axis/legend has higher precedence than fieldDef.format
    if (specifiedFormat) {
        return specifiedFormat;
    }
    if (fieldDef.type === _type__WEBPACK_IMPORTED_MODULE_5__["QUANTITATIVE"]) {
        // we only apply the default if the field is quantitative
        return config.numberFormat;
    }
    return undefined;
}
function formatExpr(field, format) {
    return `format(${field}, "${format || ''}")`;
}
function numberFormatExpr(field, specifiedFormat, config) {
    return formatExpr(field, specifiedFormat || config.numberFormat);
}
function binFormatExpression(startField, endField, format, config) {
    return `${startField} === null || isNaN(${startField}) ? "null" : ${numberFormatExpr(startField, format, config)} + " - " + ${numberFormatExpr(endField, format, config)}`;
}
/**
 * Returns the time expression used for axis/legend labels or text mark for a temporal field
 */
function timeFormatExpression(field, timeUnit, format, shortTimeLabels, rawTimeFormat, // should be provided only for actual text and headers, not axis/legend labels
isUTCScale, alwaysReturn = false) {
    if (!timeUnit || format) {
        // If there is not time unit, or if user explicitly specify format for axis/legend/text.
        format = format || rawTimeFormat; // only use provided timeFormat if there is no timeUnit.
        if (format || alwaysReturn) {
            return `${isUTCScale ? 'utc' : 'time'}Format(${field}, '${format}')`;
        }
        else {
            return undefined;
        }
    }
    else {
        return Object(_timeunit__WEBPACK_IMPORTED_MODULE_4__["formatExpression"])(timeUnit, field, shortTimeLabels, isUTCScale);
    }
}
/**
 * Return Vega sort parameters (tuple of field and order).
 */
function sortParams(orderDef, fieldRefOption) {
    return (Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isArray"])(orderDef) ? orderDef : [orderDef]).reduce((s, orderChannelDef) => {
        s.field.push(Object(_channeldef__WEBPACK_IMPORTED_MODULE_2__["vgField"])(orderChannelDef, fieldRefOption));
        s.order.push(orderChannelDef.sort || 'ascending');
        return s;
    }, { field: [], order: [] });
}
function mergeTitleFieldDefs(f1, f2) {
    const merged = [...f1];
    f2.forEach(fdToMerge => {
        for (const fieldDef1 of merged) {
            // If already exists, no need to append to merged array
            if (Object(_util__WEBPACK_IMPORTED_MODULE_6__["stringify"])(fieldDef1) === Object(_util__WEBPACK_IMPORTED_MODULE_6__["stringify"])(fdToMerge)) {
                return;
            }
        }
        merged.push(fdToMerge);
    });
    return merged;
}
function mergeTitle(title1, title2) {
    if (title1 === title2 || !title2) {
        // if titles are the same or title2 is falsy
        return title1;
    }
    else if (!title1) {
        // if title1 is falsy
        return title2;
    }
    else {
        // join title with comma if they are different
        return title1 + ', ' + title2;
    }
}
function mergeTitleComponent(v1, v2) {
    if (Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isArray"])(v1.value) && Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isArray"])(v2.value)) {
        return {
            explicit: v1.explicit,
            value: mergeTitleFieldDefs(v1.value, v2.value)
        };
    }
    else if (!Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isArray"])(v1.value) && !Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isArray"])(v2.value)) {
        return {
            explicit: v1.explicit,
            value: mergeTitle(v1.value, v2.value)
        };
    }
    /* istanbul ignore next: Condition should not happen -- only for warning in development. */
    throw new Error('It should never reach here');
}
//# sourceMappingURL=common.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/compile.js":
/*!*************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/compile.js ***!
  \*************************************************************/
/*! exports provided: compile */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "compile", function() { return compile; });
/* harmony import */ var _channeldef__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../channeldef */ "./node_modules/vega-lite/build/src/channeldef.js");
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../config */ "./node_modules/vega-lite/build/src/config.js");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../log */ "./node_modules/vega-lite/build/src/log/index.js");
/* harmony import */ var _normalize_index__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../normalize/index */ "./node_modules/vega-lite/build/src/normalize/index.js");
/* harmony import */ var _spec__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../spec */ "./node_modules/vega-lite/build/src/spec/index.js");
/* harmony import */ var _spec_toplevel__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../spec/toplevel */ "./node_modules/vega-lite/build/src/spec/toplevel.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util */ "./node_modules/vega-lite/build/src/util.js");
/* harmony import */ var _buildmodel__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./buildmodel */ "./node_modules/vega-lite/build/src/compile/buildmodel.js");
/* harmony import */ var _data_assemble__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./data/assemble */ "./node_modules/vega-lite/build/src/compile/data/assemble.js");
/* harmony import */ var _data_optimize__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./data/optimize */ "./node_modules/vega-lite/build/src/compile/data/optimize.js");









// import {draw} from './data/debug';

/**
 * Vega-Lite's main function, for compiling Vega-lite spec into Vega spec.
 *
 * At a high-level, we make the following transformations in different phases:
 *
 * Input spec
 *     |
 *     |  (Normalization)
 *     v
 * Normalized Spec (Row/Column channels in single-view specs becomes faceted specs, composite marks becomes layered specs.)
 *     |
 *     |  (Build Model)
 *     v
 * A model tree of the spec
 *     |
 *     |  (Parse)
 *     v
 * A model tree with parsed components (intermediate structure of visualization primitives in a format that can be easily merged)
 *     |
 *     | (Optimize)
 *     v
 * A model tree with parsed components with the data component optimized
 *     |
 *     | (Assemble)
 *     v
 * Vega spec
 */
function compile(inputSpec, opt = {}) {
    // 0. Augment opt with default opts
    if (opt.logger) {
        // set the singleton logger to the provided logger
        _log__WEBPACK_IMPORTED_MODULE_2__["set"](opt.logger);
    }
    if (opt.fieldTitle) {
        // set the singleton field title formatter
        _channeldef__WEBPACK_IMPORTED_MODULE_0__["setTitleFormatter"](opt.fieldTitle);
    }
    try {
        // 1. Initialize config by deep merging default config with the config provided via option and the input spec.
        const config = Object(_config__WEBPACK_IMPORTED_MODULE_1__["initConfig"])(Object(_util__WEBPACK_IMPORTED_MODULE_6__["mergeDeep"])({}, opt.config, inputSpec.config));
        // 2. Normalize: Convert input spec -> normalized spec
        // - Decompose all extended unit specs into composition of unit spec.  For example, a box plot get expanded into multiple layers of bars, ticks, and rules. The shorthand row/column channel is also expanded to a facet spec.
        const spec = Object(_normalize_index__WEBPACK_IMPORTED_MODULE_3__["normalize"])(inputSpec, config);
        // - Normalize autosize to be a autosize properties object.
        const autosize = Object(_spec_toplevel__WEBPACK_IMPORTED_MODULE_5__["normalizeAutoSize"])(inputSpec.autosize, config.autosize, Object(_spec__WEBPACK_IMPORTED_MODULE_4__["isLayerSpec"])(spec) || Object(_spec__WEBPACK_IMPORTED_MODULE_4__["isUnitSpec"])(spec));
        // 3. Build Model: normalized spec -> Model (a tree structure)
        // This phases instantiates the models with default config by doing a top-down traversal. This allows us to pass properties that child models derive from their parents via their constructors.
        // See the abstract `Model` class and its children (UnitModel, LayerModel, FacetModel, RepeatModel, ConcatModel) for different types of models.
        const model = Object(_buildmodel__WEBPACK_IMPORTED_MODULE_7__["buildModel"])(spec, null, '', undefined, undefined, config, autosize.type === 'fit');
        // 4 Parse: Model --> Model with components
        // Note that components = intermediate representations that are equivalent to Vega specs.
        // We need these intermediate representation because we need to merge many visualization "components" like projections, scales, axes, and legends.
        // We will later convert these components into actual Vega specs in the assemble phase.
        // In this phase, we do a bottom-up traversal over the whole tree to
        // parse for each type of components once (e.g., data, layout, mark, scale).
        // By doing bottom-up traversal, we start parsing components of unit specs and
        // then merge child components of parent composite specs.
        //
        // Please see inside model.parse() for order of different components parsed.
        model.parse();
        // draw(model.component.data.sources);
        // 5. Optimize the dataflow.  This will modify the data component of the model.
        Object(_data_optimize__WEBPACK_IMPORTED_MODULE_9__["optimizeDataflow"])(model.component.data, model);
        // 6. Assemble: convert model components --> Vega Spec.
        return assembleTopLevelModel(model, getTopLevelProperties(inputSpec, config, autosize), inputSpec.datasets, inputSpec.usermeta);
    }
    finally {
        // Reset the singleton logger if a logger is provided
        if (opt.logger) {
            _log__WEBPACK_IMPORTED_MODULE_2__["reset"]();
        }
        // Reset the singleton field title formatter if provided
        if (opt.fieldTitle) {
            _channeldef__WEBPACK_IMPORTED_MODULE_0__["resetTitleFormatter"]();
        }
    }
}
function getTopLevelProperties(topLevelSpec, config, autosize) {
    return Object.assign({ autosize: Object(_util__WEBPACK_IMPORTED_MODULE_6__["keys"])(autosize).length === 1 && autosize.type ? autosize.type : autosize }, Object(_spec_toplevel__WEBPACK_IMPORTED_MODULE_5__["extractTopLevelProperties"])(config), Object(_spec_toplevel__WEBPACK_IMPORTED_MODULE_5__["extractTopLevelProperties"])(topLevelSpec));
}
/*
 * Assemble the top-level model.
 *
 * Note: this couldn't be `model.assemble()` since the top-level model
 * needs some special treatment to generate top-level properties.
 */
function assembleTopLevelModel(model, topLevelProperties, datasets = {}, usermeta) {
    // Config with Vega-Lite only config removed.
    const vgConfig = model.config ? Object(_config__WEBPACK_IMPORTED_MODULE_1__["stripAndRedirectConfig"])(model.config) : undefined;
    const data = [].concat(model.assembleSelectionData([]), 
    // only assemble data in the root
    Object(_data_assemble__WEBPACK_IMPORTED_MODULE_8__["assembleRootData"])(model.component.data, datasets));
    const projections = model.assembleProjections();
    const title = model.assembleTitle();
    const style = model.assembleGroupStyle();
    const encodeEntry = model.assembleGroupEncodeEntry(true);
    let layoutSignals = model.assembleLayoutSignals();
    // move width and height signals with values to top level
    layoutSignals = layoutSignals.filter(signal => {
        if ((signal.name === 'width' || signal.name === 'height') && signal.value !== undefined) {
            topLevelProperties[signal.name] = +signal.value;
            return false;
        }
        return true;
    });
    const output = Object.assign({ $schema: 'https://vega.github.io/schema/vega/v5.json' }, (model.description ? { description: model.description } : {}), topLevelProperties, (title ? { title } : {}), (style ? { style } : {}), (encodeEntry ? { encode: { update: encodeEntry } } : {}), { data }, (projections.length > 0 ? { projections: projections } : {}), model.assembleGroup([...layoutSignals, ...model.assembleSelectionTopLevelSignals([])]), (vgConfig ? { config: vgConfig } : {}), (usermeta ? { usermeta } : {}));
    return {
        spec: output
        // TODO: add warning / errors here
    };
}
//# sourceMappingURL=compile.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/concat.js":
/*!************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/concat.js ***!
  \************************************************************/
/*! exports provided: ConcatModel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ConcatModel", function() { return ConcatModel; });
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../log */ "./node_modules/vega-lite/build/src/log/index.js");
/* harmony import */ var _spec__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../spec */ "./node_modules/vega-lite/build/src/spec/index.js");
/* harmony import */ var _baseconcat__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./baseconcat */ "./node_modules/vega-lite/build/src/compile/baseconcat.js");
/* harmony import */ var _buildmodel__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./buildmodel */ "./node_modules/vega-lite/build/src/compile/buildmodel.js");
/* harmony import */ var _layoutsize_parse__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./layoutsize/parse */ "./node_modules/vega-lite/build/src/compile/layoutsize/parse.js");





class ConcatModel extends _baseconcat__WEBPACK_IMPORTED_MODULE_2__["BaseConcatModel"] {
    constructor(spec, parent, parentGivenName, repeater, config) {
        super(spec, 'concat', parent, parentGivenName, config, repeater, spec.resolve);
        if (spec.resolve && spec.resolve.axis && (spec.resolve.axis.x === 'shared' || spec.resolve.axis.y === 'shared')) {
            _log__WEBPACK_IMPORTED_MODULE_0__["warn"](_log__WEBPACK_IMPORTED_MODULE_0__["message"].CONCAT_CANNOT_SHARE_AXIS);
        }
        this.concatType = Object(_spec__WEBPACK_IMPORTED_MODULE_1__["isVConcatSpec"])(spec) ? 'vconcat' : Object(_spec__WEBPACK_IMPORTED_MODULE_1__["isHConcatSpec"])(spec) ? 'hconcat' : 'concat';
        this.children = this.getChildren(spec).map((child, i) => {
            return Object(_buildmodel__WEBPACK_IMPORTED_MODULE_3__["buildModel"])(child, this, this.getName('concat_' + i), undefined, repeater, config, false);
        });
    }
    getChildren(spec) {
        if (Object(_spec__WEBPACK_IMPORTED_MODULE_1__["isVConcatSpec"])(spec)) {
            return spec.vconcat;
        }
        else if (Object(_spec__WEBPACK_IMPORTED_MODULE_1__["isHConcatSpec"])(spec)) {
            return spec.hconcat;
        }
        return spec.concat;
    }
    parseLayoutSize() {
        Object(_layoutsize_parse__WEBPACK_IMPORTED_MODULE_4__["parseConcatLayoutSize"])(this);
    }
    parseAxisGroup() {
        return null;
    }
    assembleDefaultLayout() {
        return Object.assign({}, (this.concatType === 'vconcat' ? { columns: 1 } : {}), { bounds: 'full', 
            // Use align each so it can work with multiple plots with different size
            align: 'each' });
    }
}
//# sourceMappingURL=concat.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/data/aggregate.js":
/*!********************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/data/aggregate.js ***!
  \********************************************************************/
/*! exports provided: AggregateNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AggregateNode", function() { return AggregateNode; });
/* harmony import */ var _aggregate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../aggregate */ "./node_modules/vega-lite/build/src/aggregate.js");
/* harmony import */ var _bin__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../bin */ "./node_modules/vega-lite/build/src/bin.js");
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../channel */ "./node_modules/vega-lite/build/src/channel.js");
/* harmony import */ var _channeldef__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../channeldef */ "./node_modules/vega-lite/build/src/channeldef.js");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../log */ "./node_modules/vega-lite/build/src/log/index.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../util */ "./node_modules/vega-lite/build/src/util.js");
/* harmony import */ var _dataflow__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./dataflow */ "./node_modules/vega-lite/build/src/compile/data/dataflow.js");







function addDimension(dims, channel, fieldDef, model) {
    if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_3__["isTypedFieldDef"])(fieldDef) && Object(_bin__WEBPACK_IMPORTED_MODULE_1__["isBinning"])(fieldDef.bin)) {
        dims.add(Object(_channeldef__WEBPACK_IMPORTED_MODULE_3__["vgField"])(fieldDef, {}));
        dims.add(Object(_channeldef__WEBPACK_IMPORTED_MODULE_3__["vgField"])(fieldDef, { binSuffix: 'end' }));
        if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_3__["binRequiresRange"])(fieldDef, channel)) {
            dims.add(Object(_channeldef__WEBPACK_IMPORTED_MODULE_3__["vgField"])(fieldDef, { binSuffix: 'range' }));
        }
    }
    else if (Object(_channel__WEBPACK_IMPORTED_MODULE_2__["isGeoPositionChannel"])(channel)) {
        const posChannel = Object(_channel__WEBPACK_IMPORTED_MODULE_2__["getPositionChannelFromLatLong"])(channel);
        dims.add(model.getName(posChannel));
    }
    else {
        dims.add(Object(_channeldef__WEBPACK_IMPORTED_MODULE_3__["vgField"])(fieldDef));
    }
    return dims;
}
function mergeMeasures(parentMeasures, childMeasures) {
    for (const field of Object(_util__WEBPACK_IMPORTED_MODULE_5__["keys"])(childMeasures)) {
        // when we merge a measure, we either have to add an aggregation operator or even a new field
        const ops = childMeasures[field];
        for (const op of Object(_util__WEBPACK_IMPORTED_MODULE_5__["keys"])(ops)) {
            if (field in parentMeasures) {
                // add operator to existing measure field
                parentMeasures[field][op] = new Set([...(parentMeasures[field][op] || []), ...ops[op]]);
            }
            else {
                parentMeasures[field] = { [op]: ops[op] };
            }
        }
    }
}
class AggregateNode extends _dataflow__WEBPACK_IMPORTED_MODULE_6__["DataFlowNode"] {
    /**
     * @param dimensions string set for dimensions
     * @param measures dictionary mapping field name => dict of aggregation functions and names to use
     */
    constructor(parent, dimensions, measures) {
        super(parent);
        this.dimensions = dimensions;
        this.measures = measures;
    }
    clone() {
        return new AggregateNode(null, new Set(this.dimensions), Object(_util__WEBPACK_IMPORTED_MODULE_5__["duplicate"])(this.measures));
    }
    get groupBy() {
        return this.dimensions;
    }
    static makeFromEncoding(parent, model) {
        let isAggregate = false;
        model.forEachFieldDef(fd => {
            if (fd.aggregate) {
                isAggregate = true;
            }
        });
        const meas = {};
        const dims = new Set();
        if (!isAggregate) {
            // no need to create this node if the model has no aggregation
            return null;
        }
        model.forEachFieldDef((fieldDef, channel) => {
            const { aggregate, field } = fieldDef;
            if (aggregate) {
                if (aggregate === 'count') {
                    meas['*'] = meas['*'] || {};
                    meas['*']['count'] = new Set([Object(_channeldef__WEBPACK_IMPORTED_MODULE_3__["vgField"])(fieldDef, { forAs: true })]);
                }
                else {
                    if (Object(_aggregate__WEBPACK_IMPORTED_MODULE_0__["isArgminDef"])(aggregate) || Object(_aggregate__WEBPACK_IMPORTED_MODULE_0__["isArgmaxDef"])(aggregate)) {
                        const op = Object(_aggregate__WEBPACK_IMPORTED_MODULE_0__["isArgminDef"])(aggregate) ? 'argmin' : 'argmax';
                        const argField = aggregate[op];
                        meas[argField] = meas[argField] || {};
                        meas[argField][op] = new Set([Object(_channeldef__WEBPACK_IMPORTED_MODULE_3__["vgField"])({ op, field: argField }, { forAs: true })]);
                    }
                    else {
                        meas[field] = meas[field] || {};
                        meas[field][aggregate] = new Set([Object(_channeldef__WEBPACK_IMPORTED_MODULE_3__["vgField"])(fieldDef, { forAs: true })]);
                    }
                    // For scale channel with domain === 'unaggregated', add min/max so we can use their union as unaggregated domain
                    if (Object(_channel__WEBPACK_IMPORTED_MODULE_2__["isScaleChannel"])(channel) && model.scaleDomain(channel) === 'unaggregated') {
                        meas[field] = meas[field] || {};
                        meas[field]['min'] = new Set([Object(_channeldef__WEBPACK_IMPORTED_MODULE_3__["vgField"])({ field, aggregate: 'min' }, { forAs: true })]);
                        meas[field]['max'] = new Set([Object(_channeldef__WEBPACK_IMPORTED_MODULE_3__["vgField"])({ field, aggregate: 'max' }, { forAs: true })]);
                    }
                }
            }
            else {
                addDimension(dims, channel, fieldDef, model);
            }
        });
        if (dims.size + Object(_util__WEBPACK_IMPORTED_MODULE_5__["keys"])(meas).length === 0) {
            return null;
        }
        return new AggregateNode(parent, dims, meas);
    }
    static makeFromTransform(parent, t) {
        const dims = new Set();
        const meas = {};
        for (const s of t.aggregate) {
            const { op, field, as } = s;
            if (op) {
                if (op === 'count') {
                    meas['*'] = meas['*'] || {};
                    meas['*']['count'] = new Set([as ? as : Object(_channeldef__WEBPACK_IMPORTED_MODULE_3__["vgField"])(s, { forAs: true })]);
                }
                else {
                    meas[field] = meas[field] || {};
                    meas[field][op] = new Set([as ? as : Object(_channeldef__WEBPACK_IMPORTED_MODULE_3__["vgField"])(s, { forAs: true })]);
                }
            }
        }
        for (const s of t.groupby || []) {
            dims.add(s);
        }
        if (dims.size + Object(_util__WEBPACK_IMPORTED_MODULE_5__["keys"])(meas).length === 0) {
            return null;
        }
        return new AggregateNode(parent, dims, meas);
    }
    merge(other) {
        if (Object(_util__WEBPACK_IMPORTED_MODULE_5__["setEqual"])(this.dimensions, other.dimensions)) {
            mergeMeasures(this.measures, other.measures);
            return true;
        }
        else {
            _log__WEBPACK_IMPORTED_MODULE_4__["debug"]('different dimensions, cannot merge');
            return false;
        }
    }
    addDimensions(fields) {
        fields.forEach(this.dimensions.add, this.dimensions);
    }
    dependentFields() {
        return new Set([...this.dimensions, ...Object(_util__WEBPACK_IMPORTED_MODULE_5__["keys"])(this.measures)]);
    }
    producedFields() {
        const out = new Set();
        for (const field of Object(_util__WEBPACK_IMPORTED_MODULE_5__["keys"])(this.measures)) {
            for (const op of Object(_util__WEBPACK_IMPORTED_MODULE_5__["keys"])(this.measures[field])) {
                const m = this.measures[field][op];
                if (m.size === 0) {
                    out.add(`${op}_${field}`);
                }
                else {
                    m.forEach(out.add, out);
                }
            }
        }
        return out;
    }
    hash() {
        return `Aggregate ${Object(_util__WEBPACK_IMPORTED_MODULE_5__["hash"])({ dimensions: this.dimensions, measures: this.measures })}`;
    }
    assemble() {
        const ops = [];
        const fields = [];
        const as = [];
        for (const field of Object(_util__WEBPACK_IMPORTED_MODULE_5__["keys"])(this.measures)) {
            for (const op of Object(_util__WEBPACK_IMPORTED_MODULE_5__["keys"])(this.measures[field])) {
                for (const alias of this.measures[field][op]) {
                    as.push(alias);
                    ops.push(op);
                    fields.push(field === '*' ? null : Object(_util__WEBPACK_IMPORTED_MODULE_5__["replacePathInField"])(field));
                }
            }
        }
        const result = {
            type: 'aggregate',
            groupby: [...this.dimensions],
            ops,
            fields,
            as
        };
        return result;
    }
}
//# sourceMappingURL=aggregate.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/data/assemble.js":
/*!*******************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/data/assemble.js ***!
  \*******************************************************************/
/*! exports provided: assembleFacetData, assembleRootData */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "assembleFacetData", function() { return assembleFacetData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "assembleRootData", function() { return assembleRootData; });
/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../data */ "./node_modules/vega-lite/build/src/data.js");
/* harmony import */ var _aggregate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./aggregate */ "./node_modules/vega-lite/build/src/compile/data/aggregate.js");
/* harmony import */ var _bin__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bin */ "./node_modules/vega-lite/build/src/compile/data/bin.js");
/* harmony import */ var _calculate__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./calculate */ "./node_modules/vega-lite/build/src/compile/data/calculate.js");
/* harmony import */ var _dataflow__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dataflow */ "./node_modules/vega-lite/build/src/compile/data/dataflow.js");
/* harmony import */ var _facet__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./facet */ "./node_modules/vega-lite/build/src/compile/data/facet.js");
/* harmony import */ var _filter__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./filter */ "./node_modules/vega-lite/build/src/compile/data/filter.js");
/* harmony import */ var _filterinvalid__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./filterinvalid */ "./node_modules/vega-lite/build/src/compile/data/filterinvalid.js");
/* harmony import */ var _flatten__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./flatten */ "./node_modules/vega-lite/build/src/compile/data/flatten.js");
/* harmony import */ var _fold__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./fold */ "./node_modules/vega-lite/build/src/compile/data/fold.js");
/* harmony import */ var _formatparse__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./formatparse */ "./node_modules/vega-lite/build/src/compile/data/formatparse.js");
/* harmony import */ var _geojson__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./geojson */ "./node_modules/vega-lite/build/src/compile/data/geojson.js");
/* harmony import */ var _geopoint__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./geopoint */ "./node_modules/vega-lite/build/src/compile/data/geopoint.js");
/* harmony import */ var _graticule__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./graticule */ "./node_modules/vega-lite/build/src/compile/data/graticule.js");
/* harmony import */ var _identifier__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./identifier */ "./node_modules/vega-lite/build/src/compile/data/identifier.js");
/* harmony import */ var _impute__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./impute */ "./node_modules/vega-lite/build/src/compile/data/impute.js");
/* harmony import */ var _joinaggregate__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./joinaggregate */ "./node_modules/vega-lite/build/src/compile/data/joinaggregate.js");
/* harmony import */ var _lookup__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./lookup */ "./node_modules/vega-lite/build/src/compile/data/lookup.js");
/* harmony import */ var _sample__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./sample */ "./node_modules/vega-lite/build/src/compile/data/sample.js");
/* harmony import */ var _sequence__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./sequence */ "./node_modules/vega-lite/build/src/compile/data/sequence.js");
/* harmony import */ var _source__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./source */ "./node_modules/vega-lite/build/src/compile/data/source.js");
/* harmony import */ var _stack__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./stack */ "./node_modules/vega-lite/build/src/compile/data/stack.js");
/* harmony import */ var _timeunit__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./timeunit */ "./node_modules/vega-lite/build/src/compile/data/timeunit.js");
/* harmony import */ var _window__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./window */ "./node_modules/vega-lite/build/src/compile/data/window.js");
























function makeWalkTree(data) {
    // to name datasources
    let datasetIndex = 0;
    /**
     * Recursively walk down the tree.
     */
    function walkTree(node, dataSource) {
        if (node instanceof _source__WEBPACK_IMPORTED_MODULE_20__["SourceNode"]) {
            // If the source is a named data source or a data source with values, we need
            // to put it in a different data source. Otherwise, Vega may override the data.
            if (!node.isGenerator && !Object(_data__WEBPACK_IMPORTED_MODULE_0__["isUrlData"])(node.data)) {
                data.push(dataSource);
                const newData = {
                    name: null,
                    source: dataSource.name,
                    transform: []
                };
                dataSource = newData;
            }
        }
        if (node instanceof _formatparse__WEBPACK_IMPORTED_MODULE_10__["ParseNode"]) {
            if (node.parent instanceof _source__WEBPACK_IMPORTED_MODULE_20__["SourceNode"] && !dataSource.source) {
                // If node's parent is a root source and the data source does not refer to another data source, use normal format parse
                dataSource.format = Object.assign({}, (dataSource.format || {}), { parse: node.assembleFormatParse() });
                // add calculates for all nested fields
                dataSource.transform.push(...node.assembleTransforms(true));
            }
            else {
                // Otherwise use Vega expression to parse
                dataSource.transform.push(...node.assembleTransforms());
            }
        }
        if (node instanceof _facet__WEBPACK_IMPORTED_MODULE_5__["FacetNode"]) {
            if (!dataSource.name) {
                dataSource.name = `data_${datasetIndex++}`;
            }
            if (!dataSource.source || dataSource.transform.length > 0) {
                data.push(dataSource);
                node.data = dataSource.name;
            }
            else {
                node.data = dataSource.source;
            }
            node.assemble().forEach(d => data.push(d));
            // break here because the rest of the tree has to be taken care of by the facet.
            return;
        }
        if (node instanceof _graticule__WEBPACK_IMPORTED_MODULE_13__["GraticuleNode"] ||
            node instanceof _sequence__WEBPACK_IMPORTED_MODULE_19__["SequenceNode"] ||
            node instanceof _filterinvalid__WEBPACK_IMPORTED_MODULE_7__["FilterInvalidNode"] ||
            node instanceof _filter__WEBPACK_IMPORTED_MODULE_6__["FilterNode"] ||
            node instanceof _calculate__WEBPACK_IMPORTED_MODULE_3__["CalculateNode"] ||
            node instanceof _geopoint__WEBPACK_IMPORTED_MODULE_12__["GeoPointNode"] ||
            node instanceof _geojson__WEBPACK_IMPORTED_MODULE_11__["GeoJSONNode"] ||
            node instanceof _aggregate__WEBPACK_IMPORTED_MODULE_1__["AggregateNode"] ||
            node instanceof _lookup__WEBPACK_IMPORTED_MODULE_17__["LookupNode"] ||
            node instanceof _window__WEBPACK_IMPORTED_MODULE_23__["WindowTransformNode"] ||
            node instanceof _joinaggregate__WEBPACK_IMPORTED_MODULE_16__["JoinAggregateTransformNode"] ||
            node instanceof _fold__WEBPACK_IMPORTED_MODULE_9__["FoldTransformNode"] ||
            node instanceof _flatten__WEBPACK_IMPORTED_MODULE_8__["FlattenTransformNode"] ||
            node instanceof _identifier__WEBPACK_IMPORTED_MODULE_14__["IdentifierNode"] ||
            node instanceof _sample__WEBPACK_IMPORTED_MODULE_18__["SampleTransformNode"]) {
            dataSource.transform.push(node.assemble());
        }
        if (node instanceof _bin__WEBPACK_IMPORTED_MODULE_2__["BinNode"] ||
            node instanceof _timeunit__WEBPACK_IMPORTED_MODULE_22__["TimeUnitNode"] ||
            node instanceof _impute__WEBPACK_IMPORTED_MODULE_15__["ImputeNode"] ||
            node instanceof _stack__WEBPACK_IMPORTED_MODULE_21__["StackNode"]) {
            dataSource.transform = dataSource.transform.concat(node.assemble());
        }
        if (node instanceof _dataflow__WEBPACK_IMPORTED_MODULE_4__["OutputNode"]) {
            if (dataSource.source && dataSource.transform.length === 0) {
                node.setSource(dataSource.source);
            }
            else if (node.parent instanceof _dataflow__WEBPACK_IMPORTED_MODULE_4__["OutputNode"]) {
                // Note that an output node may be required but we still do not assemble a
                // separate data source for it.
                node.setSource(dataSource.name);
            }
            else {
                if (!dataSource.name) {
                    dataSource.name = `data_${datasetIndex++}`;
                }
                // Here we set the name of the datasource we generated. From now on
                // other assemblers can use it.
                node.setSource(dataSource.name);
                // if this node has more than one child, we will add a datasource automatically
                if (node.numChildren() === 1) {
                    data.push(dataSource);
                    const newData = {
                        name: null,
                        source: dataSource.name,
                        transform: []
                    };
                    dataSource = newData;
                }
            }
        }
        switch (node.numChildren()) {
            case 0:
                // done
                if (node instanceof _dataflow__WEBPACK_IMPORTED_MODULE_4__["OutputNode"] && (!dataSource.source || dataSource.transform.length > 0)) {
                    // do not push empty datasources that are simply references
                    data.push(dataSource);
                }
                break;
            case 1:
                walkTree(node.children[0], dataSource);
                break;
            default: {
                if (!dataSource.name) {
                    dataSource.name = `data_${datasetIndex++}`;
                }
                let source = dataSource.name;
                if (!dataSource.source || dataSource.transform.length > 0) {
                    data.push(dataSource);
                }
                else {
                    source = dataSource.source;
                }
                node.children.forEach(child => {
                    const newData = {
                        name: null,
                        source: source,
                        transform: []
                    };
                    walkTree(child, newData);
                });
                break;
            }
        }
    }
    return walkTree;
}
/**
 * Assemble data sources that are derived from faceted data.
 */
function assembleFacetData(root) {
    const data = [];
    const walkTree = makeWalkTree(data);
    root.children.forEach(child => walkTree(child, {
        source: root.name,
        name: null,
        transform: []
    }));
    return data;
}
/**
 * Create Vega Data array from a given compiled model and append all of them to the given array
 *
 * @param  model
 * @param  data array
 * @return modified data array
 */
function assembleRootData(dataComponent, datasets) {
    const data = [];
    // dataComponent.sources.forEach(debug);
    // draw(dataComponent.sources);
    const walkTree = makeWalkTree(data);
    let sourceIndex = 0;
    dataComponent.sources.forEach(root => {
        // assign a name if the source does not have a name yet
        if (!root.hasName()) {
            root.dataName = `source_${sourceIndex++}`;
        }
        const newData = root.assemble();
        walkTree(root, newData);
    });
    // remove empty transform arrays for cleaner output
    data.forEach(d => {
        if (d.transform.length === 0) {
            delete d.transform;
        }
    });
    // move sources without transforms (the ones that are potentially used in lookups) to the beginning
    let whereTo = 0;
    for (const [i, d] of data.entries()) {
        if ((d.transform || []).length === 0 && !d.source) {
            data.splice(whereTo++, 0, data.splice(i, 1)[0]);
        }
    }
    // now fix the from references in lookup transforms
    for (const d of data) {
        for (const t of d.transform || []) {
            if (t.type === 'lookup') {
                t.from = dataComponent.outputNodes[t.from].getSource();
            }
        }
    }
    // inline values for datasets that are in the datastore
    for (const d of data) {
        if (d.name in datasets) {
            d.values = datasets[d.name];
        }
    }
    return data;
}
//# sourceMappingURL=assemble.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/data/bin.js":
/*!**************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/data/bin.js ***!
  \**************************************************************/
/*! exports provided: BinNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BinNode", function() { return BinNode; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var _bin__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../bin */ "./node_modules/vega-lite/build/src/bin.js");
/* harmony import */ var _channeldef__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../channeldef */ "./node_modules/vega-lite/build/src/channeldef.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../util */ "./node_modules/vega-lite/build/src/util.js");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common */ "./node_modules/vega-lite/build/src/compile/common.js");
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../model */ "./node_modules/vega-lite/build/src/compile/model.js");
/* harmony import */ var _dataflow__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./dataflow */ "./node_modules/vega-lite/build/src/compile/data/dataflow.js");







function rangeFormula(model, fieldDef, channel, config) {
    if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_2__["binRequiresRange"])(fieldDef, channel)) {
        // read format from axis or legend, if there is no format then use config.numberFormat
        const guide = Object(_model__WEBPACK_IMPORTED_MODULE_5__["isUnitModel"])(model) ? model.axis(channel) || model.legend(channel) || {} : {};
        const startField = Object(_channeldef__WEBPACK_IMPORTED_MODULE_2__["vgField"])(fieldDef, { expr: 'datum' });
        const endField = Object(_channeldef__WEBPACK_IMPORTED_MODULE_2__["vgField"])(fieldDef, { expr: 'datum', binSuffix: 'end' });
        return {
            formulaAs: Object(_channeldef__WEBPACK_IMPORTED_MODULE_2__["vgField"])(fieldDef, { binSuffix: 'range', forAs: true }),
            formula: Object(_common__WEBPACK_IMPORTED_MODULE_4__["binFormatExpression"])(startField, endField, guide.format, config)
        };
    }
    return {};
}
function binKey(bin, field) {
    return `${Object(_bin__WEBPACK_IMPORTED_MODULE_1__["binToString"])(bin)}_${field}`;
}
function getSignalsFromModel(model, key) {
    return {
        signal: model.getName(`${key}_bins`),
        extentSignal: model.getName(`${key}_extent`)
    };
}
function isBinTransform(t) {
    return 'as' in t;
}
function createBinComponent(t, bin, model) {
    let as;
    if (isBinTransform(t)) {
        as = Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isString"])(t.as) ? [t.as, `${t.as}_end`] : [t.as[0], t.as[1]];
    }
    else {
        as = [Object(_channeldef__WEBPACK_IMPORTED_MODULE_2__["vgField"])(t, { forAs: true }), Object(_channeldef__WEBPACK_IMPORTED_MODULE_2__["vgField"])(t, { binSuffix: 'end', forAs: true })];
    }
    const normalizedBin = Object(_channeldef__WEBPACK_IMPORTED_MODULE_2__["normalizeBin"])(bin, undefined) || {};
    const key = binKey(normalizedBin, t.field);
    const { signal, extentSignal } = getSignalsFromModel(model, key);
    const binComponent = Object.assign({ bin: normalizedBin, field: t.field, as: [as] }, (signal ? { signal } : {}), (extentSignal ? { extentSignal } : {}));
    return { key, binComponent };
}
class BinNode extends _dataflow__WEBPACK_IMPORTED_MODULE_6__["DataFlowNode"] {
    constructor(parent, bins) {
        super(parent);
        this.bins = bins;
    }
    clone() {
        return new BinNode(null, Object(_util__WEBPACK_IMPORTED_MODULE_3__["duplicate"])(this.bins));
    }
    static makeFromEncoding(parent, model) {
        const bins = model.reduceFieldDef((binComponentIndex, fieldDef, channel) => {
            if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_2__["isTypedFieldDef"])(fieldDef) && Object(_bin__WEBPACK_IMPORTED_MODULE_1__["isBinning"])(fieldDef.bin)) {
                const { key, binComponent } = createBinComponent(fieldDef, fieldDef.bin, model);
                binComponentIndex[key] = Object.assign({}, binComponent, binComponentIndex[key], rangeFormula(model, fieldDef, channel, model.config));
            }
            return binComponentIndex;
        }, {});
        if (Object(_util__WEBPACK_IMPORTED_MODULE_3__["keys"])(bins).length === 0) {
            return null;
        }
        return new BinNode(parent, bins);
    }
    /**
     * Creates a bin node from BinTransform.
     * The optional parameter should provide
     */
    static makeFromTransform(parent, t, model) {
        const { key, binComponent } = createBinComponent(t, t.bin, model);
        return new BinNode(parent, {
            [key]: binComponent
        });
    }
    /**
     * Merge bin nodes. This method either integrates the bin config from the other node
     * or if this node already has a bin config, renames the corresponding signal in the model.
     */
    merge(other, renameSignal) {
        for (const key of Object(_util__WEBPACK_IMPORTED_MODULE_3__["keys"])(other.bins)) {
            if (key in this.bins) {
                renameSignal(other.bins[key].signal, this.bins[key].signal);
                // Ensure that we don't have duplicate names for signal pairs
                this.bins[key].as = Object(_util__WEBPACK_IMPORTED_MODULE_3__["unique"])([...this.bins[key].as, ...other.bins[key].as], _util__WEBPACK_IMPORTED_MODULE_3__["hash"]);
            }
            else {
                this.bins[key] = other.bins[key];
            }
        }
        for (const child of other.children) {
            other.removeChild(child);
            child.parent = this;
        }
        other.remove();
    }
    producedFields() {
        return new Set(Object(_util__WEBPACK_IMPORTED_MODULE_3__["flatten"])(Object(_util__WEBPACK_IMPORTED_MODULE_3__["flatten"])(Object(_util__WEBPACK_IMPORTED_MODULE_3__["vals"])(this.bins).map(c => c.as))));
    }
    dependentFields() {
        return new Set(Object(_util__WEBPACK_IMPORTED_MODULE_3__["vals"])(this.bins).map(c => c.field));
    }
    hash() {
        return `Bin ${Object(_util__WEBPACK_IMPORTED_MODULE_3__["hash"])(this.bins)}`;
    }
    assemble() {
        return Object(_util__WEBPACK_IMPORTED_MODULE_3__["flatten"])(Object(_util__WEBPACK_IMPORTED_MODULE_3__["vals"])(this.bins).map(bin => {
            const transform = [];
            const [binAs, ...remainingAs] = bin.as;
            const binTrans = Object.assign({ type: 'bin', field: bin.field, as: binAs, signal: bin.signal }, bin.bin);
            if (!bin.bin.extent && bin.extentSignal) {
                transform.push({
                    type: 'extent',
                    field: bin.field,
                    signal: bin.extentSignal
                });
                binTrans.extent = { signal: bin.extentSignal };
            }
            transform.push(binTrans);
            for (const as of remainingAs) {
                for (let i = 0; i < 2; i++) {
                    transform.push({
                        type: 'formula',
                        expr: Object(_channeldef__WEBPACK_IMPORTED_MODULE_2__["vgField"])({ field: binAs[i] }, { expr: 'datum' }),
                        as: as[i]
                    });
                }
            }
            if (bin.formula) {
                transform.push({
                    type: 'formula',
                    expr: bin.formula,
                    as: bin.formulaAs
                });
            }
            return transform;
        }));
    }
}
//# sourceMappingURL=bin.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/data/calculate.js":
/*!********************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/data/calculate.js ***!
  \********************************************************************/
/*! exports provided: CalculateNode, sortArrayIndexField */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CalculateNode", function() { return CalculateNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sortArrayIndexField", function() { return sortArrayIndexField; });
/* harmony import */ var _channeldef__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../channeldef */ "./node_modules/vega-lite/build/src/channeldef.js");
/* harmony import */ var _predicate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../predicate */ "./node_modules/vega-lite/build/src/predicate.js");
/* harmony import */ var _sort__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../sort */ "./node_modules/vega-lite/build/src/sort.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../util */ "./node_modules/vega-lite/build/src/util.js");
/* harmony import */ var _dataflow__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dataflow */ "./node_modules/vega-lite/build/src/compile/data/dataflow.js");
/* harmony import */ var _expressions__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./expressions */ "./node_modules/vega-lite/build/src/compile/data/expressions.js");






/**
 * We don't know what a calculate node depends on so we should never move it beyond anything that produces fields.
 */
class CalculateNode extends _dataflow__WEBPACK_IMPORTED_MODULE_4__["DataFlowNode"] {
    constructor(parent, transform) {
        super(parent);
        this.transform = transform;
        this._dependentFields = Object(_expressions__WEBPACK_IMPORTED_MODULE_5__["getDependentFields"])(this.transform.calculate);
    }
    clone() {
        return new CalculateNode(null, Object(_util__WEBPACK_IMPORTED_MODULE_3__["duplicate"])(this.transform));
    }
    static parseAllForSortIndex(parent, model) {
        // get all the encoding with sort fields from model
        model.forEachFieldDef((fieldDef, channel) => {
            if (!Object(_channeldef__WEBPACK_IMPORTED_MODULE_0__["isScaleFieldDef"])(fieldDef)) {
                return;
            }
            if (Object(_sort__WEBPACK_IMPORTED_MODULE_2__["isSortArray"])(fieldDef.sort)) {
                const { field, timeUnit } = fieldDef;
                const sort = fieldDef.sort;
                // generate `datum["a"] === val0 ? 0 : datum["a"] === val1 ? 1 : ... : n` via FieldEqualPredicate
                const calculate = sort
                    .map((sortValue, i) => {
                    return `${Object(_predicate__WEBPACK_IMPORTED_MODULE_1__["fieldFilterExpression"])({ field, timeUnit, equal: sortValue })} ? ${i} : `;
                })
                    .join('') + sort.length;
                parent = new CalculateNode(parent, {
                    calculate,
                    as: sortArrayIndexField(fieldDef, channel, { forAs: true })
                });
            }
        });
        return parent;
    }
    producedFields() {
        return new Set([this.transform.as]);
    }
    dependentFields() {
        return this._dependentFields;
    }
    assemble() {
        return {
            type: 'formula',
            expr: this.transform.calculate,
            as: this.transform.as
        };
    }
    hash() {
        return `Calculate ${Object(_util__WEBPACK_IMPORTED_MODULE_3__["hash"])(this.transform)}`;
    }
}
function sortArrayIndexField(fieldDef, channel, opt) {
    return Object(_channeldef__WEBPACK_IMPORTED_MODULE_0__["vgField"])(fieldDef, Object.assign({ prefix: channel, suffix: 'sort_index' }, (opt || {})));
}
//# sourceMappingURL=calculate.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/data/dataflow.js":
/*!*******************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/data/dataflow.js ***!
  \*******************************************************************/
/*! exports provided: DataFlowNode, OutputNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DataFlowNode", function() { return DataFlowNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OutputNode", function() { return OutputNode; });
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../util */ "./node_modules/vega-lite/build/src/util.js");

/**
 * A node in the dataflow tree.
 */
class DataFlowNode {
    constructor(parent, debugName) {
        this.debugName = debugName;
        this._children = [];
        this._parent = null;
        if (parent) {
            this.parent = parent;
        }
    }
    /**
     * Clone this node with a deep copy but don't clone links to children or parents.
     */
    clone() {
        throw new Error('Cannot clone node');
    }
    /**
     * Return a hash of the node.
     */
    hash() {
        if (this._hash === undefined) {
            this._hash = Object(_util__WEBPACK_IMPORTED_MODULE_0__["uniqueId"])();
        }
        return this._hash;
    }
    /**
     * Set of fields that are being created by this node.
     */
    producedFields() {
        return new Set();
    }
    dependentFields() {
        return new Set();
    }
    get parent() {
        return this._parent;
    }
    /**
     * Set the parent of the node and also add this node to the parent's children.
     */
    set parent(parent) {
        this._parent = parent;
        if (parent) {
            parent.addChild(this);
        }
    }
    get children() {
        return this._children;
    }
    numChildren() {
        return this._children.length;
    }
    addChild(child, loc) {
        // do not add the same child twice
        if (this._children.indexOf(child) > -1) {
            console.warn('Attempt to add the same child twice.');
            return;
        }
        if (loc !== undefined) {
            this._children.splice(loc, 0, child);
        }
        else {
            this._children.push(child);
        }
    }
    removeChild(oldChild) {
        const loc = this._children.indexOf(oldChild);
        this._children.splice(loc, 1);
        return loc;
    }
    /**
     * Remove node from the dataflow.
     */
    remove() {
        let loc = this._parent.removeChild(this);
        for (const child of this._children) {
            // do not use the set method because we want to insert at a particular location
            child._parent = this._parent;
            this._parent.addChild(child, loc++);
        }
    }
    /**
     * Insert another node as a parent of this node.
     */
    insertAsParentOf(other) {
        const parent = other.parent;
        parent.removeChild(this);
        this.parent = parent;
        other.parent = this;
    }
    swapWithParent() {
        const parent = this._parent;
        const newParent = parent.parent;
        // reconnect the children
        for (const child of this._children) {
            child.parent = parent;
        }
        // remove old links
        this._children = []; // equivalent to removing every child link one by one
        parent.removeChild(this);
        parent.parent.removeChild(parent);
        // swap two nodes
        this.parent = newParent;
        parent.parent = this;
    }
}
class OutputNode extends DataFlowNode {
    /**
     * @param source The name of the source. Will change in assemble.
     * @param type The type of the output node.
     * @param refCounts A global ref counter map.
     */
    constructor(parent, source, type, refCounts) {
        super(parent, source);
        this.type = type;
        this.refCounts = refCounts;
        this._source = this._name = source;
        if (this.refCounts && !(this._name in this.refCounts)) {
            this.refCounts[this._name] = 0;
        }
    }
    clone() {
        const cloneObj = new this.constructor();
        cloneObj.debugName = 'clone_' + this.debugName;
        cloneObj._source = this._source;
        cloneObj._name = 'clone_' + this._name;
        cloneObj.type = this.type;
        cloneObj.refCounts = this.refCounts;
        cloneObj.refCounts[cloneObj._name] = 0;
        return cloneObj;
    }
    /**
     * Request the datasource name and increase the ref counter.
     *
     * During the parsing phase, this will return the simple name such as 'main' or 'raw'.
     * It is crucial to request the name from an output node to mark it as a required node.
     * If nobody ever requests the name, this datasource will not be instantiated in the assemble phase.
     *
     * In the assemble phase, this will return the correct name.
     */
    getSource() {
        this.refCounts[this._name]++;
        return this._source;
    }
    isRequired() {
        return !!this.refCounts[this._name];
    }
    setSource(source) {
        this._source = source;
    }
}
//# sourceMappingURL=dataflow.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/data/debug.js":
/*!****************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/data/debug.js ***!
  \****************************************************************/
/*! exports provided: debug, draw, checkLinks */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "debug", function() { return debug; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "draw", function() { return draw; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "checkLinks", function() { return checkLinks; });
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../../util */ "./node_modules/vega-lite/build/src/util.js");
/* harmony import */ var _source__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./source */ "./node_modules/vega-lite/build/src/compile/data/source.js");


/**
 * Print debug information for dataflow tree.
 */
function debug(node) {
    console.log(`${node.constructor.name}${node.debugName ? `(${node.debugName})` : ''} -> ${node.children.map(c => {
        return `${c.constructor.name}${c.debugName ? ` (${c.debugName})` : ''}`;
    })}`);
    console.log(node);
    node.children.forEach(debug);
}
/**
 * Print the dataflow tree as graphviz.
 *
 * Render the output in http://viz-js.com/.
 */
function draw(roots) {
    // check the graph before printing it since the logic below assumes a consistent graph
    checkLinks(roots);
    const nodes = {};
    const edges = [];
    function getId(node) {
        let id = node['__uniqueid'];
        if (id === undefined) {
            id = Object(_util__WEBPACK_IMPORTED_MODULE_0__["uniqueId"])();
            node['__uniqueid'] = id;
        }
        return id;
    }
    function getLabel(node) {
        const out = [node.constructor.name.slice(0, -4)];
        if (node.debugName) {
            out.push(`<i>${node.debugName}</i>`);
        }
        else if (node instanceof _source__WEBPACK_IMPORTED_MODULE_1__["SourceNode"]) {
            if (node.data.name || node.data.url) {
                out.push(`<i>${node.data.name || node.data.url}</i>`);
            }
        }
        const dep = node.dependentFields();
        if (dep.size) {
            out.push(`<font color="grey" point-size="10">IN:</font> ${[...node.dependentFields()].join(', ')}`);
        }
        const prod = node.producedFields();
        if (prod.size) {
            out.push(`<font color="grey" point-size="10">OUT:</font> ${[...node.producedFields()].join(', ')}`);
        }
        return out.join('<br/>');
    }
    function collector(node) {
        const id = getId(node);
        nodes[id] = {
            id: id,
            label: getLabel(node),
            hash: node instanceof _source__WEBPACK_IMPORTED_MODULE_1__["SourceNode"]
                ? node.data.url || node.data.name || node.debugName
                : String(node.hash()).replace(/"/g, '')
        };
        for (const child of node.children) {
            edges.push([id, getId(child)]);
            collector(child);
        }
    }
    roots.forEach(n => collector(n));
    const dot = `digraph DataFlow {
  rankdir = TB;
  node [shape=record]
  ${Object(_util__WEBPACK_IMPORTED_MODULE_0__["entries"])(nodes)
        .map(({ key, value }) => `  "${key}" [
    label = <${value.label}>;
    tooltip = "[${value.id}]&#010;${value.hash}"
  ]`)
        .join('\n')}

  ${edges.map(([source, target]) => `"${source}" -> "${target}"`).join(' ')}
}`;
    console.log(dot);
    return dot;
}
/**
 * Iterates over a dataflow graph and checks whether all links are consistent.
 */
function checkLinks(nodes) {
    for (const node of nodes) {
        for (const child of node.children) {
            if (child.parent !== node) {
                console.error('Dataflow graph is inconsistent.', node, child);
                return false;
            }
        }
        if (!checkLinks(node.children)) {
            return false;
        }
    }
    return true;
}
//# sourceMappingURL=debug.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/data/expressions.js":
/*!**********************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/data/expressions.js ***!
  \**********************************************************************/
/*! exports provided: getDependentFields */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getDependentFields", function() { return getDependentFields; });
/* harmony import */ var vega_expression__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-expression */ "./node_modules/vega-expression/index.js");

function getName(node) {
    const name = [];
    if (node.type === 'Identifier') {
        return [node.name];
    }
    if (node.type === 'Literal') {
        return [node.value];
    }
    if (node.type === 'MemberExpression') {
        name.push(...getName(node.object));
        name.push(...getName(node.property));
    }
    return name;
}
function startsWithDatum(node) {
    if (node.object.type === 'MemberExpression') {
        return startsWithDatum(node.object);
    }
    return node.object.name === 'datum';
}
function getDependentFields(expression) {
    const ast = Object(vega_expression__WEBPACK_IMPORTED_MODULE_0__["parse"])(expression);
    const dependents = new Set();
    ast.visit((node) => {
        if (node.type === 'MemberExpression' && startsWithDatum(node)) {
            dependents.add(getName(node)
                .slice(1)
                .join('.'));
        }
    });
    return dependents;
}
//# sourceMappingURL=expressions.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/data/facet.js":
/*!****************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/data/facet.js ***!
  \****************************************************************/
/*! exports provided: FacetNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FacetNode", function() { return FacetNode; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var _bin__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../bin */ "./node_modules/vega-lite/build/src/bin.js");
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../channel */ "./node_modules/vega-lite/build/src/channel.js");
/* harmony import */ var _channeldef__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../channeldef */ "./node_modules/vega-lite/build/src/channeldef.js");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../log */ "./node_modules/vega-lite/build/src/log/index.js");
/* harmony import */ var _scale__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../scale */ "./node_modules/vega-lite/build/src/scale.js");
/* harmony import */ var _sort__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../sort */ "./node_modules/vega-lite/build/src/sort.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../util */ "./node_modules/vega-lite/build/src/util.js");
/* harmony import */ var _vega_schema__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../vega.schema */ "./node_modules/vega-lite/build/src/vega.schema.js");
/* harmony import */ var _header_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../header/component */ "./node_modules/vega-lite/build/src/compile/header/component.js");
/* harmony import */ var _scale_domain__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../scale/domain */ "./node_modules/vega-lite/build/src/compile/scale/domain.js");
/* harmony import */ var _calculate__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./calculate */ "./node_modules/vega-lite/build/src/compile/data/calculate.js");
/* harmony import */ var _dataflow__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./dataflow */ "./node_modules/vega-lite/build/src/compile/data/dataflow.js");













/**
 * A node that helps us track what fields we are faceting by.
 */
class FacetNode extends _dataflow__WEBPACK_IMPORTED_MODULE_12__["DataFlowNode"] {
    /**
     * @param model The facet model.
     * @param name The name that this facet source will have.
     * @param data The source data for this facet data.
     */
    constructor(parent, model, name, data) {
        super(parent);
        this.model = model;
        this.name = name;
        this.data = data;
        for (const channel of _channel__WEBPACK_IMPORTED_MODULE_2__["FACET_CHANNELS"]) {
            const fieldDef = model.facet[channel];
            if (fieldDef) {
                const { bin, sort } = fieldDef;
                this[channel] = Object.assign({ name: model.getName(`${channel}_domain`), fields: [Object(_channeldef__WEBPACK_IMPORTED_MODULE_3__["vgField"])(fieldDef), ...(Object(_bin__WEBPACK_IMPORTED_MODULE_1__["isBinning"])(bin) ? [Object(_channeldef__WEBPACK_IMPORTED_MODULE_3__["vgField"])(fieldDef, { binSuffix: 'end' })] : [])] }, (Object(_sort__WEBPACK_IMPORTED_MODULE_6__["isSortField"])(sort)
                    ? { sortField: sort }
                    : Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isArray"])(sort)
                        ? { sortIndexField: Object(_calculate__WEBPACK_IMPORTED_MODULE_11__["sortArrayIndexField"])(fieldDef, channel) }
                        : {}));
            }
        }
        this.childModel = model.child;
    }
    hash() {
        let out = `Facet`;
        for (const channel of _channel__WEBPACK_IMPORTED_MODULE_2__["FACET_CHANNELS"]) {
            if (this[channel]) {
                out += ` ${channel.charAt(0)}:${Object(_util__WEBPACK_IMPORTED_MODULE_7__["hash"])(this[channel])}`;
            }
        }
        return out;
    }
    get fields() {
        const f = [];
        for (const channel of _channel__WEBPACK_IMPORTED_MODULE_2__["FACET_CHANNELS"]) {
            if (this[channel] && this[channel].fields) {
                f.push(...this[channel].fields);
            }
        }
        return f;
    }
    /**
     * The name to reference this source is its name.
     */
    getSource() {
        return this.name;
    }
    getChildIndependentFieldsWithStep() {
        const childIndependentFieldsWithStep = {};
        for (const channel of ['x', 'y']) {
            const childScaleComponent = this.childModel.component.scales[channel];
            if (childScaleComponent && !childScaleComponent.merged) {
                // independent scale
                const type = childScaleComponent.get('type');
                const range = childScaleComponent.get('range');
                if (Object(_scale__WEBPACK_IMPORTED_MODULE_5__["hasDiscreteDomain"])(type) && Object(_vega_schema__WEBPACK_IMPORTED_MODULE_8__["isVgRangeStep"])(range)) {
                    const domain = Object(_scale_domain__WEBPACK_IMPORTED_MODULE_10__["assembleDomain"])(this.childModel, channel);
                    const field = Object(_scale_domain__WEBPACK_IMPORTED_MODULE_10__["getFieldFromDomain"])(domain);
                    if (field) {
                        childIndependentFieldsWithStep[channel] = field;
                    }
                    else {
                        _log__WEBPACK_IMPORTED_MODULE_4__["warn"]('Unknown field for ${channel}.  Cannot calculate view size.');
                    }
                }
            }
        }
        return childIndependentFieldsWithStep;
    }
    assembleRowColumnHeaderData(channel, crossedDataName, childIndependentFieldsWithStep) {
        const childChannel = { row: 'y', column: 'x' }[channel];
        const fields = [];
        const ops = [];
        const as = [];
        if (childIndependentFieldsWithStep && childIndependentFieldsWithStep[childChannel]) {
            if (crossedDataName) {
                // If there is a crossed data, calculate max
                fields.push(`distinct_${childIndependentFieldsWithStep[childChannel]}`);
                ops.push('max');
            }
            else {
                // If there is no crossed data, just calculate distinct
                fields.push(childIndependentFieldsWithStep[childChannel]);
                ops.push('distinct');
            }
            // Although it is technically a max, just name it distinct so it's easier to refer to it
            as.push(`distinct_${childIndependentFieldsWithStep[childChannel]}`);
        }
        const { sortField, sortIndexField } = this[channel];
        if (sortField) {
            const { op = _sort__WEBPACK_IMPORTED_MODULE_6__["DEFAULT_SORT_OP"], field } = sortField;
            fields.push(field);
            ops.push(op);
            as.push(Object(_channeldef__WEBPACK_IMPORTED_MODULE_3__["vgField"])(sortField, { forAs: true }));
        }
        else if (sortIndexField) {
            fields.push(sortIndexField);
            ops.push('max');
            as.push(sortIndexField);
        }
        return {
            name: this[channel].name,
            // Use data from the crossed one if it exist
            source: crossedDataName || this.data,
            transform: [
                Object.assign({ type: 'aggregate', groupby: this[channel].fields }, (fields.length
                    ? {
                        fields,
                        ops,
                        as
                    }
                    : {}))
            ]
        };
    }
    assembleFacetHeaderData(childIndependentFieldsWithStep) {
        const { columns } = this.model.layout;
        const { layoutHeaders } = this.model.component;
        const data = [];
        const hasSharedAxis = {};
        for (const headerChannel of _header_component__WEBPACK_IMPORTED_MODULE_9__["HEADER_CHANNELS"]) {
            for (const headerType of _header_component__WEBPACK_IMPORTED_MODULE_9__["HEADER_TYPES"]) {
                const headers = (layoutHeaders[headerChannel] && layoutHeaders[headerChannel][headerType]) || [];
                for (const header of headers) {
                    if (header.axes && header.axes.length > 0) {
                        hasSharedAxis[headerChannel] = true;
                        break;
                    }
                }
            }
            if (hasSharedAxis[headerChannel]) {
                const cardinality = `length(data("${this.facet.name}"))`;
                const stop = headerChannel === 'row'
                    ? columns
                        ? { signal: `ceil(${cardinality} / ${columns})` }
                        : 1
                    : columns
                        ? { signal: `min(${cardinality}, ${columns})` }
                        : { signal: cardinality };
                data.push({
                    name: `${this.facet.name}_${headerChannel}`,
                    transform: [
                        {
                            type: 'sequence',
                            start: 0,
                            stop
                        }
                    ]
                });
            }
        }
        const { row, column } = hasSharedAxis;
        if (row || column) {
            data.unshift(this.assembleRowColumnHeaderData('facet', null, childIndependentFieldsWithStep));
        }
        return data;
    }
    assemble() {
        const data = [];
        let crossedDataName = null;
        const childIndependentFieldsWithStep = this.getChildIndependentFieldsWithStep();
        const { column, row, facet } = this;
        if (column && row && (childIndependentFieldsWithStep.x || childIndependentFieldsWithStep.y)) {
            // Need to create a cross dataset to correctly calculate cardinality
            crossedDataName = `cross_${this.column.name}_${this.row.name}`;
            const fields = [].concat(childIndependentFieldsWithStep.x || [], childIndependentFieldsWithStep.y || []);
            const ops = fields.map(() => 'distinct');
            data.push({
                name: crossedDataName,
                source: this.data,
                transform: [
                    {
                        type: 'aggregate',
                        groupby: this.fields,
                        fields,
                        ops
                    }
                ]
            });
        }
        for (const channel of [_channel__WEBPACK_IMPORTED_MODULE_2__["COLUMN"], _channel__WEBPACK_IMPORTED_MODULE_2__["ROW"]]) {
            if (this[channel]) {
                data.push(this.assembleRowColumnHeaderData(channel, crossedDataName, childIndependentFieldsWithStep));
            }
        }
        if (facet) {
            const facetData = this.assembleFacetHeaderData(childIndependentFieldsWithStep);
            if (facetData) {
                data.push(...facetData);
            }
        }
        return data;
    }
}
//# sourceMappingURL=facet.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/data/filter.js":
/*!*****************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/data/filter.js ***!
  \*****************************************************************/
/*! exports provided: FilterNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FilterNode", function() { return FilterNode; });
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../util */ "./node_modules/vega-lite/build/src/util.js");
/* harmony import */ var _predicate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../predicate */ "./node_modules/vega-lite/build/src/compile/predicate.js");
/* harmony import */ var _dataflow__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dataflow */ "./node_modules/vega-lite/build/src/compile/data/dataflow.js");
/* harmony import */ var _expressions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./expressions */ "./node_modules/vega-lite/build/src/compile/data/expressions.js");




class FilterNode extends _dataflow__WEBPACK_IMPORTED_MODULE_2__["DataFlowNode"] {
    constructor(parent, model, filter) {
        super(parent);
        this.model = model;
        this.filter = filter;
        // TODO: refactor this to not take a node and
        // then add a static function makeFromOperand and make the constructor take only an expression
        this.expr = Object(_predicate__WEBPACK_IMPORTED_MODULE_1__["expression"])(this.model, this.filter, this);
        this._dependentFields = Object(_expressions__WEBPACK_IMPORTED_MODULE_3__["getDependentFields"])(this.expr);
    }
    clone() {
        return new FilterNode(null, this.model, Object(_util__WEBPACK_IMPORTED_MODULE_0__["duplicate"])(this.filter));
    }
    dependentFields() {
        return this._dependentFields;
    }
    assemble() {
        return {
            type: 'filter',
            expr: this.expr
        };
    }
    hash() {
        return `Filter ${this.expr}`;
    }
}
//# sourceMappingURL=filter.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/data/filterinvalid.js":
/*!************************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/data/filterinvalid.js ***!
  \************************************************************************/
/*! exports provided: FilterInvalidNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FilterInvalidNode", function() { return FilterInvalidNode; });
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../channel */ "./node_modules/vega-lite/build/src/channel.js");
/* harmony import */ var _channeldef__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../channeldef */ "./node_modules/vega-lite/build/src/channeldef.js");
/* harmony import */ var _mark__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../mark */ "./node_modules/vega-lite/build/src/mark.js");
/* harmony import */ var _scale__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../scale */ "./node_modules/vega-lite/build/src/scale.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../util */ "./node_modules/vega-lite/build/src/util.js");
/* harmony import */ var _dataflow__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dataflow */ "./node_modules/vega-lite/build/src/compile/data/dataflow.js");






class FilterInvalidNode extends _dataflow__WEBPACK_IMPORTED_MODULE_5__["DataFlowNode"] {
    constructor(parent, fieldDefs) {
        super(parent);
        this.fieldDefs = fieldDefs;
    }
    clone() {
        return new FilterInvalidNode(null, Object.assign({}, this.fieldDefs));
    }
    static make(parent, model) {
        const { config, mark } = model;
        if (config.invalidValues !== 'filter') {
            return null;
        }
        const filter = model.reduceFieldDef((aggregator, fieldDef, channel) => {
            const scaleComponent = Object(_channel__WEBPACK_IMPORTED_MODULE_0__["isScaleChannel"])(channel) && model.getScaleComponent(channel);
            if (scaleComponent) {
                const scaleType = scaleComponent.get('type');
                // While discrete domain scales can handle invalid values, continuous scales can't.
                // Thus, for non-path marks, we have to filter null for scales with continuous domains.
                // (For path marks, we will use "defined" property and skip these values instead.)
                if (Object(_scale__WEBPACK_IMPORTED_MODULE_3__["hasContinuousDomain"])(scaleType) && !fieldDef.aggregate && !Object(_mark__WEBPACK_IMPORTED_MODULE_2__["isPathMark"])(mark)) {
                    aggregator[fieldDef.field] = fieldDef;
                }
            }
            return aggregator;
        }, {});
        if (!Object(_util__WEBPACK_IMPORTED_MODULE_4__["keys"])(filter).length) {
            return null;
        }
        return new FilterInvalidNode(parent, filter);
    }
    get filter() {
        return this.fieldDefs;
    }
    // create the VgTransforms for each of the filtered fields
    assemble() {
        const filters = Object(_util__WEBPACK_IMPORTED_MODULE_4__["keys"])(this.filter).reduce((vegaFilters, field) => {
            const fieldDef = this.fieldDefs[field];
            const ref = Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["vgField"])(fieldDef, { expr: 'datum' });
            if (fieldDef !== null) {
                vegaFilters.push(`${ref} !== null`);
                vegaFilters.push(`!isNaN(${ref})`);
            }
            return vegaFilters;
        }, []);
        return filters.length > 0
            ? {
                type: 'filter',
                expr: filters.join(' && ')
            }
            : null;
    }
}
//# sourceMappingURL=filterinvalid.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/data/flatten.js":
/*!******************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/data/flatten.js ***!
  \******************************************************************/
/*! exports provided: FlattenTransformNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FlattenTransformNode", function() { return FlattenTransformNode; });
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../util */ "./node_modules/vega-lite/build/src/util.js");
/* harmony import */ var _dataflow__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dataflow */ "./node_modules/vega-lite/build/src/compile/data/dataflow.js");


/**
 * A class for flatten transform nodes
 */
class FlattenTransformNode extends _dataflow__WEBPACK_IMPORTED_MODULE_1__["DataFlowNode"] {
    constructor(parent, transform) {
        super(parent);
        this.transform = transform;
        this.transform = Object(_util__WEBPACK_IMPORTED_MODULE_0__["duplicate"])(transform); // duplicate to prevent side effects
        const { flatten, as = [] } = this.transform;
        this.transform.as = flatten.map((f, i) => as[i] || f);
    }
    clone() {
        return new FlattenTransformNode(this.parent, Object(_util__WEBPACK_IMPORTED_MODULE_0__["duplicate"])(this.transform));
    }
    producedFields() {
        return new Set(this.transform.as);
    }
    hash() {
        return `FlattenTransform ${Object(_util__WEBPACK_IMPORTED_MODULE_0__["hash"])(this.transform)}`;
    }
    assemble() {
        const { flatten: fields, as } = this.transform;
        const result = {
            type: 'flatten',
            fields,
            as
        };
        return result;
    }
}
//# sourceMappingURL=flatten.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/data/fold.js":
/*!***************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/data/fold.js ***!
  \***************************************************************/
/*! exports provided: FoldTransformNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FoldTransformNode", function() { return FoldTransformNode; });
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../util */ "./node_modules/vega-lite/build/src/util.js");
/* harmony import */ var _dataflow__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dataflow */ "./node_modules/vega-lite/build/src/compile/data/dataflow.js");


/**
 * A class for flatten transform nodes
 */
class FoldTransformNode extends _dataflow__WEBPACK_IMPORTED_MODULE_1__["DataFlowNode"] {
    constructor(parent, transform) {
        super(parent);
        this.transform = transform;
        this.transform = Object(_util__WEBPACK_IMPORTED_MODULE_0__["duplicate"])(transform); // duplicate to prevent side effects
        const specifiedAs = this.transform.as || [undefined, undefined];
        this.transform.as = [specifiedAs[0] || 'key', specifiedAs[1] || 'value'];
    }
    clone() {
        return new FoldTransformNode(null, Object(_util__WEBPACK_IMPORTED_MODULE_0__["duplicate"])(this.transform));
    }
    producedFields() {
        return new Set(this.transform.as);
    }
    hash() {
        return `FoldTransform ${Object(_util__WEBPACK_IMPORTED_MODULE_0__["hash"])(this.transform)}`;
    }
    assemble() {
        const { fold, as } = this.transform;
        const result = {
            type: 'fold',
            fields: fold,
            as
        };
        return result;
    }
}
//# sourceMappingURL=fold.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/data/formatparse.js":
/*!**********************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/data/formatparse.js ***!
  \**********************************************************************/
/*! exports provided: ParseNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ParseNode", function() { return ParseNode; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var _aggregate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../aggregate */ "./node_modules/vega-lite/build/src/aggregate.js");
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../channel */ "./node_modules/vega-lite/build/src/channel.js");
/* harmony import */ var _channeldef__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../channeldef */ "./node_modules/vega-lite/build/src/channeldef.js");
/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../data */ "./node_modules/vega-lite/build/src/data.js");
/* harmony import */ var _datetime__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../datetime */ "./node_modules/vega-lite/build/src/datetime.js");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../log */ "./node_modules/vega-lite/build/src/log/index.js");
/* harmony import */ var _logical__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../logical */ "./node_modules/vega-lite/build/src/logical.js");
/* harmony import */ var _predicate__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../predicate */ "./node_modules/vega-lite/build/src/predicate.js");
/* harmony import */ var _sort__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../sort */ "./node_modules/vega-lite/build/src/sort.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../util */ "./node_modules/vega-lite/build/src/util.js");
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../model */ "./node_modules/vega-lite/build/src/compile/model.js");
/* harmony import */ var _split__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../split */ "./node_modules/vega-lite/build/src/compile/split.js");
/* harmony import */ var _dataflow__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./dataflow */ "./node_modules/vega-lite/build/src/compile/data/dataflow.js");














/**
 * Remove quotes from a string.
 */
function unquote(pattern) {
    if ((pattern[0] === "'" && pattern[pattern.length - 1] === "'") ||
        (pattern[0] === '"' && pattern[pattern.length - 1] === '"')) {
        return pattern.slice(1, -1);
    }
    return pattern;
}
/**
 * @param field The field.
 * @param parse What to parse the field as.
 */
function parseExpression(field, parse) {
    const f = Object(_util__WEBPACK_IMPORTED_MODULE_10__["accessPathWithDatum"])(field);
    if (parse === 'number') {
        return `toNumber(${f})`;
    }
    else if (parse === 'boolean') {
        return `toBoolean(${f})`;
    }
    else if (parse === 'string') {
        return `toString(${f})`;
    }
    else if (parse === 'date') {
        return `toDate(${f})`;
    }
    else if (parse === 'flatten') {
        return f;
    }
    else if (parse.indexOf('date:') === 0) {
        const specifier = unquote(parse.slice(5, parse.length));
        return `timeParse(${f},'${specifier}')`;
    }
    else if (parse.indexOf('utc:') === 0) {
        const specifier = unquote(parse.slice(4, parse.length));
        return `utcParse(${f},'${specifier}')`;
    }
    else {
        _log__WEBPACK_IMPORTED_MODULE_6__["warn"](_log__WEBPACK_IMPORTED_MODULE_6__["message"].unrecognizedParse(parse));
        return null;
    }
}
class ParseNode extends _dataflow__WEBPACK_IMPORTED_MODULE_13__["DataFlowNode"] {
    clone() {
        return new ParseNode(null, Object(_util__WEBPACK_IMPORTED_MODULE_10__["duplicate"])(this._parse));
    }
    constructor(parent, parse) {
        super(parent);
        this._parse = parse;
    }
    hash() {
        return `Parse ${Object(_util__WEBPACK_IMPORTED_MODULE_10__["hash"])(this._parse)}`;
    }
    /**
     * Creates a parse node from a data.format.parse and updates ancestorParse.
     */
    static makeExplicit(parent, model, ancestorParse) {
        // Custom parse
        let explicit = {};
        const data = model.data;
        if (!Object(_data__WEBPACK_IMPORTED_MODULE_4__["isGenerator"])(data) && data && data.format && data.format.parse) {
            explicit = data.format.parse;
        }
        return this.makeWithAncestors(parent, explicit, {}, ancestorParse);
    }
    static makeImplicitFromFilterTransform(parent, transform, ancestorParse) {
        const parse = {};
        Object(_logical__WEBPACK_IMPORTED_MODULE_7__["forEachLeaf"])(transform.filter, filter => {
            if (Object(_predicate__WEBPACK_IMPORTED_MODULE_8__["isFieldPredicate"])(filter)) {
                // Automatically add a parse node for filters with filter objects
                let val = null;
                // For EqualFilter, just use the equal property.
                // For RangeFilter and OneOfFilter, all array members should have
                // the same type, so we only use the first one.
                if (Object(_predicate__WEBPACK_IMPORTED_MODULE_8__["isFieldEqualPredicate"])(filter)) {
                    val = filter.equal;
                }
                else if (Object(_predicate__WEBPACK_IMPORTED_MODULE_8__["isFieldRangePredicate"])(filter)) {
                    val = filter.range[0];
                }
                else if (Object(_predicate__WEBPACK_IMPORTED_MODULE_8__["isFieldOneOfPredicate"])(filter)) {
                    val = (filter.oneOf || filter['in'])[0];
                } // else -- for filter expression, we can't infer anything
                if (val) {
                    if (Object(_datetime__WEBPACK_IMPORTED_MODULE_5__["isDateTime"])(val)) {
                        parse[filter.field] = 'date';
                    }
                    else if (Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isNumber"])(val)) {
                        parse[filter.field] = 'number';
                    }
                    else if (Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isString"])(val)) {
                        parse[filter.field] = 'string';
                    }
                }
                if (filter.timeUnit) {
                    parse[filter.field] = 'date';
                }
            }
        });
        if (Object(_util__WEBPACK_IMPORTED_MODULE_10__["keys"])(parse).length === 0) {
            return null;
        }
        return this.makeWithAncestors(parent, {}, parse, ancestorParse);
    }
    /**
     * Creates a parse node for implicit parsing from a model and updates ancestorParse.
     */
    static makeImplicitFromEncoding(parent, model, ancestorParse) {
        const implicit = {};
        function add(fieldDef) {
            if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_3__["isTimeFormatFieldDef"])(fieldDef)) {
                implicit[fieldDef.field] = 'date';
            }
            else if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_3__["isNumberFieldDef"])(fieldDef) && Object(_aggregate__WEBPACK_IMPORTED_MODULE_1__["isMinMaxOp"])(fieldDef.aggregate)) {
                implicit[fieldDef.field] = 'number';
            }
            else if (Object(_util__WEBPACK_IMPORTED_MODULE_10__["accessPathDepth"])(fieldDef.field) > 1) {
                // For non-date/non-number (strings and booleans), derive a flattened field for a referenced nested field.
                // (Parsing numbers / dates already flattens numeric and temporal fields.)
                if (!(fieldDef.field in implicit)) {
                    implicit[fieldDef.field] = 'flatten';
                }
            }
            else if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_3__["isScaleFieldDef"])(fieldDef) && Object(_sort__WEBPACK_IMPORTED_MODULE_9__["isSortField"])(fieldDef.sort) && Object(_util__WEBPACK_IMPORTED_MODULE_10__["accessPathDepth"])(fieldDef.sort.field) > 1) {
                // Flatten fields that we sort by but that are not otherwise flattened.
                if (!(fieldDef.sort.field in implicit)) {
                    implicit[fieldDef.sort.field] = 'flatten';
                }
            }
        }
        if (Object(_model__WEBPACK_IMPORTED_MODULE_11__["isUnitModel"])(model) || Object(_model__WEBPACK_IMPORTED_MODULE_11__["isFacetModel"])(model)) {
            // Parse encoded fields
            model.forEachFieldDef((fieldDef, channel) => {
                if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_3__["isTypedFieldDef"])(fieldDef)) {
                    add(fieldDef);
                }
                else {
                    const mainChannel = Object(_channel__WEBPACK_IMPORTED_MODULE_2__["getMainRangeChannel"])(channel);
                    if (mainChannel !== channel) {
                        const mainFieldDef = model.fieldDef(mainChannel);
                        add(Object.assign({}, fieldDef, { type: mainFieldDef.type }));
                    }
                    else {
                        throw new Error(`Non-secondary channel ${channel} must have type in its field definition ${JSON.stringify(fieldDef)}`);
                    }
                }
            });
        }
        return this.makeWithAncestors(parent, {}, implicit, ancestorParse);
    }
    /**
     * Creates a parse node from "explicit" parse and "implicit" parse and updates ancestorParse.
     */
    static makeWithAncestors(parent, explicit, implicit, ancestorParse) {
        // We should not parse what has already been parsed in a parent (explicitly or implicitly) or what has been derived (maked as "derived"). We also don't need to flatten a field that has already been parsed.
        for (const field of Object(_util__WEBPACK_IMPORTED_MODULE_10__["keys"])(implicit)) {
            const parsedAs = ancestorParse.getWithExplicit(field);
            if (parsedAs.value !== undefined) {
                // We always ignore derived fields even if they are implicitly defined because we expect users to create the right types.
                if (parsedAs.explicit ||
                    parsedAs.value === implicit[field] ||
                    parsedAs.value === 'derived' ||
                    implicit[field] === 'flatten') {
                    delete implicit[field];
                }
                else {
                    _log__WEBPACK_IMPORTED_MODULE_6__["warn"](_log__WEBPACK_IMPORTED_MODULE_6__["message"].differentParse(field, implicit[field], parsedAs.value));
                }
            }
        }
        for (const field of Object(_util__WEBPACK_IMPORTED_MODULE_10__["keys"])(explicit)) {
            const parsedAs = ancestorParse.get(field);
            if (parsedAs !== undefined) {
                // Don't parse a field again if it has been parsed with the same type already.
                if (parsedAs === explicit[field]) {
                    delete explicit[field];
                }
                else {
                    _log__WEBPACK_IMPORTED_MODULE_6__["warn"](_log__WEBPACK_IMPORTED_MODULE_6__["message"].differentParse(field, explicit[field], parsedAs));
                }
            }
        }
        const parse = new _split__WEBPACK_IMPORTED_MODULE_12__["Split"](explicit, implicit);
        // add the format parse from this model so that children don't parse the same field again
        ancestorParse.copyAll(parse);
        // copy only non-null parses
        const p = {};
        for (const key of Object(_util__WEBPACK_IMPORTED_MODULE_10__["keys"])(parse.combine())) {
            const val = parse.get(key);
            if (val !== null) {
                p[key] = val;
            }
        }
        if (Object(_util__WEBPACK_IMPORTED_MODULE_10__["keys"])(p).length === 0 || ancestorParse.parseNothing) {
            return null;
        }
        return new ParseNode(parent, p);
    }
    get parse() {
        return this._parse;
    }
    merge(other) {
        this._parse = Object.assign({}, this._parse, other.parse);
        other.remove();
    }
    /**
     * Assemble an object for Vega's format.parse property.
     */
    assembleFormatParse() {
        const formatParse = {};
        for (const field of Object(_util__WEBPACK_IMPORTED_MODULE_10__["keys"])(this._parse)) {
            const p = this._parse[field];
            if (Object(_util__WEBPACK_IMPORTED_MODULE_10__["accessPathDepth"])(field) === 1) {
                formatParse[field] = p;
            }
        }
        return formatParse;
    }
    // format parse depends and produces all fields in its parse
    producedFields() {
        return new Set(Object(_util__WEBPACK_IMPORTED_MODULE_10__["keys"])(this._parse));
    }
    dependentFields() {
        return new Set(Object(_util__WEBPACK_IMPORTED_MODULE_10__["keys"])(this._parse));
    }
    assembleTransforms(onlyNested = false) {
        return Object(_util__WEBPACK_IMPORTED_MODULE_10__["keys"])(this._parse)
            .filter(field => (onlyNested ? Object(_util__WEBPACK_IMPORTED_MODULE_10__["accessPathDepth"])(field) > 1 : true))
            .map(field => {
            const expr = parseExpression(field, this._parse[field]);
            if (!expr) {
                return null;
            }
            const formula = {
                type: 'formula',
                expr,
                as: Object(_util__WEBPACK_IMPORTED_MODULE_10__["removePathFromField"])(field) // Vega output is always flattened
            };
            return formula;
        })
            .filter(t => t !== null);
    }
}
//# sourceMappingURL=formatparse.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/data/geojson.js":
/*!******************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/data/geojson.js ***!
  \******************************************************************/
/*! exports provided: GeoJSONNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GeoJSONNode", function() { return GeoJSONNode; });
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../channel */ "./node_modules/vega-lite/build/src/channel.js");
/* harmony import */ var _channeldef__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../channeldef */ "./node_modules/vega-lite/build/src/channeldef.js");
/* harmony import */ var _type__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../type */ "./node_modules/vega-lite/build/src/type.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../util */ "./node_modules/vega-lite/build/src/util.js");
/* harmony import */ var _dataflow__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dataflow */ "./node_modules/vega-lite/build/src/compile/data/dataflow.js");





class GeoJSONNode extends _dataflow__WEBPACK_IMPORTED_MODULE_4__["DataFlowNode"] {
    constructor(parent, fields, geojson, signal) {
        super(parent);
        this.fields = fields;
        this.geojson = geojson;
        this.signal = signal;
    }
    clone() {
        return new GeoJSONNode(null, Object(_util__WEBPACK_IMPORTED_MODULE_3__["duplicate"])(this.fields), this.geojson, this.signal);
    }
    static parseAll(parent, model) {
        if (model.component.projection && !model.component.projection.isFit) {
            return parent;
        }
        let geoJsonCounter = 0;
        [[_channel__WEBPACK_IMPORTED_MODULE_0__["LONGITUDE"], _channel__WEBPACK_IMPORTED_MODULE_0__["LATITUDE"]], [_channel__WEBPACK_IMPORTED_MODULE_0__["LONGITUDE2"], _channel__WEBPACK_IMPORTED_MODULE_0__["LATITUDE2"]]].forEach((coordinates) => {
            const pair = coordinates.map(channel => model.channelHasField(channel)
                ? model.fieldDef(channel).field
                : Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["isValueDef"])(model.encoding[channel])
                    ? { expr: model.encoding[channel].value + '' }
                    : undefined);
            if (pair[0] || pair[1]) {
                parent = new GeoJSONNode(parent, pair, null, model.getName(`geojson_${geoJsonCounter++}`));
            }
        });
        if (model.channelHasField(_channel__WEBPACK_IMPORTED_MODULE_0__["SHAPE"])) {
            const fieldDef = model.fieldDef(_channel__WEBPACK_IMPORTED_MODULE_0__["SHAPE"]);
            if (fieldDef.type === _type__WEBPACK_IMPORTED_MODULE_2__["GEOJSON"]) {
                parent = new GeoJSONNode(parent, null, fieldDef.field, model.getName(`geojson_${geoJsonCounter++}`));
            }
        }
        return parent;
    }
    assemble() {
        return Object.assign({ type: 'geojson' }, (this.fields ? { fields: this.fields } : {}), (this.geojson ? { geojson: this.geojson } : {}), { signal: this.signal });
    }
}
//# sourceMappingURL=geojson.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/data/geopoint.js":
/*!*******************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/data/geopoint.js ***!
  \*******************************************************************/
/*! exports provided: GeoPointNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GeoPointNode", function() { return GeoPointNode; });
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../channel */ "./node_modules/vega-lite/build/src/channel.js");
/* harmony import */ var _channeldef__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../channeldef */ "./node_modules/vega-lite/build/src/channeldef.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../util */ "./node_modules/vega-lite/build/src/util.js");
/* harmony import */ var _dataflow__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dataflow */ "./node_modules/vega-lite/build/src/compile/data/dataflow.js");




class GeoPointNode extends _dataflow__WEBPACK_IMPORTED_MODULE_3__["DataFlowNode"] {
    constructor(parent, projection, fields, as) {
        super(parent);
        this.projection = projection;
        this.fields = fields;
        this.as = as;
    }
    clone() {
        return new GeoPointNode(null, this.projection, Object(_util__WEBPACK_IMPORTED_MODULE_2__["duplicate"])(this.fields), Object(_util__WEBPACK_IMPORTED_MODULE_2__["duplicate"])(this.as));
    }
    static parseAll(parent, model) {
        if (!model.projectionName()) {
            return parent;
        }
        [[_channel__WEBPACK_IMPORTED_MODULE_0__["LONGITUDE"], _channel__WEBPACK_IMPORTED_MODULE_0__["LATITUDE"]], [_channel__WEBPACK_IMPORTED_MODULE_0__["LONGITUDE2"], _channel__WEBPACK_IMPORTED_MODULE_0__["LATITUDE2"]]].forEach((coordinates) => {
            const pair = coordinates.map(channel => model.channelHasField(channel)
                ? model.fieldDef(channel).field
                : Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["isValueDef"])(model.encoding[channel])
                    ? { expr: model.encoding[channel].value + '' }
                    : undefined);
            const suffix = coordinates[0] === _channel__WEBPACK_IMPORTED_MODULE_0__["LONGITUDE2"] ? '2' : '';
            if (pair[0] || pair[1]) {
                parent = new GeoPointNode(parent, model.projectionName(), pair, [
                    model.getName('x' + suffix),
                    model.getName('y' + suffix)
                ]);
            }
        });
        return parent;
    }
    assemble() {
        return {
            type: 'geopoint',
            projection: this.projection,
            fields: this.fields,
            as: this.as
        };
    }
}
//# sourceMappingURL=geopoint.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/data/graticule.js":
/*!********************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/data/graticule.js ***!
  \********************************************************************/
/*! exports provided: GraticuleNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GraticuleNode", function() { return GraticuleNode; });
/* harmony import */ var _dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dataflow */ "./node_modules/vega-lite/build/src/compile/data/dataflow.js");

class GraticuleNode extends _dataflow__WEBPACK_IMPORTED_MODULE_0__["DataFlowNode"] {
    constructor(parent, params) {
        super(parent);
        this.params = params;
    }
    clone() {
        return new GraticuleNode(null, this.params);
    }
    assemble() {
        return Object.assign({ type: 'graticule' }, (this.params === true ? {} : this.params));
    }
}
//# sourceMappingURL=graticule.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/data/identifier.js":
/*!*********************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/data/identifier.js ***!
  \*********************************************************************/
/*! exports provided: IdentifierNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IdentifierNode", function() { return IdentifierNode; });
/* harmony import */ var _selection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../selection */ "./node_modules/vega-lite/build/src/selection.js");
/* harmony import */ var _dataflow__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dataflow */ "./node_modules/vega-lite/build/src/compile/data/dataflow.js");


class IdentifierNode extends _dataflow__WEBPACK_IMPORTED_MODULE_1__["DataFlowNode"] {
    clone() {
        return new IdentifierNode(null);
    }
    constructor(parent) {
        super(parent);
    }
    producedFields() {
        return new Set([_selection__WEBPACK_IMPORTED_MODULE_0__["SELECTION_ID"]]);
    }
    hash() {
        return 'Identifier';
    }
    assemble() {
        return { type: 'identifier', as: _selection__WEBPACK_IMPORTED_MODULE_0__["SELECTION_ID"] };
    }
}
//# sourceMappingURL=identifier.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/data/impute.js":
/*!*****************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/data/impute.js ***!
  \*****************************************************************/
/*! exports provided: ImputeNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ImputeNode", function() { return ImputeNode; });
/* harmony import */ var _channeldef__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../channeldef */ "./node_modules/vega-lite/build/src/channeldef.js");
/* harmony import */ var _transform__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../transform */ "./node_modules/vega-lite/build/src/transform.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../util */ "./node_modules/vega-lite/build/src/util.js");
/* harmony import */ var _mark_mark__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../mark/mark */ "./node_modules/vega-lite/build/src/compile/mark/mark.js");
/* harmony import */ var _dataflow__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dataflow */ "./node_modules/vega-lite/build/src/compile/data/dataflow.js");





class ImputeNode extends _dataflow__WEBPACK_IMPORTED_MODULE_4__["DataFlowNode"] {
    constructor(parent, transform) {
        super(parent);
        this.transform = transform;
    }
    clone() {
        return new ImputeNode(null, Object(_util__WEBPACK_IMPORTED_MODULE_2__["duplicate"])(this.transform));
    }
    producedFields() {
        return new Set([this.transform.impute]);
    }
    processSequence(keyvals) {
        const { start = 0, stop, step } = keyvals;
        const result = [start, stop, ...(step ? [step] : [])].join(',');
        return { signal: `sequence(${result})` };
    }
    static makeFromTransform(parent, imputeTransform) {
        return new ImputeNode(parent, imputeTransform);
    }
    static makeFromEncoding(parent, model) {
        const encoding = model.encoding;
        const xDef = encoding.x;
        const yDef = encoding.y;
        if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_0__["isFieldDef"])(xDef) && Object(_channeldef__WEBPACK_IMPORTED_MODULE_0__["isFieldDef"])(yDef)) {
            const imputedChannel = xDef.impute ? xDef : yDef.impute ? yDef : undefined;
            if (imputedChannel === undefined) {
                return undefined;
            }
            const keyChannel = xDef.impute ? yDef : yDef.impute ? xDef : undefined;
            const { method, value, frame, keyvals } = imputedChannel.impute;
            const groupbyFields = Object(_mark_mark__WEBPACK_IMPORTED_MODULE_3__["pathGroupingFields"])(model.mark, encoding);
            return new ImputeNode(parent, Object.assign({ impute: imputedChannel.field, key: keyChannel.field }, (method ? { method } : {}), (value !== undefined ? { value } : {}), (frame ? { frame } : {}), (keyvals !== undefined ? { keyvals } : {}), (groupbyFields.length ? { groupby: groupbyFields } : {})));
        }
        return null;
    }
    hash() {
        return `Impute ${Object(_util__WEBPACK_IMPORTED_MODULE_2__["hash"])(this.transform)}`;
    }
    assemble() {
        const { impute, key, keyvals, method, groupby, value, frame = [null, null] } = this.transform;
        const initialImpute = Object.assign({ type: 'impute', field: impute, key }, (keyvals ? { keyvals: Object(_transform__WEBPACK_IMPORTED_MODULE_1__["isImputeSequence"])(keyvals) ? this.processSequence(keyvals) : keyvals } : {}), { method: 'value' }, (groupby ? { groupby } : {}), { value: null });
        let setImputedField;
        if (method && method !== 'value') {
            const deriveNewField = Object.assign({ type: 'window', as: [`imputed_${impute}_value`], ops: [method], fields: [impute], frame, ignorePeers: false }, (groupby ? { groupby } : {}));
            const replaceOriginal = {
                type: 'formula',
                expr: `datum.${impute} === null ? datum.imputed_${impute}_value : datum.${impute}`,
                as: impute
            };
            setImputedField = [deriveNewField, replaceOriginal];
        }
        else {
            const replaceWithValue = {
                type: 'formula',
                expr: `datum.${impute} === null ? ${value} : datum.${impute}`,
                as: impute
            };
            setImputedField = [replaceWithValue];
        }
        return [initialImpute, ...setImputedField];
    }
}
//# sourceMappingURL=impute.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/data/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/data/index.js ***!
  \****************************************************************/
/*! exports provided: AncestorParse */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AncestorParse", function() { return AncestorParse; });
/* harmony import */ var _split__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../split */ "./node_modules/vega-lite/build/src/compile/split.js");

/**
 * Class to track interesting properties (see https://15721.courses.cs.cmu.edu/spring2016/papers/graefe-ieee1995.pdf)
 * about how fields have been parsed or whether they have been derived in a transform. We use this to not parse the
 * same field again (or differently).
 */
class AncestorParse extends _split__WEBPACK_IMPORTED_MODULE_0__["Split"] {
    constructor(explicit = {}, implicit = {}, parseNothing = false) {
        super(explicit, implicit);
        this.explicit = explicit;
        this.implicit = implicit;
        this.parseNothing = parseNothing;
    }
    clone() {
        const clone = super.clone();
        clone.parseNothing = this.parseNothing;
        return clone;
    }
}
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/data/joinaggregate.js":
/*!************************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/data/joinaggregate.js ***!
  \************************************************************************/
/*! exports provided: JoinAggregateTransformNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "JoinAggregateTransformNode", function() { return JoinAggregateTransformNode; });
/* harmony import */ var _channeldef__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../channeldef */ "./node_modules/vega-lite/build/src/channeldef.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../util */ "./node_modules/vega-lite/build/src/util.js");
/* harmony import */ var _dataflow__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dataflow */ "./node_modules/vega-lite/build/src/compile/data/dataflow.js");




/**
 * A class for the join aggregate transform nodes.
 */
class JoinAggregateTransformNode extends _dataflow__WEBPACK_IMPORTED_MODULE_2__["DataFlowNode"] {
    constructor(parent, transform) {
        super(parent);
        this.transform = transform;
    }
    clone() {
        return new JoinAggregateTransformNode(null, Object(_util__WEBPACK_IMPORTED_MODULE_1__["duplicate"])(this.transform));
    }
    addDimensions(fields) {
        this.transform.groupby = Object(_util__WEBPACK_IMPORTED_MODULE_1__["unique"])(this.transform.groupby.concat(fields), d => d);
    }
    dependentFields() {
        const out = new Set();
        this.transform.groupby.forEach(f => out.add(f));
        this.transform.joinaggregate
            .map(w => w.field)
            .filter(f => f !== undefined)
            .forEach(f => out.add(f));
        return out;
    }
    producedFields() {
        return new Set(this.transform.joinaggregate.map(this.getDefaultName));
    }
    getDefaultName(joinAggregateFieldDef) {
        return joinAggregateFieldDef.as || Object(_channeldef__WEBPACK_IMPORTED_MODULE_0__["vgField"])(joinAggregateFieldDef);
    }
    hash() {
        return `JoinAggregateTransform ${Object(_util__WEBPACK_IMPORTED_MODULE_1__["hash"])(this.transform)}`;
    }
    assemble() {
        const fields = [];
        const ops = [];
        const as = [];
        for (const joinaggregate of this.transform.joinaggregate) {
            ops.push(joinaggregate.op);
            as.push(this.getDefaultName(joinaggregate));
            fields.push(joinaggregate.field === undefined ? null : joinaggregate.field);
        }
        const groupby = this.transform.groupby;
        return Object.assign({ type: 'joinaggregate', as,
            ops,
            fields }, (groupby !== undefined ? { groupby } : {}));
    }
}
//# sourceMappingURL=joinaggregate.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/data/joinaggregatefacet.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/data/joinaggregatefacet.js ***!
  \*****************************************************************************/
/*! exports provided: makeJoinAggregateFromFacet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "makeJoinAggregateFromFacet", function() { return makeJoinAggregateFromFacet; });
/* harmony import */ var _channeldef__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../channeldef */ "./node_modules/vega-lite/build/src/channeldef.js");
/* harmony import */ var _sort__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../sort */ "./node_modules/vega-lite/build/src/sort.js");
/* harmony import */ var _facet__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../facet */ "./node_modules/vega-lite/build/src/compile/facet.js");
/* harmony import */ var _joinaggregate__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./joinaggregate */ "./node_modules/vega-lite/build/src/compile/data/joinaggregate.js");




function makeJoinAggregateFromFacet(parent, facet) {
    const { row, column } = facet;
    if (row && column) {
        let newParent = null;
        // only need to make one for crossed facet
        for (const fieldDef of [row, column]) {
            if (Object(_sort__WEBPACK_IMPORTED_MODULE_1__["isSortField"])(fieldDef.sort)) {
                const { field, op = _sort__WEBPACK_IMPORTED_MODULE_1__["DEFAULT_SORT_OP"] } = fieldDef.sort;
                parent = newParent = new _joinaggregate__WEBPACK_IMPORTED_MODULE_3__["JoinAggregateTransformNode"](parent, {
                    joinaggregate: [
                        {
                            op,
                            field,
                            as: Object(_facet__WEBPACK_IMPORTED_MODULE_2__["facetSortFieldName"])(fieldDef, fieldDef.sort, { forAs: true })
                        }
                    ],
                    groupby: [Object(_channeldef__WEBPACK_IMPORTED_MODULE_0__["vgField"])(fieldDef)]
                });
            }
        }
        return newParent;
    }
    return null;
}
//# sourceMappingURL=joinaggregatefacet.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/data/lookup.js":
/*!*****************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/data/lookup.js ***!
  \*****************************************************************/
/*! exports provided: LookupNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LookupNode", function() { return LookupNode; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../log */ "./node_modules/vega-lite/build/src/log/index.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../util */ "./node_modules/vega-lite/build/src/util.js");
/* harmony import */ var _dataflow__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dataflow */ "./node_modules/vega-lite/build/src/compile/data/dataflow.js");
/* harmony import */ var _parse__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./parse */ "./node_modules/vega-lite/build/src/compile/data/parse.js");
/* harmony import */ var _source__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./source */ "./node_modules/vega-lite/build/src/compile/data/source.js");






class LookupNode extends _dataflow__WEBPACK_IMPORTED_MODULE_3__["DataFlowNode"] {
    constructor(parent, transform, secondary) {
        super(parent);
        this.transform = transform;
        this.secondary = secondary;
    }
    clone() {
        return new LookupNode(null, Object(_util__WEBPACK_IMPORTED_MODULE_2__["duplicate"])(this.transform), this.secondary);
    }
    static make(parent, model, transform, counter) {
        const sources = model.component.data.sources;
        let fromSource = Object(_parse__WEBPACK_IMPORTED_MODULE_4__["findSource"])(transform.from.data, sources);
        if (!fromSource) {
            fromSource = new _source__WEBPACK_IMPORTED_MODULE_5__["SourceNode"](transform.from.data);
            sources.push(fromSource);
        }
        const fromOutputName = model.getName(`lookup_${counter}`);
        const fromOutputNode = new _dataflow__WEBPACK_IMPORTED_MODULE_3__["OutputNode"](fromSource, fromOutputName, 'lookup', model.component.data.outputNodeRefCounts);
        model.component.data.outputNodes[fromOutputName] = fromOutputNode;
        return new LookupNode(parent, transform, fromOutputNode.getSource());
    }
    producedFields() {
        return new Set(this.transform.from.fields || (this.transform.as instanceof Array ? this.transform.as : [this.transform.as]));
    }
    hash() {
        return `Lookup ${Object(_util__WEBPACK_IMPORTED_MODULE_2__["hash"])({ transform: this.transform, secondary: this.secondary })}`;
    }
    assemble() {
        let foreign;
        if (this.transform.from.fields) {
            // lookup a few fields and add create a flat output
            foreign = Object.assign({ values: this.transform.from.fields }, (this.transform.as ? { as: this.transform.as instanceof Array ? this.transform.as : [this.transform.as] } : {}));
        }
        else {
            // lookup full record and nest it
            let asName = this.transform.as;
            if (!Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isString"])(asName)) {
                _log__WEBPACK_IMPORTED_MODULE_1__["warn"](_log__WEBPACK_IMPORTED_MODULE_1__["message"].NO_FIELDS_NEEDS_AS);
                asName = '_lookup';
            }
            foreign = {
                as: [asName]
            };
        }
        return Object.assign({ type: 'lookup', from: this.secondary, key: this.transform.from.key, fields: [this.transform.lookup] }, foreign, (this.transform.default ? { default: this.transform.default } : {}));
    }
}
//# sourceMappingURL=lookup.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/data/optimize.js":
/*!*******************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/data/optimize.js ***!
  \*******************************************************************/
/*! exports provided: FACET_SCALE_PREFIX, MAX_OPTIMIZATION_RUNS, isTrue, optimizeDataflow */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FACET_SCALE_PREFIX", function() { return FACET_SCALE_PREFIX; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAX_OPTIMIZATION_RUNS", function() { return MAX_OPTIMIZATION_RUNS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isTrue", function() { return isTrue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "optimizeDataflow", function() { return optimizeDataflow; });
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../log */ "./node_modules/vega-lite/build/src/log/index.js");
/* harmony import */ var _debug__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./debug */ "./node_modules/vega-lite/build/src/compile/data/debug.js");
/* harmony import */ var _optimizer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./optimizer */ "./node_modules/vega-lite/build/src/compile/data/optimizer.js");
/* harmony import */ var _optimizers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./optimizers */ "./node_modules/vega-lite/build/src/compile/data/optimizers.js");




const FACET_SCALE_PREFIX = 'scale_';
const MAX_OPTIMIZATION_RUNS = 5;
/**
 * Return all leaf nodes.
 */
function getLeaves(roots) {
    const leaves = [];
    function append(node) {
        if (node.numChildren() === 0) {
            leaves.push(node);
        }
        else {
            node.children.forEach(append);
        }
    }
    roots.forEach(append);
    return leaves;
}
function isTrue(x) {
    return x;
}
/**
 * Run the specified optimizer on the provided nodes.
 *
 * @param optimizer The optimizer instance to run.
 * @param nodes A set of nodes to optimize.
 * @param flag Flag that will be or'ed with return valued from optimization calls to the nodes.
 */
function runOptimizer(optimizer, nodes, flag) {
    const flags = nodes.map(node => {
        if (optimizer instanceof _optimizer__WEBPACK_IMPORTED_MODULE_2__["BottomUpOptimizer"]) {
            const runFlags = optimizer.optimizeNextFromLeaves(node);
            optimizer.reset();
            return runFlags;
        }
        else {
            return optimizer.run(node);
        }
    });
    return flags.some(isTrue) || flag;
}
function optimizationDataflowHelper(dataComponent, model) {
    let roots = dataComponent.sources;
    let mutatedFlag = false;
    // mutatedFlag should always be on the right side otherwise short circuit logic might cause the mutating method to not execute
    mutatedFlag = runOptimizer(new _optimizers__WEBPACK_IMPORTED_MODULE_3__["RemoveUnnecessaryNodes"](), roots, mutatedFlag);
    // remove source nodes that don't have any children because they also don't have output nodes
    roots = roots.filter(r => r.numChildren() > 0);
    mutatedFlag = runOptimizer(new _optimizers__WEBPACK_IMPORTED_MODULE_3__["RemoveUnusedSubtrees"](), getLeaves(roots), mutatedFlag);
    roots = roots.filter(r => r.numChildren() > 0);
    mutatedFlag = runOptimizer(new _optimizers__WEBPACK_IMPORTED_MODULE_3__["MoveParseUp"](), getLeaves(roots), mutatedFlag);
    mutatedFlag = runOptimizer(new _optimizers__WEBPACK_IMPORTED_MODULE_3__["MergeBins"](model), getLeaves(roots), mutatedFlag);
    mutatedFlag = runOptimizer(new _optimizers__WEBPACK_IMPORTED_MODULE_3__["RemoveDuplicateTimeUnits"](), getLeaves(roots), mutatedFlag);
    mutatedFlag = runOptimizer(new _optimizers__WEBPACK_IMPORTED_MODULE_3__["MergeParse"](), getLeaves(roots), mutatedFlag);
    mutatedFlag = runOptimizer(new _optimizers__WEBPACK_IMPORTED_MODULE_3__["MergeAggregateNodes"](), getLeaves(roots), mutatedFlag);
    mutatedFlag = runOptimizer(new _optimizers__WEBPACK_IMPORTED_MODULE_3__["MergeIdenticalNodes"](), roots, mutatedFlag);
    dataComponent.sources = roots;
    return mutatedFlag;
}
/**
 * Optimizes the dataflow of the passed in data component.
 */
function optimizeDataflow(data, model) {
    // check before optimizations
    Object(_debug__WEBPACK_IMPORTED_MODULE_1__["checkLinks"])(data.sources);
    let firstPassCounter = 0;
    let secondPassCounter = 0;
    for (let i = 0; i < MAX_OPTIMIZATION_RUNS; i++) {
        if (!optimizationDataflowHelper(data, model)) {
            break;
        }
        firstPassCounter++;
    }
    // move facets down and make a copy of the subtree so that we can have scales at the top level
    data.sources.map(_optimizers__WEBPACK_IMPORTED_MODULE_3__["moveFacetDown"]);
    for (let i = 0; i < MAX_OPTIMIZATION_RUNS; i++) {
        if (!optimizationDataflowHelper(data, model)) {
            break;
        }
        secondPassCounter++;
    }
    // check after optimizations
    Object(_debug__WEBPACK_IMPORTED_MODULE_1__["checkLinks"])(data.sources);
    if (Math.max(firstPassCounter, secondPassCounter) === MAX_OPTIMIZATION_RUNS) {
        _log__WEBPACK_IMPORTED_MODULE_0__["warn"](`Maximum optimization runs(${MAX_OPTIMIZATION_RUNS}) reached.`);
    }
}
//# sourceMappingURL=optimize.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/data/optimizer.js":
/*!********************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/data/optimizer.js ***!
  \********************************************************************/
/*! exports provided: BottomUpOptimizer, TopDownOptimizer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BottomUpOptimizer", function() { return BottomUpOptimizer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TopDownOptimizer", function() { return TopDownOptimizer; });
/* harmony import */ var _source__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./source */ "./node_modules/vega-lite/build/src/compile/data/source.js");

/**
 * Abstract base class for BottomUpOptimizer and TopDownOptimizer.
 * Contains only mutation handling logic. Subclasses need to implement iteration logic.
 */
class OptimizerBase {
    constructor() {
        this._mutated = false;
    }
    // Once true, _mutated is never set to false
    setMutated() {
        this._mutated = true;
    }
    get mutatedFlag() {
        return this._mutated;
    }
}
/**
 * Starts from a node and runs the optimization function(the "run" method) upwards to the root,
 * depending on the continueFlag and mutatedFlag values returned by the optimization function.
 */
class BottomUpOptimizer extends OptimizerBase {
    constructor() {
        super();
        this._continue = false;
    }
    setContinue() {
        this._continue = true;
    }
    get continueFlag() {
        return this._continue;
    }
    get flags() {
        return { continueFlag: this.continueFlag, mutatedFlag: this.mutatedFlag };
    }
    set flags({ continueFlag, mutatedFlag }) {
        if (continueFlag) {
            this.setContinue();
        }
        if (mutatedFlag) {
            this.setMutated();
        }
    }
    /**
     * Reset the state of the optimizer after it has completed a run from the bottom of the tree to the top.
     */
    reset() {
        // do nothing
    }
    optimizeNextFromLeaves(node) {
        if (node instanceof _source__WEBPACK_IMPORTED_MODULE_0__["SourceNode"]) {
            return false;
        }
        const next = node.parent;
        const { continueFlag } = this.run(node);
        if (continueFlag) {
            this.optimizeNextFromLeaves(next);
        }
        return this.mutatedFlag;
    }
}
/**
 * The optimizer function( the "run" method), is invoked on the given node and then continues recursively.
 */
class TopDownOptimizer extends OptimizerBase {
}
//# sourceMappingURL=optimizer.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/data/optimizers.js":
/*!*********************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/data/optimizers.js ***!
  \*********************************************************************/
/*! exports provided: iterateFromLeaves, MoveParseUp, MergeIdenticalNodes, RemoveUnusedSubtrees, RemoveDuplicateTimeUnits, moveFacetDown, RemoveUnnecessaryNodes, MergeParse, MergeAggregateNodes, MergeBins */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "iterateFromLeaves", function() { return iterateFromLeaves; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MoveParseUp", function() { return MoveParseUp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MergeIdenticalNodes", function() { return MergeIdenticalNodes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RemoveUnusedSubtrees", function() { return RemoveUnusedSubtrees; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RemoveDuplicateTimeUnits", function() { return RemoveDuplicateTimeUnits; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moveFacetDown", function() { return moveFacetDown; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RemoveUnnecessaryNodes", function() { return RemoveUnnecessaryNodes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MergeParse", function() { return MergeParse; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MergeAggregateNodes", function() { return MergeAggregateNodes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MergeBins", function() { return MergeBins; });
/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../data */ "./node_modules/vega-lite/build/src/data.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../util */ "./node_modules/vega-lite/build/src/util.js");
/* harmony import */ var _aggregate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./aggregate */ "./node_modules/vega-lite/build/src/compile/data/aggregate.js");
/* harmony import */ var _bin__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./bin */ "./node_modules/vega-lite/build/src/compile/data/bin.js");
/* harmony import */ var _dataflow__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dataflow */ "./node_modules/vega-lite/build/src/compile/data/dataflow.js");
/* harmony import */ var _facet__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./facet */ "./node_modules/vega-lite/build/src/compile/data/facet.js");
/* harmony import */ var _filter__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./filter */ "./node_modules/vega-lite/build/src/compile/data/filter.js");
/* harmony import */ var _formatparse__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./formatparse */ "./node_modules/vega-lite/build/src/compile/data/formatparse.js");
/* harmony import */ var _joinaggregate__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./joinaggregate */ "./node_modules/vega-lite/build/src/compile/data/joinaggregate.js");
/* harmony import */ var _optimize__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./optimize */ "./node_modules/vega-lite/build/src/compile/data/optimize.js");
/* harmony import */ var _optimizer__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./optimizer */ "./node_modules/vega-lite/build/src/compile/data/optimizer.js");
/* harmony import */ var _source__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./source */ "./node_modules/vega-lite/build/src/compile/data/source.js");
/* harmony import */ var _stack__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./stack */ "./node_modules/vega-lite/build/src/compile/data/stack.js");
/* harmony import */ var _timeunit__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./timeunit */ "./node_modules/vega-lite/build/src/compile/data/timeunit.js");
/* harmony import */ var _window__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./window */ "./node_modules/vega-lite/build/src/compile/data/window.js");















/**
 * Start optimization path at the leaves. Useful for merging up or removing things.
 *
 * If the callback returns true, the recursion continues.
 */
function iterateFromLeaves(f) {
    function optimizeNextFromLeaves(node) {
        if (node instanceof _source__WEBPACK_IMPORTED_MODULE_11__["SourceNode"]) {
            return false;
        }
        const next = node.parent;
        const { continueFlag, mutatedFlag } = f(node);
        let childFlag = false;
        if (continueFlag) {
            childFlag = optimizeNextFromLeaves(next);
        }
        return mutatedFlag || childFlag;
    }
    return optimizeNextFromLeaves;
}
/**
 * Move parse nodes up to forks.
 */
class MoveParseUp extends _optimizer__WEBPACK_IMPORTED_MODULE_10__["BottomUpOptimizer"] {
    run(node) {
        const parent = node.parent;
        // move parse up by merging or swapping
        if (node instanceof _formatparse__WEBPACK_IMPORTED_MODULE_7__["ParseNode"]) {
            if (parent instanceof _source__WEBPACK_IMPORTED_MODULE_11__["SourceNode"]) {
                return this.flags;
            }
            if (parent.numChildren() > 1) {
                // don't move parse further up but continue with parent.
                this.setContinue();
                return this.flags;
            }
            if (parent instanceof _formatparse__WEBPACK_IMPORTED_MODULE_7__["ParseNode"]) {
                this.setMutated();
                parent.merge(node);
            }
            else {
                // don't swap with nodes that produce something that the parse node depends on (e.g. lookup)
                if (Object(_util__WEBPACK_IMPORTED_MODULE_1__["fieldIntersection"])(parent.producedFields(), node.dependentFields())) {
                    this.setContinue();
                    return this.flags;
                }
                this.setMutated();
                node.swapWithParent();
            }
        }
        this.setContinue();
        return this.flags;
    }
}
/**
 * Merge identical nodes at forks by comparing hashes.
 *
 * Does not need to iterate from leaves so we implement this with recursion as it's a bit simpler.
 */
class MergeIdenticalNodes extends _optimizer__WEBPACK_IMPORTED_MODULE_10__["TopDownOptimizer"] {
    mergeNodes(parent, nodes) {
        const mergedNode = nodes.shift();
        for (const node of nodes) {
            parent.removeChild(node);
            node.parent = mergedNode;
            node.remove();
        }
    }
    run(node) {
        const hashes = node.children.map(x => x.hash());
        const buckets = {};
        for (let i = 0; i < hashes.length; i++) {
            if (buckets[hashes[i]] === undefined) {
                buckets[hashes[i]] = [node.children[i]];
            }
            else {
                buckets[hashes[i]].push(node.children[i]);
            }
        }
        for (const k of Object(_util__WEBPACK_IMPORTED_MODULE_1__["keys"])(buckets)) {
            if (buckets[k].length > 1) {
                this.setMutated();
                this.mergeNodes(node, buckets[k]);
            }
        }
        for (const child of node.children) {
            this.run(child);
        }
        return this.mutatedFlag;
    }
}
/**
 * Repeatedly remove leaf nodes that are not output or facet nodes.
 * The reason is that we don't need subtrees that don't have any output nodes.
 * Facet nodes are needed for the row or column domains.
 */
class RemoveUnusedSubtrees extends _optimizer__WEBPACK_IMPORTED_MODULE_10__["BottomUpOptimizer"] {
    run(node) {
        if (node instanceof _dataflow__WEBPACK_IMPORTED_MODULE_4__["OutputNode"] || node.numChildren() > 0 || node instanceof _facet__WEBPACK_IMPORTED_MODULE_5__["FacetNode"]) {
            // no need to continue with parent because it is output node or will have children (there was a fork)
            return this.flags;
        }
        else {
            this.setMutated();
            node.remove();
        }
        return this.flags;
    }
}
/**
 * Removes duplicate time unit nodes (as determined by the name of the
 * output field) that may be generated due to selections projected over
 * time units.
 */
class RemoveDuplicateTimeUnits extends _optimizer__WEBPACK_IMPORTED_MODULE_10__["BottomUpOptimizer"] {
    constructor() {
        super(...arguments);
        this.fields = new Set();
    }
    run(node) {
        this.setContinue();
        if (node instanceof _timeunit__WEBPACK_IMPORTED_MODULE_13__["TimeUnitNode"]) {
            const pfields = node.producedFields();
            if (Object(_util__WEBPACK_IMPORTED_MODULE_1__["hasIntersection"])(pfields, this.fields)) {
                this.setMutated();
                node.remove();
            }
            else {
                this.fields = new Set([...this.fields, ...pfields]);
            }
        }
        return this.flags;
    }
    reset() {
        this.fields.clear();
    }
}
/**
 * Clones the subtree and ignores output nodes except for the leaves, which are renamed.
 */
function cloneSubtree(facet) {
    function clone(node) {
        if (!(node instanceof _facet__WEBPACK_IMPORTED_MODULE_5__["FacetNode"])) {
            const copy = node.clone();
            if (copy instanceof _dataflow__WEBPACK_IMPORTED_MODULE_4__["OutputNode"]) {
                const newName = _optimize__WEBPACK_IMPORTED_MODULE_9__["FACET_SCALE_PREFIX"] + copy.getSource();
                copy.setSource(newName);
                facet.model.component.data.outputNodes[newName] = copy;
            }
            else if (copy instanceof _aggregate__WEBPACK_IMPORTED_MODULE_2__["AggregateNode"] ||
                copy instanceof _stack__WEBPACK_IMPORTED_MODULE_12__["StackNode"] ||
                copy instanceof _window__WEBPACK_IMPORTED_MODULE_14__["WindowTransformNode"] ||
                copy instanceof _joinaggregate__WEBPACK_IMPORTED_MODULE_8__["JoinAggregateTransformNode"]) {
                copy.addDimensions(facet.fields);
            }
            Object(_util__WEBPACK_IMPORTED_MODULE_1__["flatten"])(node.children.map(clone)).forEach((n) => (n.parent = copy));
            return [copy];
        }
        return Object(_util__WEBPACK_IMPORTED_MODULE_1__["flatten"])(node.children.map(clone));
    }
    return clone;
}
/**
 * Move facet nodes down to the next fork or output node. Also pull the main output with the facet node.
 * After moving down the facet node, make a copy of the subtree and make it a child of the main output.
 */
function moveFacetDown(node) {
    if (node instanceof _facet__WEBPACK_IMPORTED_MODULE_5__["FacetNode"]) {
        if (node.numChildren() === 1 && !(node.children[0] instanceof _dataflow__WEBPACK_IMPORTED_MODULE_4__["OutputNode"])) {
            // move down until we hit a fork or output node
            const child = node.children[0];
            if (child instanceof _aggregate__WEBPACK_IMPORTED_MODULE_2__["AggregateNode"] ||
                child instanceof _stack__WEBPACK_IMPORTED_MODULE_12__["StackNode"] ||
                child instanceof _window__WEBPACK_IMPORTED_MODULE_14__["WindowTransformNode"] ||
                child instanceof _joinaggregate__WEBPACK_IMPORTED_MODULE_8__["JoinAggregateTransformNode"]) {
                child.addDimensions(node.fields);
            }
            child.swapWithParent();
            moveFacetDown(node);
        }
        else {
            // move main to facet
            const facetMain = node.model.component.data.main;
            moveMainDownToFacet(facetMain);
            // replicate the subtree and place it before the facet's main node
            const cloner = cloneSubtree(node);
            const copy = Object(_util__WEBPACK_IMPORTED_MODULE_1__["flatten"])(node.children.map(cloner));
            for (const c of copy) {
                c.parent = facetMain;
            }
        }
    }
    else {
        node.children.map(moveFacetDown);
    }
}
function moveMainDownToFacet(node) {
    if (node instanceof _dataflow__WEBPACK_IMPORTED_MODULE_4__["OutputNode"] && node.type === _data__WEBPACK_IMPORTED_MODULE_0__["MAIN"]) {
        if (node.numChildren() === 1) {
            const child = node.children[0];
            if (!(child instanceof _facet__WEBPACK_IMPORTED_MODULE_5__["FacetNode"])) {
                child.swapWithParent();
                moveMainDownToFacet(node);
            }
        }
    }
}
/**
 * Remove nodes that are not required starting from a root.
 */
class RemoveUnnecessaryNodes extends _optimizer__WEBPACK_IMPORTED_MODULE_10__["TopDownOptimizer"] {
    run(node) {
        // remove output nodes that are not required
        if (node instanceof _dataflow__WEBPACK_IMPORTED_MODULE_4__["OutputNode"] && !node.isRequired()) {
            this.setMutated();
            node.remove();
        }
        for (const child of node.children) {
            this.run(child);
        }
        return this.mutatedFlag;
    }
}
/**
 * Inserts an Intermediate ParseNode containing all non-conflicting Parse fields and removes the empty ParseNodes
 */
class MergeParse extends _optimizer__WEBPACK_IMPORTED_MODULE_10__["BottomUpOptimizer"] {
    run(node) {
        const parent = node.parent;
        const parseChildren = parent.children.filter((x) => x instanceof _formatparse__WEBPACK_IMPORTED_MODULE_7__["ParseNode"]);
        if (parseChildren.length > 1) {
            const commonParse = {};
            for (const parseNode of parseChildren) {
                const parse = parseNode.parse;
                for (const k of Object(_util__WEBPACK_IMPORTED_MODULE_1__["keys"])(parse)) {
                    if (commonParse[k] === undefined) {
                        commonParse[k] = parse[k];
                    }
                    else if (commonParse[k] !== parse[k]) {
                        delete commonParse[k];
                    }
                }
            }
            if (Object(_util__WEBPACK_IMPORTED_MODULE_1__["keys"])(commonParse).length !== 0) {
                this.setMutated();
                const mergedParseNode = new _formatparse__WEBPACK_IMPORTED_MODULE_7__["ParseNode"](parent, commonParse);
                for (const parseNode of parseChildren) {
                    for (const key of Object(_util__WEBPACK_IMPORTED_MODULE_1__["keys"])(commonParse)) {
                        delete parseNode.parse[key];
                    }
                    parent.removeChild(parseNode);
                    parseNode.parent = mergedParseNode;
                    if (Object(_util__WEBPACK_IMPORTED_MODULE_1__["keys"])(parseNode.parse).length === 0) {
                        parseNode.remove();
                    }
                }
            }
        }
        this.setContinue();
        return this.flags;
    }
}
class MergeAggregateNodes extends _optimizer__WEBPACK_IMPORTED_MODULE_10__["BottomUpOptimizer"] {
    run(node) {
        const parent = node.parent;
        const aggChildren = parent.children.filter((x) => x instanceof _aggregate__WEBPACK_IMPORTED_MODULE_2__["AggregateNode"]);
        // Object which we'll use to map the fields which an aggregate is grouped by to
        // the set of aggregates with that grouping. This is useful as only aggregates
        // with the same group by can be merged
        const groupedAggregates = {};
        // Build groupedAggregates
        for (const agg of aggChildren) {
            const groupBys = Object(_util__WEBPACK_IMPORTED_MODULE_1__["hash"])(Object(_util__WEBPACK_IMPORTED_MODULE_1__["keys"])(agg.groupBy).sort());
            if (!(groupBys in groupedAggregates)) {
                groupedAggregates[groupBys] = [];
            }
            groupedAggregates[groupBys].push(agg);
        }
        // Merge aggregateNodes with same key in groupedAggregates
        for (const group of Object(_util__WEBPACK_IMPORTED_MODULE_1__["keys"])(groupedAggregates)) {
            const mergeableAggs = groupedAggregates[group];
            if (mergeableAggs.length > 1) {
                const mergedAggs = mergeableAggs.pop();
                for (const agg of mergeableAggs) {
                    if (mergedAggs.merge(agg)) {
                        parent.removeChild(agg);
                        agg.parent = mergedAggs;
                        agg.remove();
                        this.setMutated();
                    }
                }
            }
        }
        this.setContinue();
        return this.flags;
    }
}
/**
 * Merge bin nodes and move bin nodes up through forks but stop at filters and parse as we want them to stay before the bin node.
 */
class MergeBins extends _optimizer__WEBPACK_IMPORTED_MODULE_10__["BottomUpOptimizer"] {
    constructor(model) {
        super();
        this.model = model;
    }
    run(node) {
        const parent = node.parent;
        const moveBinsUp = !(parent instanceof _source__WEBPACK_IMPORTED_MODULE_11__["SourceNode"] || parent instanceof _filter__WEBPACK_IMPORTED_MODULE_6__["FilterNode"] || parent instanceof _formatparse__WEBPACK_IMPORTED_MODULE_7__["ParseNode"]);
        const promotableBins = [];
        const remainingBins = [];
        for (const child of parent.children) {
            if (child instanceof _bin__WEBPACK_IMPORTED_MODULE_3__["BinNode"]) {
                if (moveBinsUp && !Object(_util__WEBPACK_IMPORTED_MODULE_1__["fieldIntersection"])(parent.producedFields(), child.dependentFields())) {
                    promotableBins.push(child);
                }
                else {
                    remainingBins.push(child);
                }
            }
        }
        if (promotableBins.length > 0) {
            const promotedBin = promotableBins.pop();
            for (const bin of promotableBins) {
                promotedBin.merge(bin, this.model.renameSignal.bind(this.model));
            }
            this.setMutated();
            if (parent instanceof _bin__WEBPACK_IMPORTED_MODULE_3__["BinNode"]) {
                parent.merge(promotedBin, this.model.renameSignal.bind(this.model));
            }
            else {
                promotedBin.swapWithParent();
            }
        }
        if (remainingBins.length > 1) {
            const remainingBin = remainingBins.pop();
            for (const bin of remainingBins) {
                remainingBin.merge(bin, this.model.renameSignal.bind(this.model));
            }
            this.setMutated();
        }
        this.setContinue();
        return this.flags;
    }
}
//# sourceMappingURL=optimizers.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/data/parse.js":
/*!****************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/data/parse.js ***!
  \****************************************************************/
/*! exports provided: findSource, parseTransformArray, parseData */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "findSource", function() { return findSource; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseTransformArray", function() { return parseTransformArray; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseData", function() { return parseData; });
/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../data */ "./node_modules/vega-lite/build/src/data.js");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../log */ "./node_modules/vega-lite/build/src/log/index.js");
/* harmony import */ var _transform__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../transform */ "./node_modules/vega-lite/build/src/transform.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../util */ "./node_modules/vega-lite/build/src/util.js");
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../model */ "./node_modules/vega-lite/build/src/compile/model.js");
/* harmony import */ var _selection__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../selection */ "./node_modules/vega-lite/build/src/compile/selection/index.js");
/* harmony import */ var _aggregate__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./aggregate */ "./node_modules/vega-lite/build/src/compile/data/aggregate.js");
/* harmony import */ var _bin__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./bin */ "./node_modules/vega-lite/build/src/compile/data/bin.js");
/* harmony import */ var _calculate__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./calculate */ "./node_modules/vega-lite/build/src/compile/data/calculate.js");
/* harmony import */ var _dataflow__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./dataflow */ "./node_modules/vega-lite/build/src/compile/data/dataflow.js");
/* harmony import */ var _facet__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./facet */ "./node_modules/vega-lite/build/src/compile/data/facet.js");
/* harmony import */ var _filter__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./filter */ "./node_modules/vega-lite/build/src/compile/data/filter.js");
/* harmony import */ var _filterinvalid__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./filterinvalid */ "./node_modules/vega-lite/build/src/compile/data/filterinvalid.js");
/* harmony import */ var _flatten__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./flatten */ "./node_modules/vega-lite/build/src/compile/data/flatten.js");
/* harmony import */ var _fold__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./fold */ "./node_modules/vega-lite/build/src/compile/data/fold.js");
/* harmony import */ var _formatparse__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./formatparse */ "./node_modules/vega-lite/build/src/compile/data/formatparse.js");
/* harmony import */ var _geojson__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./geojson */ "./node_modules/vega-lite/build/src/compile/data/geojson.js");
/* harmony import */ var _geopoint__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./geopoint */ "./node_modules/vega-lite/build/src/compile/data/geopoint.js");
/* harmony import */ var _graticule__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./graticule */ "./node_modules/vega-lite/build/src/compile/data/graticule.js");
/* harmony import */ var _identifier__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./identifier */ "./node_modules/vega-lite/build/src/compile/data/identifier.js");
/* harmony import */ var _impute__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./impute */ "./node_modules/vega-lite/build/src/compile/data/impute.js");
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./index */ "./node_modules/vega-lite/build/src/compile/data/index.js");
/* harmony import */ var _joinaggregate__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./joinaggregate */ "./node_modules/vega-lite/build/src/compile/data/joinaggregate.js");
/* harmony import */ var _joinaggregatefacet__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./joinaggregatefacet */ "./node_modules/vega-lite/build/src/compile/data/joinaggregatefacet.js");
/* harmony import */ var _lookup__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./lookup */ "./node_modules/vega-lite/build/src/compile/data/lookup.js");
/* harmony import */ var _sample__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./sample */ "./node_modules/vega-lite/build/src/compile/data/sample.js");
/* harmony import */ var _sequence__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./sequence */ "./node_modules/vega-lite/build/src/compile/data/sequence.js");
/* harmony import */ var _source__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./source */ "./node_modules/vega-lite/build/src/compile/data/source.js");
/* harmony import */ var _stack__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./stack */ "./node_modules/vega-lite/build/src/compile/data/stack.js");
/* harmony import */ var _timeunit__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./timeunit */ "./node_modules/vega-lite/build/src/compile/data/timeunit.js");
/* harmony import */ var _window__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./window */ "./node_modules/vega-lite/build/src/compile/data/window.js");































function findSource(data, sources) {
    for (const other of sources) {
        const otherData = other.data;
        // if both datasets have a name defined, we cannot merge
        if (data.name && other.hasName() && data.name !== other.dataName) {
            continue;
        }
        // feature and mesh are mutually exclusive
        if (data['format'] && data['format'].mesh && otherData.format && otherData.format.feature) {
            continue;
        }
        if (Object(_data__WEBPACK_IMPORTED_MODULE_0__["isInlineData"])(data) && Object(_data__WEBPACK_IMPORTED_MODULE_0__["isInlineData"])(otherData)) {
            if (Object(_util__WEBPACK_IMPORTED_MODULE_3__["deepEqual"])(data.values, otherData.values)) {
                return other;
            }
        }
        else if (Object(_data__WEBPACK_IMPORTED_MODULE_0__["isUrlData"])(data) && Object(_data__WEBPACK_IMPORTED_MODULE_0__["isUrlData"])(otherData)) {
            if (data.url === otherData.url) {
                return other;
            }
        }
        else if (Object(_data__WEBPACK_IMPORTED_MODULE_0__["isNamedData"])(data)) {
            if (data.name === other.dataName) {
                return other;
            }
        }
    }
    return null;
}
function parseRoot(model, sources) {
    if (model.data || !model.parent) {
        // if the model defines a data source or is the root, create a source node
        const existingSource = findSource(model.data, sources);
        if (existingSource) {
            if (!Object(_data__WEBPACK_IMPORTED_MODULE_0__["isGenerator"])(model.data)) {
                existingSource.data.format = Object(_util__WEBPACK_IMPORTED_MODULE_3__["mergeDeep"])({}, model.data.format, existingSource.data.format);
            }
            // if the new source has a name but the existing one does not, we can set it
            if (!existingSource.hasName() && model.data.name) {
                existingSource.dataName = model.data.name;
            }
            return existingSource;
        }
        else {
            const source = new _source__WEBPACK_IMPORTED_MODULE_27__["SourceNode"](model.data);
            sources.push(source);
            return source;
        }
    }
    else {
        // If we don't have a source defined (overriding parent's data), use the parent's facet root or main.
        return model.parent.component.data.facetRoot
            ? model.parent.component.data.facetRoot
            : model.parent.component.data.main;
    }
}
/**
 * Parses a transform array into a chain of connected dataflow nodes.
 */
function parseTransformArray(head, model, ancestorParse) {
    let lookupCounter = 0;
    for (const t of model.transforms) {
        let derivedType = undefined;
        let transformNode;
        if (Object(_transform__WEBPACK_IMPORTED_MODULE_2__["isCalculate"])(t)) {
            transformNode = head = new _calculate__WEBPACK_IMPORTED_MODULE_8__["CalculateNode"](head, t);
            derivedType = 'derived';
        }
        else if (Object(_transform__WEBPACK_IMPORTED_MODULE_2__["isFilter"])(t)) {
            transformNode = head = _formatparse__WEBPACK_IMPORTED_MODULE_15__["ParseNode"].makeImplicitFromFilterTransform(head, t, ancestorParse) || head;
            head = new _filter__WEBPACK_IMPORTED_MODULE_11__["FilterNode"](head, model, t.filter);
        }
        else if (Object(_transform__WEBPACK_IMPORTED_MODULE_2__["isBin"])(t)) {
            transformNode = head = _bin__WEBPACK_IMPORTED_MODULE_7__["BinNode"].makeFromTransform(head, t, model);
            derivedType = 'number';
        }
        else if (Object(_transform__WEBPACK_IMPORTED_MODULE_2__["isTimeUnit"])(t)) {
            transformNode = head = _timeunit__WEBPACK_IMPORTED_MODULE_29__["TimeUnitNode"].makeFromTransform(head, t);
            derivedType = 'date';
            // Create parse node because the input to time unit is always date.
            const parsedAs = ancestorParse.getWithExplicit(t.field);
            if (parsedAs.value === undefined) {
                head = new _formatparse__WEBPACK_IMPORTED_MODULE_15__["ParseNode"](head, { [t.field]: derivedType });
                ancestorParse.set(t.field, derivedType, false);
            }
        }
        else if (Object(_transform__WEBPACK_IMPORTED_MODULE_2__["isAggregate"])(t)) {
            transformNode = head = _aggregate__WEBPACK_IMPORTED_MODULE_6__["AggregateNode"].makeFromTransform(head, t);
            derivedType = 'number';
            if (Object(_selection__WEBPACK_IMPORTED_MODULE_5__["requiresSelectionId"])(model)) {
                head = new _identifier__WEBPACK_IMPORTED_MODULE_19__["IdentifierNode"](head);
            }
        }
        else if (Object(_transform__WEBPACK_IMPORTED_MODULE_2__["isLookup"])(t)) {
            transformNode = head = _lookup__WEBPACK_IMPORTED_MODULE_24__["LookupNode"].make(head, model, t, lookupCounter++);
            derivedType = 'derived';
        }
        else if (Object(_transform__WEBPACK_IMPORTED_MODULE_2__["isWindow"])(t)) {
            transformNode = head = new _window__WEBPACK_IMPORTED_MODULE_30__["WindowTransformNode"](head, t);
            derivedType = 'number';
        }
        else if (Object(_transform__WEBPACK_IMPORTED_MODULE_2__["isJoinAggregate"])(t)) {
            transformNode = head = new _joinaggregate__WEBPACK_IMPORTED_MODULE_22__["JoinAggregateTransformNode"](head, t);
            derivedType = 'number';
        }
        else if (Object(_transform__WEBPACK_IMPORTED_MODULE_2__["isStack"])(t)) {
            transformNode = head = _stack__WEBPACK_IMPORTED_MODULE_28__["StackNode"].makeFromTransform(head, t);
            derivedType = 'derived';
        }
        else if (Object(_transform__WEBPACK_IMPORTED_MODULE_2__["isFold"])(t)) {
            transformNode = head = new _fold__WEBPACK_IMPORTED_MODULE_14__["FoldTransformNode"](head, t);
            derivedType = 'derived';
        }
        else if (Object(_transform__WEBPACK_IMPORTED_MODULE_2__["isFlatten"])(t)) {
            transformNode = head = new _flatten__WEBPACK_IMPORTED_MODULE_13__["FlattenTransformNode"](head, t);
            derivedType = 'derived';
        }
        else if (Object(_transform__WEBPACK_IMPORTED_MODULE_2__["isSample"])(t)) {
            head = new _sample__WEBPACK_IMPORTED_MODULE_25__["SampleTransformNode"](head, t);
        }
        else if (Object(_transform__WEBPACK_IMPORTED_MODULE_2__["isImpute"])(t)) {
            transformNode = head = _impute__WEBPACK_IMPORTED_MODULE_20__["ImputeNode"].makeFromTransform(head, t);
            derivedType = 'derived';
        }
        else {
            _log__WEBPACK_IMPORTED_MODULE_1__["warn"](_log__WEBPACK_IMPORTED_MODULE_1__["message"].invalidTransformIgnored(t));
            continue;
        }
        if (transformNode && derivedType !== undefined) {
            for (const field of transformNode.producedFields()) {
                ancestorParse.set(field, derivedType, false);
            }
        }
    }
    return head;
}
/*
Description of the dataflow (http://asciiflow.com/):
     +--------+
     | Source |
     +---+----+
         |
         v
     FormatParse
     (explicit)
         |
         v
     Transforms
(Filter, Calculate, Binning, TimeUnit, Aggregate, Window, ...)
         |
         v
     FormatParse
     (implicit)
         |
         v
 Binning (in `encoding`)
         |
         v
 Timeunit (in `encoding`)
         |
         v
Formula From Sort Array
         |
         v
      +--+--+
      | Raw |
      +-----+
         |
         v
  Aggregate (in `encoding`)
         |
         v
  Stack (in `encoding`)
         |
         v
  Invalid Filter
         |
         v
   +----------+
   |   Main   |
   +----------+
         |
         v
     +-------+
     | Facet |----> "column", "column-layout", and "row"
     +-------+
         |
         v
  ...Child data...
*/
function parseData(model) {
    let head = parseRoot(model, model.component.data.sources);
    const { outputNodes, outputNodeRefCounts } = model.component.data;
    const ancestorParse = model.parent ? model.parent.component.data.ancestorParse.clone() : new _index__WEBPACK_IMPORTED_MODULE_21__["AncestorParse"]();
    const data = model.data;
    if (Object(_data__WEBPACK_IMPORTED_MODULE_0__["isGenerator"])(data)) {
        // insert generator transform
        if (Object(_data__WEBPACK_IMPORTED_MODULE_0__["isSequenceGenerator"])(data)) {
            head = new _sequence__WEBPACK_IMPORTED_MODULE_26__["SequenceNode"](head, data.sequence);
        }
        else if (Object(_data__WEBPACK_IMPORTED_MODULE_0__["isGraticuleGenerator"])(data)) {
            head = new _graticule__WEBPACK_IMPORTED_MODULE_18__["GraticuleNode"](head, data.graticule);
        }
        // no parsing necessary for generator
        ancestorParse.parseNothing = true;
    }
    else if (data && data.format && data.format.parse === null) {
        // format.parse: null means disable parsing
        ancestorParse.parseNothing = true;
    }
    head = _formatparse__WEBPACK_IMPORTED_MODULE_15__["ParseNode"].makeExplicit(head, model, ancestorParse) || head;
    // Default discrete selections require an identifier transform to
    // uniquely identify data points as the _id field is volatile. Add
    // this transform at the head of our pipeline such that the identifier
    // field is available for all subsequent datasets. Additional identifier
    // transforms will be necessary when new tuples are constructed
    // (e.g., post-aggregation).
    if (Object(_selection__WEBPACK_IMPORTED_MODULE_5__["requiresSelectionId"])(model) &&
        // only add identifier to unit/layer models that do not have layer parents to avoid redundant identifier transforms
        ((Object(_model__WEBPACK_IMPORTED_MODULE_4__["isUnitModel"])(model) || Object(_model__WEBPACK_IMPORTED_MODULE_4__["isLayerModel"])(model)) && (!model.parent || !Object(_model__WEBPACK_IMPORTED_MODULE_4__["isLayerModel"])(model.parent)))) {
        head = new _identifier__WEBPACK_IMPORTED_MODULE_19__["IdentifierNode"](head);
    }
    // HACK: This is equivalent for merging bin extent for union scale.
    // FIXME(https://github.com/vega/vega-lite/issues/2270): Correctly merge extent / bin node for shared bin scale
    const parentIsLayer = model.parent && Object(_model__WEBPACK_IMPORTED_MODULE_4__["isLayerModel"])(model.parent);
    if (Object(_model__WEBPACK_IMPORTED_MODULE_4__["isUnitModel"])(model) || Object(_model__WEBPACK_IMPORTED_MODULE_4__["isFacetModel"])(model)) {
        if (parentIsLayer) {
            head = _bin__WEBPACK_IMPORTED_MODULE_7__["BinNode"].makeFromEncoding(head, model) || head;
        }
    }
    if (model.transforms.length > 0) {
        head = parseTransformArray(head, model, ancestorParse);
    }
    head = _formatparse__WEBPACK_IMPORTED_MODULE_15__["ParseNode"].makeImplicitFromEncoding(head, model, ancestorParse) || head;
    if (Object(_model__WEBPACK_IMPORTED_MODULE_4__["isUnitModel"])(model)) {
        head = _geojson__WEBPACK_IMPORTED_MODULE_16__["GeoJSONNode"].parseAll(head, model);
        head = _geopoint__WEBPACK_IMPORTED_MODULE_17__["GeoPointNode"].parseAll(head, model);
    }
    if (Object(_model__WEBPACK_IMPORTED_MODULE_4__["isUnitModel"])(model) || Object(_model__WEBPACK_IMPORTED_MODULE_4__["isFacetModel"])(model)) {
        if (!parentIsLayer) {
            head = _bin__WEBPACK_IMPORTED_MODULE_7__["BinNode"].makeFromEncoding(head, model) || head;
        }
        head = _timeunit__WEBPACK_IMPORTED_MODULE_29__["TimeUnitNode"].makeFromEncoding(head, model) || head;
        head = _calculate__WEBPACK_IMPORTED_MODULE_8__["CalculateNode"].parseAllForSortIndex(head, model);
    }
    // add an output node pre aggregation
    const rawName = model.getName(_data__WEBPACK_IMPORTED_MODULE_0__["RAW"]);
    const raw = new _dataflow__WEBPACK_IMPORTED_MODULE_9__["OutputNode"](head, rawName, _data__WEBPACK_IMPORTED_MODULE_0__["RAW"], outputNodeRefCounts);
    outputNodes[rawName] = raw;
    head = raw;
    if (Object(_model__WEBPACK_IMPORTED_MODULE_4__["isUnitModel"])(model)) {
        const agg = _aggregate__WEBPACK_IMPORTED_MODULE_6__["AggregateNode"].makeFromEncoding(head, model);
        if (agg) {
            head = agg;
            if (Object(_selection__WEBPACK_IMPORTED_MODULE_5__["requiresSelectionId"])(model)) {
                head = new _identifier__WEBPACK_IMPORTED_MODULE_19__["IdentifierNode"](head);
            }
        }
        head = _impute__WEBPACK_IMPORTED_MODULE_20__["ImputeNode"].makeFromEncoding(head, model) || head;
        head = _stack__WEBPACK_IMPORTED_MODULE_28__["StackNode"].makeFromEncoding(head, model) || head;
    }
    if (Object(_model__WEBPACK_IMPORTED_MODULE_4__["isUnitModel"])(model)) {
        head = _filterinvalid__WEBPACK_IMPORTED_MODULE_12__["FilterInvalidNode"].make(head, model) || head;
    }
    // output node for marks
    const mainName = model.getName(_data__WEBPACK_IMPORTED_MODULE_0__["MAIN"]);
    const main = new _dataflow__WEBPACK_IMPORTED_MODULE_9__["OutputNode"](head, mainName, _data__WEBPACK_IMPORTED_MODULE_0__["MAIN"], outputNodeRefCounts);
    outputNodes[mainName] = main;
    head = main;
    // add facet marker
    let facetRoot = null;
    if (Object(_model__WEBPACK_IMPORTED_MODULE_4__["isFacetModel"])(model)) {
        const facetName = model.getName('facet');
        // Derive new sort index field for facet's sort array
        head = _calculate__WEBPACK_IMPORTED_MODULE_8__["CalculateNode"].parseAllForSortIndex(head, model);
        // Derive new aggregate for facet's sort field
        // augment data source with new fields for crossed facet
        head = Object(_joinaggregatefacet__WEBPACK_IMPORTED_MODULE_23__["makeJoinAggregateFromFacet"])(head, model.facet) || head;
        facetRoot = new _facet__WEBPACK_IMPORTED_MODULE_10__["FacetNode"](head, model, facetName, main.getSource());
        outputNodes[facetName] = facetRoot;
        head = facetRoot;
    }
    return Object.assign({}, model.component.data, { outputNodes,
        outputNodeRefCounts,
        raw,
        main,
        facetRoot,
        ancestorParse });
}
//# sourceMappingURL=parse.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/data/sample.js":
/*!*****************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/data/sample.js ***!
  \*****************************************************************/
/*! exports provided: SampleTransformNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SampleTransformNode", function() { return SampleTransformNode; });
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../util */ "./node_modules/vega-lite/build/src/util.js");
/* harmony import */ var _dataflow__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dataflow */ "./node_modules/vega-lite/build/src/compile/data/dataflow.js");


/**
 * A class for the sample transform nodes
 */
class SampleTransformNode extends _dataflow__WEBPACK_IMPORTED_MODULE_1__["DataFlowNode"] {
    constructor(parent, transform) {
        super(parent);
        this.transform = transform;
    }
    clone() {
        return new SampleTransformNode(null, Object(_util__WEBPACK_IMPORTED_MODULE_0__["duplicate"])(this.transform));
    }
    hash() {
        return `SampleTransform ${Object(_util__WEBPACK_IMPORTED_MODULE_0__["hash"])(this.transform)}`;
    }
    assemble() {
        return {
            type: 'sample',
            size: this.transform.sample
        };
    }
}
//# sourceMappingURL=sample.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/data/sequence.js":
/*!*******************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/data/sequence.js ***!
  \*******************************************************************/
/*! exports provided: SequenceNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SequenceNode", function() { return SequenceNode; });
/* harmony import */ var _dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dataflow */ "./node_modules/vega-lite/build/src/compile/data/dataflow.js");

class SequenceNode extends _dataflow__WEBPACK_IMPORTED_MODULE_0__["DataFlowNode"] {
    constructor(parent, params) {
        super(parent);
        this.params = params;
    }
    clone() {
        return new SequenceNode(null, this.params);
    }
    assemble() {
        return Object.assign({ type: 'sequence' }, this.params);
    }
}
//# sourceMappingURL=sequence.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/data/source.js":
/*!*****************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/data/source.js ***!
  \*****************************************************************/
/*! exports provided: SourceNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SourceNode", function() { return SourceNode; });
/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../data */ "./node_modules/vega-lite/build/src/data.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../util */ "./node_modules/vega-lite/build/src/util.js");
/* harmony import */ var _dataflow__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dataflow */ "./node_modules/vega-lite/build/src/compile/data/dataflow.js");



class SourceNode extends _dataflow__WEBPACK_IMPORTED_MODULE_2__["DataFlowNode"] {
    constructor(data) {
        super(null); // source cannot have parent
        data = data || { name: 'source' };
        let format;
        if (!Object(_data__WEBPACK_IMPORTED_MODULE_0__["isGenerator"])(data)) {
            format = data.format ? Object.assign({}, Object(_util__WEBPACK_IMPORTED_MODULE_1__["omit"])(data.format, ['parse'])) : {};
        }
        if (Object(_data__WEBPACK_IMPORTED_MODULE_0__["isInlineData"])(data)) {
            this._data = { values: data.values };
        }
        else if (Object(_data__WEBPACK_IMPORTED_MODULE_0__["isUrlData"])(data)) {
            this._data = { url: data.url };
            if (!format.type) {
                // Extract extension from URL using snippet from
                // http://stackoverflow.com/questions/680929/how-to-extract-extension-from-filename-string-in-javascript
                let defaultExtension = /(?:\.([^.]+))?$/.exec(data.url)[1];
                if (!Object(_util__WEBPACK_IMPORTED_MODULE_1__["contains"])(['json', 'csv', 'tsv', 'dsv', 'topojson'], defaultExtension)) {
                    defaultExtension = 'json';
                }
                // defaultExtension has type string but we ensure that it is DataFormatType above
                format.type = defaultExtension;
            }
        }
        else if (Object(_data__WEBPACK_IMPORTED_MODULE_0__["isSphereGenerator"])(data)) {
            // hardwire GeoJSON sphere data into output specification
            this._data = { values: [{ type: 'Sphere' }] };
        }
        else if (Object(_data__WEBPACK_IMPORTED_MODULE_0__["isNamedData"])(data) || Object(_data__WEBPACK_IMPORTED_MODULE_0__["isGenerator"])(data)) {
            this._data = {};
        }
        // set flag to check if generator
        this._generator = Object(_data__WEBPACK_IMPORTED_MODULE_0__["isGenerator"])(data);
        // any dataset can be named
        if (data.name) {
            this._name = data.name;
        }
        if (format && Object(_util__WEBPACK_IMPORTED_MODULE_1__["keys"])(format).length > 0) {
            this._data.format = format;
        }
    }
    get data() {
        return this._data;
    }
    hasName() {
        return !!this._name;
    }
    get isGenerator() {
        return this._generator;
    }
    get dataName() {
        return this._name;
    }
    set dataName(name) {
        this._name = name;
    }
    set parent(parent) {
        throw new Error('Source nodes have to be roots.');
    }
    remove() {
        throw new Error('Source nodes are roots and cannot be removed.');
    }
    hash() {
        throw new Error('Cannot hash sources');
    }
    assemble() {
        return Object.assign({ name: this._name }, this._data, { transform: [] });
    }
}
//# sourceMappingURL=source.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/data/stack.js":
/*!****************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/data/stack.js ***!
  \****************************************************************/
/*! exports provided: StackNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StackNode", function() { return StackNode; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var _channeldef__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../channeldef */ "./node_modules/vega-lite/build/src/channeldef.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../util */ "./node_modules/vega-lite/build/src/util.js");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common */ "./node_modules/vega-lite/build/src/compile/common.js");
/* harmony import */ var _dataflow__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dataflow */ "./node_modules/vega-lite/build/src/compile/data/dataflow.js");





function getStackByFields(model) {
    return model.stack.stackBy.reduce((fields, by) => {
        const fieldDef = by.fieldDef;
        const _field = Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["vgField"])(fieldDef);
        if (_field) {
            fields.push(_field);
        }
        return fields;
    }, []);
}
function isValidAsArray(as) {
    return Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isArray"])(as) && as.every(s => Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isString"])(s)) && as.length > 1;
}
class StackNode extends _dataflow__WEBPACK_IMPORTED_MODULE_4__["DataFlowNode"] {
    clone() {
        return new StackNode(null, Object(_util__WEBPACK_IMPORTED_MODULE_2__["duplicate"])(this._stack));
    }
    constructor(parent, stack) {
        super(parent);
        this._stack = stack;
    }
    static makeFromTransform(parent, stackTransform) {
        const { stack, groupby, as, offset = 'zero' } = stackTransform;
        const sortFields = [];
        const sortOrder = [];
        if (stackTransform.sort !== undefined) {
            for (const sortField of stackTransform.sort) {
                sortFields.push(sortField.field);
                sortOrder.push(Object(_util__WEBPACK_IMPORTED_MODULE_2__["getFirstDefined"])(sortField.order, 'ascending'));
            }
        }
        const sort = {
            field: sortFields,
            order: sortOrder
        };
        let normalizedAs;
        if (isValidAsArray(as)) {
            normalizedAs = as;
        }
        else if (Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isString"])(as)) {
            normalizedAs = [as, as + '_end'];
        }
        else {
            normalizedAs = [stackTransform.stack + '_start', stackTransform.stack + '_end'];
        }
        return new StackNode(parent, {
            stackField: stack,
            groupby,
            offset,
            sort,
            facetby: [],
            as: normalizedAs
        });
    }
    static makeFromEncoding(parent, model) {
        const stackProperties = model.stack;
        const { encoding } = model;
        if (!stackProperties) {
            return null;
        }
        let dimensionFieldDef;
        if (stackProperties.groupbyChannel) {
            const cDef = encoding[stackProperties.groupbyChannel];
            dimensionFieldDef = Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["getTypedFieldDef"])(cDef);
        }
        const stackby = getStackByFields(model);
        const orderDef = model.encoding.order;
        let sort;
        if (Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isArray"])(orderDef) || Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["isFieldDef"])(orderDef)) {
            sort = Object(_common__WEBPACK_IMPORTED_MODULE_3__["sortParams"])(orderDef);
        }
        else {
            // default = descending by stackFields
            // FIXME is the default here correct for binned fields?
            sort = stackby.reduce((s, field) => {
                s.field.push(field);
                s.order.push('descending');
                return s;
            }, { field: [], order: [] });
        }
        return new StackNode(parent, {
            dimensionFieldDef,
            stackField: model.vgField(stackProperties.fieldChannel),
            facetby: [],
            stackby,
            sort,
            offset: stackProperties.offset,
            impute: stackProperties.impute,
            as: [
                model.vgField(stackProperties.fieldChannel, { suffix: 'start', forAs: true }),
                model.vgField(stackProperties.fieldChannel, { suffix: 'end', forAs: true })
            ]
        });
    }
    get stack() {
        return this._stack;
    }
    addDimensions(fields) {
        this._stack.facetby.push(...fields);
    }
    dependentFields() {
        const out = new Set();
        out.add(this._stack.stackField);
        this.getGroupbyFields().forEach(out.add);
        this._stack.facetby.forEach(out.add);
        const field = this._stack.sort.field;
        Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isArray"])(field) ? field.forEach(out.add) : out.add(field);
        return out;
    }
    producedFields() {
        return new Set(this._stack.as);
    }
    hash() {
        return `Stack ${Object(_util__WEBPACK_IMPORTED_MODULE_2__["hash"])(this._stack)}`;
    }
    getGroupbyFields() {
        const { dimensionFieldDef, impute, groupby } = this._stack;
        if (dimensionFieldDef) {
            if (dimensionFieldDef.bin) {
                if (impute) {
                    // For binned group by field with impute, we calculate bin_mid
                    // as we cannot impute two fields simultaneously
                    return [Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["vgField"])(dimensionFieldDef, { binSuffix: 'mid' })];
                }
                return [
                    // For binned group by field without impute, we need both bin (start) and bin_end
                    Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["vgField"])(dimensionFieldDef, {}),
                    Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["vgField"])(dimensionFieldDef, { binSuffix: 'end' })
                ];
            }
            return [Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["vgField"])(dimensionFieldDef)];
        }
        return groupby || [];
    }
    assemble() {
        const transform = [];
        const { facetby, dimensionFieldDef, stackField: field, stackby, sort, offset, impute, as } = this._stack;
        // Impute
        if (impute && dimensionFieldDef) {
            if (dimensionFieldDef.bin) {
                // As we can only impute one field at a time, we need to calculate
                // mid point for a binned field
                transform.push({
                    type: 'formula',
                    expr: '(' +
                        Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["vgField"])(dimensionFieldDef, { expr: 'datum' }) +
                        '+' +
                        Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["vgField"])(dimensionFieldDef, { expr: 'datum', binSuffix: 'end' }) +
                        ')/2',
                    as: Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["vgField"])(dimensionFieldDef, { binSuffix: 'mid', forAs: true })
                });
            }
            transform.push({
                type: 'impute',
                field,
                groupby: [...stackby, ...facetby],
                key: Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["vgField"])(dimensionFieldDef, { binSuffix: 'mid' }),
                method: 'value',
                value: 0
            });
        }
        // Stack
        transform.push({
            type: 'stack',
            groupby: [...this.getGroupbyFields(), ...facetby],
            field,
            sort,
            as,
            offset
        });
        return transform;
    }
}
//# sourceMappingURL=stack.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/data/timeunit.js":
/*!*******************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/data/timeunit.js ***!
  \*******************************************************************/
/*! exports provided: TimeUnitNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TimeUnitNode", function() { return TimeUnitNode; });
/* harmony import */ var _channeldef__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../channeldef */ "./node_modules/vega-lite/build/src/channeldef.js");
/* harmony import */ var _timeunit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../timeunit */ "./node_modules/vega-lite/build/src/timeunit.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../util */ "./node_modules/vega-lite/build/src/util.js");
/* harmony import */ var _dataflow__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dataflow */ "./node_modules/vega-lite/build/src/compile/data/dataflow.js");




class TimeUnitNode extends _dataflow__WEBPACK_IMPORTED_MODULE_3__["DataFlowNode"] {
    constructor(parent, formula) {
        super(parent);
        this.formula = formula;
    }
    clone() {
        return new TimeUnitNode(null, Object(_util__WEBPACK_IMPORTED_MODULE_2__["duplicate"])(this.formula));
    }
    static makeFromEncoding(parent, model) {
        const formula = model.reduceFieldDef((timeUnitComponent, fieldDef) => {
            if (fieldDef.timeUnit) {
                const f = Object(_channeldef__WEBPACK_IMPORTED_MODULE_0__["vgField"])(fieldDef, { forAs: true });
                timeUnitComponent[f] = {
                    as: f,
                    timeUnit: fieldDef.timeUnit,
                    field: fieldDef.field
                };
            }
            return timeUnitComponent;
        }, {});
        if (Object(_util__WEBPACK_IMPORTED_MODULE_2__["keys"])(formula).length === 0) {
            return null;
        }
        return new TimeUnitNode(parent, formula);
    }
    static makeFromTransform(parent, t) {
        return new TimeUnitNode(parent, {
            [t.field]: {
                as: t.as,
                timeUnit: t.timeUnit,
                field: t.field
            }
        });
    }
    merge(other) {
        this.formula = Object.assign({}, this.formula, other.formula);
        other.remove();
    }
    producedFields() {
        return new Set(Object(_util__WEBPACK_IMPORTED_MODULE_2__["vals"])(this.formula).map(f => f.as));
    }
    dependentFields() {
        return new Set(Object(_util__WEBPACK_IMPORTED_MODULE_2__["vals"])(this.formula).map(f => f.field));
    }
    hash() {
        return `TimeUnit ${Object(_util__WEBPACK_IMPORTED_MODULE_2__["hash"])(this.formula)}`;
    }
    assemble() {
        return Object(_util__WEBPACK_IMPORTED_MODULE_2__["vals"])(this.formula).map(c => {
            return {
                type: 'formula',
                as: c.as,
                expr: Object(_timeunit__WEBPACK_IMPORTED_MODULE_1__["fieldExpr"])(c.timeUnit, c.field)
            };
        });
    }
}
//# sourceMappingURL=timeunit.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/data/window.js":
/*!*****************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/data/window.js ***!
  \*****************************************************************/
/*! exports provided: WindowTransformNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WindowTransformNode", function() { return WindowTransformNode; });
/* harmony import */ var _aggregate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../aggregate */ "./node_modules/vega-lite/build/src/aggregate.js");
/* harmony import */ var _channeldef__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../channeldef */ "./node_modules/vega-lite/build/src/channeldef.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../util */ "./node_modules/vega-lite/build/src/util.js");
/* harmony import */ var _dataflow__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dataflow */ "./node_modules/vega-lite/build/src/compile/data/dataflow.js");





/**
 * A class for the window transform nodes
 */
class WindowTransformNode extends _dataflow__WEBPACK_IMPORTED_MODULE_3__["DataFlowNode"] {
    constructor(parent, transform) {
        super(parent);
        this.transform = transform;
    }
    clone() {
        return new WindowTransformNode(null, Object(_util__WEBPACK_IMPORTED_MODULE_2__["duplicate"])(this.transform));
    }
    addDimensions(fields) {
        this.transform.groupby = Object(_util__WEBPACK_IMPORTED_MODULE_2__["unique"])(this.transform.groupby.concat(fields), d => d);
    }
    dependentFields() {
        const out = new Set();
        this.transform.groupby.forEach(f => out.add(f));
        this.transform.sort.forEach(m => out.add(m.field));
        this.transform.window
            .map(w => w.field)
            .filter(f => f !== undefined)
            .forEach(f => out.add(f));
        return out;
    }
    producedFields() {
        return new Set(this.transform.window.map(this.getDefaultName));
    }
    getDefaultName(windowFieldDef) {
        return windowFieldDef.as || Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["vgField"])(windowFieldDef);
    }
    hash() {
        return `WindowTransform ${Object(_util__WEBPACK_IMPORTED_MODULE_2__["hash"])(this.transform)}`;
    }
    assemble() {
        const fields = [];
        const ops = [];
        const as = [];
        const params = [];
        for (const window of this.transform.window) {
            ops.push(window.op);
            as.push(this.getDefaultName(window));
            params.push(window.param === undefined ? null : window.param);
            fields.push(window.field === undefined ? null : window.field);
        }
        const frame = this.transform.frame;
        const groupby = this.transform.groupby;
        if (frame && frame[0] === null && frame[1] === null && ops.every(o => Object(_aggregate__WEBPACK_IMPORTED_MODULE_0__["isAggregateOp"])(o))) {
            // when the window does not rely on any particular window ops or frame, switch to a simpler and more efficient joinaggregate
            return Object.assign({ type: 'joinaggregate', as, ops: ops, fields }, (groupby !== undefined ? { groupby } : {}));
        }
        const sortFields = [];
        const sortOrder = [];
        if (this.transform.sort !== undefined) {
            for (const sortField of this.transform.sort) {
                sortFields.push(sortField.field);
                sortOrder.push(sortField.order || 'ascending');
            }
        }
        const sort = {
            field: sortFields,
            order: sortOrder
        };
        const ignorePeers = this.transform.ignorePeers;
        return Object.assign({ type: 'window', params,
            as,
            ops,
            fields,
            sort }, (ignorePeers !== undefined ? { ignorePeers } : {}), (groupby !== undefined ? { groupby } : {}), (frame !== undefined ? { frame } : {}));
    }
}
//# sourceMappingURL=window.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/facet.js":
/*!***********************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/facet.js ***!
  \***********************************************************/
/*! exports provided: facetSortFieldName, FacetModel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "facetSortFieldName", function() { return facetSortFieldName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FacetModel", function() { return FacetModel; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var _bin__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../bin */ "./node_modules/vega-lite/build/src/bin.js");
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../channel */ "./node_modules/vega-lite/build/src/channel.js");
/* harmony import */ var _channeldef__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../channeldef */ "./node_modules/vega-lite/build/src/channeldef.js");
/* harmony import */ var _encoding__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../encoding */ "./node_modules/vega-lite/build/src/encoding.js");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../log */ "./node_modules/vega-lite/build/src/log/index.js");
/* harmony import */ var _scale__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../scale */ "./node_modules/vega-lite/build/src/scale.js");
/* harmony import */ var _sort__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../sort */ "./node_modules/vega-lite/build/src/sort.js");
/* harmony import */ var _spec_facet__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../spec/facet */ "./node_modules/vega-lite/build/src/spec/facet.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../util */ "./node_modules/vega-lite/build/src/util.js");
/* harmony import */ var _vega_schema__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../vega.schema */ "./node_modules/vega-lite/build/src/vega.schema.js");
/* harmony import */ var _buildmodel__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./buildmodel */ "./node_modules/vega-lite/build/src/compile/buildmodel.js");
/* harmony import */ var _data_assemble__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./data/assemble */ "./node_modules/vega-lite/build/src/compile/data/assemble.js");
/* harmony import */ var _data_calculate__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./data/calculate */ "./node_modules/vega-lite/build/src/compile/data/calculate.js");
/* harmony import */ var _data_parse__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./data/parse */ "./node_modules/vega-lite/build/src/compile/data/parse.js");
/* harmony import */ var _header_assemble__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./header/assemble */ "./node_modules/vega-lite/build/src/compile/header/assemble.js");
/* harmony import */ var _header_common__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./header/common */ "./node_modules/vega-lite/build/src/compile/header/common.js");
/* harmony import */ var _header_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./header/component */ "./node_modules/vega-lite/build/src/compile/header/component.js");
/* harmony import */ var _header_parse__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./header/parse */ "./node_modules/vega-lite/build/src/compile/header/parse.js");
/* harmony import */ var _layoutsize_parse__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./layoutsize/parse */ "./node_modules/vega-lite/build/src/compile/layoutsize/parse.js");
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./model */ "./node_modules/vega-lite/build/src/compile/model.js");
/* harmony import */ var _repeater__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./repeater */ "./node_modules/vega-lite/build/src/compile/repeater.js");
/* harmony import */ var _scale_domain__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./scale/domain */ "./node_modules/vega-lite/build/src/compile/scale/domain.js");
/* harmony import */ var _selection_assemble__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./selection/assemble */ "./node_modules/vega-lite/build/src/compile/selection/assemble.js");
























function facetSortFieldName(fieldDef, sort, opt) {
    return Object(_channeldef__WEBPACK_IMPORTED_MODULE_3__["vgField"])(sort, Object.assign({ suffix: `by_${Object(_channeldef__WEBPACK_IMPORTED_MODULE_3__["vgField"])(fieldDef)}` }, (opt || {})));
}
class FacetModel extends _model__WEBPACK_IMPORTED_MODULE_20__["ModelWithField"] {
    constructor(spec, parent, parentGivenName, repeater, config) {
        super(spec, 'facet', parent, parentGivenName, config, repeater, spec.resolve);
        this.child = Object(_buildmodel__WEBPACK_IMPORTED_MODULE_11__["buildModel"])(spec.spec, this, this.getName('child'), undefined, repeater, config, false);
        this.children = [this.child];
        const facet = Object(_repeater__WEBPACK_IMPORTED_MODULE_21__["replaceRepeaterInFacet"])(spec.facet, repeater);
        this.facet = this.initFacet(facet);
    }
    initFacet(facet) {
        // clone to prevent side effect to the original spec
        if (!Object(_spec_facet__WEBPACK_IMPORTED_MODULE_8__["isFacetMapping"])(facet)) {
            return { facet: Object(_channeldef__WEBPACK_IMPORTED_MODULE_3__["normalize"])(facet, 'facet') };
        }
        return Object(_encoding__WEBPACK_IMPORTED_MODULE_4__["reduce"])(facet, (normalizedFacet, fieldDef, channel) => {
            if (!Object(_util__WEBPACK_IMPORTED_MODULE_9__["contains"])([_channel__WEBPACK_IMPORTED_MODULE_2__["ROW"], _channel__WEBPACK_IMPORTED_MODULE_2__["COLUMN"]], channel)) {
                // Drop unsupported channel
                _log__WEBPACK_IMPORTED_MODULE_5__["warn"](_log__WEBPACK_IMPORTED_MODULE_5__["message"].incompatibleChannel(channel, 'facet'));
                return normalizedFacet;
            }
            if (fieldDef.field === undefined) {
                _log__WEBPACK_IMPORTED_MODULE_5__["warn"](_log__WEBPACK_IMPORTED_MODULE_5__["message"].emptyFieldDef(fieldDef, channel));
                return normalizedFacet;
            }
            // Convert type to full, lowercase type, or augment the fieldDef with a default type if missing.
            normalizedFacet[channel] = Object(_channeldef__WEBPACK_IMPORTED_MODULE_3__["normalize"])(fieldDef, channel);
            return normalizedFacet;
        }, {});
    }
    channelHasField(channel) {
        return !!this.facet[channel];
    }
    fieldDef(channel) {
        return this.facet[channel];
    }
    parseData() {
        this.component.data = Object(_data_parse__WEBPACK_IMPORTED_MODULE_14__["parseData"])(this);
        this.child.parseData();
    }
    parseLayoutSize() {
        Object(_layoutsize_parse__WEBPACK_IMPORTED_MODULE_19__["parseChildrenLayoutSize"])(this);
    }
    parseSelections() {
        // As a facet has a single child, the selection components are the same.
        // The child maintains its selections to assemble signals, which remain
        // within its unit.
        this.child.parseSelections();
        this.component.selection = this.child.component.selection;
    }
    parseMarkGroup() {
        this.child.parseMarkGroup();
    }
    parseAxesAndHeaders() {
        this.child.parseAxesAndHeaders();
        Object(_header_parse__WEBPACK_IMPORTED_MODULE_18__["parseFacetHeaders"])(this);
    }
    assembleSelectionTopLevelSignals(signals) {
        return this.child.assembleSelectionTopLevelSignals(signals);
    }
    assembleSignals() {
        this.child.assembleSignals();
        return [];
    }
    assembleSelectionData(data) {
        return this.child.assembleSelectionData(data);
    }
    getHeaderLayoutMixins() {
        const layoutMixins = {};
        for (const channel of _channel__WEBPACK_IMPORTED_MODULE_2__["FACET_CHANNELS"]) {
            for (const headerType of _header_component__WEBPACK_IMPORTED_MODULE_17__["HEADER_TYPES"]) {
                const layoutHeaderComponent = this.component.layoutHeaders[channel];
                const headerComponent = layoutHeaderComponent[headerType];
                const { facetFieldDef } = layoutHeaderComponent;
                if (facetFieldDef) {
                    const titleOrient = Object(_header_common__WEBPACK_IMPORTED_MODULE_16__["getHeaderProperty"])('titleOrient', facetFieldDef, this.config, channel);
                    if (Object(_util__WEBPACK_IMPORTED_MODULE_9__["contains"])(['right', 'bottom'], titleOrient)) {
                        const headerChannel = Object(_header_common__WEBPACK_IMPORTED_MODULE_16__["getHeaderChannel"])(channel, titleOrient);
                        layoutMixins.titleAnchor = layoutMixins.titleAnchor || {};
                        layoutMixins.titleAnchor[headerChannel] = 'end';
                    }
                }
                if (headerComponent && headerComponent[0]) {
                    // set header/footerBand
                    const sizeType = channel === 'row' ? 'height' : 'width';
                    const bandType = headerType === 'header' ? 'headerBand' : 'footerBand';
                    if (channel !== 'facet' && !this.child.component.layoutSize.get(sizeType)) {
                        // If facet child does not have size signal, then apply headerBand
                        layoutMixins[bandType] = layoutMixins[bandType] || {};
                        layoutMixins[bandType][channel] = 0.5;
                    }
                    if (layoutHeaderComponent.title) {
                        layoutMixins.offset = layoutMixins.offset || {};
                        layoutMixins.offset[channel === 'row' ? 'rowTitle' : 'columnTitle'] = 10;
                    }
                }
            }
        }
        return layoutMixins;
    }
    assembleDefaultLayout() {
        const { column, row } = this.facet;
        const columns = column ? this.columnDistinctSignal() : row ? 1 : undefined;
        let align = 'all';
        // Do not align the cells if the scale corresponding to the direction is indepent.
        // We always align when we facet into both row and column.
        if (!row && this.component.resolve.scale.x === 'independent') {
            align = 'none';
        }
        else if (!column && this.component.resolve.scale.y === 'independent') {
            align = 'none';
        }
        return Object.assign({}, this.getHeaderLayoutMixins(), (columns ? { columns } : {}), { bounds: 'full', align });
    }
    assembleLayoutSignals() {
        // FIXME(https://github.com/vega/vega-lite/issues/1193): this can be incorrect if we have independent scales.
        return this.child.assembleLayoutSignals();
    }
    columnDistinctSignal() {
        if (this.parent && this.parent instanceof FacetModel) {
            // For nested facet, we will add columns to group mark instead
            // See discussion in https://github.com/vega/vega/issues/952
            // and https://github.com/vega/vega-view/releases/tag/v1.2.6
            return undefined;
        }
        else {
            // In facetNode.assemble(), the name is always this.getName('column') + '_layout'.
            const facetLayoutDataName = this.getName('column_domain');
            return { signal: `length(data('${facetLayoutDataName}'))` };
        }
    }
    assembleGroup(signals) {
        if (this.parent && this.parent instanceof FacetModel) {
            // Provide number of columns for layout.
            // See discussion in https://github.com/vega/vega/issues/952
            // and https://github.com/vega/vega-view/releases/tag/v1.2.6
            return Object.assign({}, (this.channelHasField('column')
                ? {
                    encode: {
                        update: {
                            // TODO(https://github.com/vega/vega-lite/issues/2759):
                            // Correct the signal for facet of concat of facet_column
                            columns: { field: Object(_channeldef__WEBPACK_IMPORTED_MODULE_3__["vgField"])(this.facet.column, { prefix: 'distinct' }) }
                        }
                    }
                }
                : {}), super.assembleGroup(signals));
        }
        return super.assembleGroup(signals);
    }
    /**
     * Aggregate cardinality for calculating size
     */
    getCardinalityAggregateForChild() {
        const fields = [];
        const ops = [];
        const as = [];
        if (this.child instanceof FacetModel) {
            if (this.child.channelHasField('column')) {
                const field = Object(_channeldef__WEBPACK_IMPORTED_MODULE_3__["vgField"])(this.child.facet.column);
                fields.push(field);
                ops.push('distinct');
                as.push(`distinct_${field}`);
            }
        }
        else {
            for (const channel of ['x', 'y']) {
                const childScaleComponent = this.child.component.scales[channel];
                if (childScaleComponent && !childScaleComponent.merged) {
                    const type = childScaleComponent.get('type');
                    const range = childScaleComponent.get('range');
                    if (Object(_scale__WEBPACK_IMPORTED_MODULE_6__["hasDiscreteDomain"])(type) && Object(_vega_schema__WEBPACK_IMPORTED_MODULE_10__["isVgRangeStep"])(range)) {
                        const domain = Object(_scale_domain__WEBPACK_IMPORTED_MODULE_22__["assembleDomain"])(this.child, channel);
                        const field = Object(_scale_domain__WEBPACK_IMPORTED_MODULE_22__["getFieldFromDomain"])(domain);
                        if (field) {
                            fields.push(field);
                            ops.push('distinct');
                            as.push(`distinct_${field}`);
                        }
                        else {
                            _log__WEBPACK_IMPORTED_MODULE_5__["warn"]('Unknown field for ${channel}.  Cannot calculate view size.');
                        }
                    }
                }
            }
        }
        return { fields, ops, as };
    }
    assembleFacet() {
        const { name, data } = this.component.data.facetRoot;
        const { row, column } = this.facet;
        const { fields, ops, as } = this.getCardinalityAggregateForChild();
        const groupby = [];
        for (const channel of _channel__WEBPACK_IMPORTED_MODULE_2__["FACET_CHANNELS"]) {
            const fieldDef = this.facet[channel];
            if (fieldDef) {
                groupby.push(Object(_channeldef__WEBPACK_IMPORTED_MODULE_3__["vgField"])(fieldDef));
                const { bin, sort } = fieldDef;
                if (Object(_bin__WEBPACK_IMPORTED_MODULE_1__["isBinning"])(bin)) {
                    groupby.push(Object(_channeldef__WEBPACK_IMPORTED_MODULE_3__["vgField"])(fieldDef, { binSuffix: 'end' }));
                }
                if (Object(_sort__WEBPACK_IMPORTED_MODULE_7__["isSortField"])(sort)) {
                    const { field, op = _sort__WEBPACK_IMPORTED_MODULE_7__["DEFAULT_SORT_OP"] } = sort;
                    const outputName = facetSortFieldName(fieldDef, sort);
                    if (row && column) {
                        // For crossed facet, use pre-calculate field as it requires a different groupby
                        // For each calculated field, apply max and assign them to the same name as
                        // all values of the same group should be the same anyway.
                        fields.push(outputName);
                        ops.push('max');
                        as.push(outputName);
                    }
                    else {
                        fields.push(field);
                        ops.push(op);
                        as.push(outputName);
                    }
                }
                else if (Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isArray"])(sort)) {
                    const outputName = Object(_data_calculate__WEBPACK_IMPORTED_MODULE_13__["sortArrayIndexField"])(fieldDef, channel);
                    fields.push(outputName);
                    ops.push('max');
                    as.push(outputName);
                }
            }
        }
        const cross = !!row && !!column;
        return Object.assign({ name,
            data,
            groupby }, (cross || fields.length
            ? {
                aggregate: Object.assign({}, (cross ? { cross } : {}), (fields.length ? { fields, ops, as } : {}))
            }
            : {}));
    }
    facetSortFields(channel) {
        const { facet } = this;
        const fieldDef = facet[channel];
        if (fieldDef) {
            if (Object(_sort__WEBPACK_IMPORTED_MODULE_7__["isSortField"])(fieldDef.sort)) {
                return [facetSortFieldName(fieldDef, fieldDef.sort, { expr: 'datum' })];
            }
            else if (Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isArray"])(fieldDef.sort)) {
                return [Object(_data_calculate__WEBPACK_IMPORTED_MODULE_13__["sortArrayIndexField"])(fieldDef, channel, { expr: 'datum' })];
            }
            return [Object(_channeldef__WEBPACK_IMPORTED_MODULE_3__["vgField"])(fieldDef, { expr: 'datum' })];
        }
        return [];
    }
    facetSortOrder(channel) {
        const { facet } = this;
        const fieldDef = facet[channel];
        if (fieldDef) {
            const { sort } = fieldDef;
            const order = (Object(_sort__WEBPACK_IMPORTED_MODULE_7__["isSortField"])(sort) ? sort.order : !Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isArray"])(sort) && sort) || 'ascending';
            return [order];
        }
        return [];
    }
    assembleLabelTitle() {
        const { facet, config } = this;
        if (facet.facet) {
            // Facet always uses title to display labels
            return Object(_header_assemble__WEBPACK_IMPORTED_MODULE_15__["assembleLabelTitle"])(facet.facet, 'facet', config);
        }
        const ORTHOGONAL_ORIENT = {
            row: ['top', 'bottom'],
            column: ['left', 'right']
        };
        for (const channel of _header_component__WEBPACK_IMPORTED_MODULE_17__["HEADER_CHANNELS"]) {
            if (facet[channel]) {
                const labelOrient = Object(_header_common__WEBPACK_IMPORTED_MODULE_16__["getHeaderProperty"])('labelOrient', facet[channel], config, channel);
                if (Object(_util__WEBPACK_IMPORTED_MODULE_9__["contains"])(ORTHOGONAL_ORIENT[channel], labelOrient)) {
                    // Row/Column with orthogonal labelOrient must use title to display labels
                    return Object(_header_assemble__WEBPACK_IMPORTED_MODULE_15__["assembleLabelTitle"])(facet[channel], channel, config);
                }
            }
        }
        return undefined;
    }
    assembleMarks() {
        const { child } = this;
        // If we facet by two dimensions, we need to add a cross operator to the aggregation
        // so that we create all groups
        const facetRoot = this.component.data.facetRoot;
        const data = Object(_data_assemble__WEBPACK_IMPORTED_MODULE_12__["assembleFacetData"])(facetRoot);
        const encodeEntry = child.assembleGroupEncodeEntry(false);
        const title = this.assembleLabelTitle() || child.assembleTitle();
        const style = child.assembleGroupStyle();
        const markGroup = Object.assign({ name: this.getName('cell'), type: 'group' }, (title ? { title } : {}), (style ? { style } : {}), { from: {
                facet: this.assembleFacet()
            }, 
            // TODO: move this to after data
            sort: {
                field: Object(_util__WEBPACK_IMPORTED_MODULE_9__["flatten"])(_channel__WEBPACK_IMPORTED_MODULE_2__["FACET_CHANNELS"].map(c => this.facetSortFields(c))),
                order: Object(_util__WEBPACK_IMPORTED_MODULE_9__["flatten"])(_channel__WEBPACK_IMPORTED_MODULE_2__["FACET_CHANNELS"].map(c => this.facetSortOrder(c)))
            } }, (data.length > 0 ? { data: data } : {}), (encodeEntry ? { encode: { update: encodeEntry } } : {}), child.assembleGroup(Object(_selection_assemble__WEBPACK_IMPORTED_MODULE_23__["assembleFacetSignals"])(this, [])));
        return [markGroup];
    }
    getMapping() {
        return this.facet;
    }
}
//# sourceMappingURL=facet.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/guide.js":
/*!***********************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/guide.js ***!
  \***********************************************************/
/*! exports provided: guideEncodeEntry */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "guideEncodeEntry", function() { return guideEncodeEntry; });
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ "./node_modules/vega-lite/build/src/util.js");
/* harmony import */ var _mark_mixins__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mark/mixins */ "./node_modules/vega-lite/build/src/compile/mark/mixins.js");


function guideEncodeEntry(encoding, model) {
    return Object(_util__WEBPACK_IMPORTED_MODULE_0__["keys"])(encoding).reduce((encode, channel) => {
        const valueDef = encoding[channel];
        return Object.assign({}, encode, Object(_mark_mixins__WEBPACK_IMPORTED_MODULE_1__["wrapCondition"])(model, valueDef, channel, (x) => ({ value: x.value })));
    }, {});
}
//# sourceMappingURL=guide.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/header/assemble.js":
/*!*********************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/header/assemble.js ***!
  \*********************************************************************/
/*! exports provided: assembleTitleGroup, defaultHeaderGuideAlign, defaultHeaderGuideBaseline, assembleHeaderGroups, assembleLabelTitle, assembleHeaderGroup, getLayoutTitleBand, assembleLayoutTitleBand, assembleHeaderProperties */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "assembleTitleGroup", function() { return assembleTitleGroup; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultHeaderGuideAlign", function() { return defaultHeaderGuideAlign; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultHeaderGuideBaseline", function() { return defaultHeaderGuideBaseline; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "assembleHeaderGroups", function() { return assembleHeaderGroups; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "assembleLabelTitle", function() { return assembleLabelTitle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "assembleHeaderGroup", function() { return assembleHeaderGroup; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getLayoutTitleBand", function() { return getLayoutTitleBand; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "assembleLayoutTitleBand", function() { return assembleLayoutTitleBand; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "assembleHeaderProperties", function() { return assembleHeaderProperties; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../channel */ "./node_modules/vega-lite/build/src/channel.js");
/* harmony import */ var _channeldef__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../channeldef */ "./node_modules/vega-lite/build/src/channeldef.js");
/* harmony import */ var _header__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../header */ "./node_modules/vega-lite/build/src/header.js");
/* harmony import */ var _sort__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../sort */ "./node_modules/vega-lite/build/src/sort.js");
/* harmony import */ var _spec_facet__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../spec/facet */ "./node_modules/vega-lite/build/src/spec/facet.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../util */ "./node_modules/vega-lite/build/src/util.js");
/* harmony import */ var _axis_properties__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../axis/properties */ "./node_modules/vega-lite/build/src/compile/axis/properties.js");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../common */ "./node_modules/vega-lite/build/src/compile/common.js");
/* harmony import */ var _data_calculate__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../data/calculate */ "./node_modules/vega-lite/build/src/compile/data/calculate.js");
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../model */ "./node_modules/vega-lite/build/src/compile/model.js");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./common */ "./node_modules/vega-lite/build/src/compile/header/common.js");
/* harmony import */ var _component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./component */ "./node_modules/vega-lite/build/src/compile/header/component.js");













// TODO: rename to assembleHeaderTitleGroup
function assembleTitleGroup(model, channel) {
    const title = model.component.layoutHeaders[channel].title;
    const config = model.config ? model.config : undefined;
    const facetFieldDef = model.component.layoutHeaders[channel].facetFieldDef
        ? model.component.layoutHeaders[channel].facetFieldDef
        : undefined;
    const { titleAnchor, titleAngle, titleOrient } = Object(_common__WEBPACK_IMPORTED_MODULE_11__["getHeaderProperties"])(['titleAnchor', 'titleAngle', 'titleOrient'], facetFieldDef, config, channel);
    const headerChannel = Object(_common__WEBPACK_IMPORTED_MODULE_11__["getHeaderChannel"])(channel, titleOrient);
    return {
        name: `${channel}-title`,
        type: 'group',
        role: `${headerChannel}-title`,
        title: Object.assign({ text: title }, (channel === 'row' ? { orient: 'left' } : {}), { style: 'guide-title' }, defaultHeaderGuideBaseline(titleAngle, headerChannel), defaultHeaderGuideAlign(headerChannel, titleAngle, titleAnchor), assembleHeaderProperties(config, facetFieldDef, channel, _header__WEBPACK_IMPORTED_MODULE_3__["HEADER_TITLE_PROPERTIES"], _header__WEBPACK_IMPORTED_MODULE_3__["HEADER_TITLE_PROPERTIES_MAP"]))
    };
}
function defaultHeaderGuideAlign(headerChannel, angle, anchor = 'middle') {
    switch (anchor) {
        case 'start':
            return { align: 'left' };
        case 'end':
            return { align: 'right' };
    }
    const align = Object(_axis_properties__WEBPACK_IMPORTED_MODULE_7__["defaultLabelAlign"])(angle, headerChannel === 'row' ? 'left' : 'top');
    return align ? { align } : {};
}
function defaultHeaderGuideBaseline(angle, channel) {
    const baseline = Object(_axis_properties__WEBPACK_IMPORTED_MODULE_7__["defaultLabelBaseline"])(angle, channel === 'row' ? 'left' : 'top');
    return baseline ? { baseline } : {};
}
function assembleHeaderGroups(model, channel) {
    const layoutHeader = model.component.layoutHeaders[channel];
    const groups = [];
    for (const headerType of _component__WEBPACK_IMPORTED_MODULE_12__["HEADER_TYPES"]) {
        if (layoutHeader[headerType]) {
            for (const headerCmpt of layoutHeader[headerType]) {
                groups.push(assembleHeaderGroup(model, channel, headerType, layoutHeader, headerCmpt));
            }
        }
    }
    return groups;
}
function getSort(facetFieldDef, channel) {
    const { sort } = facetFieldDef;
    if (Object(_sort__WEBPACK_IMPORTED_MODULE_4__["isSortField"])(sort)) {
        return {
            field: Object(_channeldef__WEBPACK_IMPORTED_MODULE_2__["vgField"])(sort, { expr: 'datum' }),
            order: sort.order || 'ascending'
        };
    }
    else if (Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isArray"])(sort)) {
        return {
            field: Object(_data_calculate__WEBPACK_IMPORTED_MODULE_9__["sortArrayIndexField"])(facetFieldDef, channel, { expr: 'datum' }),
            order: 'ascending'
        };
    }
    else {
        return {
            field: Object(_channeldef__WEBPACK_IMPORTED_MODULE_2__["vgField"])(facetFieldDef, { expr: 'datum' }),
            order: sort || 'ascending'
        };
    }
}
function assembleLabelTitle(facetFieldDef, channel, config) {
    const { format, labelAngle, labelAnchor, labelOrient } = Object(_common__WEBPACK_IMPORTED_MODULE_11__["getHeaderProperties"])(['format', 'labelAngle', 'labelAnchor', 'labelOrient'], facetFieldDef, config, channel);
    const headerChannel = Object(_common__WEBPACK_IMPORTED_MODULE_11__["getHeaderChannel"])(channel, labelOrient);
    return Object.assign({ text: Object(_common__WEBPACK_IMPORTED_MODULE_8__["formatSignalRef"])(facetFieldDef, format, 'parent', config) }, (channel === 'row' ? { orient: 'left' } : {}), { style: 'guide-label', frame: 'group' }, defaultHeaderGuideBaseline(labelAngle, headerChannel), defaultHeaderGuideAlign(headerChannel, labelAngle, labelAnchor), assembleHeaderProperties(config, facetFieldDef, channel, _header__WEBPACK_IMPORTED_MODULE_3__["HEADER_LABEL_PROPERTIES"], _header__WEBPACK_IMPORTED_MODULE_3__["HEADER_LABEL_PROPERTIES_MAP"]));
}
function assembleHeaderGroup(model, channel, headerType, layoutHeader, headerCmpt) {
    if (headerCmpt) {
        let title = null;
        const { facetFieldDef } = layoutHeader;
        const config = model.config ? model.config : undefined;
        if (facetFieldDef && headerCmpt.labels) {
            const { labelOrient } = Object(_common__WEBPACK_IMPORTED_MODULE_11__["getHeaderProperties"])(['labelOrient'], facetFieldDef, config, channel);
            // Include label title in the header if orient aligns with the channel
            if ((channel === 'row' && !Object(_util__WEBPACK_IMPORTED_MODULE_6__["contains"])(['top', 'bottom'], labelOrient)) ||
                (channel === 'column' && !Object(_util__WEBPACK_IMPORTED_MODULE_6__["contains"])(['left', 'right'], labelOrient))) {
                title = assembleLabelTitle(facetFieldDef, channel, config);
            }
        }
        const isFacetWithoutRowCol = Object(_model__WEBPACK_IMPORTED_MODULE_10__["isFacetModel"])(model) && !Object(_spec_facet__WEBPACK_IMPORTED_MODULE_5__["isFacetMapping"])(model.facet);
        const axes = headerCmpt.axes;
        const hasAxes = axes && axes.length > 0;
        if (title || hasAxes) {
            const sizeChannel = channel === 'row' ? 'height' : 'width';
            return Object.assign({ name: model.getName(`${channel}_${headerType}`), type: 'group', role: `${channel}-${headerType}` }, (layoutHeader.facetFieldDef
                ? {
                    from: { data: model.getName(channel + '_domain') },
                    sort: getSort(facetFieldDef, channel)
                }
                : {}), (hasAxes && isFacetWithoutRowCol
                ? {
                    from: { data: model.getName(`facet_domain_${channel}`) }
                }
                : {}), (title ? { title } : {}), (headerCmpt.sizeSignal
                ? {
                    encode: {
                        update: {
                            [sizeChannel]: headerCmpt.sizeSignal
                        }
                    }
                }
                : {}), (hasAxes ? { axes } : {}));
        }
    }
    return null;
}
const LAYOUT_TITLE_BAND = {
    column: {
        start: 0,
        end: 1
    },
    row: {
        start: 1,
        end: 0
    }
};
function getLayoutTitleBand(titleAnchor, headerChannel) {
    return LAYOUT_TITLE_BAND[headerChannel][titleAnchor];
}
function assembleLayoutTitleBand(headerComponentIndex, config) {
    const titleBand = {};
    for (const channel of _channel__WEBPACK_IMPORTED_MODULE_1__["FACET_CHANNELS"]) {
        const headerComponent = headerComponentIndex[channel];
        if (headerComponent && headerComponent.facetFieldDef) {
            const { titleAnchor, titleOrient } = Object(_common__WEBPACK_IMPORTED_MODULE_11__["getHeaderProperties"])(['titleAnchor', 'titleOrient'], headerComponent.facetFieldDef, config, channel);
            const headerChannel = Object(_common__WEBPACK_IMPORTED_MODULE_11__["getHeaderChannel"])(channel, titleOrient);
            const band = getLayoutTitleBand(titleAnchor, headerChannel);
            if (band !== undefined) {
                titleBand[headerChannel] = band;
            }
        }
    }
    return Object(_util__WEBPACK_IMPORTED_MODULE_6__["keys"])(titleBand).length > 0 ? titleBand : undefined;
}
function assembleHeaderProperties(config, facetFieldDef, channel, properties, propertiesMap) {
    const props = {};
    for (const prop of properties) {
        if (!propertiesMap[prop]) {
            continue;
        }
        const value = Object(_common__WEBPACK_IMPORTED_MODULE_11__["getHeaderProperty"])(prop, facetFieldDef, config, channel);
        if (value !== undefined) {
            props[propertiesMap[prop]] = value;
        }
    }
    return props;
}
//# sourceMappingURL=assemble.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/header/common.js":
/*!*******************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/header/common.js ***!
  \*******************************************************************/
/*! exports provided: getHeaderChannel, getHeaderProperty, getHeaderProperties */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getHeaderChannel", function() { return getHeaderChannel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getHeaderProperty", function() { return getHeaderProperty; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getHeaderProperties", function() { return getHeaderProperties; });
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../util */ "./node_modules/vega-lite/build/src/util.js");

/**
 * Get header channel, which can be different from facet channel when orient is specified or when the facet channel is facet.
 */
function getHeaderChannel(channel, orient) {
    if (Object(_util__WEBPACK_IMPORTED_MODULE_0__["contains"])(['top', 'bottom'], orient)) {
        return 'column';
    }
    else if (Object(_util__WEBPACK_IMPORTED_MODULE_0__["contains"])(['left', 'right'], orient)) {
        return 'row';
    }
    return channel === 'row' ? 'row' : 'column';
}
function getHeaderProperty(prop, facetFieldDef, config, channel) {
    const headerSpecificConfig = channel === 'row' ? config.headerRow : channel === 'column' ? config.headerColumn : config.headerFacet;
    return Object(_util__WEBPACK_IMPORTED_MODULE_0__["getFirstDefined"])(facetFieldDef && facetFieldDef.header ? facetFieldDef.header[prop] : undefined, headerSpecificConfig[prop], config.header[prop]);
}
function getHeaderProperties(properties, facetFieldDef, config, channel) {
    const props = {};
    for (const prop of properties) {
        const value = getHeaderProperty(prop, facetFieldDef, config, channel);
        if (value !== undefined) {
            props[prop] = value;
        }
    }
    return props;
}
//# sourceMappingURL=common.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/header/component.js":
/*!**********************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/header/component.js ***!
  \**********************************************************************/
/*! exports provided: HEADER_CHANNELS, HEADER_TYPES */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HEADER_CHANNELS", function() { return HEADER_CHANNELS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HEADER_TYPES", function() { return HEADER_TYPES; });
const HEADER_CHANNELS = ['row', 'column'];
const HEADER_TYPES = ['header', 'footer'];
//# sourceMappingURL=component.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/header/parse.js":
/*!******************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/header/parse.js ***!
  \******************************************************************/
/*! exports provided: getHeaderType, parseFacetHeaders */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getHeaderType", function() { return getHeaderType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseFacetHeaders", function() { return parseFacetHeaders; });
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../channel */ "./node_modules/vega-lite/build/src/channel.js");
/* harmony import */ var _channeldef__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../channeldef */ "./node_modules/vega-lite/build/src/channeldef.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../util */ "./node_modules/vega-lite/build/src/util.js");
/* harmony import */ var _axis_assemble__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../axis/assemble */ "./node_modules/vega-lite/build/src/compile/axis/assemble.js");
/* harmony import */ var _resolve__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../resolve */ "./node_modules/vega-lite/build/src/compile/resolve.js");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./common */ "./node_modules/vega-lite/build/src/compile/header/common.js");






function getHeaderType(orient) {
    if (orient === 'top' || orient === 'left') {
        return 'header';
    }
    return 'footer';
}
function parseFacetHeaders(model) {
    for (const channel of _channel__WEBPACK_IMPORTED_MODULE_0__["FACET_CHANNELS"]) {
        parseFacetHeader(model, channel);
    }
    mergeChildAxis(model, 'x');
    mergeChildAxis(model, 'y');
}
function parseFacetHeader(model, channel) {
    if (model.channelHasField(channel)) {
        const fieldDef = model.facet[channel];
        const titleConfig = Object(_common__WEBPACK_IMPORTED_MODULE_5__["getHeaderProperty"])('title', null, model.config, channel);
        let title = Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["title"])(fieldDef, model.config, {
            allowDisabling: true,
            includeDefault: titleConfig === undefined || !!titleConfig
        });
        if (model.child.component.layoutHeaders[channel].title) {
            // merge title with child to produce "Title / Subtitle / Sub-subtitle"
            title += ' / ' + model.child.component.layoutHeaders[channel].title;
            model.child.component.layoutHeaders[channel].title = null;
        }
        const labelOrient = Object(_common__WEBPACK_IMPORTED_MODULE_5__["getHeaderProperty"])('labelOrient', fieldDef, model.config, channel);
        const headerType = Object(_util__WEBPACK_IMPORTED_MODULE_2__["contains"])(['bottom', 'right'], labelOrient) ? 'footer' : 'header';
        model.component.layoutHeaders[channel] = {
            title,
            facetFieldDef: fieldDef,
            [headerType]: channel === 'facet' ? [] : [makeHeaderComponent(model, channel, true)]
        };
    }
}
function makeHeaderComponent(model, channel, labels) {
    const sizeType = channel === 'row' ? 'height' : 'width';
    return {
        labels,
        sizeSignal: model.child.component.layoutSize.get(sizeType) ? model.child.getSizeSignalRef(sizeType) : undefined,
        axes: []
    };
}
function mergeChildAxis(model, channel) {
    const { child } = model;
    if (child.component.axes[channel]) {
        const { layoutHeaders, resolve } = model.component;
        resolve.axis[channel] = Object(_resolve__WEBPACK_IMPORTED_MODULE_4__["parseGuideResolve"])(resolve, channel);
        if (resolve.axis[channel] === 'shared') {
            // For shared axis, move the axes to facet's header or footer
            const headerChannel = channel === 'x' ? 'column' : 'row';
            const layoutHeader = layoutHeaders[headerChannel];
            for (const axisComponent of child.component.axes[channel]) {
                const headerType = getHeaderType(axisComponent.get('orient'));
                layoutHeader[headerType] = layoutHeader[headerType] || [makeHeaderComponent(model, headerChannel, false)];
                // FIXME: assemble shouldn't be called here, but we do it this way so we only extract the main part of the axes
                const mainAxis = Object(_axis_assemble__WEBPACK_IMPORTED_MODULE_3__["assembleAxis"])(axisComponent, 'main', model.config, { header: true });
                // LayoutHeader no longer keep track of property precedence, thus let's combine.
                layoutHeader[headerType][0].axes.push(mainAxis);
                axisComponent.mainExtracted = true;
            }
        }
        else {
            // Otherwise do nothing for independent axes
        }
    }
}
//# sourceMappingURL=parse.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/layer.js":
/*!***********************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/layer.js ***!
  \***********************************************************/
/*! exports provided: LayerModel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LayerModel", function() { return LayerModel; });
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../log */ "./node_modules/vega-lite/build/src/log/index.js");
/* harmony import */ var _spec__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../spec */ "./node_modules/vega-lite/build/src/spec/index.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ "./node_modules/vega-lite/build/src/util.js");
/* harmony import */ var _axis_assemble__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./axis/assemble */ "./node_modules/vega-lite/build/src/compile/axis/assemble.js");
/* harmony import */ var _axis_parse__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./axis/parse */ "./node_modules/vega-lite/build/src/compile/axis/parse.js");
/* harmony import */ var _data_parse__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./data/parse */ "./node_modules/vega-lite/build/src/compile/data/parse.js");
/* harmony import */ var _layoutsize_assemble__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./layoutsize/assemble */ "./node_modules/vega-lite/build/src/compile/layoutsize/assemble.js");
/* harmony import */ var _layoutsize_parse__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./layoutsize/parse */ "./node_modules/vega-lite/build/src/compile/layoutsize/parse.js");
/* harmony import */ var _legend_assemble__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./legend/assemble */ "./node_modules/vega-lite/build/src/compile/legend/assemble.js");
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./model */ "./node_modules/vega-lite/build/src/compile/model.js");
/* harmony import */ var _selection_assemble__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./selection/assemble */ "./node_modules/vega-lite/build/src/compile/selection/assemble.js");
/* harmony import */ var _unit__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./unit */ "./node_modules/vega-lite/build/src/compile/unit.js");












class LayerModel extends _model__WEBPACK_IMPORTED_MODULE_9__["Model"] {
    constructor(spec, parent, parentGivenName, parentGivenSize, repeater, config, fit) {
        super(spec, 'layer', parent, parentGivenName, config, repeater, spec.resolve, spec.view);
        const layoutSize = Object.assign({}, parentGivenSize, (spec.width ? { width: spec.width } : {}), (spec.height ? { height: spec.height } : {}));
        this.initSize(layoutSize);
        this.children = spec.layer.map((layer, i) => {
            if (Object(_spec__WEBPACK_IMPORTED_MODULE_1__["isLayerSpec"])(layer)) {
                return new LayerModel(layer, this, this.getName('layer_' + i), layoutSize, repeater, config, fit);
            }
            if (Object(_spec__WEBPACK_IMPORTED_MODULE_1__["isUnitSpec"])(layer)) {
                return new _unit__WEBPACK_IMPORTED_MODULE_11__["UnitModel"](layer, this, this.getName('layer_' + i), layoutSize, repeater, config, fit);
            }
            throw new Error(_log__WEBPACK_IMPORTED_MODULE_0__["message"].INVALID_SPEC);
        });
    }
    parseData() {
        this.component.data = Object(_data_parse__WEBPACK_IMPORTED_MODULE_5__["parseData"])(this);
        for (const child of this.children) {
            child.parseData();
        }
    }
    parseLayoutSize() {
        Object(_layoutsize_parse__WEBPACK_IMPORTED_MODULE_7__["parseLayerLayoutSize"])(this);
    }
    parseSelections() {
        // Merge selections up the hierarchy so that they may be referenced
        // across unit specs. Persist their definitions within each child
        // to assemble signals which remain within output Vega unit groups.
        this.component.selection = {};
        for (const child of this.children) {
            child.parseSelections();
            Object(_util__WEBPACK_IMPORTED_MODULE_2__["keys"])(child.component.selection).forEach(key => {
                this.component.selection[key] = child.component.selection[key];
            });
        }
    }
    parseMarkGroup() {
        for (const child of this.children) {
            child.parseMarkGroup();
        }
    }
    parseAxesAndHeaders() {
        Object(_axis_parse__WEBPACK_IMPORTED_MODULE_4__["parseLayerAxes"])(this);
    }
    assembleSelectionTopLevelSignals(signals) {
        return this.children.reduce((sg, child) => child.assembleSelectionTopLevelSignals(sg), signals);
    }
    // TODO: Support same named selections across children.
    assembleSignals() {
        return this.children.reduce((signals, child) => {
            return signals.concat(child.assembleSignals());
        }, Object(_axis_assemble__WEBPACK_IMPORTED_MODULE_3__["assembleAxisSignals"])(this));
    }
    assembleLayoutSignals() {
        return this.children.reduce((signals, child) => {
            return signals.concat(child.assembleLayoutSignals());
        }, Object(_layoutsize_assemble__WEBPACK_IMPORTED_MODULE_6__["assembleLayoutSignals"])(this));
    }
    assembleSelectionData(data) {
        return this.children.reduce((db, child) => child.assembleSelectionData(db), data);
    }
    assembleTitle() {
        let title = super.assembleTitle();
        if (title) {
            return title;
        }
        // If title does not provide layer, look into children
        for (const child of this.children) {
            title = child.assembleTitle();
            if (title) {
                return title;
            }
        }
        return undefined;
    }
    assembleLayout() {
        return null;
    }
    assembleMarks() {
        return Object(_selection_assemble__WEBPACK_IMPORTED_MODULE_10__["assembleLayerSelectionMarks"])(this, Object(_util__WEBPACK_IMPORTED_MODULE_2__["flatten"])(this.children.map(child => {
            return child.assembleMarks();
        })));
    }
    assembleLegends() {
        return this.children.reduce((legends, child) => {
            return legends.concat(child.assembleLegends());
        }, Object(_legend_assemble__WEBPACK_IMPORTED_MODULE_8__["assembleLegends"])(this));
    }
}
//# sourceMappingURL=layer.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/layoutsize/assemble.js":
/*!*************************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/layoutsize/assemble.js ***!
  \*************************************************************************/
/*! exports provided: assembleLayoutSignals, sizeSignals, sizeExpr */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "assembleLayoutSignals", function() { return assembleLayoutSignals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sizeSignals", function() { return sizeSignals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sizeExpr", function() { return sizeExpr; });
/* harmony import */ var _scale__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../scale */ "./node_modules/vega-lite/build/src/scale.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../util */ "./node_modules/vega-lite/build/src/util.js");
/* harmony import */ var _vega_schema__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../vega.schema */ "./node_modules/vega-lite/build/src/vega.schema.js");
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../model */ "./node_modules/vega-lite/build/src/compile/model.js");




function assembleLayoutSignals(model) {
    return [...sizeSignals(model, 'width'), ...sizeSignals(model, 'height')];
}
function sizeSignals(model, sizeType) {
    const channel = sizeType === 'width' ? 'x' : 'y';
    const size = model.component.layoutSize.get(sizeType);
    if (!size || size === 'merged') {
        return [];
    }
    // Read size signal name from name map, just in case it is the top-level size signal that got renamed.
    const name = model.getSizeSignalRef(sizeType).signal;
    if (size === 'range-step') {
        const scaleComponent = model.getScaleComponent(channel);
        if (scaleComponent) {
            const type = scaleComponent.get('type');
            const range = scaleComponent.get('range');
            if (Object(_scale__WEBPACK_IMPORTED_MODULE_0__["hasDiscreteDomain"])(type) && Object(_vega_schema__WEBPACK_IMPORTED_MODULE_2__["isVgRangeStep"])(range)) {
                const scaleName = model.scaleName(channel);
                if (Object(_model__WEBPACK_IMPORTED_MODULE_3__["isFacetModel"])(model.parent)) {
                    // If parent is facet and this is an independent scale, return only signal signal
                    // as the width/height will be calculated using the cardinality from
                    // facet's aggregate rather than reading from scale domain
                    const parentResolve = model.parent.component.resolve;
                    if (parentResolve.scale[channel] === 'independent') {
                        return [stepSignal(scaleName, range)];
                    }
                }
                return [
                    stepSignal(scaleName, range),
                    {
                        name,
                        update: sizeExpr(scaleName, scaleComponent, `domain('${scaleName}').length`)
                    }
                ];
            }
        }
        /* istanbul ignore next: Condition should not happen -- only for warning in development. */
        throw new Error('layout size is range step although there is no rangeStep.');
    }
    else {
        return [
            {
                name,
                value: size
            }
        ];
    }
}
function stepSignal(scaleName, range) {
    return {
        name: scaleName + '_step',
        value: range.step
    };
}
function sizeExpr(scaleName, scaleComponent, cardinality) {
    const type = scaleComponent.get('type');
    const padding = scaleComponent.get('padding');
    const paddingOuter = Object(_util__WEBPACK_IMPORTED_MODULE_1__["getFirstDefined"])(scaleComponent.get('paddingOuter'), padding);
    let paddingInner = scaleComponent.get('paddingInner');
    paddingInner =
        type === 'band'
            ? // only band has real paddingInner
                paddingInner !== undefined
                    ? paddingInner
                    : padding
            : // For point, as calculated in https://github.com/vega/vega-scale/blob/master/src/band.js#L128,
                // it's equivalent to have paddingInner = 1 since there is only n-1 steps between n points.
                1;
    return `bandspace(${cardinality}, ${paddingInner}, ${paddingOuter}) * ${scaleName}_step`;
}
//# sourceMappingURL=assemble.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/layoutsize/parse.js":
/*!**********************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/layoutsize/parse.js ***!
  \**********************************************************************/
/*! exports provided: parseLayerLayoutSize, parseRepeatLayoutSize, parseConcatLayoutSize, parseChildrenLayoutSize, parseUnitLayoutSize */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseLayerLayoutSize", function() { return parseLayerLayoutSize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseRepeatLayoutSize", function() { return parseRepeatLayoutSize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseConcatLayoutSize", function() { return parseConcatLayoutSize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseChildrenLayoutSize", function() { return parseChildrenLayoutSize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseUnitLayoutSize", function() { return parseUnitLayoutSize; });
/* harmony import */ var _scale__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../scale */ "./node_modules/vega-lite/build/src/scale.js");
/* harmony import */ var _vega_schema__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../vega.schema */ "./node_modules/vega-lite/build/src/vega.schema.js");
/* harmony import */ var _split__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../split */ "./node_modules/vega-lite/build/src/compile/split.js");



function parseLayerLayoutSize(model) {
    parseChildrenLayoutSize(model);
    const layoutSizeCmpt = model.component.layoutSize;
    layoutSizeCmpt.setWithExplicit('width', parseNonUnitLayoutSizeForChannel(model, 'width'));
    layoutSizeCmpt.setWithExplicit('height', parseNonUnitLayoutSizeForChannel(model, 'height'));
}
const parseRepeatLayoutSize = parseLayerLayoutSize;
const SIZE_TYPE_TO_MERGE = {
    vconcat: 'width',
    hconcat: 'height'
};
function parseConcatLayoutSize(model) {
    parseChildrenLayoutSize(model);
    const layoutSizeCmpt = model.component.layoutSize;
    const sizeTypeToMerge = SIZE_TYPE_TO_MERGE[model.concatType];
    if (sizeTypeToMerge) {
        layoutSizeCmpt.setWithExplicit(sizeTypeToMerge, parseNonUnitLayoutSizeForChannel(model, sizeTypeToMerge));
    }
}
function parseChildrenLayoutSize(model) {
    for (const child of model.children) {
        child.parseLayoutSize();
    }
}
function parseNonUnitLayoutSizeForChannel(model, sizeType) {
    const channel = sizeType === 'width' ? 'x' : 'y';
    const resolve = model.component.resolve;
    let mergedSize;
    // Try to merge layout size
    for (const child of model.children) {
        const childSize = child.component.layoutSize.getWithExplicit(sizeType);
        const scaleResolve = resolve.scale[channel];
        if (scaleResolve === 'independent' && childSize.value === 'range-step') {
            // Do not merge independent scales with range-step as their size depends
            // on the scale domains, which can be different between scales.
            mergedSize = undefined;
            break;
        }
        if (mergedSize) {
            if (scaleResolve === 'independent' && mergedSize.value !== childSize.value) {
                // For independent scale, only merge if all the sizes are the same.
                // If the values are different, abandon the merge!
                mergedSize = undefined;
                break;
            }
            mergedSize = Object(_split__WEBPACK_IMPORTED_MODULE_2__["mergeValuesWithExplicit"])(mergedSize, childSize, sizeType, '');
        }
        else {
            mergedSize = childSize;
        }
    }
    if (mergedSize) {
        // If merged, rename size and set size of all children.
        for (const child of model.children) {
            model.renameSignal(child.getName(sizeType), model.getName(sizeType));
            child.component.layoutSize.set(sizeType, 'merged', false);
        }
        return mergedSize;
    }
    else {
        // Otherwise, there is no merged size.
        return {
            explicit: false,
            value: undefined
        };
    }
}
function parseUnitLayoutSize(model) {
    const layoutSizeComponent = model.component.layoutSize;
    if (!layoutSizeComponent.explicit.width) {
        const width = defaultUnitSize(model, 'width');
        layoutSizeComponent.set('width', width, false);
    }
    if (!layoutSizeComponent.explicit.height) {
        const height = defaultUnitSize(model, 'height');
        layoutSizeComponent.set('height', height, false);
    }
}
function defaultUnitSize(model, sizeType) {
    const channel = sizeType === 'width' ? 'x' : 'y';
    const config = model.config;
    const scaleComponent = model.getScaleComponent(channel);
    if (scaleComponent) {
        const scaleType = scaleComponent.get('type');
        const range = scaleComponent.get('range');
        if (Object(_scale__WEBPACK_IMPORTED_MODULE_0__["hasDiscreteDomain"])(scaleType) && Object(_vega_schema__WEBPACK_IMPORTED_MODULE_1__["isVgRangeStep"])(range)) {
            // For discrete domain with range.step, use dynamic width/height
            return 'range-step';
        }
        else {
            return config.view[sizeType];
        }
    }
    else if (model.hasProjection) {
        return config.view[sizeType];
    }
    else {
        // No scale - set default size
        if (sizeType === 'width' && model.mark === 'text') {
            // width for text mark without x-field is a bit wider than typical range step
            return config.scale.textXRangeStep;
        }
        // Set width/height equal to rangeStep config or if rangeStep is null, use value from default scale config.
        return config.scale.rangeStep || _scale__WEBPACK_IMPORTED_MODULE_0__["defaultScaleConfig"].rangeStep;
    }
}
//# sourceMappingURL=parse.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/legend/assemble.js":
/*!*********************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/legend/assemble.js ***!
  \*********************************************************************/
/*! exports provided: assembleLegends */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "assembleLegends", function() { return assembleLegends; });
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../util */ "./node_modules/vega-lite/build/src/util.js");
/* harmony import */ var _parse__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./parse */ "./node_modules/vega-lite/build/src/compile/legend/parse.js");


function assembleLegends(model) {
    const legendComponentIndex = model.component.legends;
    const legendByDomain = {};
    for (const channel of Object(_util__WEBPACK_IMPORTED_MODULE_0__["keys"])(legendComponentIndex)) {
        const scaleComponent = model.getScaleComponent(channel);
        const domainHash = Object(_util__WEBPACK_IMPORTED_MODULE_0__["stringify"])(scaleComponent.domains);
        if (legendByDomain[domainHash]) {
            for (const mergedLegendComponent of legendByDomain[domainHash]) {
                const merged = Object(_parse__WEBPACK_IMPORTED_MODULE_1__["mergeLegendComponent"])(mergedLegendComponent, legendComponentIndex[channel]);
                if (!merged) {
                    // If cannot merge, need to add this legend separately
                    legendByDomain[domainHash].push(legendComponentIndex[channel]);
                }
            }
        }
        else {
            legendByDomain[domainHash] = [legendComponentIndex[channel].clone()];
        }
    }
    return Object(_util__WEBPACK_IMPORTED_MODULE_0__["flatten"])(Object(_util__WEBPACK_IMPORTED_MODULE_0__["vals"])(legendByDomain)).map((legendCmpt) => {
        const legend = legendCmpt.combine();
        if (legend.encode && legend.encode.symbols) {
            const out = legend.encode.symbols.update;
            if (out.fill && out.fill['value'] !== 'transparent' && !out.stroke && !legend.stroke) {
                // For non color channel's legend, we need to override symbol stroke config from Vega config if stroke channel is not used.
                out.stroke = { value: 'transparent' };
            }
            if (legend.fill) {
                // If top-level fill is defined, for non color channel's legend, we need remove fill.
                delete out.fill;
            }
        }
        return legend;
    });
}
//# sourceMappingURL=assemble.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/legend/component.js":
/*!**********************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/legend/component.js ***!
  \**********************************************************************/
/*! exports provided: LegendComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LegendComponent", function() { return LegendComponent; });
/* harmony import */ var _split__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../split */ "./node_modules/vega-lite/build/src/compile/split.js");

class LegendComponent extends _split__WEBPACK_IMPORTED_MODULE_0__["Split"] {
}
//# sourceMappingURL=component.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/legend/encode.js":
/*!*******************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/legend/encode.js ***!
  \*******************************************************************/
/*! exports provided: symbols, gradient, labels */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "symbols", function() { return symbols; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "gradient", function() { return gradient; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "labels", function() { return labels; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../channel */ "./node_modules/vega-lite/build/src/channel.js");
/* harmony import */ var _channeldef__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../channeldef */ "./node_modules/vega-lite/build/src/channeldef.js");
/* harmony import */ var _mark__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../mark */ "./node_modules/vega-lite/build/src/mark.js");
/* harmony import */ var _scale__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../scale */ "./node_modules/vega-lite/build/src/scale.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../util */ "./node_modules/vega-lite/build/src/util.js");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../common */ "./node_modules/vega-lite/build/src/compile/common.js");
/* harmony import */ var _mark_mixins__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../mark/mixins */ "./node_modules/vega-lite/build/src/compile/mark/mixins.js");
/* harmony import */ var _properties__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./properties */ "./node_modules/vega-lite/build/src/compile/legend/properties.js");









function type(legendCmp, model, channel) {
    const scaleType = model.getScaleComponent(channel).get('type');
    return Object(_util__WEBPACK_IMPORTED_MODULE_5__["getFirstDefined"])(legendCmp.get('type'), Object(_properties__WEBPACK_IMPORTED_MODULE_8__["defaultType"])({ channel, scaleType, alwaysReturn: true }));
}
function symbols(fieldDef, symbolsSpec, model, channel, legendCmp) {
    if (type(legendCmp, model, channel) !== 'symbol') {
        return undefined;
    }
    let out = Object.assign({}, Object(_common__WEBPACK_IMPORTED_MODULE_6__["applyMarkConfig"])({}, model, _mark__WEBPACK_IMPORTED_MODULE_3__["FILL_STROKE_CONFIG"]), _mark_mixins__WEBPACK_IMPORTED_MODULE_7__["color"](model)); // FIXME: remove this when VgEncodeEntry is compatible with SymbolEncodeEntry
    switch (model.mark) {
        case _mark__WEBPACK_IMPORTED_MODULE_3__["BAR"]:
        case _mark__WEBPACK_IMPORTED_MODULE_3__["TICK"]:
        case _mark__WEBPACK_IMPORTED_MODULE_3__["TEXT"]:
            out.shape = { value: 'square' };
            break;
        case _mark__WEBPACK_IMPORTED_MODULE_3__["CIRCLE"]:
        case _mark__WEBPACK_IMPORTED_MODULE_3__["SQUARE"]:
            out.shape = { value: model.mark };
            break;
        case _mark__WEBPACK_IMPORTED_MODULE_3__["POINT"]:
        case _mark__WEBPACK_IMPORTED_MODULE_3__["LINE"]:
        case _mark__WEBPACK_IMPORTED_MODULE_3__["GEOSHAPE"]:
        case _mark__WEBPACK_IMPORTED_MODULE_3__["AREA"]:
            // use default circle
            break;
    }
    const { markDef, encoding, config } = model;
    const filled = markDef.filled;
    const opacity = getMaxValue(encoding.opacity) || markDef.opacity;
    if (out.fill) {
        // for fill legend, we don't want any fill in symbol
        if (channel === 'fill' || (filled && channel === _channel__WEBPACK_IMPORTED_MODULE_1__["COLOR"])) {
            delete out.fill;
        }
        else {
            if (out.fill['field']) {
                // For others, set fill to some opaque value (or nothing if a color is already set)
                if (legendCmp.get('symbolFillColor')) {
                    delete out.fill;
                }
                else {
                    out.fill = { value: config.legend.symbolBaseFillColor || 'black' };
                    out.fillOpacity = { value: opacity || 1 };
                }
            }
            else if (Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isArray"])(out.fill)) {
                const fill = getFirstConditionValue(encoding.fill || encoding.color) ||
                    markDef.fill ||
                    (filled && markDef.color);
                if (fill) {
                    out.fill = { value: fill };
                }
            }
        }
    }
    if (out.stroke) {
        if (channel === 'stroke' || (!filled && channel === _channel__WEBPACK_IMPORTED_MODULE_1__["COLOR"])) {
            delete out.stroke;
        }
        else {
            if (out.stroke['field']) {
                // For others, remove stroke field
                delete out.stroke;
            }
            else if (Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isArray"])(out.stroke)) {
                const stroke = Object(_util__WEBPACK_IMPORTED_MODULE_5__["getFirstDefined"])(getFirstConditionValue(encoding.stroke || encoding.color), markDef.stroke, filled ? markDef.color : undefined);
                if (stroke) {
                    out.stroke = { value: stroke };
                }
            }
        }
    }
    if (channel !== _channel__WEBPACK_IMPORTED_MODULE_1__["SHAPE"]) {
        const shape = getFirstConditionValue(encoding.shape) || markDef.shape;
        if (shape) {
            out.shape = { value: shape };
        }
    }
    if (channel !== _channel__WEBPACK_IMPORTED_MODULE_1__["OPACITY"]) {
        if (opacity) {
            // only apply opacity if it is neither zero or undefined
            out.opacity = { value: opacity };
        }
    }
    out = Object.assign({}, out, symbolsSpec);
    return Object(_util__WEBPACK_IMPORTED_MODULE_5__["keys"])(out).length > 0 ? out : undefined;
}
function gradient(fieldDef, gradientSpec, model, channel, legendCmp) {
    if (type(legendCmp, model, channel) !== 'gradient') {
        return undefined;
    }
    let out = {};
    const opacity = getMaxValue(model.encoding.opacity) || model.markDef.opacity;
    if (opacity) {
        // only apply opacity if it is neither zero or undefined
        out.opacity = { value: opacity };
    }
    out = Object.assign({}, out, gradientSpec);
    return Object(_util__WEBPACK_IMPORTED_MODULE_5__["keys"])(out).length > 0 ? out : undefined;
}
function labels(fieldDef, labelsSpec, model, channel) {
    const legend = model.legend(channel);
    const config = model.config;
    let out = {};
    if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_2__["isTimeFormatFieldDef"])(fieldDef)) {
        const isUTCScale = model.getScaleComponent(channel).get('type') === _scale__WEBPACK_IMPORTED_MODULE_4__["ScaleType"].UTC;
        const expr = Object(_common__WEBPACK_IMPORTED_MODULE_6__["timeFormatExpression"])('datum.value', fieldDef.timeUnit, legend.format, config.legend.shortTimeLabels, config.timeFormat, isUTCScale);
        labelsSpec = Object.assign({}, (expr ? { text: { signal: expr } } : {}), labelsSpec);
    }
    out = Object.assign({}, out, labelsSpec);
    return Object(_util__WEBPACK_IMPORTED_MODULE_5__["keys"])(out).length > 0 ? out : undefined;
}
function getMaxValue(channelDef) {
    return getConditionValue(channelDef, (v, conditionalDef) => Math.max(v, conditionalDef.value));
}
function getFirstConditionValue(channelDef) {
    return getConditionValue(channelDef, (v, conditionalDef) => {
        return Object(_util__WEBPACK_IMPORTED_MODULE_5__["getFirstDefined"])(v, conditionalDef.value);
    });
}
function getConditionValue(channelDef, reducer) {
    if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_2__["hasConditionalValueDef"])(channelDef)) {
        return (Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isArray"])(channelDef.condition) ? channelDef.condition : [channelDef.condition]).reduce(reducer, channelDef.value);
    }
    else if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_2__["isValueDef"])(channelDef)) {
        return channelDef.value;
    }
    return undefined;
}
//# sourceMappingURL=encode.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/legend/parse.js":
/*!******************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/legend/parse.js ***!
  \******************************************************************/
/*! exports provided: parseLegend, parseLegendForChannel, mergeLegendComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseLegend", function() { return parseLegend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseLegendForChannel", function() { return parseLegendForChannel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mergeLegendComponent", function() { return mergeLegendComponent; });
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../channel */ "./node_modules/vega-lite/build/src/channel.js");
/* harmony import */ var _channeldef__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../channeldef */ "./node_modules/vega-lite/build/src/channeldef.js");
/* harmony import */ var _legend__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../legend */ "./node_modules/vega-lite/build/src/legend.js");
/* harmony import */ var _type__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../type */ "./node_modules/vega-lite/build/src/type.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../util */ "./node_modules/vega-lite/build/src/util.js");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../common */ "./node_modules/vega-lite/build/src/compile/common.js");
/* harmony import */ var _guide__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../guide */ "./node_modules/vega-lite/build/src/compile/guide.js");
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../model */ "./node_modules/vega-lite/build/src/compile/model.js");
/* harmony import */ var _resolve__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../resolve */ "./node_modules/vega-lite/build/src/compile/resolve.js");
/* harmony import */ var _split__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../split */ "./node_modules/vega-lite/build/src/compile/split.js");
/* harmony import */ var _component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./component */ "./node_modules/vega-lite/build/src/compile/legend/component.js");
/* harmony import */ var _encode__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./encode */ "./node_modules/vega-lite/build/src/compile/legend/encode.js");
/* harmony import */ var _properties__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./properties */ "./node_modules/vega-lite/build/src/compile/legend/properties.js");














function parseLegend(model) {
    if (Object(_model__WEBPACK_IMPORTED_MODULE_7__["isUnitModel"])(model)) {
        model.component.legends = parseUnitLegend(model);
    }
    else {
        model.component.legends = parseNonUnitLegend(model);
    }
}
function parseUnitLegend(model) {
    const { encoding } = model;
    return [_channel__WEBPACK_IMPORTED_MODULE_0__["COLOR"], _channel__WEBPACK_IMPORTED_MODULE_0__["FILL"], _channel__WEBPACK_IMPORTED_MODULE_0__["STROKE"], _channel__WEBPACK_IMPORTED_MODULE_0__["STROKEWIDTH"], _channel__WEBPACK_IMPORTED_MODULE_0__["SIZE"], _channel__WEBPACK_IMPORTED_MODULE_0__["SHAPE"], _channel__WEBPACK_IMPORTED_MODULE_0__["OPACITY"], _channel__WEBPACK_IMPORTED_MODULE_0__["FILLOPACITY"], _channel__WEBPACK_IMPORTED_MODULE_0__["STROKEOPACITY"]].reduce((legendComponent, channel) => {
        const def = encoding[channel];
        if (model.legend(channel) &&
            model.getScaleComponent(channel) &&
            !(Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["isFieldDef"])(def) && (channel === _channel__WEBPACK_IMPORTED_MODULE_0__["SHAPE"] && def.type === _type__WEBPACK_IMPORTED_MODULE_3__["GEOJSON"]))) {
            legendComponent[channel] = parseLegendForChannel(model, channel);
        }
        return legendComponent;
    }, {});
}
function getLegendDefWithScale(model, channel) {
    const scale = model.scaleName(_channel__WEBPACK_IMPORTED_MODULE_0__["COLOR"]);
    if (channel === 'color') {
        return model.markDef.filled ? { fill: scale } : { stroke: scale };
    }
    return { [channel]: model.scaleName(channel) };
}
function isExplicit(value, property, legend, fieldDef) {
    switch (property) {
        case 'values':
            // specified legend.values is already respected, but may get transformed.
            return !!legend.values;
        case 'title':
            // title can be explicit if fieldDef.title is set
            if (property === 'title' && value === fieldDef.title) {
                return true;
            }
    }
    // Otherwise, things are explicit if the returned value matches the specified property
    return value === legend[property];
}
function parseLegendForChannel(model, channel) {
    const fieldDef = model.fieldDef(channel);
    const legend = model.legend(channel);
    const legendCmpt = new _component__WEBPACK_IMPORTED_MODULE_10__["LegendComponent"]({}, getLegendDefWithScale(model, channel));
    for (const property of _legend__WEBPACK_IMPORTED_MODULE_2__["LEGEND_PROPERTIES"]) {
        const value = getProperty(property, legend, channel, model);
        if (value !== undefined) {
            const explicit = isExplicit(value, property, legend, fieldDef);
            if (explicit || model.config.legend[property] === undefined) {
                legendCmpt.set(property, value, explicit);
            }
        }
    }
    const legendEncoding = legend.encoding || {};
    const legendEncode = ['labels', 'legend', 'title', 'symbols', 'gradient'].reduce((e, part) => {
        const legendEncodingPart = Object(_guide__WEBPACK_IMPORTED_MODULE_6__["guideEncodeEntry"])(legendEncoding[part] || {}, model);
        const value = _encode__WEBPACK_IMPORTED_MODULE_11__[part]
            ? _encode__WEBPACK_IMPORTED_MODULE_11__[part](fieldDef, legendEncodingPart, model, channel, legendCmpt) // apply rule
            : legendEncodingPart; // no rule -- just default values
        if (value !== undefined && Object(_util__WEBPACK_IMPORTED_MODULE_4__["keys"])(value).length > 0) {
            e[part] = { update: value };
        }
        return e;
    }, {});
    if (Object(_util__WEBPACK_IMPORTED_MODULE_4__["keys"])(legendEncode).length > 0) {
        legendCmpt.set('encode', legendEncode, !!legend.encoding);
    }
    return legendCmpt;
}
function getProperty(property, legend, channel, model) {
    const { encoding, mark } = model;
    const fieldDef = Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["getTypedFieldDef"])(encoding[channel]);
    const legendConfig = model.config.legend;
    const { timeUnit } = fieldDef;
    const scaleType = model.getScaleComponent(channel).get('type');
    switch (property) {
        // TODO: enable when https://github.com/vega/vega/issues/1351 is fixed
        // case 'clipHeight':
        //   return getFirstDefined(specifiedLegend.clipHeight, properties.clipHeight(properties.type(...)));
        case 'direction':
            return Object(_properties__WEBPACK_IMPORTED_MODULE_12__["direction"])({ legend, legendConfig, timeUnit, channel, scaleType });
        case 'format':
            // We don't include temporal field here as we apply format in encode block
            if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["isTimeFormatFieldDef"])(fieldDef)) {
                return undefined;
            }
            return Object(_common__WEBPACK_IMPORTED_MODULE_5__["numberFormat"])(fieldDef, legend.format, model.config);
        case 'formatType':
            // Same as format, We don't include temporal field here as we apply format in encode block
            if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["isTimeFormatFieldDef"])(fieldDef)) {
                return undefined;
            }
            return legend.formatType;
        case 'gradientLength':
            return Object(_util__WEBPACK_IMPORTED_MODULE_4__["getFirstDefined"])(
            // do specified gradientLength first
            legend.gradientLength, legendConfig.gradientLength, 
            // Otherwise, use smart default based on plot height
            _properties__WEBPACK_IMPORTED_MODULE_12__["defaultGradientLength"]({
                model,
                legend,
                legendConfig,
                channel,
                scaleType
            }));
        case 'labelOverlap':
            return Object(_util__WEBPACK_IMPORTED_MODULE_4__["getFirstDefined"])(legend.labelOverlap, _properties__WEBPACK_IMPORTED_MODULE_12__["defaultLabelOverlap"](scaleType));
        case 'symbolType':
            return Object(_util__WEBPACK_IMPORTED_MODULE_4__["getFirstDefined"])(legend.symbolType, _properties__WEBPACK_IMPORTED_MODULE_12__["defaultSymbolType"](mark));
        case 'title':
            return Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["title"])(fieldDef, model.config, { allowDisabling: true }) || undefined;
        case 'type':
            return Object(_properties__WEBPACK_IMPORTED_MODULE_12__["type"])({ legend, channel, timeUnit, scaleType, alwaysReturn: false });
        case 'values':
            return _properties__WEBPACK_IMPORTED_MODULE_12__["values"](legend, fieldDef);
    }
    // Otherwise, return specified property.
    return legend[property];
}
function parseNonUnitLegend(model) {
    const { legends, resolve } = model.component;
    for (const child of model.children) {
        parseLegend(child);
        Object(_util__WEBPACK_IMPORTED_MODULE_4__["keys"])(child.component.legends).forEach((channel) => {
            resolve.legend[channel] = Object(_resolve__WEBPACK_IMPORTED_MODULE_8__["parseGuideResolve"])(model.component.resolve, channel);
            if (resolve.legend[channel] === 'shared') {
                // If the resolve says shared (and has not been overridden)
                // We will try to merge and see if there is a conflict
                legends[channel] = mergeLegendComponent(legends[channel], child.component.legends[channel]);
                if (!legends[channel]) {
                    // If merge returns nothing, there is a conflict so we cannot make the legend shared.
                    // Thus, mark legend as independent and remove the legend component.
                    resolve.legend[channel] = 'independent';
                    delete legends[channel];
                }
            }
        });
    }
    Object(_util__WEBPACK_IMPORTED_MODULE_4__["keys"])(legends).forEach((channel) => {
        for (const child of model.children) {
            if (!child.component.legends[channel]) {
                // skip if the child does not have a particular legend
                continue;
            }
            if (resolve.legend[channel] === 'shared') {
                // After merging shared legend, make sure to remove legend from child
                delete child.component.legends[channel];
            }
        }
    });
    return legends;
}
function mergeLegendComponent(mergedLegend, childLegend) {
    if (!mergedLegend) {
        return childLegend.clone();
    }
    const mergedOrient = mergedLegend.getWithExplicit('orient');
    const childOrient = childLegend.getWithExplicit('orient');
    if (mergedOrient.explicit && childOrient.explicit && mergedOrient.value !== childOrient.value) {
        // TODO: throw warning if resolve is explicit (We don't have info about explicit/implicit resolve yet.)
        // Cannot merge due to inconsistent orient
        return undefined;
    }
    let typeMerged = false;
    // Otherwise, let's merge
    for (const prop of _legend__WEBPACK_IMPORTED_MODULE_2__["VG_LEGEND_PROPERTIES"]) {
        const mergedValueWithExplicit = Object(_split__WEBPACK_IMPORTED_MODULE_9__["mergeValuesWithExplicit"])(mergedLegend.getWithExplicit(prop), childLegend.getWithExplicit(prop), prop, 'legend', 
        // Tie breaker function
        (v1, v2) => {
            switch (prop) {
                case 'symbolType':
                    return mergeSymbolType(v1, v2);
                case 'title':
                    return Object(_common__WEBPACK_IMPORTED_MODULE_5__["mergeTitleComponent"])(v1, v2);
                case 'type':
                    // There are only two types. If we have different types, then prefer symbol over gradient.
                    typeMerged = true;
                    return Object(_split__WEBPACK_IMPORTED_MODULE_9__["makeImplicit"])('symbol');
            }
            return Object(_split__WEBPACK_IMPORTED_MODULE_9__["defaultTieBreaker"])(v1, v2, prop, 'legend');
        });
        mergedLegend.setWithExplicit(prop, mergedValueWithExplicit);
    }
    if (typeMerged) {
        if (((mergedLegend.implicit || {}).encode || {}).gradient) {
            Object(_util__WEBPACK_IMPORTED_MODULE_4__["deleteNestedProperty"])(mergedLegend.implicit, ['encode', 'gradient']);
        }
        if (((mergedLegend.explicit || {}).encode || {}).gradient) {
            Object(_util__WEBPACK_IMPORTED_MODULE_4__["deleteNestedProperty"])(mergedLegend.explicit, ['encode', 'gradient']);
        }
    }
    return mergedLegend;
}
function mergeSymbolType(st1, st2) {
    if (st2.value === 'circle') {
        // prefer "circle" over "stroke"
        return st2;
    }
    return st1;
}
//# sourceMappingURL=parse.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/legend/properties.js":
/*!***********************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/legend/properties.js ***!
  \***********************************************************************/
/*! exports provided: values, defaultSymbolType, clipHeight, type, defaultType, direction, defaultGradientLength, defaultLabelOverlap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "values", function() { return values; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultSymbolType", function() { return defaultSymbolType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "clipHeight", function() { return clipHeight; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "type", function() { return type; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultType", function() { return defaultType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "direction", function() { return direction; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultGradientLength", function() { return defaultGradientLength; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultLabelOverlap", function() { return defaultLabelOverlap; });
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../channel */ "./node_modules/vega-lite/build/src/channel.js");
/* harmony import */ var _channeldef__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../channeldef */ "./node_modules/vega-lite/build/src/channeldef.js");
/* harmony import */ var _scale__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../scale */ "./node_modules/vega-lite/build/src/scale.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../util */ "./node_modules/vega-lite/build/src/util.js");




function values(legend, fieldDef) {
    const vals = legend.values;
    if (vals) {
        return Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["valueArray"])(fieldDef, vals);
    }
    return undefined;
}
function defaultSymbolType(mark) {
    return mark === 'line' ? 'stroke' : 'circle';
}
function clipHeight(legendType) {
    if (legendType === 'gradient') {
        return 20;
    }
    return undefined;
}
function type(params) {
    const { legend } = params;
    return Object(_util__WEBPACK_IMPORTED_MODULE_3__["getFirstDefined"])(legend.type, defaultType(params));
}
function defaultType({ channel, timeUnit, scaleType, alwaysReturn }) {
    // Following the logic in https://github.com/vega/vega-parser/blob/master/src/parsers/legend.js
    if (Object(_channel__WEBPACK_IMPORTED_MODULE_0__["isColorChannel"])(channel)) {
        if (Object(_util__WEBPACK_IMPORTED_MODULE_3__["contains"])(['quarter', 'month', 'day'], timeUnit)) {
            return 'symbol';
        }
        if (Object(_scale__WEBPACK_IMPORTED_MODULE_2__["isContinuousToContinuous"])(scaleType)) {
            return alwaysReturn ? 'gradient' : undefined;
        }
    }
    return alwaysReturn ? 'symbol' : undefined;
}
function direction({ legend, legendConfig, timeUnit, channel, scaleType }) {
    const orient = Object(_util__WEBPACK_IMPORTED_MODULE_3__["getFirstDefined"])(legend.orient, legendConfig.orient, 'right');
    const legendType = type({ legend, channel, timeUnit, scaleType, alwaysReturn: true });
    return Object(_util__WEBPACK_IMPORTED_MODULE_3__["getFirstDefined"])(legend.direction, legendConfig[legendType ? 'gradientDirection' : 'symbolDirection'], defaultDirection(orient, legendType));
}
function defaultDirection(orient, legendType) {
    switch (orient) {
        case 'top':
        case 'bottom':
            return 'horizontal';
        case 'left':
        case 'right':
        case 'none':
        case undefined: // undefined = "right" in Vega
            return undefined; // vertical is Vega's default
        default:
            // top-left / ...
            // For inner legend, uses compact layout like Tableau
            return legendType === 'gradient' ? 'horizontal' : undefined;
    }
}
function defaultGradientLength({ legend, legendConfig, model, channel, scaleType }) {
    const { gradientHorizontalMaxLength, gradientHorizontalMinLength, gradientVerticalMaxLength, gradientVerticalMinLength } = legendConfig;
    const dir = direction({ legend, legendConfig, channel, scaleType });
    if (dir === 'horizontal') {
        const orient = Object(_util__WEBPACK_IMPORTED_MODULE_3__["getFirstDefined"])(legend.orient, legendConfig.orient);
        if (orient === 'top' || orient === 'bottom') {
            return gradientLengthSignal(model, 'width', gradientHorizontalMinLength, gradientHorizontalMaxLength);
        }
        else {
            return gradientHorizontalMinLength;
        }
    }
    else {
        // vertical / undefined (Vega uses vertical by default)
        return gradientLengthSignal(model, 'height', gradientVerticalMinLength, gradientVerticalMaxLength);
    }
}
function gradientLengthSignal(model, sizeType, min, max) {
    const sizeSignal = model.getSizeSignalRef(sizeType).signal;
    return { signal: `clamp(${sizeSignal}, ${min}, ${max})` };
}
function defaultLabelOverlap(scaleType) {
    if (Object(_util__WEBPACK_IMPORTED_MODULE_3__["contains"])(['quantile', 'threshold', 'log'], scaleType)) {
        return 'greedy';
    }
    return undefined;
}
//# sourceMappingURL=properties.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/mark/area.js":
/*!***************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/mark/area.js ***!
  \***************************************************************/
/*! exports provided: area */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "area", function() { return area; });
/* harmony import */ var _mixins__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mixins */ "./node_modules/vega-lite/build/src/compile/mark/mixins.js");

const area = {
    vgMark: 'area',
    encodeEntry: (model) => {
        return Object.assign({}, _mixins__WEBPACK_IMPORTED_MODULE_0__["baseEncodeEntry"](model, { size: 'ignore', orient: 'include' }), _mixins__WEBPACK_IMPORTED_MODULE_0__["pointPosition"]('x', model, 'zeroOrMin'), _mixins__WEBPACK_IMPORTED_MODULE_0__["pointPosition"]('y', model, 'zeroOrMin'), _mixins__WEBPACK_IMPORTED_MODULE_0__["pointPosition2"](model, 'zeroOrMin', model.markDef.orient === 'horizontal' ? 'x2' : 'y2'), _mixins__WEBPACK_IMPORTED_MODULE_0__["defined"](model));
    }
};
//# sourceMappingURL=area.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/mark/bar.js":
/*!**************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/mark/bar.js ***!
  \**************************************************************/
/*! exports provided: bar */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bar", function() { return bar; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var _bin__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../bin */ "./node_modules/vega-lite/build/src/bin.js");
/* harmony import */ var _channeldef__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../channeldef */ "./node_modules/vega-lite/build/src/channeldef.js");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../log */ "./node_modules/vega-lite/build/src/log/index.js");
/* harmony import */ var _scale__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../scale */ "./node_modules/vega-lite/build/src/scale.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../util */ "./node_modules/vega-lite/build/src/util.js");
/* harmony import */ var _vega_schema__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../vega.schema */ "./node_modules/vega-lite/build/src/vega.schema.js");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../common */ "./node_modules/vega-lite/build/src/compile/common.js");
/* harmony import */ var _mixins__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./mixins */ "./node_modules/vega-lite/build/src/compile/mark/mixins.js");
/* harmony import */ var _valueref__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./valueref */ "./node_modules/vega-lite/build/src/compile/mark/valueref.js");










const bar = {
    vgMark: 'rect',
    encodeEntry: (model) => {
        return Object.assign({}, _mixins__WEBPACK_IMPORTED_MODULE_8__["baseEncodeEntry"](model, { size: 'ignore', orient: 'ignore' }), barPosition(model, 'x'), barPosition(model, 'y'));
    }
};
function barPosition(model, channel) {
    const { config, encoding, markDef } = model;
    const orient = markDef.orient;
    const sizeDef = encoding.size;
    const isBarLength = channel === 'x' ? orient === 'horizontal' : orient === 'vertical';
    const channel2 = channel === 'x' ? 'x2' : 'y2';
    const fieldDef = encoding[channel];
    const fieldDef2 = encoding[channel2];
    const scaleName = model.scaleName(channel);
    const scale = model.getScaleComponent(channel);
    const spacing = Object(_util__WEBPACK_IMPORTED_MODULE_5__["getFirstDefined"])(markDef.binSpacing, config.bar.binSpacing);
    const reverse = scale ? scale.get('reverse') : undefined;
    const mark = 'bar';
    // x, x2, and width -- we must specify two of these in all conditions
    if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_2__["isFieldDef"])(fieldDef) && Object(_bin__WEBPACK_IMPORTED_MODULE_1__["isBinned"])(fieldDef.bin)) {
        return _mixins__WEBPACK_IMPORTED_MODULE_8__["binPosition"]({ fieldDef, fieldDef2, channel, mark, scaleName, spacing, reverse });
    }
    else if (isBarLength || fieldDef2) {
        return Object.assign({}, _mixins__WEBPACK_IMPORTED_MODULE_8__["pointPosition"](channel, model, 'zeroOrMin'), _mixins__WEBPACK_IMPORTED_MODULE_8__["pointPosition2"](model, 'zeroOrMin', channel2));
    }
    else {
        const sizeChannel = channel === 'x' ? 'width' : 'height';
        // vertical
        if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_2__["isFieldDef"])(fieldDef)) {
            const scaleType = scale.get('type');
            if (Object(_bin__WEBPACK_IMPORTED_MODULE_1__["isBinning"])(fieldDef.bin) && !sizeDef && !Object(_scale__WEBPACK_IMPORTED_MODULE_4__["hasDiscreteDomain"])(scaleType)) {
                return _mixins__WEBPACK_IMPORTED_MODULE_8__["binPosition"]({ fieldDef, channel, scaleName, mark, spacing, reverse });
            }
            else {
                if (scaleType === _scale__WEBPACK_IMPORTED_MODULE_4__["ScaleType"].BAND) {
                    return _mixins__WEBPACK_IMPORTED_MODULE_8__["bandPosition"](fieldDef, channel, model, defaultSizeRef(markDef, sizeChannel, scaleName, scale, config));
                }
            }
        }
        // sized bin, normal point-ordinal axis, quantitative x-axis, or no x
        return _mixins__WEBPACK_IMPORTED_MODULE_8__["centeredPointPositionWithSize"](channel, model, _valueref__WEBPACK_IMPORTED_MODULE_9__["mid"](model[sizeChannel]), defaultSizeRef(markDef, sizeChannel, scaleName, scale, config));
    }
}
function defaultSizeRef(markDef, sizeChannel, scaleName, scale, config) {
    const markPropOrConfig = Object(_util__WEBPACK_IMPORTED_MODULE_5__["getFirstDefined"])(markDef[sizeChannel], markDef.size, Object(_common__WEBPACK_IMPORTED_MODULE_7__["getMarkConfig"])('size', markDef, config, { vgChannel: sizeChannel }));
    if (markPropOrConfig !== undefined) {
        return { value: markPropOrConfig };
    }
    if (scale) {
        const scaleType = scale.get('type');
        if (scaleType === 'point' || scaleType === 'band') {
            if (config.bar.discreteBandSize !== undefined) {
                return { value: config.bar.discreteBandSize };
            }
            if (scaleType === _scale__WEBPACK_IMPORTED_MODULE_4__["ScaleType"].POINT) {
                const scaleRange = scale.get('range');
                if (Object(_vega_schema__WEBPACK_IMPORTED_MODULE_6__["isVgRangeStep"])(scaleRange) && Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isNumber"])(scaleRange.step)) {
                    return { value: scaleRange.step - 1 };
                }
                _log__WEBPACK_IMPORTED_MODULE_3__["warn"](_log__WEBPACK_IMPORTED_MODULE_3__["message"].BAR_WITH_POINT_SCALE_AND_RANGESTEP_NULL);
            }
            else {
                // BAND
                return _valueref__WEBPACK_IMPORTED_MODULE_9__["bandRef"](scaleName);
            }
        }
        else {
            // continuous scale
            return { value: config.bar.continuousBandSize };
        }
    }
    // No Scale
    const value = Object(_util__WEBPACK_IMPORTED_MODULE_5__["getFirstDefined"])(
    // No scale is like discrete bar (with one item)
    config.bar.discreteBandSize, config.scale.rangeStep ? config.scale.rangeStep - 1 : undefined, 
    // If somehow default rangeStep is set to null or undefined, use 20 as back up
    20);
    return { value };
}
//# sourceMappingURL=bar.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/mark/geoshape.js":
/*!*******************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/mark/geoshape.js ***!
  \*******************************************************************/
/*! exports provided: geoshape */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "geoshape", function() { return geoshape; });
/* harmony import */ var _channeldef__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../channeldef */ "./node_modules/vega-lite/build/src/channeldef.js");
/* harmony import */ var _type__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../type */ "./node_modules/vega-lite/build/src/type.js");
/* harmony import */ var _mixins__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mixins */ "./node_modules/vega-lite/build/src/compile/mark/mixins.js");



const geoshape = {
    vgMark: 'shape',
    encodeEntry: (model) => {
        return Object.assign({}, _mixins__WEBPACK_IMPORTED_MODULE_2__["baseEncodeEntry"](model, { size: 'ignore', orient: 'ignore' }));
    },
    postEncodingTransform: (model) => {
        const { encoding } = model;
        const shapeDef = encoding.shape;
        const transform = Object.assign({ type: 'geoshape', projection: model.projectionName() }, (shapeDef && Object(_channeldef__WEBPACK_IMPORTED_MODULE_0__["isFieldDef"])(shapeDef) && shapeDef.type === _type__WEBPACK_IMPORTED_MODULE_1__["GEOJSON"]
            ? { field: Object(_channeldef__WEBPACK_IMPORTED_MODULE_0__["vgField"])(shapeDef, { expr: 'datum' }) }
            : {}));
        return [transform];
    }
};
//# sourceMappingURL=geoshape.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/mark/init.js":
/*!***************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/mark/init.js ***!
  \***************************************************************/
/*! exports provided: normalizeMarkDef */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "normalizeMarkDef", function() { return normalizeMarkDef; });
/* harmony import */ var _bin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../bin */ "./node_modules/vega-lite/build/src/bin.js");
/* harmony import */ var _channeldef__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../channeldef */ "./node_modules/vega-lite/build/src/channeldef.js");
/* harmony import */ var _encoding__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../encoding */ "./node_modules/vega-lite/build/src/encoding.js");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../log */ "./node_modules/vega-lite/build/src/log/index.js");
/* harmony import */ var _mark__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../mark */ "./node_modules/vega-lite/build/src/mark.js");
/* harmony import */ var _type__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../type */ "./node_modules/vega-lite/build/src/type.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../util */ "./node_modules/vega-lite/build/src/util.js");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../common */ "./node_modules/vega-lite/build/src/compile/common.js");








function normalizeMarkDef(mark, encoding, config) {
    const markDef = Object(_mark__WEBPACK_IMPORTED_MODULE_4__["isMarkDef"])(mark) ? Object.assign({}, mark) : { type: mark };
    // set orient, which can be overridden by rules as sometimes the specified orient is invalid.
    const specifiedOrient = markDef.orient || Object(_common__WEBPACK_IMPORTED_MODULE_7__["getMarkConfig"])('orient', markDef, config);
    markDef.orient = orient(markDef.type, encoding, specifiedOrient);
    if (specifiedOrient !== undefined && specifiedOrient !== markDef.orient) {
        _log__WEBPACK_IMPORTED_MODULE_3__["warn"](_log__WEBPACK_IMPORTED_MODULE_3__["message"].orientOverridden(markDef.orient, specifiedOrient));
    }
    // set opacity and filled if not specified in mark config
    const specifiedOpacity = Object(_util__WEBPACK_IMPORTED_MODULE_6__["getFirstDefined"])(markDef.opacity, Object(_common__WEBPACK_IMPORTED_MODULE_7__["getMarkConfig"])('opacity', markDef, config));
    if (specifiedOpacity === undefined) {
        markDef.opacity = opacity(markDef.type, encoding);
    }
    const specifiedFilled = markDef.filled;
    if (specifiedFilled === undefined) {
        markDef.filled = filled(markDef, config);
    }
    // set cursor, which should be pointer if href channel is present unless otherwise specified
    const specifiedCursor = markDef.cursor || Object(_common__WEBPACK_IMPORTED_MODULE_7__["getMarkConfig"])('cursor', markDef, config);
    if (specifiedCursor === undefined) {
        markDef.cursor = cursor(markDef, encoding, config);
    }
    return markDef;
}
function cursor(markDef, encoding, config) {
    if (encoding.href || markDef.href || Object(_common__WEBPACK_IMPORTED_MODULE_7__["getMarkConfig"])('href', markDef, config)) {
        return 'pointer';
    }
    return markDef.cursor;
}
function opacity(mark, encoding) {
    if (Object(_util__WEBPACK_IMPORTED_MODULE_6__["contains"])([_mark__WEBPACK_IMPORTED_MODULE_4__["POINT"], _mark__WEBPACK_IMPORTED_MODULE_4__["TICK"], _mark__WEBPACK_IMPORTED_MODULE_4__["CIRCLE"], _mark__WEBPACK_IMPORTED_MODULE_4__["SQUARE"]], mark)) {
        // point-based marks
        if (!Object(_encoding__WEBPACK_IMPORTED_MODULE_2__["isAggregate"])(encoding)) {
            return 0.7;
        }
    }
    return undefined;
}
function filled(markDef, config) {
    const filledConfig = Object(_common__WEBPACK_IMPORTED_MODULE_7__["getMarkConfig"])('filled', markDef, config);
    const mark = markDef.type;
    return Object(_util__WEBPACK_IMPORTED_MODULE_6__["getFirstDefined"])(filledConfig, mark !== _mark__WEBPACK_IMPORTED_MODULE_4__["POINT"] && mark !== _mark__WEBPACK_IMPORTED_MODULE_4__["LINE"] && mark !== _mark__WEBPACK_IMPORTED_MODULE_4__["RULE"]);
}
function orient(mark, encoding, specifiedOrient) {
    switch (mark) {
        case _mark__WEBPACK_IMPORTED_MODULE_4__["POINT"]:
        case _mark__WEBPACK_IMPORTED_MODULE_4__["CIRCLE"]:
        case _mark__WEBPACK_IMPORTED_MODULE_4__["SQUARE"]:
        case _mark__WEBPACK_IMPORTED_MODULE_4__["TEXT"]:
        case _mark__WEBPACK_IMPORTED_MODULE_4__["RECT"]:
            // orient is meaningless for these marks.
            return undefined;
    }
    const { x, y, x2, y2 } = encoding;
    switch (mark) {
        case _mark__WEBPACK_IMPORTED_MODULE_4__["BAR"]:
            if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["isFieldDef"])(x) && Object(_bin__WEBPACK_IMPORTED_MODULE_0__["isBinned"])(x.bin)) {
                return 'vertical';
            }
            if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["isFieldDef"])(y) && Object(_bin__WEBPACK_IMPORTED_MODULE_0__["isBinned"])(y.bin)) {
                return 'horizontal';
            }
            if (y2 || x2) {
                // Ranged bar does not always have clear orientation, so we allow overriding
                if (specifiedOrient) {
                    return specifiedOrient;
                }
                // If y is range and x is non-range, non-bin Q, y is likely a prebinned field
                if (!x2 && Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["isFieldDef"])(x) && x.type === _type__WEBPACK_IMPORTED_MODULE_5__["QUANTITATIVE"] && !Object(_bin__WEBPACK_IMPORTED_MODULE_0__["isBinning"])(x.bin)) {
                    return 'horizontal';
                }
                // If x is range and y is non-range, non-bin Q, x is likely a prebinned field
                if (!y2 && Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["isFieldDef"])(y) && y.type === _type__WEBPACK_IMPORTED_MODULE_5__["QUANTITATIVE"] && !Object(_bin__WEBPACK_IMPORTED_MODULE_0__["isBinning"])(y.bin)) {
                    return 'vertical';
                }
            }
        // falls through
        case _mark__WEBPACK_IMPORTED_MODULE_4__["RULE"]:
            // return undefined for line segment rule and bar with both axis ranged
            if (x2 && y2) {
                return undefined;
            }
        // falls through
        case _mark__WEBPACK_IMPORTED_MODULE_4__["AREA"]:
            // If there are range for both x and y, y (vertical) has higher precedence.
            if (y2) {
                if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["isFieldDef"])(y) && Object(_bin__WEBPACK_IMPORTED_MODULE_0__["isBinned"])(y.bin)) {
                    return 'horizontal';
                }
                else {
                    return 'vertical';
                }
            }
            else if (x2) {
                if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["isFieldDef"])(x) && Object(_bin__WEBPACK_IMPORTED_MODULE_0__["isBinned"])(x.bin)) {
                    return 'vertical';
                }
                else {
                    return 'horizontal';
                }
            }
            else if (mark === _mark__WEBPACK_IMPORTED_MODULE_4__["RULE"]) {
                if (encoding.x && !encoding.y) {
                    return 'vertical';
                }
                else if (encoding.y && !encoding.x) {
                    return 'horizontal';
                }
            }
        // falls through
        case _mark__WEBPACK_IMPORTED_MODULE_4__["LINE"]:
        case _mark__WEBPACK_IMPORTED_MODULE_4__["TICK"]: {
            // Tick is opposite to bar, line, area and never have ranged mark.
            const xIsContinuous = Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["isFieldDef"])(encoding.x) && Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["isContinuous"])(encoding.x);
            const yIsContinuous = Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["isFieldDef"])(encoding.y) && Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["isContinuous"])(encoding.y);
            if (xIsContinuous && !yIsContinuous) {
                return mark !== 'tick' ? 'horizontal' : 'vertical';
            }
            else if (!xIsContinuous && yIsContinuous) {
                return mark !== 'tick' ? 'vertical' : 'horizontal';
            }
            else if (xIsContinuous && yIsContinuous) {
                const xDef = encoding.x; // we can cast here since they are surely fieldDef
                const yDef = encoding.y;
                const xIsTemporal = xDef.type === _type__WEBPACK_IMPORTED_MODULE_5__["TEMPORAL"];
                const yIsTemporal = yDef.type === _type__WEBPACK_IMPORTED_MODULE_5__["TEMPORAL"];
                // temporal without timeUnit is considered continuous, but better serves as dimension
                if (xIsTemporal && !yIsTemporal) {
                    return mark !== 'tick' ? 'vertical' : 'horizontal';
                }
                else if (!xIsTemporal && yIsTemporal) {
                    return mark !== 'tick' ? 'horizontal' : 'vertical';
                }
                if (!xDef.aggregate && yDef.aggregate) {
                    return mark !== 'tick' ? 'vertical' : 'horizontal';
                }
                else if (xDef.aggregate && !yDef.aggregate) {
                    return mark !== 'tick' ? 'horizontal' : 'vertical';
                }
                if (specifiedOrient) {
                    // When ambiguous, use user specified one.
                    return specifiedOrient;
                }
                return 'vertical';
            }
            else {
                // Discrete x Discrete case
                if (specifiedOrient) {
                    // When ambiguous, use user specified one.
                    return specifiedOrient;
                }
                return undefined;
            }
        }
    }
    return 'vertical';
}
//# sourceMappingURL=init.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/mark/line.js":
/*!***************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/mark/line.js ***!
  \***************************************************************/
/*! exports provided: line, trail */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "line", function() { return line; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "trail", function() { return trail; });
/* harmony import */ var _mixins__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mixins */ "./node_modules/vega-lite/build/src/compile/mark/mixins.js");
/* harmony import */ var _valueref__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./valueref */ "./node_modules/vega-lite/build/src/compile/mark/valueref.js");


const line = {
    vgMark: 'line',
    encodeEntry: (model) => {
        const { width, height } = model;
        return Object.assign({}, _mixins__WEBPACK_IMPORTED_MODULE_0__["baseEncodeEntry"](model, { size: 'ignore', orient: 'ignore' }), _mixins__WEBPACK_IMPORTED_MODULE_0__["pointPosition"]('x', model, _valueref__WEBPACK_IMPORTED_MODULE_1__["mid"](width)), _mixins__WEBPACK_IMPORTED_MODULE_0__["pointPosition"]('y', model, _valueref__WEBPACK_IMPORTED_MODULE_1__["mid"](height)), _mixins__WEBPACK_IMPORTED_MODULE_0__["nonPosition"]('size', model, {
            vgChannel: 'strokeWidth' // VL's line size is strokeWidth
        }), _mixins__WEBPACK_IMPORTED_MODULE_0__["defined"](model));
    }
};
const trail = {
    vgMark: 'trail',
    encodeEntry: (model) => {
        const { width, height } = model;
        return Object.assign({}, _mixins__WEBPACK_IMPORTED_MODULE_0__["baseEncodeEntry"](model, { size: 'include', orient: 'ignore' }), _mixins__WEBPACK_IMPORTED_MODULE_0__["pointPosition"]('x', model, _valueref__WEBPACK_IMPORTED_MODULE_1__["mid"](width)), _mixins__WEBPACK_IMPORTED_MODULE_0__["pointPosition"]('y', model, _valueref__WEBPACK_IMPORTED_MODULE_1__["mid"](height)), _mixins__WEBPACK_IMPORTED_MODULE_0__["nonPosition"]('size', model), _mixins__WEBPACK_IMPORTED_MODULE_0__["defined"](model));
    }
};
//# sourceMappingURL=line.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/mark/mark.js":
/*!***************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/mark/mark.js ***!
  \***************************************************************/
/*! exports provided: parseMarkGroups, getSort, pathGroupingFields */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseMarkGroups", function() { return parseMarkGroups; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getSort", function() { return getSort; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pathGroupingFields", function() { return pathGroupingFields; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var _channeldef__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../channeldef */ "./node_modules/vega-lite/build/src/channeldef.js");
/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../data */ "./node_modules/vega-lite/build/src/data.js");
/* harmony import */ var _encoding__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../encoding */ "./node_modules/vega-lite/build/src/encoding.js");
/* harmony import */ var _mark__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../mark */ "./node_modules/vega-lite/build/src/mark.js");
/* harmony import */ var _sort__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../sort */ "./node_modules/vega-lite/build/src/sort.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../util */ "./node_modules/vega-lite/build/src/util.js");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../common */ "./node_modules/vega-lite/build/src/compile/common.js");
/* harmony import */ var _area__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./area */ "./node_modules/vega-lite/build/src/compile/mark/area.js");
/* harmony import */ var _bar__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./bar */ "./node_modules/vega-lite/build/src/compile/mark/bar.js");
/* harmony import */ var _geoshape__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./geoshape */ "./node_modules/vega-lite/build/src/compile/mark/geoshape.js");
/* harmony import */ var _line__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./line */ "./node_modules/vega-lite/build/src/compile/mark/line.js");
/* harmony import */ var _point__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./point */ "./node_modules/vega-lite/build/src/compile/mark/point.js");
/* harmony import */ var _rect__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./rect */ "./node_modules/vega-lite/build/src/compile/mark/rect.js");
/* harmony import */ var _rule__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./rule */ "./node_modules/vega-lite/build/src/compile/mark/rule.js");
/* harmony import */ var _text__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./text */ "./node_modules/vega-lite/build/src/compile/mark/text.js");
/* harmony import */ var _tick__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./tick */ "./node_modules/vega-lite/build/src/compile/mark/tick.js");

















const markCompiler = {
    area: _area__WEBPACK_IMPORTED_MODULE_8__["area"],
    bar: _bar__WEBPACK_IMPORTED_MODULE_9__["bar"],
    circle: _point__WEBPACK_IMPORTED_MODULE_12__["circle"],
    geoshape: _geoshape__WEBPACK_IMPORTED_MODULE_10__["geoshape"],
    line: _line__WEBPACK_IMPORTED_MODULE_11__["line"],
    point: _point__WEBPACK_IMPORTED_MODULE_12__["point"],
    rect: _rect__WEBPACK_IMPORTED_MODULE_13__["rect"],
    rule: _rule__WEBPACK_IMPORTED_MODULE_14__["rule"],
    square: _point__WEBPACK_IMPORTED_MODULE_12__["square"],
    text: _text__WEBPACK_IMPORTED_MODULE_15__["text"],
    tick: _tick__WEBPACK_IMPORTED_MODULE_16__["tick"],
    trail: _line__WEBPACK_IMPORTED_MODULE_11__["trail"]
};
function parseMarkGroups(model) {
    if (Object(_util__WEBPACK_IMPORTED_MODULE_6__["contains"])([_mark__WEBPACK_IMPORTED_MODULE_4__["LINE"], _mark__WEBPACK_IMPORTED_MODULE_4__["AREA"], _mark__WEBPACK_IMPORTED_MODULE_4__["TRAIL"]], model.mark)) {
        return parsePathMark(model);
    }
    else {
        return getMarkGroups(model);
    }
}
const FACETED_PATH_PREFIX = 'faceted_path_';
function parsePathMark(model) {
    const details = pathGroupingFields(model.mark, model.encoding);
    const pathMarks = getMarkGroups(model, {
        // If has subfacet for line/area group, need to use faceted data from below.
        fromPrefix: details.length > 0 ? FACETED_PATH_PREFIX : ''
    });
    if (details.length > 0) {
        // have level of details - need to facet line into subgroups
        // TODO: for non-stacked plot, map order to zindex. (Maybe rename order for layer to zindex?)
        return [
            {
                name: model.getName('pathgroup'),
                type: 'group',
                from: {
                    facet: {
                        name: FACETED_PATH_PREFIX + model.requestDataName(_data__WEBPACK_IMPORTED_MODULE_2__["MAIN"]),
                        data: model.requestDataName(_data__WEBPACK_IMPORTED_MODULE_2__["MAIN"]),
                        groupby: details
                    }
                },
                encode: {
                    update: {
                        width: { field: { group: 'width' } },
                        height: { field: { group: 'height' } }
                    }
                },
                marks: pathMarks
            }
        ];
    }
    else {
        return pathMarks;
    }
}
function getSort(model) {
    const { encoding, stack, mark, markDef, config } = model;
    const order = encoding.order;
    if ((!Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isArray"])(order) && Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["isValueDef"])(order) && Object(_util__WEBPACK_IMPORTED_MODULE_6__["isNullOrFalse"])(order.value)) ||
        ((!order && Object(_util__WEBPACK_IMPORTED_MODULE_6__["isNullOrFalse"])(markDef.order)) || Object(_util__WEBPACK_IMPORTED_MODULE_6__["isNullOrFalse"])(Object(_common__WEBPACK_IMPORTED_MODULE_7__["getMarkConfig"])('order', markDef, config)))) {
        return undefined;
    }
    else if ((Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isArray"])(order) || Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["isFieldDef"])(order)) && !stack) {
        // Sort by the order field if it is specified and the field is not stacked. (For stacked field, order specify stack order.)
        return Object(_common__WEBPACK_IMPORTED_MODULE_7__["sortParams"])(order, { expr: 'datum' });
    }
    else if (Object(_mark__WEBPACK_IMPORTED_MODULE_4__["isPathMark"])(mark)) {
        // For both line and area, we sort values based on dimension by default
        const dimensionChannelDef = encoding[markDef.orient === 'horizontal' ? 'y' : 'x'];
        if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["isFieldDef"])(dimensionChannelDef)) {
            const s = dimensionChannelDef.sort;
            const sortField = Object(_sort__WEBPACK_IMPORTED_MODULE_5__["isSortField"])(s)
                ? Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["vgField"])({
                    // FIXME: this op might not already exist?
                    // FIXME: what if dimensionChannel (x or y) contains custom domain?
                    aggregate: Object(_encoding__WEBPACK_IMPORTED_MODULE_3__["isAggregate"])(model.encoding) ? s.op : undefined,
                    field: s.field
                }, { expr: 'datum' })
                : Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["vgField"])(dimensionChannelDef, {
                    // For stack with imputation, we only have bin_mid
                    binSuffix: model.stack && model.stack.impute ? 'mid' : undefined,
                    expr: 'datum'
                });
            return {
                field: sortField,
                order: 'descending'
            };
        }
        return undefined;
    }
    return undefined;
}
function getMarkGroups(model, opt = { fromPrefix: '' }) {
    const mark = model.mark;
    const clip = Object(_util__WEBPACK_IMPORTED_MODULE_6__["getFirstDefined"])(model.markDef.clip, scaleClip(model), projectionClip(model));
    const style = Object(_common__WEBPACK_IMPORTED_MODULE_7__["getStyles"])(model.markDef);
    const key = model.encoding.key;
    const sort = getSort(model);
    const postEncodingTransform = markCompiler[mark].postEncodingTransform
        ? markCompiler[mark].postEncodingTransform(model)
        : null;
    return [
        Object.assign({ name: model.getName('marks'), type: markCompiler[mark].vgMark }, (clip ? { clip: true } : {}), (style ? { style } : {}), (key ? { key: { field: key.field } } : {}), (sort ? { sort } : {}), { from: { data: opt.fromPrefix + model.requestDataName(_data__WEBPACK_IMPORTED_MODULE_2__["MAIN"]) }, encode: {
                update: markCompiler[mark].encodeEntry(model)
            } }, (postEncodingTransform
            ? {
                transform: postEncodingTransform
            }
            : {}))
    ];
}
/**
 * Returns list of path grouping fields
 * that the model's spec contains.
 */
function pathGroupingFields(mark, encoding) {
    return Object(_util__WEBPACK_IMPORTED_MODULE_6__["keys"])(encoding).reduce((details, channel) => {
        switch (channel) {
            // x, y, x2, y2, lat, long, lat1, long2, order, tooltip, href, cursor should not cause lines to group
            case 'x':
            case 'y':
            case 'order':
            case 'href':
            case 'x2':
            case 'y2':
            // falls through
            case 'latitude':
            case 'longitude':
            case 'latitude2':
            case 'longitude2':
            // TODO: case 'cursor':
            // text, shape, shouldn't be a part of line/trail/area [falls through]
            case 'text':
            case 'shape':
            // falls through
            // tooltip fields should not be added to group by [falls through]
            case 'tooltip':
                return details;
            case 'detail':
            case 'key': {
                const channelDef = encoding[channel];
                if (Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isArray"])(channelDef) || Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["isFieldDef"])(channelDef)) {
                    (Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isArray"])(channelDef) ? channelDef : [channelDef]).forEach(fieldDef => {
                        if (!fieldDef.aggregate) {
                            details.push(Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["vgField"])(fieldDef, {}));
                        }
                    });
                }
                return details;
            }
            case 'size':
                if (mark === 'trail') {
                    // For trail, size should not group trail lines.
                    return details;
                }
            // For line, it should group lines.
            // falls through
            case 'color':
            case 'fill':
            case 'stroke':
            case 'opacity':
            case 'fillOpacity':
            case 'strokeOpacity':
            case 'strokeWidth': {
                // TODO strokeDashOffset:
                // falls through
                const fieldDef = Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["getTypedFieldDef"])(encoding[channel]);
                if (fieldDef && !fieldDef.aggregate) {
                    details.push(Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["vgField"])(fieldDef, {}));
                }
                return details;
            }
            default:
                throw new Error(`Bug: Channel ${channel} unimplemented for line mark`);
        }
    }, []);
}
/**
 * If scales are bound to interval selections, we want to automatically clip
 * marks to account for panning/zooming interactions. We identify bound scales
 * by the domainRaw property, which gets added during scale parsing.
 */
function scaleClip(model) {
    const xScale = model.getScaleComponent('x');
    const yScale = model.getScaleComponent('y');
    return (xScale && xScale.get('domainRaw')) || (yScale && yScale.get('domainRaw')) ? true : undefined;
}
/**
 * If we use a custom projection with auto-fitting to the geodata extent,
 * we need to clip to ensure the chart size doesn't explode.
 */
function projectionClip(model) {
    const projection = model.component.projection;
    return projection && !projection.isFit ? true : undefined;
}
//# sourceMappingURL=mark.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/mark/mixins.js":
/*!*****************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/mark/mixins.js ***!
  \*****************************************************************/
/*! exports provided: color, baseEncodeEntry, valueIfDefined, defined, nonPosition, wrapCondition, tooltip, text, bandPosition, centeredPointPositionWithSize, binPosition, pointPosition, pointPosition2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "color", function() { return color; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "baseEncodeEntry", function() { return baseEncodeEntry; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "valueIfDefined", function() { return valueIfDefined; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defined", function() { return defined; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "nonPosition", function() { return nonPosition; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "wrapCondition", function() { return wrapCondition; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tooltip", function() { return tooltip; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "text", function() { return text; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bandPosition", function() { return bandPosition; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "centeredPointPositionWithSize", function() { return centeredPointPositionWithSize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "binPosition", function() { return binPosition; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pointPosition", function() { return pointPosition; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pointPosition2", function() { return pointPosition2; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var _bin__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../bin */ "./node_modules/vega-lite/build/src/bin.js");
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../channel */ "./node_modules/vega-lite/build/src/channel.js");
/* harmony import */ var _channeldef__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../channeldef */ "./node_modules/vega-lite/build/src/channeldef.js");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../log */ "./node_modules/vega-lite/build/src/log/index.js");
/* harmony import */ var _mark__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../mark */ "./node_modules/vega-lite/build/src/mark.js");
/* harmony import */ var _scale__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../scale */ "./node_modules/vega-lite/build/src/scale.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../util */ "./node_modules/vega-lite/build/src/util.js");
/* harmony import */ var _vega_schema__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../vega.schema */ "./node_modules/vega-lite/build/src/vega.schema.js");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../common */ "./node_modules/vega-lite/build/src/compile/common.js");
/* harmony import */ var _predicate__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../predicate */ "./node_modules/vega-lite/build/src/compile/predicate.js");
/* harmony import */ var _selection_assemble__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../selection/assemble */ "./node_modules/vega-lite/build/src/compile/selection/assemble.js");
/* harmony import */ var _valueref__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./valueref */ "./node_modules/vega-lite/build/src/compile/mark/valueref.js");














function isVisible(c) {
    return c !== 'transparent' && c !== null && c !== undefined;
}
function color(model) {
    const { markDef, encoding, config } = model;
    const { filled, type: markType } = markDef;
    const configValue = {
        fill: Object(_common__WEBPACK_IMPORTED_MODULE_9__["getMarkConfig"])('fill', markDef, config),
        stroke: Object(_common__WEBPACK_IMPORTED_MODULE_9__["getMarkConfig"])('stroke', markDef, config),
        color: Object(_common__WEBPACK_IMPORTED_MODULE_9__["getMarkConfig"])('color', markDef, config)
    };
    const transparentIfNeeded = Object(_util__WEBPACK_IMPORTED_MODULE_7__["contains"])(['bar', 'point', 'circle', 'square', 'geoshape'], markType)
        ? 'transparent'
        : undefined;
    const defaultFill = Object(_util__WEBPACK_IMPORTED_MODULE_7__["getFirstDefined"])(markDef.fill, configValue.fill, 
    // If there is no fill, always fill symbols, bar, geoshape
    // with transparent fills https://github.com/vega/vega-lite/issues/1316
    transparentIfNeeded);
    const defaultStroke = Object(_util__WEBPACK_IMPORTED_MODULE_7__["getFirstDefined"])(markDef.stroke, configValue.stroke);
    const colorVgChannel = filled ? 'fill' : 'stroke';
    const fillStrokeMarkDefAndConfig = Object.assign({}, (defaultFill ? { fill: { value: defaultFill } } : {}), (defaultStroke ? { stroke: { value: defaultStroke } } : {}));
    if (encoding.fill || encoding.stroke) {
        // ignore encoding.color, markDef.color, config.color
        if (markDef.color) {
            // warn for markDef.color  (no need to warn encoding.color as it will be dropped in normalized already)
            _log__WEBPACK_IMPORTED_MODULE_4__["warn"](_log__WEBPACK_IMPORTED_MODULE_4__["message"].droppingColor('property', { fill: 'fill' in encoding, stroke: 'stroke' in encoding }));
        }
        return Object.assign({}, nonPosition('fill', model, { defaultValue: Object(_util__WEBPACK_IMPORTED_MODULE_7__["getFirstDefined"])(defaultFill, transparentIfNeeded) }), nonPosition('stroke', model, { defaultValue: defaultStroke }));
    }
    else if (encoding.color) {
        return Object.assign({}, fillStrokeMarkDefAndConfig, nonPosition('color', model, {
            vgChannel: colorVgChannel,
            // apply default fill/stroke first, then color config, then transparent if needed.
            defaultValue: Object(_util__WEBPACK_IMPORTED_MODULE_7__["getFirstDefined"])(markDef[colorVgChannel], markDef.color, configValue[colorVgChannel], configValue.color, filled ? transparentIfNeeded : undefined)
        }));
    }
    else if (isVisible(markDef.fill) || isVisible(markDef.stroke)) {
        // Ignore markDef.color
        if (markDef.color) {
            _log__WEBPACK_IMPORTED_MODULE_4__["warn"](_log__WEBPACK_IMPORTED_MODULE_4__["message"].droppingColor('property', { fill: 'fill' in markDef, stroke: 'stroke' in markDef }));
        }
        return fillStrokeMarkDefAndConfig;
    }
    else if (markDef.color) {
        return Object.assign({}, fillStrokeMarkDefAndConfig, { 
            // override config with markDef.color
            [colorVgChannel]: { value: markDef.color } });
    }
    else if (isVisible(configValue.fill) || isVisible(configValue.stroke)) {
        // ignore config.color
        return fillStrokeMarkDefAndConfig;
    }
    else if (configValue.color) {
        return Object.assign({}, (transparentIfNeeded ? { fill: { value: 'transparent' } } : {}), { [colorVgChannel]: { value: configValue.color } });
    }
    return {};
}
function baseEncodeEntry(model, ignore) {
    const { fill, stroke } = color(model);
    return Object.assign({}, markDefProperties(model.markDef, ignore), wrapAllFieldsInvalid(model, 'fill', fill), wrapAllFieldsInvalid(model, 'stroke', stroke), nonPosition('opacity', model), nonPosition('fillOpacity', model), nonPosition('strokeOpacity', model), nonPosition('strokeWidth', model), tooltip(model), text(model, 'href'));
}
function wrapAllFieldsInvalid(model, channel, valueRef) {
    const { config, mark } = model;
    if (config.invalidValues === 'hide' && valueRef && !Object(_mark__WEBPACK_IMPORTED_MODULE_5__["isPathMark"])(mark)) {
        // For non-path marks, we have to exclude invalid values (null and NaN) for scales with continuous domains.
        // For path marks, we will use "defined" property and skip these values instead.
        const test = allFieldsInvalidPredicate(model, { invalid: true, channels: _channel__WEBPACK_IMPORTED_MODULE_2__["SCALE_CHANNELS"] });
        if (test) {
            return {
                [channel]: [
                    // prepend the invalid case
                    // TODO: support custom value
                    { test, value: null },
                    ...Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["array"])(valueRef)
                ]
            };
        }
    }
    return valueRef ? { [channel]: valueRef } : {};
}
function markDefProperties(mark, ignore) {
    return _vega_schema__WEBPACK_IMPORTED_MODULE_8__["VG_MARK_CONFIGS"].reduce((m, prop) => {
        if (mark[prop] !== undefined && ignore[prop] !== 'ignore') {
            m[prop] = { value: mark[prop] };
        }
        return m;
    }, {});
}
function valueIfDefined(prop, value) {
    if (value !== undefined) {
        return { [prop]: { value: value } };
    }
    return undefined;
}
function allFieldsInvalidPredicate(model, { invalid = false, channels }) {
    const filterIndex = channels.reduce((aggregator, channel) => {
        const scaleComponent = model.getScaleComponent(channel);
        if (scaleComponent) {
            const scaleType = scaleComponent.get('type');
            const field = model.vgField(channel, { expr: 'datum' });
            // While discrete domain scales can handle invalid values, continuous scales can't.
            if (field && Object(_scale__WEBPACK_IMPORTED_MODULE_6__["hasContinuousDomain"])(scaleType)) {
                aggregator[field] = true;
            }
        }
        return aggregator;
    }, {});
    const fields = Object(_util__WEBPACK_IMPORTED_MODULE_7__["keys"])(filterIndex);
    if (fields.length > 0) {
        const op = invalid ? '||' : '&&';
        return fields.map(field => Object(_valueref__WEBPACK_IMPORTED_MODULE_12__["fieldInvalidPredicate"])(field, invalid)).join(` ${op} `);
    }
    return undefined;
}
function defined(model) {
    if (model.config.invalidValues) {
        const signal = allFieldsInvalidPredicate(model, { channels: ['x', 'y'] });
        if (signal) {
            return { defined: { signal } };
        }
    }
    return {};
}
/**
 * Return mixins for non-positional channels with scales.  (Text doesn't have scale.)
 */
function nonPosition(channel, model, opt = {}) {
    const { markDef, encoding, config } = model;
    const { vgChannel = channel } = opt;
    let { defaultRef, defaultValue } = opt;
    if (defaultRef === undefined) {
        // prettier-ignore
        defaultValue = defaultValue ||
            (vgChannel === channel
                ? // When vl channel is the same as Vega's, no need to read from config as Vega will apply them correctly
                    markDef[channel]
                : // However, when they are different (e.g, vl's text size is vg fontSize), need to read "size" from configs
                    Object(_util__WEBPACK_IMPORTED_MODULE_7__["getFirstDefined"])(markDef[channel], markDef[vgChannel], Object(_common__WEBPACK_IMPORTED_MODULE_9__["getMarkConfig"])(channel, markDef, config, { vgChannel })));
        defaultRef = defaultValue ? { value: defaultValue } : undefined;
    }
    const channelDef = encoding[channel];
    return wrapCondition(model, channelDef, vgChannel, cDef => {
        return _valueref__WEBPACK_IMPORTED_MODULE_12__["midPoint"]({
            channel,
            channelDef: cDef,
            scaleName: model.scaleName(channel),
            scale: model.getScaleComponent(channel),
            stack: null,
            defaultRef
        });
    });
}
/**
 * Return a mixin that include a Vega production rule for a Vega-Lite conditional channel definition.
 * or a simple mixin if channel def has no condition.
 */
function wrapCondition(model, channelDef, vgChannel, refFn) {
    const condition = channelDef && channelDef.condition;
    const valueRef = refFn(channelDef);
    if (condition) {
        const conditions = Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isArray"])(condition) ? condition : [condition];
        const vgConditions = conditions.map(c => {
            const conditionValueRef = refFn(c);
            const test = Object(_channeldef__WEBPACK_IMPORTED_MODULE_3__["isConditionalSelection"])(c)
                ? Object(_selection_assemble__WEBPACK_IMPORTED_MODULE_11__["assembleSelectionPredicate"])(model, c.selection)
                : Object(_predicate__WEBPACK_IMPORTED_MODULE_10__["expression"])(model, c.test);
            return Object.assign({ test }, conditionValueRef);
        });
        return {
            [vgChannel]: [...vgConditions, ...(valueRef !== undefined ? [valueRef] : [])]
        };
    }
    else {
        return valueRef !== undefined ? { [vgChannel]: valueRef } : {};
    }
}
function tooltip(model, opt = {}) {
    const { encoding, markDef, config } = model;
    const channelDef = encoding.tooltip;
    if (Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isArray"])(channelDef)) {
        return { tooltip: _valueref__WEBPACK_IMPORTED_MODULE_12__["tooltipForEncoding"]({ tooltip: channelDef }, config, opt) };
    }
    else {
        return wrapCondition(model, channelDef, 'tooltip', cDef => {
            // use valueRef based on channelDef first
            const tooltipRefFromChannelDef = _valueref__WEBPACK_IMPORTED_MODULE_12__["text"](cDef, model.config, opt.reactiveGeom ? 'datum.datum' : 'datum');
            if (tooltipRefFromChannelDef) {
                return tooltipRefFromChannelDef;
            }
            if (cDef === null) {
                // Allow using encoding.tooltip = null to disable tooltip
                return undefined;
            }
            // If tooltipDef does not exist, then use value from markDef or config
            const markTooltip = Object(_util__WEBPACK_IMPORTED_MODULE_7__["getFirstDefined"])(markDef.tooltip, Object(_common__WEBPACK_IMPORTED_MODULE_9__["getMarkConfig"])('tooltip', markDef, config));
            if (Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isString"])(markTooltip)) {
                return { value: markTooltip };
            }
            else if (Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isObject"])(markTooltip)) {
                // `tooltip` is `{fields: 'encodings' | 'fields'}`
                if (markTooltip.content === 'encoding') {
                    return _valueref__WEBPACK_IMPORTED_MODULE_12__["tooltipForEncoding"](encoding, config, opt);
                }
                else {
                    return { signal: 'datum' };
                }
            }
            return undefined;
        });
    }
}
function text(model, channel = 'text') {
    const channelDef = model.encoding[channel];
    return wrapCondition(model, channelDef, channel, cDef => _valueref__WEBPACK_IMPORTED_MODULE_12__["text"](cDef, model.config));
}
function bandPosition(fieldDef, channel, model, defaultSizeRef) {
    const scaleName = model.scaleName(channel);
    const sizeChannel = channel === 'x' ? 'width' : 'height';
    if (model.encoding.size ||
        model.markDef.size !== undefined ||
        (defaultSizeRef && defaultSizeRef.value !== undefined)) {
        const orient = model.markDef.orient;
        if (orient) {
            const centeredBandPositionMixins = {
                // Use xc/yc and place the mark at the middle of the band
                // This way we never have to deal with size's condition for x/y position.
                [channel + 'c']: _valueref__WEBPACK_IMPORTED_MODULE_12__["fieldRef"](fieldDef, scaleName, {}, { band: 0.5 })
            };
            if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_3__["getTypedFieldDef"])(model.encoding.size)) {
                return Object.assign({}, centeredBandPositionMixins, nonPosition('size', model, { vgChannel: sizeChannel }));
            }
            else if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_3__["isValueDef"])(model.encoding.size)) {
                return Object.assign({}, centeredBandPositionMixins, nonPosition('size', model, { vgChannel: sizeChannel }));
            }
            else if (model.markDef.size !== undefined) {
                return Object.assign({}, centeredBandPositionMixins, { [sizeChannel]: { value: model.markDef.size } });
            }
            else if (defaultSizeRef && defaultSizeRef.value !== undefined) {
                return Object.assign({}, centeredBandPositionMixins, { [sizeChannel]: defaultSizeRef });
            }
        }
        else {
            _log__WEBPACK_IMPORTED_MODULE_4__["warn"](_log__WEBPACK_IMPORTED_MODULE_4__["message"].cannotApplySizeToNonOrientedMark(model.markDef.type));
        }
    }
    return {
        // FIXME: make offset works correctly here when we support group bar (https://github.com/vega/vega-lite/issues/396)
        [channel]: _valueref__WEBPACK_IMPORTED_MODULE_12__["fieldRef"](fieldDef, scaleName, { binSuffix: 'range' }, {}),
        [sizeChannel]: defaultSizeRef || _valueref__WEBPACK_IMPORTED_MODULE_12__["bandRef"](scaleName)
    };
}
function centeredPointPositionWithSize(channel, model, defaultPosRef, defaultSizeRef) {
    const centerChannel = channel === 'x' ? 'xc' : 'yc';
    const sizeChannel = channel === 'x' ? 'width' : 'height';
    return Object.assign({}, pointPosition(channel, model, defaultPosRef, centerChannel), nonPosition('size', model, { defaultRef: defaultSizeRef, vgChannel: sizeChannel }));
}
function binPosition({ fieldDef, fieldDef2, channel, scaleName, mark, spacing = 0, reverse }) {
    const binSpacing = {
        x: reverse ? spacing : 0,
        x2: reverse ? 0 : spacing,
        y: reverse ? 0 : spacing,
        y2: reverse ? spacing : 0
    };
    const channel2 = channel === _channel__WEBPACK_IMPORTED_MODULE_2__["X"] ? _channel__WEBPACK_IMPORTED_MODULE_2__["X2"] : _channel__WEBPACK_IMPORTED_MODULE_2__["Y2"];
    if (Object(_bin__WEBPACK_IMPORTED_MODULE_1__["isBinning"])(fieldDef.bin)) {
        return {
            [channel2]: _valueref__WEBPACK_IMPORTED_MODULE_12__["bin"]({
                channel,
                fieldDef,
                scaleName,
                mark,
                side: 'start',
                offset: binSpacing[`${channel}2`]
            }),
            [channel]: _valueref__WEBPACK_IMPORTED_MODULE_12__["bin"]({ channel, fieldDef, scaleName, mark, side: 'end', offset: binSpacing[channel] })
        };
    }
    else if (Object(_bin__WEBPACK_IMPORTED_MODULE_1__["isBinned"])(fieldDef.bin) && Object(_channeldef__WEBPACK_IMPORTED_MODULE_3__["isFieldDef"])(fieldDef2)) {
        return {
            [channel2]: _valueref__WEBPACK_IMPORTED_MODULE_12__["fieldRef"](fieldDef, scaleName, {}, { offset: binSpacing[`${channel}2`] }),
            [channel]: _valueref__WEBPACK_IMPORTED_MODULE_12__["fieldRef"](fieldDef2, scaleName, {}, { offset: binSpacing[channel] })
        };
    }
    else {
        _log__WEBPACK_IMPORTED_MODULE_4__["warn"](_log__WEBPACK_IMPORTED_MODULE_4__["message"].channelRequiredForBinned(channel2));
        return undefined;
    }
}
/**
 * Return mixins for point (non-band) position channels.
 */
function pointPosition(channel, model, defaultRef, vgChannel) {
    // TODO: refactor how refer to scale as discussed in https://github.com/vega/vega-lite/pull/1613
    const { encoding, mark, markDef, config, stack } = model;
    const channelDef = encoding[channel];
    const channel2Def = encoding[channel === _channel__WEBPACK_IMPORTED_MODULE_2__["X"] ? _channel__WEBPACK_IMPORTED_MODULE_2__["X2"] : _channel__WEBPACK_IMPORTED_MODULE_2__["Y2"]];
    const scaleName = model.scaleName(channel);
    const scale = model.getScaleComponent(channel);
    const offset = _valueref__WEBPACK_IMPORTED_MODULE_12__["getOffset"](channel, model.markDef);
    const valueRef = !channelDef && (encoding.latitude || encoding.longitude)
        ? // use geopoint output if there are lat/long and there is no point position overriding lat/long.
            { field: model.getName(channel) }
        : _valueref__WEBPACK_IMPORTED_MODULE_12__["position"]({
            channel,
            channelDef,
            channel2Def,
            scaleName,
            scale,
            stack,
            mark,
            offset,
            defaultRef: _valueref__WEBPACK_IMPORTED_MODULE_12__["positionDefault"]({
                markDef,
                config,
                defaultRef,
                channel,
                scaleName,
                scale,
                mark,
                checkBarAreaWithoutZero: !channel2Def // only check for non-ranged marks
            })
        });
    return {
        [vgChannel || channel]: valueRef
    };
}
/**
 * Return mixins for x2, y2.
 * If channel is not specified, return one channel based on orientation.
 */
function pointPosition2(model, defaultRef, channel) {
    const { encoding, mark, markDef, stack, config } = model;
    const baseChannel = channel === 'x2' ? 'x' : 'y';
    const channelDef = encoding[baseChannel];
    const scaleName = model.scaleName(baseChannel);
    const scale = model.getScaleComponent(baseChannel);
    const offset = _valueref__WEBPACK_IMPORTED_MODULE_12__["getOffset"](channel, model.markDef);
    const valueRef = !channelDef && (encoding.latitude || encoding.longitude)
        ? // use geopoint output if there are lat2/long2 and there is no point position2 overriding lat2/long2.
            { field: model.getName(channel) }
        : _valueref__WEBPACK_IMPORTED_MODULE_12__["position2"]({
            channel,
            channelDef,
            channel2Def: encoding[channel],
            scaleName,
            scale,
            stack,
            mark,
            offset,
            defaultRef: _valueref__WEBPACK_IMPORTED_MODULE_12__["positionDefault"]({
                markDef,
                config,
                defaultRef,
                channel,
                scaleName,
                scale,
                mark,
                checkBarAreaWithoutZero: !encoding[channel] // only check for non-ranged marks
            })
        });
    return { [channel]: valueRef };
}
//# sourceMappingURL=mixins.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/mark/point.js":
/*!****************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/mark/point.js ***!
  \****************************************************************/
/*! exports provided: shapeMixins, point, circle, square */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shapeMixins", function() { return shapeMixins; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "point", function() { return point; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "circle", function() { return circle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "square", function() { return square; });
/* harmony import */ var _mixins__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mixins */ "./node_modules/vega-lite/build/src/compile/mark/mixins.js");
/* harmony import */ var _valueref__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./valueref */ "./node_modules/vega-lite/build/src/compile/mark/valueref.js");


function encodeEntry(model, fixedShape) {
    const { config, width, height } = model;
    return Object.assign({}, _mixins__WEBPACK_IMPORTED_MODULE_0__["baseEncodeEntry"](model, { size: 'include', orient: 'ignore' }), _mixins__WEBPACK_IMPORTED_MODULE_0__["pointPosition"]('x', model, _valueref__WEBPACK_IMPORTED_MODULE_1__["mid"](width)), _mixins__WEBPACK_IMPORTED_MODULE_0__["pointPosition"]('y', model, _valueref__WEBPACK_IMPORTED_MODULE_1__["mid"](height)), _mixins__WEBPACK_IMPORTED_MODULE_0__["nonPosition"]('size', model), shapeMixins(model, config, fixedShape));
}
function shapeMixins(model, config, fixedShape) {
    if (fixedShape) {
        return { shape: { value: fixedShape } };
    }
    return _mixins__WEBPACK_IMPORTED_MODULE_0__["nonPosition"]('shape', model);
}
const point = {
    vgMark: 'symbol',
    encodeEntry: (model) => {
        return encodeEntry(model);
    }
};
const circle = {
    vgMark: 'symbol',
    encodeEntry: (model) => {
        return encodeEntry(model, 'circle');
    }
};
const square = {
    vgMark: 'symbol',
    encodeEntry: (model) => {
        return encodeEntry(model, 'square');
    }
};
//# sourceMappingURL=point.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/mark/rect.js":
/*!***************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/mark/rect.js ***!
  \***************************************************************/
/*! exports provided: rect, rectPosition */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rect", function() { return rect; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rectPosition", function() { return rectPosition; });
/* harmony import */ var _bin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../bin */ "./node_modules/vega-lite/build/src/bin.js");
/* harmony import */ var _channeldef__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../channeldef */ "./node_modules/vega-lite/build/src/channeldef.js");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../log */ "./node_modules/vega-lite/build/src/log/index.js");
/* harmony import */ var _mark__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../mark */ "./node_modules/vega-lite/build/src/mark.js");
/* harmony import */ var _scale__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../scale */ "./node_modules/vega-lite/build/src/scale.js");
/* harmony import */ var _mixins__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./mixins */ "./node_modules/vega-lite/build/src/compile/mark/mixins.js");






const rect = {
    vgMark: 'rect',
    encodeEntry: (model) => {
        return Object.assign({}, _mixins__WEBPACK_IMPORTED_MODULE_5__["baseEncodeEntry"](model, { size: 'ignore', orient: 'ignore' }), rectPosition(model, 'x'), rectPosition(model, 'y'));
    }
};
function rectPosition(model, channel) {
    const channel2 = channel === 'x' ? 'x2' : 'y2';
    const fieldDef = model.encoding[channel];
    const fieldDef2 = model.encoding[channel2];
    const scale = model.getScaleComponent(channel);
    const scaleType = scale ? scale.get('type') : undefined;
    const scaleName = model.scaleName(channel);
    if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["isFieldDef"])(fieldDef) && (Object(_bin__WEBPACK_IMPORTED_MODULE_0__["isBinning"])(fieldDef.bin) || Object(_bin__WEBPACK_IMPORTED_MODULE_0__["isBinned"])(fieldDef.bin))) {
        return _mixins__WEBPACK_IMPORTED_MODULE_5__["binPosition"]({
            fieldDef,
            fieldDef2,
            channel,
            mark: 'rect',
            scaleName,
            spacing: 0,
            reverse: scale.get('reverse')
        });
    }
    else if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["isFieldDef"])(fieldDef) && scale && Object(_scale__WEBPACK_IMPORTED_MODULE_4__["hasDiscreteDomain"])(scaleType)) {
        /* istanbul ignore else */
        if (scaleType === _scale__WEBPACK_IMPORTED_MODULE_4__["ScaleType"].BAND) {
            return _mixins__WEBPACK_IMPORTED_MODULE_5__["bandPosition"](fieldDef, channel, model);
        }
        else {
            // We don't support rect mark with point/ordinal scale
            throw new Error(_log__WEBPACK_IMPORTED_MODULE_2__["message"].scaleTypeNotWorkWithMark(_mark__WEBPACK_IMPORTED_MODULE_3__["RECT"], scaleType));
        }
    }
    else {
        // continuous scale or no scale
        return Object.assign({}, _mixins__WEBPACK_IMPORTED_MODULE_5__["pointPosition"](channel, model, 'zeroOrMax'), _mixins__WEBPACK_IMPORTED_MODULE_5__["pointPosition2"](model, 'zeroOrMin', channel2));
    }
}
//# sourceMappingURL=rect.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/mark/rule.js":
/*!***************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/mark/rule.js ***!
  \***************************************************************/
/*! exports provided: rule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rule", function() { return rule; });
/* harmony import */ var _mixins__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mixins */ "./node_modules/vega-lite/build/src/compile/mark/mixins.js");
/* harmony import */ var _valueref__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./valueref */ "./node_modules/vega-lite/build/src/compile/mark/valueref.js");


const rule = {
    vgMark: 'rule',
    encodeEntry: (model) => {
        const { markDef, width, height } = model;
        const orient = markDef.orient;
        if (!model.encoding.x && !model.encoding.y && !model.encoding.latitude && !model.encoding.longitude) {
            // Show nothing if we have none of x, y, lat, and long.
            return {};
        }
        return Object.assign({}, _mixins__WEBPACK_IMPORTED_MODULE_0__["baseEncodeEntry"](model, { size: 'ignore', orient: 'ignore' }), _mixins__WEBPACK_IMPORTED_MODULE_0__["pointPosition"]('x', model, orient === 'horizontal' ? 'zeroOrMin' : _valueref__WEBPACK_IMPORTED_MODULE_1__["mid"](width)), _mixins__WEBPACK_IMPORTED_MODULE_0__["pointPosition"]('y', model, orient === 'vertical' ? 'zeroOrMin' : _valueref__WEBPACK_IMPORTED_MODULE_1__["mid"](height)), (orient !== 'vertical' ? _mixins__WEBPACK_IMPORTED_MODULE_0__["pointPosition2"](model, 'zeroOrMax', 'x2') : {}), (orient !== 'horizontal' ? _mixins__WEBPACK_IMPORTED_MODULE_0__["pointPosition2"](model, 'zeroOrMax', 'y2') : {}), _mixins__WEBPACK_IMPORTED_MODULE_0__["nonPosition"]('size', model, {
            vgChannel: 'strokeWidth' // VL's rule size is strokeWidth
        }));
    }
};
//# sourceMappingURL=rule.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/mark/text.js":
/*!***************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/mark/text.js ***!
  \***************************************************************/
/*! exports provided: text */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "text", function() { return text; });
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common */ "./node_modules/vega-lite/build/src/compile/common.js");
/* harmony import */ var _mixins__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mixins */ "./node_modules/vega-lite/build/src/compile/mark/mixins.js");
/* harmony import */ var _valueref__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./valueref */ "./node_modules/vega-lite/build/src/compile/mark/valueref.js");



const text = {
    vgMark: 'text',
    encodeEntry: (model) => {
        const { config, encoding, width, height } = model;
        return Object.assign({}, _mixins__WEBPACK_IMPORTED_MODULE_1__["baseEncodeEntry"](model, { size: 'ignore', orient: 'ignore' }), _mixins__WEBPACK_IMPORTED_MODULE_1__["pointPosition"]('x', model, _valueref__WEBPACK_IMPORTED_MODULE_2__["mid"](width)), _mixins__WEBPACK_IMPORTED_MODULE_1__["pointPosition"]('y', model, _valueref__WEBPACK_IMPORTED_MODULE_2__["mid"](height)), _mixins__WEBPACK_IMPORTED_MODULE_1__["text"](model), _mixins__WEBPACK_IMPORTED_MODULE_1__["nonPosition"]('size', model, {
            vgChannel: 'fontSize' // VL's text size is fontSize
        }), _mixins__WEBPACK_IMPORTED_MODULE_1__["valueIfDefined"]('align', align(model.markDef, encoding, config)), _mixins__WEBPACK_IMPORTED_MODULE_1__["valueIfDefined"]('baseline', baseline(model.markDef, encoding, config)));
    }
};
function align(markDef, encoding, config) {
    const a = markDef.align || Object(_common__WEBPACK_IMPORTED_MODULE_0__["getMarkConfig"])('align', markDef, config);
    if (a === undefined) {
        return 'center';
    }
    // If there is a config, Vega-parser will process this already.
    return undefined;
}
function baseline(markDef, encoding, config) {
    const b = markDef.baseline || Object(_common__WEBPACK_IMPORTED_MODULE_0__["getMarkConfig"])('baseline', markDef, config);
    if (b === undefined) {
        return 'middle';
    }
    // If there is a config, Vega-parser will process this already.
    return undefined;
}
//# sourceMappingURL=text.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/mark/tick.js":
/*!***************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/mark/tick.js ***!
  \***************************************************************/
/*! exports provided: tick */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tick", function() { return tick; });
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../util */ "./node_modules/vega-lite/build/src/util.js");
/* harmony import */ var _vega_schema__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../vega.schema */ "./node_modules/vega-lite/build/src/vega.schema.js");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common */ "./node_modules/vega-lite/build/src/compile/common.js");
/* harmony import */ var _mixins__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./mixins */ "./node_modules/vega-lite/build/src/compile/mark/mixins.js");
/* harmony import */ var _valueref__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./valueref */ "./node_modules/vega-lite/build/src/compile/mark/valueref.js");





const tick = {
    vgMark: 'rect',
    encodeEntry: (model) => {
        const { config, markDef, width, height } = model;
        const orient = markDef.orient;
        const vgSizeChannel = orient === 'horizontal' ? 'width' : 'height';
        const vgThicknessChannel = orient === 'horizontal' ? 'height' : 'width';
        return Object.assign({}, _mixins__WEBPACK_IMPORTED_MODULE_3__["baseEncodeEntry"](model, { size: 'ignore', orient: 'ignore' }), _mixins__WEBPACK_IMPORTED_MODULE_3__["pointPosition"]('x', model, _valueref__WEBPACK_IMPORTED_MODULE_4__["mid"](width), 'xc'), _mixins__WEBPACK_IMPORTED_MODULE_3__["pointPosition"]('y', model, _valueref__WEBPACK_IMPORTED_MODULE_4__["mid"](height), 'yc'), _mixins__WEBPACK_IMPORTED_MODULE_3__["nonPosition"]('size', model, {
            defaultValue: defaultSize(model),
            vgChannel: vgSizeChannel
        }), { [vgThicknessChannel]: { value: Object(_util__WEBPACK_IMPORTED_MODULE_0__["getFirstDefined"])(markDef.thickness, config.tick.thickness) } });
    }
};
function defaultSize(model) {
    const { config, markDef } = model;
    const { orient } = markDef;
    const vgSizeChannel = orient === 'horizontal' ? 'width' : 'height';
    const scale = model.getScaleComponent(orient === 'horizontal' ? 'x' : 'y');
    const markPropOrConfig = Object(_util__WEBPACK_IMPORTED_MODULE_0__["getFirstDefined"])(markDef[vgSizeChannel], markDef.size, Object(_common__WEBPACK_IMPORTED_MODULE_2__["getMarkConfig"])('size', markDef, config, { vgChannel: vgSizeChannel }), config.tick.bandSize);
    if (markPropOrConfig !== undefined) {
        return markPropOrConfig;
    }
    else {
        const scaleRange = scale ? scale.get('range') : undefined;
        const rangeStep = scaleRange && Object(_vega_schema__WEBPACK_IMPORTED_MODULE_1__["isVgRangeStep"])(scaleRange) ? scaleRange.step : config.scale.rangeStep;
        if (typeof rangeStep !== 'number') {
            // FIXME consolidate this log
            throw new Error('Function does not handle non-numeric rangeStep');
        }
        return (rangeStep * 3) / 4;
    }
}
//# sourceMappingURL=tick.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/mark/valueref.js":
/*!*******************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/mark/valueref.js ***!
  \*******************************************************************/
/*! exports provided: fieldInvalidTestValueRef, fieldInvalidPredicate, position, position2, getOffset, bin, fieldRef, bandRef, midPoint, tooltipForEncoding, text, mid, positionDefault */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fieldInvalidTestValueRef", function() { return fieldInvalidTestValueRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fieldInvalidPredicate", function() { return fieldInvalidPredicate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "position", function() { return position; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "position2", function() { return position2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getOffset", function() { return getOffset; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bin", function() { return bin; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fieldRef", function() { return fieldRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bandRef", function() { return bandRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "midPoint", function() { return midPoint; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tooltipForEncoding", function() { return tooltipForEncoding; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "text", function() { return text; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mid", function() { return mid; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "positionDefault", function() { return positionDefault; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var _aggregate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../aggregate */ "./node_modules/vega-lite/build/src/aggregate.js");
/* harmony import */ var _bin__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../bin */ "./node_modules/vega-lite/build/src/bin.js");
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../channel */ "./node_modules/vega-lite/build/src/channel.js");
/* harmony import */ var _channeldef__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../channeldef */ "./node_modules/vega-lite/build/src/channeldef.js");
/* harmony import */ var _encoding__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../encoding */ "./node_modules/vega-lite/build/src/encoding.js");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../log */ "./node_modules/vega-lite/build/src/log/index.js");
/* harmony import */ var _mark__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../mark */ "./node_modules/vega-lite/build/src/mark.js");
/* harmony import */ var _scale__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../scale */ "./node_modules/vega-lite/build/src/scale.js");
/* harmony import */ var _type__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../type */ "./node_modules/vega-lite/build/src/type.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../util */ "./node_modules/vega-lite/build/src/util.js");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../common */ "./node_modules/vega-lite/build/src/compile/common.js");












function midPointWithPositionInvalidTest(params) {
    const { channel, channelDef, mark, scale } = params;
    const ref = midPoint(params);
    // Wrap to check if the positional value is invalid, if so, plot the point on the min value
    if (
    // Only this for field def without counting aggregate (as count wouldn't be null)
    Object(_channeldef__WEBPACK_IMPORTED_MODULE_4__["isFieldDef"])(channelDef) &&
        !Object(_aggregate__WEBPACK_IMPORTED_MODULE_1__["isCountingAggregateOp"])(channelDef.aggregate) &&
        // and only for continuous scale without zero (otherwise, null / invalid will be interpreted as zero, which doesn't cause layout problem)
        scale &&
        Object(_scale__WEBPACK_IMPORTED_MODULE_8__["isContinuousToContinuous"])(scale.get('type')) &&
        scale.get('zero') === false) {
        return wrapPositionInvalidTest({
            fieldDef: channelDef,
            channel,
            mark,
            ref
        });
    }
    return ref;
}
function wrapPositionInvalidTest({ fieldDef, channel, mark, ref }) {
    if (!Object(_mark__WEBPACK_IMPORTED_MODULE_7__["isPathMark"])(mark)) {
        // Only do this for non-path mark (as path marks will already use "defined" to skip points)
        return [fieldInvalidTestValueRef(fieldDef, channel), ref];
    }
    return ref;
}
function fieldInvalidTestValueRef(fieldDef, channel) {
    const test = fieldInvalidPredicate(fieldDef, true);
    const mainChannel = Object(_channel__WEBPACK_IMPORTED_MODULE_3__["getMainRangeChannel"])(channel);
    const zeroValueRef = mainChannel === 'x' ? { value: 0 } : { field: { group: 'height' } };
    return Object.assign({ test }, zeroValueRef);
}
function fieldInvalidPredicate(field, invalid = true) {
    field = Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isString"])(field) ? field : Object(_channeldef__WEBPACK_IMPORTED_MODULE_4__["vgField"])(field, { expr: 'datum' });
    const op = invalid ? '||' : '&&';
    const eq = invalid ? '===' : '!==';
    return `${field} ${eq} null ${op} ${invalid ? '' : '!'}isNaN(${field})`;
}
// TODO: we need to find a way to refactor these so that scaleName is a part of scale
// but that's complicated.  For now, this is a huge step moving forward.
/**
 * @return Vega ValueRef for normal x- or y-position without projection
 */
function position(params) {
    const { channel, channelDef, scaleName, stack, offset } = params;
    if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_4__["isFieldDef"])(channelDef) && stack && channel === stack.fieldChannel) {
        // x or y use stack_end so that stacked line's point mark use stack_end too.
        return fieldRef(channelDef, scaleName, { suffix: 'end' }, { offset });
    }
    return midPointWithPositionInvalidTest(params);
}
/**
 * @return Vega ValueRef for normal x2- or y2-position without projection
 */
function position2({ channel, channelDef, channel2Def, scaleName, scale, stack, mark, offset, defaultRef }) {
    if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_4__["isFieldDef"])(channelDef) &&
        stack &&
        // If fieldChannel is X and channel is X2 (or Y and Y2)
        channel.charAt(0) === stack.fieldChannel.charAt(0)) {
        return fieldRef(channelDef, scaleName, { suffix: 'start' }, { offset });
    }
    return midPointWithPositionInvalidTest({
        channel,
        channelDef: channel2Def,
        scaleName,
        scale,
        stack,
        mark,
        offset,
        defaultRef
    });
}
function getOffset(channel, markDef) {
    const offsetChannel = (channel + 'Offset'); // Need to cast as the type can't be inferred automatically
    // TODO: in the future read from encoding channel too
    const markDefOffsetValue = markDef[offsetChannel];
    if (markDefOffsetValue) {
        return markDefOffsetValue;
    }
    return undefined;
}
/**
 * Value Ref for binned fields
 */
function bin({ channel, fieldDef, scaleName, mark, side, offset }) {
    const binSuffix = side === 'start' ? undefined : 'end';
    const ref = fieldRef(fieldDef, scaleName, { binSuffix }, offset ? { offset } : {});
    return wrapPositionInvalidTest({
        fieldDef,
        channel,
        mark,
        ref
    });
}
function fieldRef(fieldDef, scaleName, opt, mixins) {
    const ref = Object.assign({}, (scaleName ? { scale: scaleName } : {}), { field: Object(_channeldef__WEBPACK_IMPORTED_MODULE_4__["vgField"])(fieldDef, opt) });
    if (mixins) {
        const { offset, band } = mixins;
        return Object.assign({}, ref, (offset ? { offset } : {}), (band ? { band } : {}));
    }
    return ref;
}
function bandRef(scaleName, band = true) {
    return {
        scale: scaleName,
        band: band
    };
}
/**
 * Signal that returns the middle of a bin from start and end field. Should only be used with x and y.
 */
function binMidSignal({ scaleName, fieldDef, fieldDef2, offset }) {
    const start = Object(_channeldef__WEBPACK_IMPORTED_MODULE_4__["vgField"])(fieldDef, { expr: 'datum' });
    const end = fieldDef2 !== undefined
        ? Object(_channeldef__WEBPACK_IMPORTED_MODULE_4__["vgField"])(fieldDef2, { expr: 'datum' })
        : Object(_channeldef__WEBPACK_IMPORTED_MODULE_4__["vgField"])(fieldDef, { binSuffix: 'end', expr: 'datum' });
    return Object.assign({ signal: `scale("${scaleName}", (${start} + ${end}) / 2)` }, (offset ? { offset } : {}));
}
/**
 * @returns {VgValueRef} Value Ref for xc / yc or mid point for other channels.
 */
function midPoint({ channel, channelDef, channel2Def, scaleName, scale, stack, offset, defaultRef }) {
    // TODO: datum support
    if (channelDef) {
        /* istanbul ignore else */
        if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_4__["isFieldDef"])(channelDef)) {
            if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_4__["isTypedFieldDef"])(channelDef)) {
                if (Object(_bin__WEBPACK_IMPORTED_MODULE_2__["isBinning"])(channelDef.bin)) {
                    // Use middle only for x an y to place marks in the center between start and end of the bin range.
                    // We do not use the mid point for other channels (e.g. size) so that properties of legends and marks match.
                    if (Object(_util__WEBPACK_IMPORTED_MODULE_10__["contains"])([_channel__WEBPACK_IMPORTED_MODULE_3__["X"], _channel__WEBPACK_IMPORTED_MODULE_3__["Y"]], channel) && channelDef.type === _type__WEBPACK_IMPORTED_MODULE_9__["QUANTITATIVE"]) {
                        if (stack && stack.impute) {
                            // For stack, we computed bin_mid so we can impute.
                            return fieldRef(channelDef, scaleName, { binSuffix: 'mid' }, { offset });
                        }
                        // For non-stack, we can just calculate bin mid on the fly using signal.
                        return binMidSignal({ scaleName, fieldDef: channelDef, offset });
                    }
                    return fieldRef(channelDef, scaleName, Object(_channeldef__WEBPACK_IMPORTED_MODULE_4__["binRequiresRange"])(channelDef, channel) ? { binSuffix: 'range' } : {}, {
                        offset
                    });
                }
                else if (Object(_bin__WEBPACK_IMPORTED_MODULE_2__["isBinned"])(channelDef.bin)) {
                    if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_4__["isFieldDef"])(channel2Def)) {
                        return binMidSignal({ scaleName, fieldDef: channelDef, fieldDef2: channel2Def, offset });
                    }
                    else {
                        const channel2 = channel === _channel__WEBPACK_IMPORTED_MODULE_3__["X"] ? _channel__WEBPACK_IMPORTED_MODULE_3__["X2"] : _channel__WEBPACK_IMPORTED_MODULE_3__["Y2"];
                        _log__WEBPACK_IMPORTED_MODULE_6__["warn"](_log__WEBPACK_IMPORTED_MODULE_6__["message"].channelRequiredForBinned(channel2));
                    }
                }
            }
            if (scale) {
                const scaleType = scale.get('type');
                if (Object(_scale__WEBPACK_IMPORTED_MODULE_8__["hasDiscreteDomain"])(scaleType)) {
                    if (scaleType === 'band') {
                        // For band, to get mid point, need to offset by half of the band
                        return fieldRef(channelDef, scaleName, { binSuffix: 'range' }, { band: 0.5, offset });
                    }
                    return fieldRef(channelDef, scaleName, { binSuffix: 'range' }, { offset });
                }
            }
            return fieldRef(channelDef, scaleName, {}, { offset }); // no need for bin suffix
        }
        else if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_4__["isValueDef"])(channelDef)) {
            const value = channelDef.value;
            const offsetMixins = offset ? { offset } : {};
            if (Object(_util__WEBPACK_IMPORTED_MODULE_10__["contains"])(['x', 'x2'], channel) && value === 'width') {
                return Object.assign({ field: { group: 'width' } }, offsetMixins);
            }
            else if (Object(_util__WEBPACK_IMPORTED_MODULE_10__["contains"])(['y', 'y2'], channel) && value === 'height') {
                return Object.assign({ field: { group: 'height' } }, offsetMixins);
            }
            return Object.assign({ value }, offsetMixins);
        }
        // If channelDef is neither field def or value def, it's a condition-only def.
        // In such case, we will use default ref.
    }
    return Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isFunction"])(defaultRef) ? defaultRef() : defaultRef;
}
function tooltipForEncoding(encoding, config, { reactiveGeom }) {
    const keyValues = [];
    const usedKey = {};
    function add(fieldDef, channel) {
        const mainChannel = Object(_channel__WEBPACK_IMPORTED_MODULE_3__["getMainRangeChannel"])(channel);
        if (channel !== mainChannel) {
            fieldDef = Object.assign({}, fieldDef, { type: encoding[mainChannel].type });
        }
        const key = Object(_channeldef__WEBPACK_IMPORTED_MODULE_4__["title"])(fieldDef, config, { allowDisabling: false });
        const value = text(fieldDef, config, reactiveGeom ? 'datum.datum' : 'datum').signal;
        if (!usedKey[key]) {
            keyValues.push(`${Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["stringValue"])(key)}: ${value}`);
        }
        usedKey[key] = true;
    }
    Object(_encoding__WEBPACK_IMPORTED_MODULE_5__["forEach"])(encoding, (channelDef, channel) => {
        if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_4__["isFieldDef"])(channelDef)) {
            add(channelDef, channel);
        }
        else if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_4__["hasConditionalFieldDef"])(channelDef)) {
            add(channelDef.condition, channel);
        }
    });
    return keyValues.length ? { signal: `{${keyValues.join(', ')}}` } : undefined;
}
function text(channelDef, config, expr = 'datum') {
    // text
    if (channelDef) {
        if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_4__["isValueDef"])(channelDef)) {
            return { value: channelDef.value };
        }
        if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_4__["isTypedFieldDef"])(channelDef)) {
            return Object(_common__WEBPACK_IMPORTED_MODULE_11__["formatSignalRef"])(channelDef, Object(_channeldef__WEBPACK_IMPORTED_MODULE_4__["format"])(channelDef), expr, config);
        }
    }
    return undefined;
}
function mid(sizeRef) {
    return Object.assign({}, sizeRef, { mult: 0.5 });
}
function positionDefault({ markDef, config, defaultRef, channel, scaleName, scale, mark, checkBarAreaWithoutZero: checkBarAreaWithZero }) {
    return () => {
        const mainChannel = Object(_channel__WEBPACK_IMPORTED_MODULE_3__["getMainRangeChannel"])(channel);
        const definedValueOrConfig = Object(_util__WEBPACK_IMPORTED_MODULE_10__["getFirstDefined"])(markDef[channel], Object(_common__WEBPACK_IMPORTED_MODULE_11__["getMarkConfig"])(channel, markDef, config));
        if (definedValueOrConfig !== undefined) {
            return { value: definedValueOrConfig };
        }
        if (Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isString"])(defaultRef)) {
            if (scaleName) {
                const scaleType = scale.get('type');
                if (Object(_util__WEBPACK_IMPORTED_MODULE_10__["contains"])([_scale__WEBPACK_IMPORTED_MODULE_8__["ScaleType"].LOG, _scale__WEBPACK_IMPORTED_MODULE_8__["ScaleType"].TIME, _scale__WEBPACK_IMPORTED_MODULE_8__["ScaleType"].UTC], scaleType)) {
                    // Log scales cannot have zero.
                    // Zero in time scale is arbitrary, and does not affect ratio.
                    // (Time is an interval level of measurement, not ratio).
                    // See https://en.wikipedia.org/wiki/Level_of_measurement for more info.
                    if (checkBarAreaWithZero && (mark === 'bar' || mark === 'area')) {
                        _log__WEBPACK_IMPORTED_MODULE_6__["warn"](_log__WEBPACK_IMPORTED_MODULE_6__["message"].nonZeroScaleUsedWithLengthMark(mark, mainChannel, { scaleType }));
                    }
                }
                else {
                    if (scale.domainDefinitelyIncludesZero) {
                        return {
                            scale: scaleName,
                            value: 0
                        };
                    }
                    if (checkBarAreaWithZero && (mark === 'bar' || mark === 'area')) {
                        _log__WEBPACK_IMPORTED_MODULE_6__["warn"](_log__WEBPACK_IMPORTED_MODULE_6__["message"].nonZeroScaleUsedWithLengthMark(mark, mainChannel, { zeroFalse: scale.explicit.zero === false }));
                    }
                }
            }
            if (defaultRef === 'zeroOrMin') {
                return mainChannel === 'x' ? { value: 0 } : { field: { group: 'height' } };
            }
            else {
                // zeroOrMax
                return mainChannel === 'x' ? { field: { group: 'width' } } : { value: 0 };
            }
        }
        return defaultRef;
    };
}
//# sourceMappingURL=valueref.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/model.js":
/*!***********************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/model.js ***!
  \***********************************************************/
/*! exports provided: NameMap, isUnitModel, isFacetModel, isRepeatModel, isConcatModel, isLayerModel, Model, ModelWithField */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NameMap", function() { return NameMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isUnitModel", function() { return isUnitModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isFacetModel", function() { return isFacetModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isRepeatModel", function() { return isRepeatModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isConcatModel", function() { return isConcatModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isLayerModel", function() { return isLayerModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Model", function() { return Model; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ModelWithField", function() { return ModelWithField; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../channel */ "./node_modules/vega-lite/build/src/channel.js");
/* harmony import */ var _channeldef__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../channeldef */ "./node_modules/vega-lite/build/src/channeldef.js");
/* harmony import */ var _encoding__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../encoding */ "./node_modules/vega-lite/build/src/encoding.js");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../log */ "./node_modules/vega-lite/build/src/log/index.js");
/* harmony import */ var _scale__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../scale */ "./node_modules/vega-lite/build/src/scale.js");
/* harmony import */ var _spec__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../spec */ "./node_modules/vega-lite/build/src/spec/index.js");
/* harmony import */ var _spec_base__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../spec/base */ "./node_modules/vega-lite/build/src/spec/base.js");
/* harmony import */ var _title__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../title */ "./node_modules/vega-lite/build/src/title.js");
/* harmony import */ var _transform__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../transform */ "./node_modules/vega-lite/build/src/transform.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../util */ "./node_modules/vega-lite/build/src/util.js");
/* harmony import */ var _vega_schema__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../vega.schema */ "./node_modules/vega-lite/build/src/vega.schema.js");
/* harmony import */ var _axis_assemble__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./axis/assemble */ "./node_modules/vega-lite/build/src/compile/axis/assemble.js");
/* harmony import */ var _header_assemble__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./header/assemble */ "./node_modules/vega-lite/build/src/compile/header/assemble.js");
/* harmony import */ var _header_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./header/component */ "./node_modules/vega-lite/build/src/compile/header/component.js");
/* harmony import */ var _layoutsize_assemble__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./layoutsize/assemble */ "./node_modules/vega-lite/build/src/compile/layoutsize/assemble.js");
/* harmony import */ var _legend_assemble__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./legend/assemble */ "./node_modules/vega-lite/build/src/compile/legend/assemble.js");
/* harmony import */ var _legend_parse__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./legend/parse */ "./node_modules/vega-lite/build/src/compile/legend/parse.js");
/* harmony import */ var _projection_assemble__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./projection/assemble */ "./node_modules/vega-lite/build/src/compile/projection/assemble.js");
/* harmony import */ var _projection_parse__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./projection/parse */ "./node_modules/vega-lite/build/src/compile/projection/parse.js");
/* harmony import */ var _scale_assemble__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./scale/assemble */ "./node_modules/vega-lite/build/src/compile/scale/assemble.js");
/* harmony import */ var _scale_domain__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./scale/domain */ "./node_modules/vega-lite/build/src/compile/scale/domain.js");
/* harmony import */ var _scale_parse__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./scale/parse */ "./node_modules/vega-lite/build/src/compile/scale/parse.js");
/* harmony import */ var _split__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./split */ "./node_modules/vega-lite/build/src/compile/split.js");

























class NameMap {
    constructor() {
        this.nameMap = {};
    }
    rename(oldName, newName) {
        this.nameMap[oldName] = newName;
    }
    has(name) {
        return this.nameMap[name] !== undefined;
    }
    get(name) {
        // If the name appears in the _nameMap, we need to read its new name.
        // We have to loop over the dict just in case the new name also gets renamed.
        while (this.nameMap[name] && name !== this.nameMap[name]) {
            name = this.nameMap[name];
        }
        return name;
    }
}
/*
  We use type guards instead of `instanceof` as `instanceof` makes
  different parts of the compiler depend on the actual implementation of
  the model classes, which in turn depend on different parts of the compiler.
  Thus, `instanceof` leads to circular dependency problems.

  On the other hand, type guards only make different parts of the compiler
  depend on the type of the model classes, but not the actual implementation.
*/
function isUnitModel(model) {
    return model && model.type === 'unit';
}
function isFacetModel(model) {
    return model && model.type === 'facet';
}
function isRepeatModel(model) {
    return model && model.type === 'repeat';
}
function isConcatModel(model) {
    return model && model.type === 'concat';
}
function isLayerModel(model) {
    return model && model.type === 'layer';
}
class Model {
    constructor(spec, type, parent, parentGivenName, config, repeater, resolve, view) {
        this.type = type;
        this.parent = parent;
        this.config = config;
        this.repeater = repeater;
        this.view = view;
        this.children = [];
        /**
         * Corrects the data references in marks after assemble.
         */
        this.correctDataNames = (mark) => {
            // TODO: make this correct
            // for normal data references
            if (mark.from && mark.from.data) {
                mark.from.data = this.lookupDataSource(mark.from.data);
            }
            // for access to facet data
            if (mark.from && mark.from.facet && mark.from.facet.data) {
                mark.from.facet.data = this.lookupDataSource(mark.from.facet.data);
            }
            return mark;
        };
        this.parent = parent;
        this.config = config;
        this.repeater = repeater;
        // If name is not provided, always use parent's givenName to avoid name conflicts.
        this.name = spec.name || parentGivenName;
        this.title = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isString"])(spec.title) ? { text: spec.title } : spec.title;
        // Shared name maps
        this.scaleNameMap = parent ? parent.scaleNameMap : new NameMap();
        this.projectionNameMap = parent ? parent.projectionNameMap : new NameMap();
        this.signalNameMap = parent ? parent.signalNameMap : new NameMap();
        this.data = spec.data;
        this.description = spec.description;
        this.transforms = Object(_transform__WEBPACK_IMPORTED_MODULE_10__["normalizeTransform"])(spec.transform || []);
        this.layout = Object(_spec__WEBPACK_IMPORTED_MODULE_7__["isUnitSpec"])(spec) || Object(_spec__WEBPACK_IMPORTED_MODULE_7__["isLayerSpec"])(spec) ? {} : Object(_spec_base__WEBPACK_IMPORTED_MODULE_8__["extractCompositionLayout"])(spec, type, config);
        this.component = {
            data: {
                sources: parent ? parent.component.data.sources : [],
                outputNodes: parent ? parent.component.data.outputNodes : {},
                outputNodeRefCounts: parent ? parent.component.data.outputNodeRefCounts : {},
                // data is faceted if the spec is a facet spec or the parent has faceted data and no data is defined
                isFaceted: Object(_spec__WEBPACK_IMPORTED_MODULE_7__["isFacetSpec"])(spec) || (parent && parent.component.data.isFaceted && !spec.data)
            },
            layoutSize: new _split__WEBPACK_IMPORTED_MODULE_24__["Split"](),
            layoutHeaders: { row: {}, column: {}, facet: {} },
            mark: null,
            resolve: Object.assign({ scale: {}, axis: {}, legend: {} }, (resolve ? Object(_util__WEBPACK_IMPORTED_MODULE_11__["duplicate"])(resolve) : {})),
            selection: null,
            scales: null,
            projection: null,
            axes: {},
            legends: {}
        };
    }
    get width() {
        return this.getSizeSignalRef('width');
    }
    get height() {
        return this.getSizeSignalRef('height');
    }
    initSize(size) {
        const { width, height } = size;
        if (width) {
            this.component.layoutSize.set('width', width, true);
        }
        if (height) {
            this.component.layoutSize.set('height', height, true);
        }
    }
    parse() {
        this.parseScale();
        this.parseLayoutSize(); // depends on scale
        this.renameTopLevelLayoutSizeSignal();
        this.parseSelections();
        this.parseProjection();
        this.parseData(); // (pathorder) depends on markDef; selection filters depend on parsed selections; depends on projection because some transforms require the finalized projection name.
        this.parseAxesAndHeaders(); // depends on scale and layout size
        this.parseLegends(); // depends on scale, markDef
        this.parseMarkGroup(); // depends on data name, scale, layout size, axisGroup, and children's scale, axis, legend and mark.
    }
    parseScale() {
        Object(_scale_parse__WEBPACK_IMPORTED_MODULE_23__["parseScales"])(this);
    }
    parseProjection() {
        Object(_projection_parse__WEBPACK_IMPORTED_MODULE_20__["parseProjection"])(this);
    }
    /**
     * Rename top-level spec's size to be just width / height, ignoring model name.
     * This essentially merges the top-level spec's width/height signals with the width/height signals
     * to help us reduce redundant signals declaration.
     */
    renameTopLevelLayoutSizeSignal() {
        if (this.getName('width') !== 'width') {
            this.renameSignal(this.getName('width'), 'width');
        }
        if (this.getName('height') !== 'height') {
            this.renameSignal(this.getName('height'), 'height');
        }
    }
    parseLegends() {
        Object(_legend_parse__WEBPACK_IMPORTED_MODULE_18__["parseLegend"])(this);
    }
    assembleGroupStyle() {
        if (this.type === 'unit' || this.type === 'layer') {
            return (this.view && this.view.style) || 'cell';
        }
        return undefined;
    }
    assembleEncodeFromView(view) {
        // Exclude "style"
        const { style: _ } = view, baseView = tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"](view, ["style"]);
        const e = {};
        for (const property in baseView) {
            if (baseView.hasOwnProperty(property)) {
                const value = baseView[property];
                if (value !== undefined) {
                    e[property] = { value };
                }
            }
        }
        return e;
    }
    assembleGroupEncodeEntry(isTopLevel) {
        let encodeEntry = undefined;
        if (this.view) {
            encodeEntry = this.assembleEncodeFromView(this.view);
        }
        if (!isTopLevel) {
            // For top-level spec, we can set the global width and height signal to adjust the group size.
            // For other child specs, we have to manually set width and height in the encode entry.
            if (this.type === 'unit' || this.type === 'layer') {
                return Object.assign({ width: this.getSizeSignalRef('width'), height: this.getSizeSignalRef('height') }, (encodeEntry || {}));
            }
        }
        return encodeEntry;
    }
    assembleLayout() {
        if (!this.layout) {
            return undefined;
        }
        const _a = this.layout, { spacing } = _a, layout = tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"](_a, ["spacing"]);
        const { component, config } = this;
        const titleBand = Object(_header_assemble__WEBPACK_IMPORTED_MODULE_14__["assembleLayoutTitleBand"])(component.layoutHeaders, config);
        return Object.assign({ padding: spacing }, this.assembleDefaultLayout(), layout, (titleBand ? { titleBand } : {}));
    }
    assembleDefaultLayout() {
        return {};
    }
    assembleHeaderMarks() {
        const { layoutHeaders } = this.component;
        let headerMarks = [];
        for (const channel of _channel__WEBPACK_IMPORTED_MODULE_2__["FACET_CHANNELS"]) {
            if (layoutHeaders[channel].title) {
                headerMarks.push(Object(_header_assemble__WEBPACK_IMPORTED_MODULE_14__["assembleTitleGroup"])(this, channel));
            }
        }
        for (const channel of _header_component__WEBPACK_IMPORTED_MODULE_15__["HEADER_CHANNELS"]) {
            headerMarks = headerMarks.concat(Object(_header_assemble__WEBPACK_IMPORTED_MODULE_14__["assembleHeaderGroups"])(this, channel));
        }
        return headerMarks;
    }
    assembleAxes() {
        return Object(_axis_assemble__WEBPACK_IMPORTED_MODULE_13__["assembleAxes"])(this.component.axes, this.config);
    }
    assembleLegends() {
        return Object(_legend_assemble__WEBPACK_IMPORTED_MODULE_17__["assembleLegends"])(this);
    }
    assembleProjections() {
        return Object(_projection_assemble__WEBPACK_IMPORTED_MODULE_19__["assembleProjections"])(this);
    }
    assembleTitle() {
        const _a = this.title || {}, { encoding } = _a, titleNoEncoding = tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"](_a, ["encoding"]);
        const title = Object.assign({}, Object(_title__WEBPACK_IMPORTED_MODULE_9__["extractTitleConfig"])(this.config.title).nonMark, titleNoEncoding, (encoding ? { encode: { update: encoding } } : {}));
        if (title.text) {
            if (Object(_util__WEBPACK_IMPORTED_MODULE_11__["contains"])(['unit', 'layer'], this.type)) {
                // Unit/Layer
                if (Object(_util__WEBPACK_IMPORTED_MODULE_11__["contains"])(['middle', undefined], title.anchor)) {
                    title.frame = title.frame || 'group';
                }
            }
            else {
                // composition with Vega layout
                // Set title = "start" by default for composition as "middle" does not look nice
                // https://github.com/vega/vega/issues/960#issuecomment-471360328
                title.anchor = title.anchor || 'start';
            }
            return Object(_util__WEBPACK_IMPORTED_MODULE_11__["keys"])(title).length > 0 ? title : undefined;
        }
        return undefined;
    }
    /**
     * Assemble the mark group for this model.  We accept optional `signals` so that we can include concat top-level signals with the top-level model's local signals.
     */
    assembleGroup(signals = []) {
        const group = {};
        signals = signals.concat(this.assembleSignals());
        if (signals.length > 0) {
            group.signals = signals;
        }
        const layout = this.assembleLayout();
        if (layout) {
            group.layout = layout;
        }
        group.marks = [].concat(this.assembleHeaderMarks(), this.assembleMarks());
        // Only include scales if this spec is top-level or if parent is facet.
        // (Otherwise, it will be merged with upper-level's scope.)
        const scales = !this.parent || isFacetModel(this.parent) ? Object(_scale_assemble__WEBPACK_IMPORTED_MODULE_21__["assembleScales"])(this) : [];
        if (scales.length > 0) {
            group.scales = scales;
        }
        const axes = this.assembleAxes();
        if (axes.length > 0) {
            group.axes = axes;
        }
        const legends = this.assembleLegends();
        if (legends.length > 0) {
            group.legends = legends;
        }
        return group;
    }
    hasDescendantWithFieldOnChannel(channel) {
        for (const child of this.children) {
            if (isUnitModel(child)) {
                if (child.channelHasField(channel)) {
                    return true;
                }
            }
            else {
                if (child.hasDescendantWithFieldOnChannel(channel)) {
                    return true;
                }
            }
        }
        return false;
    }
    getName(text) {
        return Object(_util__WEBPACK_IMPORTED_MODULE_11__["varName"])((this.name ? this.name + '_' : '') + text);
    }
    /**
     * Request a data source name for the given data source type and mark that data source as required. This method should be called in parse, so that all used data source can be correctly instantiated in assembleData().
     */
    requestDataName(name) {
        const fullName = this.getName(name);
        // Increase ref count. This is critical because otherwise we won't create a data source.
        // We also increase the ref counts on OutputNode.getSource() calls.
        const refCounts = this.component.data.outputNodeRefCounts;
        refCounts[fullName] = (refCounts[fullName] || 0) + 1;
        return fullName;
    }
    getSizeSignalRef(sizeType) {
        if (isFacetModel(this.parent)) {
            const channel = sizeType === 'width' ? 'x' : 'y';
            const scaleComponent = this.component.scales[channel];
            if (scaleComponent && !scaleComponent.merged) {
                // independent scale
                const type = scaleComponent.get('type');
                const range = scaleComponent.get('range');
                if (Object(_scale__WEBPACK_IMPORTED_MODULE_6__["hasDiscreteDomain"])(type) && Object(_vega_schema__WEBPACK_IMPORTED_MODULE_12__["isVgRangeStep"])(range)) {
                    const scaleName = scaleComponent.get('name');
                    const domain = Object(_scale_domain__WEBPACK_IMPORTED_MODULE_22__["assembleDomain"])(this, channel);
                    const field = Object(_scale_domain__WEBPACK_IMPORTED_MODULE_22__["getFieldFromDomain"])(domain);
                    if (field) {
                        const fieldRef = Object(_channeldef__WEBPACK_IMPORTED_MODULE_3__["vgField"])({ aggregate: 'distinct', field }, { expr: 'datum' });
                        return {
                            signal: Object(_layoutsize_assemble__WEBPACK_IMPORTED_MODULE_16__["sizeExpr"])(scaleName, scaleComponent, fieldRef)
                        };
                    }
                    else {
                        _log__WEBPACK_IMPORTED_MODULE_5__["warn"]('Unknown field for ${channel}.  Cannot calculate view size.');
                        return null;
                    }
                }
            }
        }
        return {
            signal: this.signalNameMap.get(this.getName(sizeType))
        };
    }
    /**
     * Lookup the name of the datasource for an output node. You probably want to call this in assemble.
     */
    lookupDataSource(name) {
        const node = this.component.data.outputNodes[name];
        if (!node) {
            // Name not found in map so let's just return what we got.
            // This can happen if we already have the correct name.
            return name;
        }
        return node.getSource();
    }
    getSignalName(oldSignalName) {
        return this.signalNameMap.get(oldSignalName);
    }
    renameSignal(oldName, newName) {
        this.signalNameMap.rename(oldName, newName);
    }
    renameScale(oldName, newName) {
        this.scaleNameMap.rename(oldName, newName);
    }
    renameProjection(oldName, newName) {
        this.projectionNameMap.rename(oldName, newName);
    }
    /**
     * @return scale name for a given channel after the scale has been parsed and named.
     */
    scaleName(originalScaleName, parse) {
        if (parse) {
            // During the parse phase always return a value
            // No need to refer to rename map because a scale can't be renamed
            // before it has the original name.
            return this.getName(originalScaleName);
        }
        // If there is a scale for the channel, it should either
        // be in the scale component or exist in the name map
        if (
        // If there is a scale for the channel, there should be a local scale component for it
        (Object(_channel__WEBPACK_IMPORTED_MODULE_2__["isChannel"])(originalScaleName) && Object(_channel__WEBPACK_IMPORTED_MODULE_2__["isScaleChannel"])(originalScaleName) && this.component.scales[originalScaleName]) ||
            // in the scale name map (the scale get merged by its parent)
            this.scaleNameMap.has(this.getName(originalScaleName))) {
            return this.scaleNameMap.get(this.getName(originalScaleName));
        }
        return undefined;
    }
    /**
     * @return projection name after the projection has been parsed and named.
     */
    projectionName(parse) {
        if (parse) {
            // During the parse phase always return a value
            // No need to refer to rename map because a projection can't be renamed
            // before it has the original name.
            return this.getName('projection');
        }
        if ((this.component.projection && !this.component.projection.merged) ||
            this.projectionNameMap.has(this.getName('projection'))) {
            return this.projectionNameMap.get(this.getName('projection'));
        }
        return undefined;
    }
    /**
     * Traverse a model's hierarchy to get the scale component for a particular channel.
     */
    getScaleComponent(channel) {
        /* istanbul ignore next: This is warning for debugging test */
        if (!this.component.scales) {
            throw new Error('getScaleComponent cannot be called before parseScale().  Make sure you have called parseScale or use parseUnitModelWithScale().');
        }
        const localScaleComponent = this.component.scales[channel];
        if (localScaleComponent && !localScaleComponent.merged) {
            return localScaleComponent;
        }
        return this.parent ? this.parent.getScaleComponent(channel) : undefined;
    }
    /**
     * Traverse a model's hierarchy to get a particular selection component.
     */
    getSelectionComponent(variableName, origName) {
        let sel = this.component.selection[variableName];
        if (!sel && this.parent) {
            sel = this.parent.getSelectionComponent(variableName, origName);
        }
        if (!sel) {
            throw new Error(_log__WEBPACK_IMPORTED_MODULE_5__["message"].selectionNotFound(origName));
        }
        return sel;
    }
}
/** Abstract class for UnitModel and FacetModel.  Both of which can contain fieldDefs as a part of its own specification. */
class ModelWithField extends Model {
    /** Get "field" reference for Vega */
    vgField(channel, opt = {}) {
        const fieldDef = this.fieldDef(channel);
        if (!fieldDef) {
            return undefined;
        }
        return Object(_channeldef__WEBPACK_IMPORTED_MODULE_3__["vgField"])(fieldDef, opt);
    }
    reduceFieldDef(f, init, t) {
        return Object(_encoding__WEBPACK_IMPORTED_MODULE_4__["reduce"])(this.getMapping(), (acc, cd, c) => {
            const fieldDef = Object(_channeldef__WEBPACK_IMPORTED_MODULE_3__["getFieldDef"])(cd);
            if (fieldDef) {
                return f(acc, fieldDef, c);
            }
            return acc;
        }, init, t);
    }
    forEachFieldDef(f, t) {
        Object(_encoding__WEBPACK_IMPORTED_MODULE_4__["forEach"])(this.getMapping(), (cd, c) => {
            const fieldDef = Object(_channeldef__WEBPACK_IMPORTED_MODULE_3__["getFieldDef"])(cd);
            if (fieldDef) {
                f(fieldDef, c);
            }
        }, t);
    }
}
//# sourceMappingURL=model.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/predicate.js":
/*!***************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/predicate.js ***!
  \***************************************************************/
/*! exports provided: expression */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "expression", function() { return expression; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var _predicate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../predicate */ "./node_modules/vega-lite/build/src/predicate.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ "./node_modules/vega-lite/build/src/util.js");
/* harmony import */ var _selection_assemble__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./selection/assemble */ "./node_modules/vega-lite/build/src/compile/selection/assemble.js");




/**
 * Converts a predicate into an expression.
 */
// model is only used for selection filters.
function expression(model, filterOp, node) {
    return Object(_util__WEBPACK_IMPORTED_MODULE_2__["logicalExpr"])(filterOp, (predicate) => {
        if (Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isString"])(predicate)) {
            return predicate;
        }
        else if (Object(_predicate__WEBPACK_IMPORTED_MODULE_1__["isSelectionPredicate"])(predicate)) {
            return Object(_selection_assemble__WEBPACK_IMPORTED_MODULE_3__["assembleSelectionPredicate"])(model, predicate.selection, node);
        }
        else {
            // Filter Object
            return Object(_predicate__WEBPACK_IMPORTED_MODULE_1__["fieldFilterExpression"])(predicate);
        }
    });
}
//# sourceMappingURL=predicate.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/projection/assemble.js":
/*!*************************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/projection/assemble.js ***!
  \*************************************************************************/
/*! exports provided: assembleProjections, assembleProjectionsForModelAndChildren, assembleProjectionForModel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "assembleProjections", function() { return assembleProjections; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "assembleProjectionsForModelAndChildren", function() { return assembleProjectionsForModelAndChildren; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "assembleProjectionForModel", function() { return assembleProjectionForModel; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../util */ "./node_modules/vega-lite/build/src/util.js");
/* harmony import */ var _vega_schema__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../vega.schema */ "./node_modules/vega-lite/build/src/vega.schema.js");
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../model */ "./node_modules/vega-lite/build/src/compile/model.js");




function assembleProjections(model) {
    if (Object(_model__WEBPACK_IMPORTED_MODULE_3__["isLayerModel"])(model) || Object(_model__WEBPACK_IMPORTED_MODULE_3__["isConcatModel"])(model) || Object(_model__WEBPACK_IMPORTED_MODULE_3__["isRepeatModel"])(model)) {
        return assembleProjectionsForModelAndChildren(model);
    }
    else {
        return assembleProjectionForModel(model);
    }
}
function assembleProjectionsForModelAndChildren(model) {
    return model.children.reduce((projections, child) => {
        return projections.concat(child.assembleProjections());
    }, assembleProjectionForModel(model));
}
function assembleProjectionForModel(model) {
    const component = model.component.projection;
    if (!component || component.merged) {
        return [];
    }
    const projection = component.combine();
    const { name } = projection, rest = tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"](projection, ["name"]); // we need to extract name so that it is always present in the output and pass TS type validation
    if (!component.data) {
        // generate custom projection, no automatic fitting
        return [
            Object.assign({ name }, { translate: { signal: '[width / 2, height / 2]' } }, rest)
        ];
    }
    else {
        // generate projection that uses extent fitting
        const size = {
            signal: `[${component.size.map(ref => ref.signal).join(', ')}]`
        };
        const fit = component.data.reduce((sources, data) => {
            const source = Object(_vega_schema__WEBPACK_IMPORTED_MODULE_2__["isSignalRef"])(data) ? data.signal : `data('${model.lookupDataSource(data)}')`;
            if (!Object(_util__WEBPACK_IMPORTED_MODULE_1__["contains"])(sources, source)) {
                // build a unique list of sources
                sources.push(source);
            }
            return sources;
        }, []);
        if (fit.length <= 0) {
            throw new Error("Projection's fit didn't find any data sources");
        }
        return [
            Object.assign({ name,
                size, fit: {
                    signal: fit.length > 1 ? `[${fit.join(', ')}]` : fit[0]
                } }, rest)
        ];
    }
}
//# sourceMappingURL=assemble.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/projection/component.js":
/*!**************************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/projection/component.js ***!
  \**************************************************************************/
/*! exports provided: ProjectionComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ProjectionComponent", function() { return ProjectionComponent; });
/* harmony import */ var _split__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../split */ "./node_modules/vega-lite/build/src/compile/split.js");

class ProjectionComponent extends _split__WEBPACK_IMPORTED_MODULE_0__["Split"] {
    constructor(name, specifiedProjection, size, data) {
        super(Object.assign({}, specifiedProjection), // all explicit properties of projection
        { name } // name as initial implicit property
        );
        this.specifiedProjection = specifiedProjection;
        this.size = size;
        this.data = data;
        this.merged = false;
    }
    /**
     * Whether the projection parameters should fit provided data.
     */
    get isFit() {
        return !!this.data;
    }
}
//# sourceMappingURL=component.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/projection/parse.js":
/*!**********************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/projection/parse.js ***!
  \**********************************************************************/
/*! exports provided: parseProjection */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseProjection", function() { return parseProjection; });
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../channel */ "./node_modules/vega-lite/build/src/channel.js");
/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../data */ "./node_modules/vega-lite/build/src/data.js");
/* harmony import */ var _projection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../projection */ "./node_modules/vega-lite/build/src/projection.js");
/* harmony import */ var _type__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../type */ "./node_modules/vega-lite/build/src/type.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../util */ "./node_modules/vega-lite/build/src/util.js");
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../model */ "./node_modules/vega-lite/build/src/compile/model.js");
/* harmony import */ var _component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./component */ "./node_modules/vega-lite/build/src/compile/projection/component.js");







function parseProjection(model) {
    model.component.projection = Object(_model__WEBPACK_IMPORTED_MODULE_5__["isUnitModel"])(model) ? parseUnitProjection(model) : parseNonUnitProjections(model);
}
function parseUnitProjection(model) {
    if (model.hasProjection) {
        const proj = model.specifiedProjection;
        const fit = !(proj && (proj.scale != null || proj.translate != null));
        const size = fit ? [model.getSizeSignalRef('width'), model.getSizeSignalRef('height')] : undefined;
        const data = fit ? gatherFitData(model) : undefined;
        return new _component__WEBPACK_IMPORTED_MODULE_6__["ProjectionComponent"](model.projectionName(true), Object.assign({}, (model.config.projection || {}), (proj || {})), size, data);
    }
    return undefined;
}
function gatherFitData(model) {
    const data = [];
    [[_channel__WEBPACK_IMPORTED_MODULE_0__["LONGITUDE"], _channel__WEBPACK_IMPORTED_MODULE_0__["LATITUDE"]], [_channel__WEBPACK_IMPORTED_MODULE_0__["LONGITUDE2"], _channel__WEBPACK_IMPORTED_MODULE_0__["LATITUDE2"]]].forEach(posssiblePair => {
        if (model.channelHasField(posssiblePair[0]) || model.channelHasField(posssiblePair[1])) {
            data.push({
                signal: model.getName(`geojson_${data.length}`)
            });
        }
    });
    if (model.channelHasField(_channel__WEBPACK_IMPORTED_MODULE_0__["SHAPE"]) && model.fieldDef(_channel__WEBPACK_IMPORTED_MODULE_0__["SHAPE"]).type === _type__WEBPACK_IMPORTED_MODULE_3__["GEOJSON"]) {
        data.push({
            signal: model.getName(`geojson_${data.length}`)
        });
    }
    if (data.length === 0) {
        // main source is geojson, so we can just use that
        data.push(model.requestDataName(_data__WEBPACK_IMPORTED_MODULE_1__["MAIN"]));
    }
    return data;
}
function mergeIfNoConflict(first, second) {
    const allPropertiesShared = Object(_util__WEBPACK_IMPORTED_MODULE_4__["every"])(_projection__WEBPACK_IMPORTED_MODULE_2__["PROJECTION_PROPERTIES"], prop => {
        // neither has the property
        if (!first.explicit.hasOwnProperty(prop) && !second.explicit.hasOwnProperty(prop)) {
            return true;
        }
        // both have property and an equal value for property
        if (first.explicit.hasOwnProperty(prop) &&
            second.explicit.hasOwnProperty(prop) &&
            // some properties might be signals or objects and require hashing for comparison
            Object(_util__WEBPACK_IMPORTED_MODULE_4__["stringify"])(first.get(prop)) === Object(_util__WEBPACK_IMPORTED_MODULE_4__["stringify"])(second.get(prop))) {
            return true;
        }
        return false;
    });
    const size = Object(_util__WEBPACK_IMPORTED_MODULE_4__["stringify"])(first.size) === Object(_util__WEBPACK_IMPORTED_MODULE_4__["stringify"])(second.size);
    if (size) {
        if (allPropertiesShared) {
            return first;
        }
        else if (Object(_util__WEBPACK_IMPORTED_MODULE_4__["stringify"])(first.explicit) === Object(_util__WEBPACK_IMPORTED_MODULE_4__["stringify"])({})) {
            return second;
        }
        else if (Object(_util__WEBPACK_IMPORTED_MODULE_4__["stringify"])(second.explicit) === Object(_util__WEBPACK_IMPORTED_MODULE_4__["stringify"])({})) {
            return first;
        }
    }
    // if all properties don't match, let each unit spec have its own projection
    return null;
}
function parseNonUnitProjections(model) {
    if (model.children.length === 0) {
        return undefined;
    }
    let nonUnitProjection;
    // parse all children first
    model.children.forEach(child => parseProjection(child));
    // analyze parsed projections, attempt to merge
    const mergable = Object(_util__WEBPACK_IMPORTED_MODULE_4__["every"])(model.children, child => {
        const projection = child.component.projection;
        if (!projection) {
            // child layer does not use a projection
            return true;
        }
        else if (!nonUnitProjection) {
            // cached 'projection' is null, cache this one
            nonUnitProjection = projection;
            return true;
        }
        else {
            const merge = mergeIfNoConflict(nonUnitProjection, projection);
            if (merge) {
                nonUnitProjection = merge;
            }
            return !!merge;
        }
    });
    // if cached one and all other children share the same projection,
    if (nonUnitProjection && mergable) {
        // so we can elevate it to the layer level
        const name = model.projectionName(true);
        const modelProjection = new _component__WEBPACK_IMPORTED_MODULE_6__["ProjectionComponent"](name, nonUnitProjection.specifiedProjection, nonUnitProjection.size, Object(_util__WEBPACK_IMPORTED_MODULE_4__["duplicate"])(nonUnitProjection.data));
        // rename and assign all others as merged
        model.children.forEach(child => {
            const projection = child.component.projection;
            if (projection) {
                if (projection.isFit) {
                    modelProjection.data.push(...child.component.projection.data);
                }
                child.renameProjection(projection.get('name'), name);
                projection.merged = true;
            }
        });
        return modelProjection;
    }
    return undefined;
}
//# sourceMappingURL=parse.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/repeat.js":
/*!************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/repeat.js ***!
  \************************************************************/
/*! exports provided: RepeatModel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RepeatModel", function() { return RepeatModel; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../log */ "./node_modules/vega-lite/build/src/log/index.js");
/* harmony import */ var _baseconcat__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./baseconcat */ "./node_modules/vega-lite/build/src/compile/baseconcat.js");
/* harmony import */ var _buildmodel__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./buildmodel */ "./node_modules/vega-lite/build/src/compile/buildmodel.js");
/* harmony import */ var _layoutsize_parse__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./layoutsize/parse */ "./node_modules/vega-lite/build/src/compile/layoutsize/parse.js");





class RepeatModel extends _baseconcat__WEBPACK_IMPORTED_MODULE_2__["BaseConcatModel"] {
    constructor(spec, parent, parentGivenName, repeatValues, config) {
        super(spec, 'repeat', parent, parentGivenName, config, repeatValues, spec.resolve);
        if (spec.resolve && spec.resolve.axis && (spec.resolve.axis.x === 'shared' || spec.resolve.axis.y === 'shared')) {
            _log__WEBPACK_IMPORTED_MODULE_1__["warn"](_log__WEBPACK_IMPORTED_MODULE_1__["message"].REPEAT_CANNOT_SHARE_AXIS);
        }
        this.repeat = spec.repeat;
        this.children = this._initChildren(spec, this.repeat, repeatValues, config);
    }
    _initChildren(spec, repeat, repeater, config) {
        const children = [];
        const row = (!Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isArray"])(repeat) && repeat.row) || [repeater ? repeater.row : null];
        const column = (!Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isArray"])(repeat) && repeat.column) || [repeater ? repeater.column : null];
        const repeatValues = (Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isArray"])(repeat) && repeat) || [repeater ? repeater.repeat : null];
        // cross product
        for (const repeatValue of repeatValues) {
            for (const rowValue of row) {
                for (const columnValue of column) {
                    const name = (repeatValue ? `__repeat_repeat_${repeatValue}` : '') +
                        (rowValue ? `__repeat_row_${rowValue}` : '') +
                        (columnValue ? `__repeat_column_${columnValue}` : '');
                    const childRepeat = {
                        repeat: repeatValue,
                        row: rowValue,
                        column: columnValue
                    };
                    children.push(Object(_buildmodel__WEBPACK_IMPORTED_MODULE_3__["buildModel"])(spec.spec, this, this.getName('child' + name), undefined, childRepeat, config, false));
                }
            }
        }
        return children;
    }
    parseLayoutSize() {
        Object(_layoutsize_parse__WEBPACK_IMPORTED_MODULE_4__["parseRepeatLayoutSize"])(this);
    }
    assembleDefaultLayout() {
        const { repeat } = this;
        const columns = Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isArray"])(repeat) ? undefined : repeat.column ? repeat.column.length : 1;
        return Object.assign({}, (columns ? { columns } : {}), { bounds: 'full', align: 'all' });
    }
}
//# sourceMappingURL=repeat.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/repeater.js":
/*!**************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/repeater.js ***!
  \**************************************************************/
/*! exports provided: replaceRepeaterInFacet, replaceRepeaterInEncoding */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "replaceRepeaterInFacet", function() { return replaceRepeaterInFacet; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "replaceRepeaterInEncoding", function() { return replaceRepeaterInEncoding; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var _channeldef__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../channeldef */ "./node_modules/vega-lite/build/src/channeldef.js");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../log */ "./node_modules/vega-lite/build/src/log/index.js");
/* harmony import */ var _sort__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../sort */ "./node_modules/vega-lite/build/src/sort.js");
/* harmony import */ var _spec_facet__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../spec/facet */ "./node_modules/vega-lite/build/src/spec/facet.js");






function replaceRepeaterInFacet(facet, repeater) {
    if (Object(_spec_facet__WEBPACK_IMPORTED_MODULE_5__["isFacetMapping"])(facet)) {
        return replaceRepeater(facet, repeater);
    }
    return replaceRepeaterInFieldDef(facet, repeater);
}
function replaceRepeaterInEncoding(encoding, repeater) {
    return replaceRepeater(encoding, repeater);
}
/**
 * Replaces repeated value and returns if the repeated value is valid.
 */
function replaceRepeat(o, repeater) {
    if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_2__["isRepeatRef"])(o.field)) {
        if (o.field.repeat in repeater) {
            // any needed to calm down ts compiler
            return Object.assign({}, o, { field: repeater[o.field.repeat] });
        }
        else {
            _log__WEBPACK_IMPORTED_MODULE_3__["warn"](_log__WEBPACK_IMPORTED_MODULE_3__["message"].noSuchRepeatedValue(o.field.repeat));
            return undefined;
        }
    }
    return o;
}
/**
 * Replace repeater values in a field def with the concrete field name.
 */
function replaceRepeaterInFieldDef(fieldDef, repeater) {
    fieldDef = replaceRepeat(fieldDef, repeater);
    if (fieldDef === undefined) {
        // the field def should be ignored
        return undefined;
    }
    else if (fieldDef === null) {
        return null;
    }
    if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_2__["isSortableFieldDef"])(fieldDef) && Object(_sort__WEBPACK_IMPORTED_MODULE_4__["isSortField"])(fieldDef.sort)) {
        const sort = replaceRepeat(fieldDef.sort, repeater);
        fieldDef = Object.assign({}, fieldDef, (sort ? { sort } : {}));
    }
    return fieldDef;
}
function replaceRepeaterInChannelDef(channelDef, repeater) {
    if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_2__["isFieldDef"])(channelDef)) {
        const fd = replaceRepeaterInFieldDef(channelDef, repeater);
        if (fd) {
            return fd;
        }
        else if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_2__["isConditionalDef"])(channelDef)) {
            return { condition: channelDef.condition };
        }
    }
    else {
        if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_2__["hasConditionalFieldDef"])(channelDef)) {
            const fd = replaceRepeaterInFieldDef(channelDef.condition, repeater);
            if (fd) {
                return Object.assign({}, channelDef, { condition: fd });
            }
            else {
                const { condition } = channelDef, channelDefWithoutCondition = tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"](channelDef, ["condition"]);
                return channelDefWithoutCondition;
            }
        }
        return channelDef;
    }
    return undefined;
}
function replaceRepeater(mapping, repeater) {
    const out = {};
    for (const channel in mapping) {
        if (mapping.hasOwnProperty(channel)) {
            const channelDef = mapping[channel];
            if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(channelDef)) {
                // array cannot have condition
                out[channel] = channelDef.map(cd => replaceRepeaterInChannelDef(cd, repeater)).filter(cd => cd);
            }
            else {
                const cd = replaceRepeaterInChannelDef(channelDef, repeater);
                if (cd !== undefined) {
                    out[channel] = cd;
                }
            }
        }
    }
    return out;
}
//# sourceMappingURL=repeater.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/resolve.js":
/*!*************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/resolve.js ***!
  \*************************************************************/
/*! exports provided: defaultScaleResolve, parseGuideResolve */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultScaleResolve", function() { return defaultScaleResolve; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseGuideResolve", function() { return parseGuideResolve; });
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../channel */ "./node_modules/vega-lite/build/src/channel.js");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../log */ "./node_modules/vega-lite/build/src/log/index.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ "./node_modules/vega-lite/build/src/util.js");
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./model */ "./node_modules/vega-lite/build/src/compile/model.js");




function defaultScaleResolve(channel, model) {
    if (Object(_model__WEBPACK_IMPORTED_MODULE_3__["isLayerModel"])(model) || Object(_model__WEBPACK_IMPORTED_MODULE_3__["isFacetModel"])(model)) {
        return 'shared';
    }
    else if (Object(_model__WEBPACK_IMPORTED_MODULE_3__["isConcatModel"])(model) || Object(_model__WEBPACK_IMPORTED_MODULE_3__["isRepeatModel"])(model)) {
        return Object(_util__WEBPACK_IMPORTED_MODULE_2__["contains"])(_channel__WEBPACK_IMPORTED_MODULE_0__["POSITION_SCALE_CHANNELS"], channel) ? 'independent' : 'shared';
    }
    /* istanbul ignore next: should never reach here. */
    throw new Error('invalid model type for resolve');
}
function parseGuideResolve(resolve, channel) {
    const channelScaleResolve = resolve.scale[channel];
    const guide = Object(_util__WEBPACK_IMPORTED_MODULE_2__["contains"])(_channel__WEBPACK_IMPORTED_MODULE_0__["POSITION_SCALE_CHANNELS"], channel) ? 'axis' : 'legend';
    if (channelScaleResolve === 'independent') {
        if (resolve[guide][channel] === 'shared') {
            _log__WEBPACK_IMPORTED_MODULE_1__["warn"](_log__WEBPACK_IMPORTED_MODULE_1__["message"].independentScaleMeansIndependentGuide(channel));
        }
        return 'independent';
    }
    return resolve[guide][channel] || 'shared';
}
//# sourceMappingURL=resolve.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/scale/assemble.js":
/*!********************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/scale/assemble.js ***!
  \********************************************************************/
/*! exports provided: assembleScales, assembleScalesForModel, assembleScaleRange */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "assembleScales", function() { return assembleScales; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "assembleScalesForModel", function() { return assembleScalesForModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "assembleScaleRange", function() { return assembleScaleRange; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../util */ "./node_modules/vega-lite/build/src/util.js");
/* harmony import */ var _vega_schema__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../vega.schema */ "./node_modules/vega-lite/build/src/vega.schema.js");
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../model */ "./node_modules/vega-lite/build/src/compile/model.js");
/* harmony import */ var _selection__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../selection */ "./node_modules/vega-lite/build/src/compile/selection/index.js");
/* harmony import */ var _selection_assemble__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../selection/assemble */ "./node_modules/vega-lite/build/src/compile/selection/assemble.js");
/* harmony import */ var _domain__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./domain */ "./node_modules/vega-lite/build/src/compile/scale/domain.js");







function assembleScales(model) {
    if (Object(_model__WEBPACK_IMPORTED_MODULE_3__["isLayerModel"])(model) || Object(_model__WEBPACK_IMPORTED_MODULE_3__["isConcatModel"])(model) || Object(_model__WEBPACK_IMPORTED_MODULE_3__["isRepeatModel"])(model)) {
        // For concat / layer / repeat, include scales of children too
        return model.children.reduce((scales, child) => {
            return scales.concat(assembleScales(child));
        }, assembleScalesForModel(model));
    }
    else {
        // For facet, child scales would not be included in the parent's scope.
        // For unit, there is no child.
        return assembleScalesForModel(model);
    }
}
function assembleScalesForModel(model) {
    return Object(_util__WEBPACK_IMPORTED_MODULE_1__["keys"])(model.component.scales).reduce((scales, channel) => {
        const scaleComponent = model.component.scales[channel];
        if (scaleComponent.merged) {
            // Skipped merged scales
            return scales;
        }
        const scale = scaleComponent.combine();
        // need to separate const and non const object destruction
        let { domainRaw } = scale;
        const { name, type, domainRaw: _d, range: _r } = scale, otherScaleProps = tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"](scale, ["name", "type", "domainRaw", "range"]);
        const range = assembleScaleRange(scale.range, name, channel);
        // As scale parsing occurs before selection parsing, a temporary signal
        // is used for domainRaw. Here, we detect if this temporary signal
        // is set, and replace it with the correct domainRaw signal.
        // For more information, see isRawSelectionDomain in selection.ts.
        if (domainRaw && Object(_selection__WEBPACK_IMPORTED_MODULE_4__["isRawSelectionDomain"])(domainRaw)) {
            domainRaw = Object(_selection_assemble__WEBPACK_IMPORTED_MODULE_5__["assembleSelectionScaleDomain"])(model, domainRaw);
        }
        const domain = Object(_domain__WEBPACK_IMPORTED_MODULE_6__["assembleDomain"])(model, channel);
        scales.push(Object.assign({ name,
            type }, (domain ? { domain } : {}), (domainRaw ? { domainRaw } : {}), { range: range }, otherScaleProps));
        return scales;
    }, []);
}
function assembleScaleRange(scaleRange, scaleName, channel) {
    // add signals to x/y range
    if (channel === 'x' || channel === 'y') {
        if (Object(_vega_schema__WEBPACK_IMPORTED_MODULE_2__["isVgRangeStep"])(scaleRange)) {
            // For x/y range step, use a signal created in layout assemble instead of a constant range step.
            return {
                step: { signal: scaleName + '_step' }
            };
        }
    }
    return scaleRange;
}
//# sourceMappingURL=assemble.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/scale/component.js":
/*!*********************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/scale/component.js ***!
  \*********************************************************************/
/*! exports provided: ScaleComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ScaleComponent", function() { return ScaleComponent; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../util */ "./node_modules/vega-lite/build/src/util.js");
/* harmony import */ var _split__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../split */ "./node_modules/vega-lite/build/src/compile/split.js");



class ScaleComponent extends _split__WEBPACK_IMPORTED_MODULE_2__["Split"] {
    constructor(name, typeWithExplicit) {
        super({}, // no initial explicit property
        { name } // name as initial implicit property
        );
        this.merged = false;
        this.domains = [];
        this.setWithExplicit('type', typeWithExplicit);
    }
    /**
     * Whether the scale definitely includes zero in the domain
     */
    get domainDefinitelyIncludesZero() {
        if (this.get('zero') !== false) {
            return true;
        }
        const domains = this.domains;
        if (Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isArray"])(domains)) {
            return Object(_util__WEBPACK_IMPORTED_MODULE_1__["some"])(domains, d => Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isArray"])(d) && d.length === 2 && d[0] <= 0 && d[1] >= 0);
        }
        return false;
    }
}
//# sourceMappingURL=component.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/scale/domain.js":
/*!******************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/scale/domain.js ***!
  \******************************************************************/
/*! exports provided: parseScaleDomain, parseDomainForChannel, domainSort, canUseUnaggregatedDomain, mergeDomains, getFieldFromDomain, assembleDomain */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseScaleDomain", function() { return parseScaleDomain; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseDomainForChannel", function() { return parseDomainForChannel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "domainSort", function() { return domainSort; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "canUseUnaggregatedDomain", function() { return canUseUnaggregatedDomain; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mergeDomains", function() { return mergeDomains; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getFieldFromDomain", function() { return getFieldFromDomain; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "assembleDomain", function() { return assembleDomain; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var _aggregate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../aggregate */ "./node_modules/vega-lite/build/src/aggregate.js");
/* harmony import */ var _bin__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../bin */ "./node_modules/vega-lite/build/src/bin.js");
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../channel */ "./node_modules/vega-lite/build/src/channel.js");
/* harmony import */ var _channeldef__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../channeldef */ "./node_modules/vega-lite/build/src/channeldef.js");
/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../data */ "./node_modules/vega-lite/build/src/data.js");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../log */ "./node_modules/vega-lite/build/src/log/index.js");
/* harmony import */ var _scale__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../scale */ "./node_modules/vega-lite/build/src/scale.js");
/* harmony import */ var _sort__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../sort */ "./node_modules/vega-lite/build/src/sort.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../util */ "./node_modules/vega-lite/build/src/util.js");
/* harmony import */ var _vega_schema__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../vega.schema */ "./node_modules/vega-lite/build/src/vega.schema.js");
/* harmony import */ var _data_calculate__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../data/calculate */ "./node_modules/vega-lite/build/src/compile/data/calculate.js");
/* harmony import */ var _data_optimize__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../data/optimize */ "./node_modules/vega-lite/build/src/compile/data/optimize.js");
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../model */ "./node_modules/vega-lite/build/src/compile/model.js");
/* harmony import */ var _selection__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../selection */ "./node_modules/vega-lite/build/src/compile/selection/index.js");
/* harmony import */ var _signal__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../signal */ "./node_modules/vega-lite/build/src/compile/signal.js");

















function parseScaleDomain(model) {
    if (Object(_model__WEBPACK_IMPORTED_MODULE_14__["isUnitModel"])(model)) {
        parseUnitScaleDomain(model);
    }
    else {
        parseNonUnitScaleDomain(model);
    }
}
function parseUnitScaleDomain(model) {
    const scales = model.specifiedScales;
    const localScaleComponents = model.component.scales;
    _util__WEBPACK_IMPORTED_MODULE_10__["keys"](localScaleComponents).forEach((channel) => {
        const specifiedScale = scales[channel];
        const specifiedDomain = specifiedScale ? specifiedScale.domain : undefined;
        const domains = parseDomainForChannel(model, channel);
        const localScaleCmpt = localScaleComponents[channel];
        localScaleCmpt.domains = domains;
        if (Object(_scale__WEBPACK_IMPORTED_MODULE_8__["isSelectionDomain"])(specifiedDomain)) {
            // As scale parsing occurs before selection parsing, we use a temporary
            // signal here and append the scale.domain definition. This is replaced
            // with the correct domainRaw signal during scale assembly.
            // For more information, see isRawSelectionDomain in selection.ts.
            // FIXME: replace this with a special property in the scaleComponent
            localScaleCmpt.set('domainRaw', {
                signal: _selection__WEBPACK_IMPORTED_MODULE_15__["SELECTION_DOMAIN"] + _util__WEBPACK_IMPORTED_MODULE_10__["hash"](specifiedDomain)
            }, true);
        }
        if (model.component.data.isFaceted) {
            // get resolve from closest facet parent as this decides whether we need to refer to cloned subtree or not
            let facetParent = model;
            while (!Object(_model__WEBPACK_IMPORTED_MODULE_14__["isFacetModel"])(facetParent) && facetParent.parent) {
                facetParent = facetParent.parent;
            }
            const resolve = facetParent.component.resolve.scale[channel];
            if (resolve === 'shared') {
                for (const domain of domains) {
                    // Replace the scale domain with data output from a cloned subtree after the facet.
                    if (Object(_vega_schema__WEBPACK_IMPORTED_MODULE_11__["isDataRefDomain"])(domain)) {
                        // use data from cloned subtree (which is the same as data but with a prefix added once)
                        domain.data = _data_optimize__WEBPACK_IMPORTED_MODULE_13__["FACET_SCALE_PREFIX"] + domain.data.replace(_data_optimize__WEBPACK_IMPORTED_MODULE_13__["FACET_SCALE_PREFIX"], '');
                    }
                }
            }
        }
    });
}
function parseNonUnitScaleDomain(model) {
    for (const child of model.children) {
        parseScaleDomain(child);
    }
    const localScaleComponents = model.component.scales;
    _util__WEBPACK_IMPORTED_MODULE_10__["keys"](localScaleComponents).forEach((channel) => {
        let domains;
        let domainRaw = null;
        for (const child of model.children) {
            const childComponent = child.component.scales[channel];
            if (childComponent) {
                if (domains === undefined) {
                    domains = childComponent.domains;
                }
                else {
                    domains = domains.concat(childComponent.domains);
                }
                const dr = childComponent.get('domainRaw');
                if (domainRaw && dr && domainRaw.signal !== dr.signal) {
                    _log__WEBPACK_IMPORTED_MODULE_7__["warn"]('The same selection must be used to override scale domains in a layered view.');
                }
                domainRaw = dr;
            }
        }
        localScaleComponents[channel].domains = domains;
        if (domainRaw) {
            localScaleComponents[channel].set('domainRaw', domainRaw, true);
        }
    });
}
/**
 * Remove unaggregated domain if it is not applicable
 * Add unaggregated domain if domain is not specified and config.scale.useUnaggregatedDomain is true.
 */
function normalizeUnaggregatedDomain(domain, fieldDef, scaleType, scaleConfig) {
    if (domain === 'unaggregated') {
        const { valid, reason } = canUseUnaggregatedDomain(fieldDef, scaleType);
        if (!valid) {
            _log__WEBPACK_IMPORTED_MODULE_7__["warn"](reason);
            return undefined;
        }
    }
    else if (domain === undefined && scaleConfig.useUnaggregatedDomain) {
        // Apply config if domain is not specified.
        const { valid } = canUseUnaggregatedDomain(fieldDef, scaleType);
        if (valid) {
            return 'unaggregated';
        }
    }
    return domain;
}
function parseDomainForChannel(model, channel) {
    const scaleType = model.getScaleComponent(channel).get('type');
    const domain = normalizeUnaggregatedDomain(model.scaleDomain(channel), model.fieldDef(channel), scaleType, model.config.scale);
    if (domain !== model.scaleDomain(channel)) {
        model.specifiedScales[channel] = Object.assign({}, model.specifiedScales[channel], { domain });
    }
    // If channel is either X or Y then union them with X2 & Y2 if they exist
    if (channel === 'x' && model.channelHasField('x2')) {
        if (model.channelHasField('x')) {
            return parseSingleChannelDomain(scaleType, domain, model, 'x').concat(parseSingleChannelDomain(scaleType, domain, model, 'x2'));
        }
        else {
            return parseSingleChannelDomain(scaleType, domain, model, 'x2');
        }
    }
    else if (channel === 'y' && model.channelHasField('y2')) {
        if (model.channelHasField('y')) {
            return parseSingleChannelDomain(scaleType, domain, model, 'y').concat(parseSingleChannelDomain(scaleType, domain, model, 'y2'));
        }
        else {
            return parseSingleChannelDomain(scaleType, domain, model, 'y2');
        }
    }
    return parseSingleChannelDomain(scaleType, domain, model, channel);
}
function mapDomainToDataSignal(domain, type, timeUnit) {
    return domain.map(v => {
        const data = Object(_channeldef__WEBPACK_IMPORTED_MODULE_5__["valueExpr"])(v, { timeUnit, type });
        return { signal: `{data: ${data}}` };
    });
}
function parseSingleChannelDomain(scaleType, domain, model, channel) {
    const fieldDef = model.fieldDef(channel);
    if (domain && domain !== 'unaggregated' && !Object(_scale__WEBPACK_IMPORTED_MODULE_8__["isSelectionDomain"])(domain)) {
        // explicit value
        const { type, timeUnit } = fieldDef;
        if (type === 'temporal' || timeUnit) {
            return mapDomainToDataSignal(domain, type, timeUnit);
        }
        return [domain];
    }
    const stack = model.stack;
    if (stack && channel === stack.fieldChannel) {
        if (stack.offset === 'normalize') {
            return [[0, 1]];
        }
        const data = model.requestDataName(_data__WEBPACK_IMPORTED_MODULE_6__["MAIN"]);
        return [
            {
                data,
                field: model.vgField(channel, { suffix: 'start' })
            },
            {
                data,
                field: model.vgField(channel, { suffix: 'end' })
            }
        ];
    }
    const sort = Object(_channel__WEBPACK_IMPORTED_MODULE_4__["isScaleChannel"])(channel)
        ? domainSort(model, channel, scaleType)
        : undefined;
    if (domain === 'unaggregated') {
        const data = model.requestDataName(_data__WEBPACK_IMPORTED_MODULE_6__["MAIN"]);
        const { field } = fieldDef;
        return [
            {
                data,
                field: Object(_channeldef__WEBPACK_IMPORTED_MODULE_5__["vgField"])({ field, aggregate: 'min' })
            },
            {
                data,
                field: Object(_channeldef__WEBPACK_IMPORTED_MODULE_5__["vgField"])({ field, aggregate: 'max' })
            }
        ];
    }
    else if (Object(_bin__WEBPACK_IMPORTED_MODULE_3__["isBinning"])(fieldDef.bin)) {
        if (Object(_scale__WEBPACK_IMPORTED_MODULE_8__["hasDiscreteDomain"])(scaleType)) {
            if (scaleType === 'bin-ordinal') {
                // we can omit the domain as it is inferred from the `bins` property
                return [];
            }
            // ordinal bin scale takes domain from bin_range, ordered by bin start
            // This is useful for both axis-based scale (x/y) and legend-based scale (other channels).
            return [
                {
                    // If sort by aggregation of a specified sort field, we need to use RAW table,
                    // so we can aggregate values for the scale independently from the main aggregation.
                    data: _util__WEBPACK_IMPORTED_MODULE_10__["isBoolean"](sort) ? model.requestDataName(_data__WEBPACK_IMPORTED_MODULE_6__["MAIN"]) : model.requestDataName(_data__WEBPACK_IMPORTED_MODULE_6__["RAW"]),
                    // Use range if we added it and the scale does not support computing a range as a signal.
                    field: model.vgField(channel, Object(_channeldef__WEBPACK_IMPORTED_MODULE_5__["binRequiresRange"])(fieldDef, channel) ? { binSuffix: 'range' } : {}),
                    // we have to use a sort object if sort = true to make the sort correct by bin start
                    sort: sort === true || !Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isObject"])(sort)
                        ? {
                            field: model.vgField(channel, {}),
                            op: 'min' // min or max doesn't matter since we sort by the start of the bin range
                        }
                        : sort
                }
            ];
        }
        else {
            // continuous scales
            if (Object(_bin__WEBPACK_IMPORTED_MODULE_3__["isBinning"])(fieldDef.bin)) {
                const signalName = model.getName(Object(_channeldef__WEBPACK_IMPORTED_MODULE_5__["vgField"])(fieldDef, { suffix: 'bins' }));
                return [
                    new _signal__WEBPACK_IMPORTED_MODULE_16__["SignalRefWrapper"](() => {
                        const signal = model.getSignalName(signalName);
                        return `[${signal}.start, ${signal}.stop]`;
                    })
                ];
            }
            else {
                return [
                    {
                        data: model.requestDataName(_data__WEBPACK_IMPORTED_MODULE_6__["MAIN"]),
                        field: model.vgField(channel, {})
                    }
                ];
            }
        }
    }
    else if (sort) {
        return [
            {
                // If sort by aggregation of a specified sort field, we need to use RAW table,
                // so we can aggregate values for the scale independently from the main aggregation.
                data: _util__WEBPACK_IMPORTED_MODULE_10__["isBoolean"](sort) ? model.requestDataName(_data__WEBPACK_IMPORTED_MODULE_6__["MAIN"]) : model.requestDataName(_data__WEBPACK_IMPORTED_MODULE_6__["RAW"]),
                field: model.vgField(channel),
                sort: sort
            }
        ];
    }
    else {
        return [
            {
                data: model.requestDataName(_data__WEBPACK_IMPORTED_MODULE_6__["MAIN"]),
                field: model.vgField(channel)
            }
        ];
    }
}
function normalizeSortField(sort, isStacked) {
    const { op, field, order } = sort;
    return Object.assign({ 
        // Apply default op
        op: op || (isStacked ? 'sum' : _sort__WEBPACK_IMPORTED_MODULE_9__["DEFAULT_SORT_OP"]) }, (field ? { field: _util__WEBPACK_IMPORTED_MODULE_10__["replacePathInField"](field) } : {}), (order ? { order } : {}));
}
function domainSort(model, channel, scaleType) {
    if (!Object(_scale__WEBPACK_IMPORTED_MODULE_8__["hasDiscreteDomain"])(scaleType)) {
        return undefined;
    }
    // save to cast as the only exception is the geojson type for shape, which would not generate a scale
    const fieldDef = model.fieldDef(channel);
    const sort = fieldDef.sort;
    // if the sort is specified with array, use the derived sort index field
    if (Object(_sort__WEBPACK_IMPORTED_MODULE_9__["isSortArray"])(sort)) {
        return {
            op: 'min',
            field: Object(_data_calculate__WEBPACK_IMPORTED_MODULE_12__["sortArrayIndexField"])(fieldDef, channel),
            order: 'ascending'
        };
    }
    const isStacked = model.stack !== null;
    // Sorted based on an aggregate calculation over a specified sort field (only for ordinal scale)
    if (Object(_sort__WEBPACK_IMPORTED_MODULE_9__["isSortField"])(sort)) {
        return normalizeSortField(sort, isStacked);
    }
    else if (Object(_sort__WEBPACK_IMPORTED_MODULE_9__["isSortByEncoding"])(sort)) {
        const { encoding, order } = sort;
        const { aggregate, field } = model.fieldDef(encoding);
        const sortField = {
            op: aggregate,
            field,
            order
        };
        return normalizeSortField(sortField, isStacked);
    }
    else if (sort === 'descending') {
        return {
            op: 'min',
            field: model.vgField(channel),
            order: 'descending'
        };
    }
    else if (_util__WEBPACK_IMPORTED_MODULE_10__["contains"](['ascending', undefined /* default =ascending*/], sort)) {
        return true;
    }
    // sort == null
    return undefined;
}
/**
 * Determine if a scale can use unaggregated domain.
 * @return {Boolean} Returns true if all of the following conditions apply:
 * 1. `scale.domain` is `unaggregated`
 * 2. Aggregation function is not `count` or `sum`
 * 3. The scale is quantitative or time scale.
 */
function canUseUnaggregatedDomain(fieldDef, scaleType) {
    const { aggregate, type } = fieldDef;
    if (!aggregate) {
        return {
            valid: false,
            reason: _log__WEBPACK_IMPORTED_MODULE_7__["message"].unaggregateDomainHasNoEffectForRawField(fieldDef)
        };
    }
    if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isString"])(aggregate) && !_aggregate__WEBPACK_IMPORTED_MODULE_2__["SHARED_DOMAIN_OP_INDEX"][aggregate]) {
        return {
            valid: false,
            reason: _log__WEBPACK_IMPORTED_MODULE_7__["message"].unaggregateDomainWithNonSharedDomainOp(aggregate)
        };
    }
    if (type === 'quantitative') {
        if (scaleType === 'log') {
            return {
                valid: false,
                reason: _log__WEBPACK_IMPORTED_MODULE_7__["message"].unaggregatedDomainWithLogScale(fieldDef)
            };
        }
    }
    return { valid: true };
}
/**
 * Converts an array of domains to a single Vega scale domain.
 */
function mergeDomains(domains) {
    const uniqueDomains = _util__WEBPACK_IMPORTED_MODULE_10__["unique"](domains.map(domain => {
        // ignore sort property when computing the unique domains
        if (Object(_vega_schema__WEBPACK_IMPORTED_MODULE_11__["isDataRefDomain"])(domain)) {
            const { sort: _s } = domain, domainWithoutSort = tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"](domain, ["sort"]);
            return domainWithoutSort;
        }
        return domain;
    }), _util__WEBPACK_IMPORTED_MODULE_10__["hash"]);
    const sorts = _util__WEBPACK_IMPORTED_MODULE_10__["unique"](domains
        .map(d => {
        if (Object(_vega_schema__WEBPACK_IMPORTED_MODULE_11__["isDataRefDomain"])(d)) {
            const s = d.sort;
            if (s !== undefined && !_util__WEBPACK_IMPORTED_MODULE_10__["isBoolean"](s)) {
                if (s.op === 'count') {
                    // let's make sure that if op is count, we don't use a field
                    delete s.field;
                }
                if (s.order === 'ascending') {
                    // drop order: ascending as it is the default
                    delete s.order;
                }
            }
            return s;
        }
        return undefined;
    })
        .filter(s => s !== undefined), _util__WEBPACK_IMPORTED_MODULE_10__["hash"]);
    if (uniqueDomains.length === 0) {
        return undefined;
    }
    else if (uniqueDomains.length === 1) {
        const domain = domains[0];
        if (Object(_vega_schema__WEBPACK_IMPORTED_MODULE_11__["isDataRefDomain"])(domain) && sorts.length > 0) {
            let sort = sorts[0];
            if (sorts.length > 1) {
                _log__WEBPACK_IMPORTED_MODULE_7__["warn"](_log__WEBPACK_IMPORTED_MODULE_7__["message"].MORE_THAN_ONE_SORT);
                sort = true;
            }
            return Object.assign({}, domain, { sort });
        }
        return domain;
    }
    // only keep simple sort properties that work with unioned domains
    const simpleSorts = _util__WEBPACK_IMPORTED_MODULE_10__["unique"](sorts.map(s => {
        if (_util__WEBPACK_IMPORTED_MODULE_10__["isBoolean"](s)) {
            return s;
        }
        if (s.op === 'count') {
            return s;
        }
        _log__WEBPACK_IMPORTED_MODULE_7__["warn"](_log__WEBPACK_IMPORTED_MODULE_7__["message"].domainSortDropped(s));
        return true;
    }), _util__WEBPACK_IMPORTED_MODULE_10__["hash"]);
    let sort;
    if (simpleSorts.length === 1) {
        sort = simpleSorts[0];
    }
    else if (simpleSorts.length > 1) {
        _log__WEBPACK_IMPORTED_MODULE_7__["warn"](_log__WEBPACK_IMPORTED_MODULE_7__["message"].MORE_THAN_ONE_SORT);
        sort = true;
    }
    const allData = _util__WEBPACK_IMPORTED_MODULE_10__["unique"](domains.map(d => {
        if (Object(_vega_schema__WEBPACK_IMPORTED_MODULE_11__["isDataRefDomain"])(d)) {
            return d.data;
        }
        return null;
    }), x => x);
    if (allData.length === 1 && allData[0] !== null) {
        // create a union domain of different fields with a single data source
        const domain = Object.assign({ data: allData[0], fields: uniqueDomains.map(d => d.field) }, (sort ? { sort } : {}));
        return domain;
    }
    return Object.assign({ fields: uniqueDomains }, (sort ? { sort } : {}));
}
/**
 * Return a field if a scale single field.
 * Return `undefined` otherwise.
 *
 */
function getFieldFromDomain(domain) {
    if (Object(_vega_schema__WEBPACK_IMPORTED_MODULE_11__["isDataRefDomain"])(domain) && Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isString"])(domain.field)) {
        return domain.field;
    }
    else if (Object(_vega_schema__WEBPACK_IMPORTED_MODULE_11__["isDataRefUnionedDomain"])(domain)) {
        let field;
        for (const nonUnionDomain of domain.fields) {
            if (Object(_vega_schema__WEBPACK_IMPORTED_MODULE_11__["isDataRefDomain"])(nonUnionDomain) && Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isString"])(nonUnionDomain.field)) {
                if (!field) {
                    field = nonUnionDomain.field;
                }
                else if (field !== nonUnionDomain.field) {
                    _log__WEBPACK_IMPORTED_MODULE_7__["warn"]('Detected faceted independent scales that union domain of multiple fields from different data sources.  We will use the first field.  The result view size may be incorrect.');
                    return field;
                }
            }
        }
        _log__WEBPACK_IMPORTED_MODULE_7__["warn"]('Detected faceted independent scales that union domain of identical fields from different source detected.  We will assume that this is the same field from a different fork of the same data source.  However, if this is not case, the result view size maybe incorrect.');
        return field;
    }
    else if (Object(_vega_schema__WEBPACK_IMPORTED_MODULE_11__["isFieldRefUnionDomain"])(domain)) {
        _log__WEBPACK_IMPORTED_MODULE_7__["warn"]('Detected faceted independent scales that union domain of multiple fields from the same data source.  We will use the first field.  The result view size may be incorrect.');
        const field = domain.fields[0];
        return Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isString"])(field) ? field : undefined;
    }
    return undefined;
}
function assembleDomain(model, channel) {
    const scaleComponent = model.component.scales[channel];
    const domains = scaleComponent.domains.map(domain => {
        // Correct references to data as the original domain's data was determined
        // in parseScale, which happens before parseData. Thus the original data
        // reference can be incorrect.
        if (Object(_vega_schema__WEBPACK_IMPORTED_MODULE_11__["isDataRefDomain"])(domain)) {
            domain.data = model.lookupDataSource(domain.data);
        }
        return domain;
    });
    // domains is an array that has to be merged into a single vega domain
    return mergeDomains(domains);
}
//# sourceMappingURL=domain.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/scale/parse.js":
/*!*****************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/scale/parse.js ***!
  \*****************************************************************/
/*! exports provided: parseScales, parseScaleCore */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseScales", function() { return parseScales; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseScaleCore", function() { return parseScaleCore; });
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../channel */ "./node_modules/vega-lite/build/src/channel.js");
/* harmony import */ var _channeldef__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../channeldef */ "./node_modules/vega-lite/build/src/channeldef.js");
/* harmony import */ var _mark__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../mark */ "./node_modules/vega-lite/build/src/mark.js");
/* harmony import */ var _scale__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../scale */ "./node_modules/vega-lite/build/src/scale.js");
/* harmony import */ var _type__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../type */ "./node_modules/vega-lite/build/src/type.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../util */ "./node_modules/vega-lite/build/src/util.js");
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../model */ "./node_modules/vega-lite/build/src/compile/model.js");
/* harmony import */ var _resolve__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../resolve */ "./node_modules/vega-lite/build/src/compile/resolve.js");
/* harmony import */ var _split__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../split */ "./node_modules/vega-lite/build/src/compile/split.js");
/* harmony import */ var _component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./component */ "./node_modules/vega-lite/build/src/compile/scale/component.js");
/* harmony import */ var _domain__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./domain */ "./node_modules/vega-lite/build/src/compile/scale/domain.js");
/* harmony import */ var _properties__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./properties */ "./node_modules/vega-lite/build/src/compile/scale/properties.js");
/* harmony import */ var _type__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./type */ "./node_modules/vega-lite/build/src/compile/scale/type.js");













function parseScales(model) {
    parseScaleCore(model);
    Object(_domain__WEBPACK_IMPORTED_MODULE_10__["parseScaleDomain"])(model);
    for (const prop of _scale__WEBPACK_IMPORTED_MODULE_3__["NON_TYPE_DOMAIN_RANGE_VEGA_SCALE_PROPERTIES"]) {
        Object(_properties__WEBPACK_IMPORTED_MODULE_11__["parseScaleProperty"])(model, prop);
    }
    // range depends on zero
    Object(_properties__WEBPACK_IMPORTED_MODULE_11__["parseScaleRange"])(model);
}
function parseScaleCore(model) {
    if (Object(_model__WEBPACK_IMPORTED_MODULE_6__["isUnitModel"])(model)) {
        model.component.scales = parseUnitScaleCore(model);
    }
    else {
        model.component.scales = parseNonUnitScaleCore(model);
    }
}
/**
 * Parse scales for all channels of a model.
 */
function parseUnitScaleCore(model) {
    const { encoding, mark } = model;
    return _channel__WEBPACK_IMPORTED_MODULE_0__["SCALE_CHANNELS"].reduce((scaleComponents, channel) => {
        let fieldDef;
        let specifiedScale;
        const channelDef = encoding[channel];
        // Don't generate scale for shape of geoshape
        if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["isFieldDef"])(channelDef) && mark === _mark__WEBPACK_IMPORTED_MODULE_2__["GEOSHAPE"] && channel === _channel__WEBPACK_IMPORTED_MODULE_0__["SHAPE"] && channelDef.type === _type__WEBPACK_IMPORTED_MODULE_4__["GEOJSON"]) {
            return scaleComponents;
        }
        if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["isFieldDef"])(channelDef)) {
            fieldDef = channelDef;
            specifiedScale = channelDef.scale;
        }
        else if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["hasConditionalFieldDef"])(channelDef)) {
            fieldDef = channelDef.condition;
            specifiedScale = channelDef.condition['scale']; // We use ['scale'] since we know that channel here has scale for sure
        }
        if (fieldDef && specifiedScale !== null && specifiedScale !== false) {
            specifiedScale = specifiedScale || {};
            const sType = Object(_type__WEBPACK_IMPORTED_MODULE_12__["scaleType"])(specifiedScale, channel, fieldDef, mark);
            scaleComponents[channel] = new _component__WEBPACK_IMPORTED_MODULE_9__["ScaleComponent"](model.scaleName(channel + '', true), {
                value: sType,
                explicit: specifiedScale.type === sType
            });
        }
        return scaleComponents;
    }, {});
}
const scaleTypeTieBreaker = Object(_split__WEBPACK_IMPORTED_MODULE_8__["tieBreakByComparing"])((st1, st2) => Object(_scale__WEBPACK_IMPORTED_MODULE_3__["scaleTypePrecedence"])(st1) - Object(_scale__WEBPACK_IMPORTED_MODULE_3__["scaleTypePrecedence"])(st2));
function parseNonUnitScaleCore(model) {
    const scaleComponents = (model.component.scales = {});
    const scaleTypeWithExplicitIndex = {};
    const resolve = model.component.resolve;
    // Parse each child scale and determine if a particular channel can be merged.
    for (const child of model.children) {
        parseScaleCore(child);
        // Instead of always merging right away -- check if it is compatible to merge first!
        Object(_util__WEBPACK_IMPORTED_MODULE_5__["keys"])(child.component.scales).forEach((channel) => {
            // if resolve is undefined, set default first
            resolve.scale[channel] = resolve.scale[channel] || Object(_resolve__WEBPACK_IMPORTED_MODULE_7__["defaultScaleResolve"])(channel, model);
            if (resolve.scale[channel] === 'shared') {
                const explicitScaleType = scaleTypeWithExplicitIndex[channel];
                const childScaleType = child.component.scales[channel].getWithExplicit('type');
                if (explicitScaleType) {
                    if (Object(_scale__WEBPACK_IMPORTED_MODULE_3__["scaleCompatible"])(explicitScaleType.value, childScaleType.value)) {
                        // merge scale component if type are compatible
                        scaleTypeWithExplicitIndex[channel] = Object(_split__WEBPACK_IMPORTED_MODULE_8__["mergeValuesWithExplicit"])(explicitScaleType, childScaleType, 'type', 'scale', scaleTypeTieBreaker);
                    }
                    else {
                        // Otherwise, update conflicting channel to be independent
                        resolve.scale[channel] = 'independent';
                        // Remove from the index so they don't get merged
                        delete scaleTypeWithExplicitIndex[channel];
                    }
                }
                else {
                    scaleTypeWithExplicitIndex[channel] = childScaleType;
                }
            }
        });
    }
    // Merge each channel listed in the index
    Object(_util__WEBPACK_IMPORTED_MODULE_5__["keys"])(scaleTypeWithExplicitIndex).forEach((channel) => {
        // Create new merged scale component
        const name = model.scaleName(channel, true);
        const typeWithExplicit = scaleTypeWithExplicitIndex[channel];
        scaleComponents[channel] = new _component__WEBPACK_IMPORTED_MODULE_9__["ScaleComponent"](name, typeWithExplicit);
        // rename each child and mark them as merged
        for (const child of model.children) {
            const childScale = child.component.scales[channel];
            if (childScale) {
                child.renameScale(childScale.get('name'), name);
                childScale.merged = true;
            }
        }
    });
    return scaleComponents;
}
//# sourceMappingURL=parse.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/scale/properties.js":
/*!**********************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/scale/properties.js ***!
  \**********************************************************************/
/*! exports provided: parseScaleProperty, getDefaultValue, parseScaleRange, parseNonUnitScaleProperty, bins, interpolate, nice, padding, paddingInner, paddingOuter, reverse, zero */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseScaleProperty", function() { return parseScaleProperty; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getDefaultValue", function() { return getDefaultValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseScaleRange", function() { return parseScaleRange; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseNonUnitScaleProperty", function() { return parseNonUnitScaleProperty; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bins", function() { return bins; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "interpolate", function() { return interpolate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "nice", function() { return nice; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "padding", function() { return padding; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "paddingInner", function() { return paddingInner; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "paddingOuter", function() { return paddingOuter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "reverse", function() { return reverse; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "zero", function() { return zero; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var _bin__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../bin */ "./node_modules/vega-lite/build/src/bin.js");
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../channel */ "./node_modules/vega-lite/build/src/channel.js");
/* harmony import */ var _channeldef__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../channeldef */ "./node_modules/vega-lite/build/src/channeldef.js");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../log */ "./node_modules/vega-lite/build/src/log/index.js");
/* harmony import */ var _scale__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../scale */ "./node_modules/vega-lite/build/src/scale.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../util */ "./node_modules/vega-lite/build/src/util.js");
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../model */ "./node_modules/vega-lite/build/src/compile/model.js");
/* harmony import */ var _split__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../split */ "./node_modules/vega-lite/build/src/compile/split.js");
/* harmony import */ var _signal__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./../signal */ "./node_modules/vega-lite/build/src/compile/signal.js");
/* harmony import */ var _range__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./range */ "./node_modules/vega-lite/build/src/compile/scale/range.js");












function parseScaleProperty(model, property) {
    if (Object(_model__WEBPACK_IMPORTED_MODULE_7__["isUnitModel"])(model)) {
        parseUnitScaleProperty(model, property);
    }
    else {
        parseNonUnitScaleProperty(model, property);
    }
}
function parseUnitScaleProperty(model, property) {
    const localScaleComponents = model.component.scales;
    Object(_util__WEBPACK_IMPORTED_MODULE_6__["keys"])(localScaleComponents).forEach((channel) => {
        const specifiedScale = model.specifiedScales[channel];
        const localScaleCmpt = localScaleComponents[channel];
        const mergedScaleCmpt = model.getScaleComponent(channel);
        const fieldDef = model.fieldDef(channel);
        const config = model.config;
        const specifiedValue = specifiedScale[property];
        const sType = mergedScaleCmpt.get('type');
        const supportedByScaleType = Object(_scale__WEBPACK_IMPORTED_MODULE_5__["scaleTypeSupportProperty"])(sType, property);
        const channelIncompatability = Object(_scale__WEBPACK_IMPORTED_MODULE_5__["channelScalePropertyIncompatability"])(channel, property);
        if (specifiedValue !== undefined) {
            // If there is a specified value, check if it is compatible with scale type and channel
            if (!supportedByScaleType) {
                _log__WEBPACK_IMPORTED_MODULE_4__["warn"](_log__WEBPACK_IMPORTED_MODULE_4__["message"].scalePropertyNotWorkWithScaleType(sType, property, channel));
            }
            else if (channelIncompatability) {
                // channel
                _log__WEBPACK_IMPORTED_MODULE_4__["warn"](channelIncompatability);
            }
        }
        if (supportedByScaleType && channelIncompatability === undefined) {
            if (specifiedValue !== undefined) {
                // copyKeyFromObject ensures type safety
                localScaleCmpt.copyKeyFromObject(property, specifiedScale);
            }
            else {
                const value = getDefaultValue(property, model, channel, fieldDef, mergedScaleCmpt.get('type'), mergedScaleCmpt.get('padding'), mergedScaleCmpt.get('paddingInner'), specifiedScale.domain, model.markDef, config);
                if (value !== undefined) {
                    localScaleCmpt.set(property, value, false);
                }
            }
        }
    });
}
// Note: This method is used in Voyager.
function getDefaultValue(property, model, channel, fieldDef, scaleType, scalePadding, scalePaddingInner, specifiedDomain, markDef, config) {
    const scaleConfig = config.scale;
    const { type, sort } = fieldDef;
    // If we have default rule-base, determine default value first
    switch (property) {
        case 'bins':
            return bins(model, fieldDef);
        case 'interpolate':
            return interpolate(channel, type);
        case 'nice':
            return nice(scaleType, channel, fieldDef);
        case 'padding':
            return padding(channel, scaleType, scaleConfig, fieldDef, markDef, config.bar);
        case 'paddingInner':
            return paddingInner(scalePadding, channel, markDef.type, scaleConfig);
        case 'paddingOuter':
            return paddingOuter(scalePadding, channel, scaleType, markDef.type, scalePaddingInner, scaleConfig);
        case 'reverse':
            return reverse(scaleType, sort);
        case 'zero':
            return zero(channel, fieldDef, specifiedDomain, markDef, scaleType);
    }
    // Otherwise, use scale config
    return scaleConfig[property];
}
// This method is here rather than in range.ts to avoid circular dependency.
function parseScaleRange(model) {
    if (Object(_model__WEBPACK_IMPORTED_MODULE_7__["isUnitModel"])(model)) {
        Object(_range__WEBPACK_IMPORTED_MODULE_10__["parseUnitScaleRange"])(model);
    }
    else {
        parseNonUnitScaleProperty(model, 'range');
    }
}
function parseNonUnitScaleProperty(model, property) {
    const localScaleComponents = model.component.scales;
    for (const child of model.children) {
        if (property === 'range') {
            parseScaleRange(child);
        }
        else {
            parseScaleProperty(child, property);
        }
    }
    Object(_util__WEBPACK_IMPORTED_MODULE_6__["keys"])(localScaleComponents).forEach((channel) => {
        let valueWithExplicit;
        for (const child of model.children) {
            const childComponent = child.component.scales[channel];
            if (childComponent) {
                const childValueWithExplicit = childComponent.getWithExplicit(property);
                valueWithExplicit = Object(_split__WEBPACK_IMPORTED_MODULE_8__["mergeValuesWithExplicit"])(valueWithExplicit, childValueWithExplicit, property, 'scale', Object(_split__WEBPACK_IMPORTED_MODULE_8__["tieBreakByComparing"])((v1, v2) => {
                    switch (property) {
                        case 'range':
                            // For range step, prefer larger step
                            if (v1.step && v2.step) {
                                return v1.step - v2.step;
                            }
                            return 0;
                        // TODO: precedence rule for other properties
                    }
                    return 0;
                }));
            }
        }
        localScaleComponents[channel].setWithExplicit(property, valueWithExplicit);
    });
}
function bins(model, fieldDef) {
    const bin = fieldDef.bin;
    if (Object(_bin__WEBPACK_IMPORTED_MODULE_1__["isBinning"])(bin)) {
        const signal = model.getName(Object(_channeldef__WEBPACK_IMPORTED_MODULE_3__["vgField"])(fieldDef, { suffix: 'bins' }));
        return new _signal__WEBPACK_IMPORTED_MODULE_9__["SignalRefWrapper"](() => {
            return model.getSignalName(signal);
        });
    }
    else if (Object(_bin__WEBPACK_IMPORTED_MODULE_1__["isBinned"])(bin) && Object(_bin__WEBPACK_IMPORTED_MODULE_1__["isBinParams"])(bin) && bin.step !== undefined) {
        // start and stop will be determined from the scale domain
        return {
            step: bin.step
        };
    }
    return undefined;
}
function interpolate(channel, type) {
    if (Object(_util__WEBPACK_IMPORTED_MODULE_6__["contains"])([_channel__WEBPACK_IMPORTED_MODULE_2__["COLOR"], _channel__WEBPACK_IMPORTED_MODULE_2__["FILL"], _channel__WEBPACK_IMPORTED_MODULE_2__["STROKE"]], channel) && type !== 'nominal') {
        return 'hcl';
    }
    return undefined;
}
function nice(scaleType, channel, fieldDef) {
    if (fieldDef.bin || _util__WEBPACK_IMPORTED_MODULE_6__["contains"]([_scale__WEBPACK_IMPORTED_MODULE_5__["ScaleType"].TIME, _scale__WEBPACK_IMPORTED_MODULE_5__["ScaleType"].UTC], scaleType)) {
        return undefined;
    }
    return _util__WEBPACK_IMPORTED_MODULE_6__["contains"]([_channel__WEBPACK_IMPORTED_MODULE_2__["X"], _channel__WEBPACK_IMPORTED_MODULE_2__["Y"]], channel) ? true : undefined;
}
function padding(channel, scaleType, scaleConfig, fieldDef, markDef, barConfig) {
    if (_util__WEBPACK_IMPORTED_MODULE_6__["contains"]([_channel__WEBPACK_IMPORTED_MODULE_2__["X"], _channel__WEBPACK_IMPORTED_MODULE_2__["Y"]], channel)) {
        if (Object(_scale__WEBPACK_IMPORTED_MODULE_5__["isContinuousToContinuous"])(scaleType)) {
            if (scaleConfig.continuousPadding !== undefined) {
                return scaleConfig.continuousPadding;
            }
            const { type, orient } = markDef;
            if (type === 'bar' && !fieldDef.bin) {
                if ((orient === 'vertical' && channel === 'x') || (orient === 'horizontal' && channel === 'y')) {
                    return barConfig.continuousBandSize;
                }
            }
        }
        if (scaleType === _scale__WEBPACK_IMPORTED_MODULE_5__["ScaleType"].POINT) {
            return scaleConfig.pointPadding;
        }
    }
    return undefined;
}
function paddingInner(paddingValue, channel, mark, scaleConfig) {
    if (paddingValue !== undefined) {
        // If user has already manually specified "padding", no need to add default paddingInner.
        return undefined;
    }
    if (_util__WEBPACK_IMPORTED_MODULE_6__["contains"]([_channel__WEBPACK_IMPORTED_MODULE_2__["X"], _channel__WEBPACK_IMPORTED_MODULE_2__["Y"]], channel)) {
        // Padding is only set for X and Y by default.
        // Basically it doesn't make sense to add padding for color and size.
        // paddingOuter would only be called if it's a band scale, just return the default for bandScale.
        const { bandPaddingInner, barBandPaddingInner, rectBandPaddingInner } = scaleConfig;
        return Object(_util__WEBPACK_IMPORTED_MODULE_6__["getFirstDefined"])(bandPaddingInner, mark === 'bar' ? barBandPaddingInner : rectBandPaddingInner);
    }
    return undefined;
}
function paddingOuter(paddingValue, channel, scaleType, mark, paddingInnerValue, scaleConfig) {
    if (paddingValue !== undefined) {
        // If user has already manually specified "padding", no need to add default paddingOuter.
        return undefined;
    }
    if (_util__WEBPACK_IMPORTED_MODULE_6__["contains"]([_channel__WEBPACK_IMPORTED_MODULE_2__["X"], _channel__WEBPACK_IMPORTED_MODULE_2__["Y"]], channel)) {
        // Padding is only set for X and Y by default.
        // Basically it doesn't make sense to add padding for color and size.
        if (scaleType === _scale__WEBPACK_IMPORTED_MODULE_5__["ScaleType"].BAND) {
            const { bandPaddingOuter, barBandPaddingOuter, rectBandPaddingOuter } = scaleConfig;
            return Object(_util__WEBPACK_IMPORTED_MODULE_6__["getFirstDefined"])(bandPaddingOuter, mark === 'bar' ? barBandPaddingOuter : rectBandPaddingOuter, 
            /* By default, paddingOuter is paddingInner / 2. The reason is that
              size (width/height) = step * (cardinality - paddingInner + 2 * paddingOuter).
              and we want the width/height to be integer by default.
              Note that step (by default) and cardinality are integers.) */
            paddingInnerValue / 2);
        }
    }
    return undefined;
}
function reverse(scaleType, sort) {
    if (Object(_scale__WEBPACK_IMPORTED_MODULE_5__["hasContinuousDomain"])(scaleType) && sort === 'descending') {
        // For continuous domain scales, Vega does not support domain sort.
        // Thus, we reverse range instead if sort is descending
        return true;
    }
    return undefined;
}
function zero(channel, fieldDef, specifiedDomain, markDef, scaleType) {
    // If users explicitly provide a domain range, we should not augment zero as that will be unexpected.
    const hasCustomDomain = !!specifiedDomain && specifiedDomain !== 'unaggregated';
    if (hasCustomDomain) {
        if (Object(_scale__WEBPACK_IMPORTED_MODULE_5__["hasContinuousDomain"])(scaleType)) {
            if (Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isArray"])(specifiedDomain)) {
                const first = specifiedDomain[0];
                const last = specifiedDomain[specifiedDomain.length - 1];
                if (first <= 0 && last >= 0) {
                    // if the domain includes zero, make zero remains true
                    return true;
                }
            }
            return false;
        }
    }
    // If there is no custom domain, return true only for the following cases:
    // 1) using quantitative field with size
    // While this can be either ratio or interval fields, our assumption is that
    // ratio are more common. However, if the scaleType is discretizing scale, we want to return
    // false so that range doesn't start at zero
    if (channel === 'size' && fieldDef.type === 'quantitative' && !Object(_scale__WEBPACK_IMPORTED_MODULE_5__["isContinuousToDiscrete"])(scaleType)) {
        return true;
    }
    // 2) non-binned, quantitative x-scale or y-scale
    // (For binning, we should not include zero by default because binning are calculated without zero.)
    if (!fieldDef.bin && _util__WEBPACK_IMPORTED_MODULE_6__["contains"]([_channel__WEBPACK_IMPORTED_MODULE_2__["X"], _channel__WEBPACK_IMPORTED_MODULE_2__["Y"]], channel)) {
        const { orient, type } = markDef;
        if (Object(_util__WEBPACK_IMPORTED_MODULE_6__["contains"])(['bar', 'area', 'line', 'trail'], type)) {
            if ((orient === 'horizontal' && channel === 'y') || (orient === 'vertical' && channel === 'x')) {
                return false;
            }
        }
        return true;
    }
    return false;
}
//# sourceMappingURL=properties.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/scale/range.js":
/*!*****************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/scale/range.js ***!
  \*****************************************************************/
/*! exports provided: RANGE_PROPERTIES, parseUnitScaleRange, parseRangeForChannel, defaultContinuousToDiscreteCount, interpolateRange, MAX_SIZE_RANGE_STEP_RATIO */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RANGE_PROPERTIES", function() { return RANGE_PROPERTIES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseUnitScaleRange", function() { return parseUnitScaleRange; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseRangeForChannel", function() { return parseRangeForChannel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultContinuousToDiscreteCount", function() { return defaultContinuousToDiscreteCount; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "interpolateRange", function() { return interpolateRange; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAX_SIZE_RANGE_STEP_RATIO", function() { return MAX_SIZE_RANGE_STEP_RATIO; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var _bin__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../bin */ "./node_modules/vega-lite/build/src/bin.js");
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../channel */ "./node_modules/vega-lite/build/src/channel.js");
/* harmony import */ var _channeldef__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../channeldef */ "./node_modules/vega-lite/build/src/channeldef.js");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../log */ "./node_modules/vega-lite/build/src/log/index.js");
/* harmony import */ var _scale__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../scale */ "./node_modules/vega-lite/build/src/scale.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../util */ "./node_modules/vega-lite/build/src/util.js");
/* harmony import */ var _vega_schema__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../vega.schema */ "./node_modules/vega-lite/build/src/vega.schema.js");
/* harmony import */ var _signal__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../signal */ "./node_modules/vega-lite/build/src/compile/signal.js");
/* harmony import */ var _split__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../split */ "./node_modules/vega-lite/build/src/compile/split.js");










const RANGE_PROPERTIES = ['range', 'rangeStep', 'scheme'];
function getSizeType(channel) {
    return channel === 'x' ? 'width' : channel === 'y' ? 'height' : undefined;
}
function parseUnitScaleRange(model) {
    const localScaleComponents = model.component.scales;
    // use SCALE_CHANNELS instead of scales[channel] to ensure that x, y come first!
    _channel__WEBPACK_IMPORTED_MODULE_2__["SCALE_CHANNELS"].forEach((channel) => {
        const localScaleCmpt = localScaleComponents[channel];
        if (!localScaleCmpt) {
            return;
        }
        const mergedScaleCmpt = model.getScaleComponent(channel);
        const specifiedScale = model.specifiedScales[channel];
        const fieldDef = model.fieldDef(channel);
        // Read if there is a specified width/height
        const sizeType = getSizeType(channel);
        let sizeSpecified = sizeType ? !!model.component.layoutSize.get(sizeType) : undefined;
        const scaleType = mergedScaleCmpt.get('type');
        // if autosize is fit, size cannot be data driven
        const rangeStep = _util__WEBPACK_IMPORTED_MODULE_6__["contains"](['point', 'band'], scaleType) || !!specifiedScale.rangeStep;
        if (sizeType && model.fit && !sizeSpecified && rangeStep) {
            _log__WEBPACK_IMPORTED_MODULE_4__["warn"](_log__WEBPACK_IMPORTED_MODULE_4__["message"].CANNOT_FIX_RANGE_STEP_WITH_FIT);
            sizeSpecified = true;
        }
        const xyRangeSteps = getXYRangeStep(model);
        const rangeWithExplicit = parseRangeForChannel(channel, model.getSignalName.bind(model), scaleType, fieldDef.type, specifiedScale, model.config, localScaleCmpt.get('zero'), model.mark, sizeSpecified, model.getName(sizeType), xyRangeSteps);
        localScaleCmpt.setWithExplicit('range', rangeWithExplicit);
    });
}
function getRangeStep(model, channel) {
    const scaleCmpt = model.getScaleComponent(channel);
    if (!scaleCmpt) {
        return undefined;
    }
    const scaleType = scaleCmpt.get('type');
    const fieldDef = model.fieldDef(channel);
    if (Object(_scale__WEBPACK_IMPORTED_MODULE_5__["hasDiscreteDomain"])(scaleType)) {
        const range = scaleCmpt && scaleCmpt.get('range');
        if (range && Object(_vega_schema__WEBPACK_IMPORTED_MODULE_7__["isVgRangeStep"])(range) && Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isNumber"])(range.step)) {
            return range.step;
            // TODO: support the case without range step
        }
    }
    else if (fieldDef && fieldDef.bin && Object(_bin__WEBPACK_IMPORTED_MODULE_1__["isBinning"])(fieldDef.bin)) {
        const binSignal = model.getName(Object(_channeldef__WEBPACK_IMPORTED_MODULE_3__["vgField"])(fieldDef, { suffix: 'bins' }));
        // TODO: extract this to be range step signal
        const sizeType = getSizeType(channel);
        const sizeSignal = model.getName(sizeType);
        return new _signal__WEBPACK_IMPORTED_MODULE_8__["SignalRefWrapper"](() => {
            const updatedName = model.getSignalName(binSignal);
            const binCount = `(${updatedName}.stop - ${updatedName}.start) / ${updatedName}.step`;
            return `${model.getSignalName(sizeSignal)} / (${binCount})`;
        });
    }
    return undefined;
}
function getXYRangeStep(model) {
    const steps = [];
    for (const channel of _channel__WEBPACK_IMPORTED_MODULE_2__["POSITION_SCALE_CHANNELS"]) {
        const step = getRangeStep(model, channel);
        if (step !== undefined) {
            steps.push(step);
        }
    }
    return steps;
}
/**
 * Return mixins that includes one of the range properties (range, rangeStep, scheme).
 */
function parseRangeForChannel(channel, getSignalName, scaleType, type, specifiedScale, config, zero, mark, sizeSpecified, sizeSignal, xyRangeSteps) {
    const noRangeStep = sizeSpecified || specifiedScale.rangeStep === null;
    // Check if any of the range properties is specified.
    // If so, check if it is compatible and make sure that we only output one of the properties
    for (const property of RANGE_PROPERTIES) {
        if (specifiedScale[property] !== undefined) {
            const supportedByScaleType = Object(_scale__WEBPACK_IMPORTED_MODULE_5__["scaleTypeSupportProperty"])(scaleType, property);
            const channelIncompatability = Object(_scale__WEBPACK_IMPORTED_MODULE_5__["channelScalePropertyIncompatability"])(channel, property);
            if (!supportedByScaleType) {
                _log__WEBPACK_IMPORTED_MODULE_4__["warn"](_log__WEBPACK_IMPORTED_MODULE_4__["message"].scalePropertyNotWorkWithScaleType(scaleType, property, channel));
            }
            else if (channelIncompatability) {
                // channel
                _log__WEBPACK_IMPORTED_MODULE_4__["warn"](channelIncompatability);
            }
            else {
                switch (property) {
                    case 'range':
                        return Object(_split__WEBPACK_IMPORTED_MODULE_9__["makeExplicit"])(specifiedScale[property]);
                    case 'scheme':
                        return Object(_split__WEBPACK_IMPORTED_MODULE_9__["makeExplicit"])(parseScheme(specifiedScale[property]));
                    case 'rangeStep': {
                        const rangeStep = specifiedScale[property];
                        if (rangeStep !== null) {
                            if (!sizeSpecified) {
                                return Object(_split__WEBPACK_IMPORTED_MODULE_9__["makeExplicit"])({ step: rangeStep });
                            }
                            else {
                                // If top-level size is specified, we ignore specified rangeStep.
                                _log__WEBPACK_IMPORTED_MODULE_4__["warn"](_log__WEBPACK_IMPORTED_MODULE_4__["message"].rangeStepDropped(channel));
                            }
                        }
                    }
                }
            }
        }
    }
    return Object(_split__WEBPACK_IMPORTED_MODULE_9__["makeImplicit"])(defaultRange(channel, getSignalName, scaleType, type, config, zero, mark, sizeSignal, xyRangeSteps, noRangeStep, specifiedScale.domain));
}
function parseScheme(scheme) {
    if (Object(_scale__WEBPACK_IMPORTED_MODULE_5__["isExtendedScheme"])(scheme)) {
        return Object.assign({ scheme: scheme.name }, _util__WEBPACK_IMPORTED_MODULE_6__["omit"](scheme, ['name']));
    }
    return { scheme: scheme };
}
function defaultRange(channel, getSignalName, scaleType, type, config, zero, mark, sizeSignal, xyRangeSteps, noRangeStep, domain) {
    switch (channel) {
        case _channel__WEBPACK_IMPORTED_MODULE_2__["X"]:
        case _channel__WEBPACK_IMPORTED_MODULE_2__["Y"]:
            if (_util__WEBPACK_IMPORTED_MODULE_6__["contains"](['point', 'band'], scaleType) && !noRangeStep) {
                if (channel === _channel__WEBPACK_IMPORTED_MODULE_2__["X"] && mark === 'text') {
                    if (config.scale.textXRangeStep) {
                        return { step: config.scale.textXRangeStep };
                    }
                }
                else {
                    if (config.scale.rangeStep) {
                        return { step: config.scale.rangeStep };
                    }
                }
            }
            // If range step is null, use zero to width or height.
            // Note that these range signals are temporary
            // as they can be merged and renamed.
            // (We do not have the right size signal here since parseLayoutSize() happens after parseScale().)
            // We will later replace these temporary names with
            // the final name in assembleScaleRange()
            if (channel === _channel__WEBPACK_IMPORTED_MODULE_2__["Y"] && Object(_scale__WEBPACK_IMPORTED_MODULE_5__["hasContinuousDomain"])(scaleType)) {
                // For y continuous scale, we have to start from the height as the bottom part has the max value.
                return [_signal__WEBPACK_IMPORTED_MODULE_8__["SignalRefWrapper"].fromName(getSignalName, sizeSignal), 0];
            }
            else {
                return [0, _signal__WEBPACK_IMPORTED_MODULE_8__["SignalRefWrapper"].fromName(getSignalName, sizeSignal)];
            }
        case _channel__WEBPACK_IMPORTED_MODULE_2__["SIZE"]: {
            // TODO: support custom rangeMin, rangeMax
            const rangeMin = sizeRangeMin(mark, zero, config);
            const rangeMax = sizeRangeMax(mark, xyRangeSteps, config);
            if (Object(_scale__WEBPACK_IMPORTED_MODULE_5__["isContinuousToDiscrete"])(scaleType)) {
                return interpolateRange(rangeMin, rangeMax, defaultContinuousToDiscreteCount(scaleType, config, domain, channel));
            }
            else {
                return [rangeMin, rangeMax];
            }
        }
        case _channel__WEBPACK_IMPORTED_MODULE_2__["STROKEWIDTH"]:
            // TODO: support custom rangeMin, rangeMax
            return [config.scale.minStrokeWidth, config.scale.maxStrokeWidth];
        case _channel__WEBPACK_IMPORTED_MODULE_2__["SHAPE"]:
            return 'symbol';
        case _channel__WEBPACK_IMPORTED_MODULE_2__["COLOR"]:
        case _channel__WEBPACK_IMPORTED_MODULE_2__["FILL"]:
        case _channel__WEBPACK_IMPORTED_MODULE_2__["STROKE"]:
            if (scaleType === 'ordinal') {
                // Only nominal data uses ordinal scale by default
                return type === 'nominal' ? 'category' : 'ordinal';
            }
            else {
                return mark === 'rect' || mark === 'geoshape' ? 'heatmap' : 'ramp';
            }
        case _channel__WEBPACK_IMPORTED_MODULE_2__["OPACITY"]:
        case _channel__WEBPACK_IMPORTED_MODULE_2__["FILLOPACITY"]:
        case _channel__WEBPACK_IMPORTED_MODULE_2__["STROKEOPACITY"]:
            // TODO: support custom rangeMin, rangeMax
            return [config.scale.minOpacity, config.scale.maxOpacity];
    }
    /* istanbul ignore next: should never reach here */
    throw new Error(`Scale range undefined for channel ${channel}`);
}
function defaultContinuousToDiscreteCount(scaleType, config, domain, channel) {
    switch (scaleType) {
        case 'quantile':
            return config.scale.quantileCount;
        case 'quantize':
            return config.scale.quantizeCount;
        case 'threshold':
            if (domain !== undefined && Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isArray"])(domain)) {
                return domain.length + 1;
            }
            else {
                _log__WEBPACK_IMPORTED_MODULE_4__["warn"](_log__WEBPACK_IMPORTED_MODULE_4__["message"].domainRequiredForThresholdScale(channel));
                // default threshold boundaries for threshold scale since domain has cardinality of 2
                return 3;
            }
    }
}
/**
 * Returns the linear interpolation of the range according to the cardinality
 *
 * @param rangeMin start of the range
 * @param rangeMax end of the range
 * @param cardinality number of values in the output range
 */
function interpolateRange(rangeMin, rangeMax, cardinality) {
    // always return a signal since it's better to compute the sequence in Vega later
    const f = () => {
        const rMax = Object(_vega_schema__WEBPACK_IMPORTED_MODULE_7__["isSignalRef"])(rangeMax) ? rangeMax.signal : rangeMax;
        const step = `(${rMax} - ${rangeMin}) / (${cardinality} - 1)`;
        return `sequence(${rangeMin}, ${rangeMax} + ${step}, ${step})`;
    };
    if (Object(_vega_schema__WEBPACK_IMPORTED_MODULE_7__["isSignalRef"])(rangeMax)) {
        return new _signal__WEBPACK_IMPORTED_MODULE_8__["SignalRefWrapper"](f);
    }
    else {
        return { signal: f() };
    }
}
function sizeRangeMin(mark, zero, config) {
    if (zero) {
        return 0;
    }
    switch (mark) {
        case 'bar':
        case 'tick':
            return config.scale.minBandSize;
        case 'line':
        case 'trail':
        case 'rule':
            return config.scale.minStrokeWidth;
        case 'text':
            return config.scale.minFontSize;
        case 'point':
        case 'square':
        case 'circle':
            return config.scale.minSize;
    }
    /* istanbul ignore next: should never reach here */
    // sizeRangeMin not implemented for the mark
    throw new Error(_log__WEBPACK_IMPORTED_MODULE_4__["message"].incompatibleChannel('size', mark));
}
const MAX_SIZE_RANGE_STEP_RATIO = 0.95;
function sizeRangeMax(mark, xyRangeSteps, config) {
    const scaleConfig = config.scale;
    switch (mark) {
        case 'bar':
        case 'tick': {
            if (config.scale.maxBandSize !== undefined) {
                return config.scale.maxBandSize;
            }
            const min = minXYRangeStep(xyRangeSteps, config.scale);
            if (Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isNumber"])(min)) {
                return min - 1;
            }
            else {
                return new _signal__WEBPACK_IMPORTED_MODULE_8__["SignalRefWrapper"](() => `${min.signal} - 1`);
            }
        }
        case 'line':
        case 'trail':
        case 'rule':
            return config.scale.maxStrokeWidth;
        case 'text':
            return config.scale.maxFontSize;
        case 'point':
        case 'square':
        case 'circle': {
            if (config.scale.maxSize) {
                return config.scale.maxSize;
            }
            const pointStep = minXYRangeStep(xyRangeSteps, scaleConfig);
            if (Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isNumber"])(pointStep)) {
                return Math.pow(MAX_SIZE_RANGE_STEP_RATIO * pointStep, 2);
            }
            else {
                return new _signal__WEBPACK_IMPORTED_MODULE_8__["SignalRefWrapper"](() => `pow(${MAX_SIZE_RANGE_STEP_RATIO} * ${pointStep.signal}, 2)`);
            }
        }
    }
    /* istanbul ignore next: should never reach here */
    // sizeRangeMax not implemented for the mark
    throw new Error(_log__WEBPACK_IMPORTED_MODULE_4__["message"].incompatibleChannel('size', mark));
}
/**
 * @returns {number} Range step of x or y or minimum between the two if both are ordinal scale.
 */
function minXYRangeStep(xyRangeSteps, scaleConfig) {
    if (xyRangeSteps.length > 0) {
        let min = Infinity;
        for (const step of xyRangeSteps) {
            if (Object(_vega_schema__WEBPACK_IMPORTED_MODULE_7__["isSignalRef"])(step)) {
                min = undefined;
            }
            else {
                if (min !== undefined && step < min) {
                    min = step;
                }
            }
        }
        return min !== undefined
            ? min
            : new _signal__WEBPACK_IMPORTED_MODULE_8__["SignalRefWrapper"](() => {
                const exprs = xyRangeSteps.map(e => (Object(_vega_schema__WEBPACK_IMPORTED_MODULE_7__["isSignalRef"])(e) ? e.signal : e));
                return `min(${exprs.join(', ')})`;
            });
    }
    if (scaleConfig.rangeStep) {
        return scaleConfig.rangeStep;
    }
    return 21; // FIXME: re-evaluate the default value here.
}
//# sourceMappingURL=range.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/scale/type.js":
/*!****************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/scale/type.js ***!
  \****************************************************************/
/*! exports provided: scaleType */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scaleType", function() { return scaleType; });
/* harmony import */ var _bin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../bin */ "./node_modules/vega-lite/build/src/bin.js");
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../channel */ "./node_modules/vega-lite/build/src/channel.js");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../log */ "./node_modules/vega-lite/build/src/log/index.js");
/* harmony import */ var _scale__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../scale */ "./node_modules/vega-lite/build/src/scale.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../util */ "./node_modules/vega-lite/build/src/util.js");





/**
 * Determine if there is a specified scale type and if it is appropriate,
 * or determine default type if type is unspecified or inappropriate.
 */
// NOTE: CompassQL uses this method.
function scaleType(specifiedScale, channel, fieldDef, mark) {
    const defaultScaleType = defaultType(channel, fieldDef, mark);
    const { type } = specifiedScale;
    if (!Object(_channel__WEBPACK_IMPORTED_MODULE_1__["isScaleChannel"])(channel)) {
        // There is no scale for these channels
        return null;
    }
    if (type !== undefined) {
        // Check if explicitly specified scale type is supported by the channel
        if (!Object(_scale__WEBPACK_IMPORTED_MODULE_3__["channelSupportScaleType"])(channel, type)) {
            _log__WEBPACK_IMPORTED_MODULE_2__["warn"](_log__WEBPACK_IMPORTED_MODULE_2__["message"].scaleTypeNotWorkWithChannel(channel, type, defaultScaleType));
            return defaultScaleType;
        }
        // Check if explicitly specified scale type is supported by the data type
        if (!Object(_scale__WEBPACK_IMPORTED_MODULE_3__["scaleTypeSupportDataType"])(type, fieldDef.type)) {
            _log__WEBPACK_IMPORTED_MODULE_2__["warn"](_log__WEBPACK_IMPORTED_MODULE_2__["message"].scaleTypeNotWorkWithFieldDef(type, defaultScaleType));
            return defaultScaleType;
        }
        return type;
    }
    return defaultScaleType;
}
/**
 * Determine appropriate default scale type.
 */
// NOTE: Voyager uses this method.
function defaultType(channel, fieldDef, mark) {
    switch (fieldDef.type) {
        case 'nominal':
        case 'ordinal':
            if (Object(_channel__WEBPACK_IMPORTED_MODULE_1__["isColorChannel"])(channel) || Object(_channel__WEBPACK_IMPORTED_MODULE_1__["rangeType"])(channel) === 'discrete') {
                if (channel === 'shape' && fieldDef.type === 'ordinal') {
                    _log__WEBPACK_IMPORTED_MODULE_2__["warn"](_log__WEBPACK_IMPORTED_MODULE_2__["message"].discreteChannelCannotEncode(channel, 'ordinal'));
                }
                return 'ordinal';
            }
            if (_util__WEBPACK_IMPORTED_MODULE_4__["contains"](['x', 'y'], channel)) {
                if (_util__WEBPACK_IMPORTED_MODULE_4__["contains"](['rect', 'bar', 'rule'], mark)) {
                    // The rect/bar mark should fit into a band.
                    // For rule, using band scale to make rule align with axis ticks better https://github.com/vega/vega-lite/issues/3429
                    return 'band';
                }
                if (mark === 'bar') {
                    return 'band';
                }
            }
            // Otherwise, use ordinal point scale so we can easily get center positions of the marks.
            return 'point';
        case 'temporal':
            if (Object(_channel__WEBPACK_IMPORTED_MODULE_1__["isColorChannel"])(channel)) {
                return 'time';
            }
            else if (Object(_channel__WEBPACK_IMPORTED_MODULE_1__["rangeType"])(channel) === 'discrete') {
                _log__WEBPACK_IMPORTED_MODULE_2__["warn"](_log__WEBPACK_IMPORTED_MODULE_2__["message"].discreteChannelCannotEncode(channel, 'temporal'));
                // TODO: consider using quantize (equivalent to binning) once we have it
                return 'ordinal';
            }
            return 'time';
        case 'quantitative':
            if (Object(_channel__WEBPACK_IMPORTED_MODULE_1__["isColorChannel"])(channel)) {
                if (Object(_bin__WEBPACK_IMPORTED_MODULE_0__["isBinning"])(fieldDef.bin)) {
                    return 'bin-ordinal';
                }
                return 'linear';
            }
            else if (Object(_channel__WEBPACK_IMPORTED_MODULE_1__["rangeType"])(channel) === 'discrete') {
                _log__WEBPACK_IMPORTED_MODULE_2__["warn"](_log__WEBPACK_IMPORTED_MODULE_2__["message"].discreteChannelCannotEncode(channel, 'quantitative'));
                // TODO: consider using quantize (equivalent to binning) once we have it
                return 'ordinal';
            }
            return 'linear';
        case 'geojson':
            return undefined;
    }
    /* istanbul ignore next: should never reach this */
    throw new Error(_log__WEBPACK_IMPORTED_MODULE_2__["message"].invalidFieldType(fieldDef.type));
}
//# sourceMappingURL=type.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/selection/assemble.js":
/*!************************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/selection/assemble.js ***!
  \************************************************************************/
/*! exports provided: assembleInit, assembleUnitSelectionSignals, assembleFacetSignals, assembleTopLevelSignals, assembleUnitSelectionData, assembleUnitSelectionMarks, assembleLayerSelectionMarks, assembleSelectionPredicate, assembleSelectionScaleDomain */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "assembleInit", function() { return assembleInit; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "assembleUnitSelectionSignals", function() { return assembleUnitSelectionSignals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "assembleFacetSignals", function() { return assembleFacetSignals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "assembleTopLevelSignals", function() { return assembleTopLevelSignals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "assembleUnitSelectionData", function() { return assembleUnitSelectionData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "assembleUnitSelectionMarks", function() { return assembleUnitSelectionMarks; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "assembleLayerSelectionMarks", function() { return assembleLayerSelectionMarks; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "assembleSelectionPredicate", function() { return assembleSelectionPredicate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "assembleSelectionScaleDomain", function() { return assembleSelectionScaleDomain; });
/* harmony import */ var vega_event_selector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-event-selector */ "./node_modules/vega-event-selector/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! . */ "./node_modules/vega-lite/build/src/compile/selection/index.js");
/* harmony import */ var _datetime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../datetime */ "./node_modules/vega-lite/build/src/datetime.js");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../log */ "./node_modules/vega-lite/build/src/log/index.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../util */ "./node_modules/vega-lite/build/src/util.js");
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../model */ "./node_modules/vega-lite/build/src/compile/model.js");
/* harmony import */ var _transforms_transforms__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./transforms/transforms */ "./node_modules/vega-lite/build/src/compile/selection/transforms/transforms.js");








function assembleInit(init, wrap = vega_util__WEBPACK_IMPORTED_MODULE_1__["identity"]) {
    if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(init)) {
        const str = init.map(v => assembleInit(v, wrap)).join(', ');
        return `[${str}]`;
    }
    else if (Object(_datetime__WEBPACK_IMPORTED_MODULE_3__["isDateTime"])(init)) {
        return wrap(Object(_datetime__WEBPACK_IMPORTED_MODULE_3__["dateTimeExpr"])(init));
    }
    return wrap(JSON.stringify(init));
}
function assembleUnitSelectionSignals(model, signals) {
    Object(___WEBPACK_IMPORTED_MODULE_2__["forEachSelection"])(model, (selCmpt, selCompiler) => {
        const name = selCmpt.name;
        let modifyExpr = selCompiler.modifyExpr(model, selCmpt);
        signals.push(...selCompiler.signals(model, selCmpt));
        Object(_transforms_transforms__WEBPACK_IMPORTED_MODULE_7__["forEachTransform"])(selCmpt, txCompiler => {
            if (txCompiler.signals) {
                signals = txCompiler.signals(model, selCmpt, signals);
            }
            if (txCompiler.modifyExpr) {
                modifyExpr = txCompiler.modifyExpr(model, selCmpt, modifyExpr);
            }
        });
        signals.push({
            name: name + ___WEBPACK_IMPORTED_MODULE_2__["MODIFY"],
            update: `modify(${Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["stringValue"])(selCmpt.name + ___WEBPACK_IMPORTED_MODULE_2__["STORE"])}, ${modifyExpr})`
        });
    });
    return signals;
}
function assembleFacetSignals(model, signals) {
    if (model.component.selection && Object(_util__WEBPACK_IMPORTED_MODULE_5__["keys"])(model.component.selection).length) {
        const name = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["stringValue"])(model.getName('cell'));
        signals.unshift({
            name: 'facet',
            value: {},
            on: [
                {
                    events: Object(vega_event_selector__WEBPACK_IMPORTED_MODULE_0__["selector"])('mousemove', 'scope'),
                    update: `isTuple(facet) ? facet : group(${name}).datum`
                }
            ]
        });
    }
    return signals;
}
function assembleTopLevelSignals(model, signals) {
    let hasSelections = false;
    Object(___WEBPACK_IMPORTED_MODULE_2__["forEachSelection"])(model, (selCmpt, selCompiler) => {
        const name = selCmpt.name;
        const store = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["stringValue"])(name + ___WEBPACK_IMPORTED_MODULE_2__["STORE"]);
        const hasSg = signals.filter(s => s.name === name);
        if (!hasSg.length) {
            signals.push({
                name: selCmpt.name,
                update: `${___WEBPACK_IMPORTED_MODULE_2__["VL_SELECTION_RESOLVE"]}(${store}` +
                    (selCmpt.resolve === 'global' ? ')' : `, ${Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["stringValue"])(selCmpt.resolve)})`)
            });
        }
        hasSelections = true;
        if (selCompiler.topLevelSignals) {
            signals = selCompiler.topLevelSignals(model, selCmpt, signals);
        }
        Object(_transforms_transforms__WEBPACK_IMPORTED_MODULE_7__["forEachTransform"])(selCmpt, txCompiler => {
            if (txCompiler.topLevelSignals) {
                signals = txCompiler.topLevelSignals(model, selCmpt, signals);
            }
        });
    });
    if (hasSelections) {
        const hasUnit = signals.filter(s => s.name === 'unit');
        if (!hasUnit.length) {
            signals.unshift({
                name: 'unit',
                value: {},
                on: [{ events: 'mousemove', update: 'isTuple(group()) ? group() : unit' }]
            });
        }
    }
    return signals;
}
function assembleUnitSelectionData(model, data) {
    Object(___WEBPACK_IMPORTED_MODULE_2__["forEachSelection"])(model, selCmpt => {
        const contains = data.filter(d => d.name === selCmpt.name + ___WEBPACK_IMPORTED_MODULE_2__["STORE"]);
        if (!contains.length) {
            data.push({ name: selCmpt.name + ___WEBPACK_IMPORTED_MODULE_2__["STORE"] });
        }
    });
    return data;
}
function assembleUnitSelectionMarks(model, marks) {
    Object(___WEBPACK_IMPORTED_MODULE_2__["forEachSelection"])(model, (selCmpt, selCompiler) => {
        marks = selCompiler.marks ? selCompiler.marks(model, selCmpt, marks) : marks;
        Object(_transforms_transforms__WEBPACK_IMPORTED_MODULE_7__["forEachTransform"])(selCmpt, txCompiler => {
            if (txCompiler.marks) {
                marks = txCompiler.marks(model, selCmpt, marks);
            }
        });
    });
    return marks;
}
function assembleLayerSelectionMarks(model, marks) {
    for (const child of model.children) {
        if (Object(_model__WEBPACK_IMPORTED_MODULE_6__["isUnitModel"])(child)) {
            marks = assembleUnitSelectionMarks(child, marks);
        }
    }
    return marks;
}
function assembleSelectionPredicate(model, selections, dfnode) {
    const stores = [];
    function expr(name) {
        const vname = Object(_util__WEBPACK_IMPORTED_MODULE_5__["varName"])(name);
        const selCmpt = model.getSelectionComponent(vname, name);
        const store = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["stringValue"])(vname + ___WEBPACK_IMPORTED_MODULE_2__["STORE"]);
        if (selCmpt.project.timeUnit) {
            const child = dfnode || model.component.data.raw;
            const tunode = selCmpt.project.timeUnit.clone();
            if (child.parent) {
                tunode.insertAsParentOf(child);
            }
            else {
                child.parent = tunode;
            }
        }
        if (selCmpt.empty !== 'none') {
            stores.push(store);
        }
        return (`vlSelectionTest(${store}, datum` + (selCmpt.resolve === 'global' ? ')' : `, ${Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["stringValue"])(selCmpt.resolve)})`));
    }
    const predicateStr = Object(_util__WEBPACK_IMPORTED_MODULE_5__["logicalExpr"])(selections, expr);
    return ((stores.length ? '!(' + stores.map(s => `length(data(${s}))`).join(' || ') + ') || ' : '') + `(${predicateStr})`);
}
// Selections are parsed _after_ scales. If a scale domain is set to
// use a selection, the SELECTION_DOMAIN constant is used as the
// domainRaw.signal during scale.parse and then replaced with the necessary
// selection expression function during scale.assemble. To not pollute the
// type signatures to account for this setup, the selection domain definition
// is coerced to a string and appended to SELECTION_DOMAIN.
function assembleSelectionScaleDomain(model, domainRaw) {
    const selDomain = JSON.parse(domainRaw.signal.replace(___WEBPACK_IMPORTED_MODULE_2__["SELECTION_DOMAIN"], ''));
    const name = Object(_util__WEBPACK_IMPORTED_MODULE_5__["varName"])(selDomain.selection);
    const encoding = selDomain.encoding;
    let field = selDomain.field;
    let selCmpt = model.component.selection && model.component.selection[name];
    if (selCmpt) {
        Object(_log__WEBPACK_IMPORTED_MODULE_4__["warn"])('Use "bind": "scales" to setup a binding for scales and selections within the same view.');
    }
    else {
        selCmpt = model.getSelectionComponent(name, selDomain.selection);
        if (!encoding && !field) {
            field = selCmpt.project.items[0].field;
            if (selCmpt.project.items.length > 1) {
                Object(_log__WEBPACK_IMPORTED_MODULE_4__["warn"])('A "field" or "encoding" must be specified when using a selection as a scale domain. ' +
                    `Using "field": ${Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["stringValue"])(field)}.`);
            }
        }
        else if (encoding && !field) {
            const encodings = selCmpt.project.items.filter(p => p.channel === encoding);
            if (!encodings.length || encodings.length > 1) {
                field = selCmpt.project.items[0].field;
                Object(_log__WEBPACK_IMPORTED_MODULE_4__["warn"])((!encodings.length ? 'No ' : 'Multiple ') +
                    `matching ${Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["stringValue"])(encoding)} encoding found for selection ${Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["stringValue"])(selDomain.selection)}. ` +
                    `Using "field": ${Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["stringValue"])(field)}.`);
            }
            else {
                field = encodings[0].field;
            }
        }
        return { signal: Object(_util__WEBPACK_IMPORTED_MODULE_5__["accessPathWithDatum"])(field, name) };
    }
    return { signal: 'null' };
}
//# sourceMappingURL=assemble.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/selection/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/selection/index.js ***!
  \*********************************************************************/
/*! exports provided: STORE, TUPLE, MODIFY, SELECTION_DOMAIN, VL_SELECTION_RESOLVE, forEachSelection, unitName, requiresSelectionId, isRawSelectionDomain */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "STORE", function() { return STORE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TUPLE", function() { return TUPLE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MODIFY", function() { return MODIFY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SELECTION_DOMAIN", function() { return SELECTION_DOMAIN; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VL_SELECTION_RESOLVE", function() { return VL_SELECTION_RESOLVE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "forEachSelection", function() { return forEachSelection; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "unitName", function() { return unitName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "requiresSelectionId", function() { return requiresSelectionId; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isRawSelectionDomain", function() { return isRawSelectionDomain; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../channel */ "./node_modules/vega-lite/build/src/channel.js");
/* harmony import */ var _selection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../selection */ "./node_modules/vega-lite/build/src/selection.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../util */ "./node_modules/vega-lite/build/src/util.js");
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../model */ "./node_modules/vega-lite/build/src/compile/model.js");
/* harmony import */ var _interval__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./interval */ "./node_modules/vega-lite/build/src/compile/selection/interval.js");
/* harmony import */ var _multi__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./multi */ "./node_modules/vega-lite/build/src/compile/selection/multi.js");
/* harmony import */ var _single__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./single */ "./node_modules/vega-lite/build/src/compile/selection/single.js");








const STORE = '_store';
const TUPLE = '_tuple';
const MODIFY = '_modify';
const SELECTION_DOMAIN = '_selection_domain_';
const VL_SELECTION_RESOLVE = 'vlSelectionResolve';
const compilers = { single: _single__WEBPACK_IMPORTED_MODULE_7__["default"], multi: _multi__WEBPACK_IMPORTED_MODULE_6__["default"], interval: _interval__WEBPACK_IMPORTED_MODULE_5__["default"] };
function forEachSelection(model, cb) {
    const selections = model.component.selection;
    for (const name in selections) {
        if (selections.hasOwnProperty(name)) {
            const sel = selections[name];
            cb(sel, compilers[sel.type]);
        }
    }
}
function getFacetModel(model) {
    let parent = model.parent;
    while (parent) {
        if (Object(_model__WEBPACK_IMPORTED_MODULE_4__["isFacetModel"])(parent)) {
            break;
        }
        parent = parent.parent;
    }
    return parent;
}
function unitName(model) {
    let name = Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["stringValue"])(model.name);
    const facetModel = getFacetModel(model);
    if (facetModel) {
        const { facet } = facetModel;
        for (const channel of _channel__WEBPACK_IMPORTED_MODULE_1__["FACET_CHANNELS"]) {
            if (facet[channel]) {
                name += ` + '__facet_${channel}_' + (${Object(_util__WEBPACK_IMPORTED_MODULE_3__["accessPathWithDatum"])(facetModel.vgField(channel), 'facet')})`;
            }
        }
    }
    return name;
}
function requiresSelectionId(model) {
    let identifier = false;
    forEachSelection(model, selCmpt => {
        identifier = identifier || selCmpt.project.items.some(proj => proj.field === _selection__WEBPACK_IMPORTED_MODULE_2__["SELECTION_ID"]);
    });
    return identifier;
}
function isRawSelectionDomain(domainRaw) {
    return domainRaw.signal.indexOf(SELECTION_DOMAIN) >= 0;
}
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/selection/interval.js":
/*!************************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/selection/interval.js ***!
  \************************************************************************/
/*! exports provided: BRUSH, SCALE_TRIGGER, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BRUSH", function() { return BRUSH; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SCALE_TRIGGER", function() { return SCALE_TRIGGER; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! . */ "./node_modules/vega-lite/build/src/compile/selection/index.js");
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../channel */ "./node_modules/vega-lite/build/src/channel.js");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../log */ "./node_modules/vega-lite/build/src/log/index.js");
/* harmony import */ var _scale__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../scale */ "./node_modules/vega-lite/build/src/scale.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../util */ "./node_modules/vega-lite/build/src/util.js");
/* harmony import */ var _assemble__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./assemble */ "./node_modules/vega-lite/build/src/compile/selection/assemble.js");
/* harmony import */ var _transforms_project__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./transforms/project */ "./node_modules/vega-lite/build/src/compile/selection/transforms/project.js");
/* harmony import */ var _transforms_scales__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./transforms/scales */ "./node_modules/vega-lite/build/src/compile/selection/transforms/scales.js");










const BRUSH = '_brush';
const SCALE_TRIGGER = '_scale_trigger';
const interval = {
    signals: (model, selCmpt) => {
        const name = selCmpt.name;
        const fieldsSg = name + _transforms_project__WEBPACK_IMPORTED_MODULE_8__["TUPLE_FIELDS"];
        const hasScales = _transforms_scales__WEBPACK_IMPORTED_MODULE_9__["default"].has(selCmpt);
        const signals = [];
        const dataSignals = [];
        const scaleTriggers = [];
        if (selCmpt.translate && !hasScales) {
            const filterExpr = `!event.item || event.item.mark.name !== ${Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["stringValue"])(name + BRUSH)}`;
            events(selCmpt, (_, evt) => {
                const filters = evt.between[0].filter || (evt.between[0].filter = []);
                if (filters.indexOf(filterExpr) < 0) {
                    filters.push(filterExpr);
                }
            });
        }
        selCmpt.project.items.forEach((proj, i) => {
            const channel = proj.channel;
            if (channel !== _channel__WEBPACK_IMPORTED_MODULE_3__["X"] && channel !== _channel__WEBPACK_IMPORTED_MODULE_3__["Y"]) {
                Object(_log__WEBPACK_IMPORTED_MODULE_4__["warn"])('Interval selections only support x and y encoding channels.');
                return;
            }
            const init = selCmpt.init ? selCmpt.init[i] : null;
            const cs = channelSignals(model, selCmpt, proj, init);
            const dname = proj.signals.data;
            const vname = proj.signals.visual;
            const scaleName = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["stringValue"])(model.scaleName(channel));
            const scaleType = model.getScaleComponent(channel).get('type');
            const toNum = Object(_scale__WEBPACK_IMPORTED_MODULE_5__["hasContinuousDomain"])(scaleType) ? '+' : '';
            signals.push(...cs);
            dataSignals.push(dname);
            scaleTriggers.push({
                scaleName: model.scaleName(channel),
                expr: `(!isArray(${dname}) || ` +
                    `(${toNum}invert(${scaleName}, ${vname})[0] === ${toNum}${dname}[0] && ` +
                    `${toNum}invert(${scaleName}, ${vname})[1] === ${toNum}${dname}[1]))`
            });
        });
        // Proxy scale reactions to ensure that an infinite loop doesn't occur
        // when an interval selection filter touches the scale.
        if (!hasScales) {
            signals.push({
                name: name + SCALE_TRIGGER,
                value: {},
                on: [
                    {
                        events: scaleTriggers.map(t => ({ scale: t.scaleName })),
                        update: scaleTriggers.map(t => t.expr).join(' && ') + ` ? ${name + SCALE_TRIGGER} : {}`
                    }
                ]
            });
        }
        // Only add an interval to the store if it has valid data extents. Data extents
        // are set to null if pixel extents are equal to account for intervals over
        // ordinal/nominal domains which, when inverted, will still produce a valid datum.
        const init = selCmpt.init;
        const update = `unit: ${Object(___WEBPACK_IMPORTED_MODULE_2__["unitName"])(model)}, fields: ${fieldsSg}, values`;
        return signals.concat(Object.assign({ name: name + ___WEBPACK_IMPORTED_MODULE_2__["TUPLE"] }, (init ? { init: `{${update}: ${Object(_assemble__WEBPACK_IMPORTED_MODULE_7__["assembleInit"])(init)}}` } : {}), { on: [
                {
                    events: [{ signal: dataSignals.join(' || ') }],
                    update: dataSignals.join(' && ') + ` ? {${update}: [${dataSignals}]} : null`
                }
            ] }));
    },
    modifyExpr: (model, selCmpt) => {
        const tpl = selCmpt.name + ___WEBPACK_IMPORTED_MODULE_2__["TUPLE"];
        return tpl + ', ' + (selCmpt.resolve === 'global' ? 'true' : `{unit: ${Object(___WEBPACK_IMPORTED_MODULE_2__["unitName"])(model)}}`);
    },
    marks: (model, selCmpt, marks) => {
        const name = selCmpt.name;
        const { x, y } = selCmpt.project.has;
        const xvname = x && x.signals.visual;
        const yvname = y && y.signals.visual;
        const store = `data(${Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["stringValue"])(selCmpt.name + ___WEBPACK_IMPORTED_MODULE_2__["STORE"])})`;
        // Do not add a brush if we're binding to scales.
        if (_transforms_scales__WEBPACK_IMPORTED_MODULE_9__["default"].has(selCmpt)) {
            return marks;
        }
        const update = {
            x: x !== undefined ? { signal: `${xvname}[0]` } : { value: 0 },
            y: y !== undefined ? { signal: `${yvname}[0]` } : { value: 0 },
            x2: x !== undefined ? { signal: `${xvname}[1]` } : { field: { group: 'width' } },
            y2: y !== undefined ? { signal: `${yvname}[1]` } : { field: { group: 'height' } }
        };
        // If the selection is resolved to global, only a single interval is in
        // the store. Wrap brush mark's encodings with a production rule to test
        // this based on the `unit` property. Hide the brush mark if it corresponds
        // to a unit different from the one in the store.
        if (selCmpt.resolve === 'global') {
            for (const key of Object(_util__WEBPACK_IMPORTED_MODULE_6__["keys"])(update)) {
                update[key] = [
                    Object.assign({ test: `${store}.length && ${store}[0].unit === ${Object(___WEBPACK_IMPORTED_MODULE_2__["unitName"])(model)}` }, update[key]),
                    { value: 0 }
                ];
            }
        }
        // Two brush marks ensure that fill colors and other aesthetic choices do
        // not interefere with the core marks, but that the brushed region can still
        // be interacted with (e.g., dragging it around).
        const _a = selCmpt.mark, { fill, fillOpacity } = _a, stroke = tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"](_a, ["fill", "fillOpacity"]);
        const vgStroke = Object(_util__WEBPACK_IMPORTED_MODULE_6__["keys"])(stroke).reduce((def, k) => {
            def[k] = [
                {
                    test: [x !== undefined && `${xvname}[0] !== ${xvname}[1]`, y !== undefined && `${yvname}[0] !== ${yvname}[1]`]
                        .filter(t => t)
                        .join(' && '),
                    value: stroke[k]
                },
                { value: null }
            ];
            return def;
        }, {});
        return [
            {
                name: name + BRUSH + '_bg',
                type: 'rect',
                clip: true,
                encode: {
                    enter: {
                        fill: { value: fill },
                        fillOpacity: { value: fillOpacity }
                    },
                    update: update
                }
            },
            ...marks,
            {
                name: name + BRUSH,
                type: 'rect',
                clip: true,
                encode: {
                    enter: {
                        fill: { value: 'transparent' }
                    },
                    update: Object.assign({}, update, vgStroke)
                }
            }
        ];
    }
};
/* harmony default export */ __webpack_exports__["default"] = (interval);
/**
 * Returns the visual and data signals for an interval selection.
 */
function channelSignals(model, selCmpt, proj, init) {
    const channel = proj.channel;
    const vname = proj.signals.visual;
    const dname = proj.signals.data;
    const hasScales = _transforms_scales__WEBPACK_IMPORTED_MODULE_9__["default"].has(selCmpt);
    const scaleName = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["stringValue"])(model.scaleName(channel));
    const scale = model.getScaleComponent(channel);
    const scaleType = scale ? scale.get('type') : undefined;
    const scaled = (str) => `scale(${scaleName}, ${str})`;
    const size = model.getSizeSignalRef(channel === _channel__WEBPACK_IMPORTED_MODULE_3__["X"] ? 'width' : 'height').signal;
    const coord = `${channel}(unit)`;
    const on = events(selCmpt, (def, evt) => {
        return [
            ...def,
            { events: evt.between[0], update: `[${coord}, ${coord}]` },
            { events: evt, update: `[${vname}[0], clamp(${coord}, 0, ${size})]` } // Brush End
        ];
    });
    // React to pan/zooms of continuous scales. Non-continuous scales
    // (band, point) cannot be pan/zoomed and any other changes
    // to their domains (e.g., filtering) should clear the brushes.
    on.push({
        events: { signal: selCmpt.name + SCALE_TRIGGER },
        update: Object(_scale__WEBPACK_IMPORTED_MODULE_5__["hasContinuousDomain"])(scaleType) ? `[${scaled(`${dname}[0]`)}, ${scaled(`${dname}[1]`)}]` : `[0, 0]`
    });
    return hasScales
        ? [{ name: dname, on: [] }]
        : [
            Object.assign({ name: vname }, (init ? { init: Object(_assemble__WEBPACK_IMPORTED_MODULE_7__["assembleInit"])(init, scaled) } : { value: [] }), { on: on }),
            Object.assign({ name: dname }, (init ? { init: Object(_assemble__WEBPACK_IMPORTED_MODULE_7__["assembleInit"])(init) } : {}), { on: [
                    {
                        events: { signal: vname },
                        update: `${vname}[0] === ${vname}[1] ? null : invert(${scaleName}, ${vname})`
                    }
                ] })
        ];
}
function events(selCmpt, cb) {
    return selCmpt.events.reduce((on, evt) => {
        if (!evt.between) {
            Object(_log__WEBPACK_IMPORTED_MODULE_4__["warn"])(`${evt} is not an ordered event stream for interval selections`);
            return on;
        }
        return cb(on, evt);
    }, []);
}
//# sourceMappingURL=interval.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/selection/multi.js":
/*!*********************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/selection/multi.js ***!
  \*********************************************************************/
/*! exports provided: singleOrMultiSignals, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "singleOrMultiSignals", function() { return singleOrMultiSignals; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! . */ "./node_modules/vega-lite/build/src/compile/selection/index.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../util */ "./node_modules/vega-lite/build/src/util.js");
/* harmony import */ var _assemble__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./assemble */ "./node_modules/vega-lite/build/src/compile/selection/assemble.js");
/* harmony import */ var _transforms_project__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./transforms/project */ "./node_modules/vega-lite/build/src/compile/selection/transforms/project.js");





function singleOrMultiSignals(model, selCmpt) {
    const name = selCmpt.name;
    const fieldsSg = name + _transforms_project__WEBPACK_IMPORTED_MODULE_4__["TUPLE_FIELDS"];
    const proj = selCmpt.project;
    const datum = '(item().isVoronoi ? datum.datum : datum)';
    const values = proj.items
        .map(p => {
        const fieldDef = model.fieldDef(p.channel);
        // Binned fields should capture extents, for a range test against the raw field.
        return fieldDef && fieldDef.bin
            ? `[${Object(_util__WEBPACK_IMPORTED_MODULE_2__["accessPathWithDatum"])(model.vgField(p.channel, {}), datum)}, ` +
                `${Object(_util__WEBPACK_IMPORTED_MODULE_2__["accessPathWithDatum"])(model.vgField(p.channel, { binSuffix: 'end' }), datum)}]`
            : `${Object(_util__WEBPACK_IMPORTED_MODULE_2__["accessPathWithDatum"])(p.field, datum)}`;
    })
        .join(', ');
    // Only add a discrete selection to the store if a datum is present _and_
    // the interaction isn't occurring on a group mark. This guards against
    // polluting interactive state with invalid values in faceted displays
    // as the group marks are also data-driven. We force the update to account
    // for constant null states but varying toggles (e.g., shift-click in
    // whitespace followed by a click in whitespace; the store should only
    // be cleared on the second click).
    const update = `unit: ${Object(___WEBPACK_IMPORTED_MODULE_1__["unitName"])(model)}, fields: ${fieldsSg}, values`;
    const signals = [
        {
            name: name + ___WEBPACK_IMPORTED_MODULE_1__["TUPLE"],
            on: [
                {
                    events: selCmpt.events,
                    update: `datum && item().mark.marktype !== 'group' ? {${update}: [${values}]} : null`,
                    force: true
                }
            ]
        }
    ];
    if (selCmpt.init) {
        const insert = selCmpt.init.map((i) => {
            const str = Object(_assemble__WEBPACK_IMPORTED_MODULE_3__["assembleInit"])(i);
            return `{${update}: ${str}}`;
        });
        signals.push({
            name: `${name}_init`,
            init: `modify(${Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["stringValue"])(selCmpt.name + ___WEBPACK_IMPORTED_MODULE_1__["STORE"])}, [${insert}])`
        });
    }
    return signals;
}
const multi = {
    signals: singleOrMultiSignals,
    modifyExpr: (model, selCmpt) => {
        const tpl = selCmpt.name + ___WEBPACK_IMPORTED_MODULE_1__["TUPLE"];
        return tpl + ', ' + (selCmpt.resolve === 'global' ? 'null' : `{unit: ${Object(___WEBPACK_IMPORTED_MODULE_1__["unitName"])(model)}}`);
    }
};
/* harmony default export */ __webpack_exports__["default"] = (multi);
//# sourceMappingURL=multi.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/selection/parse.js":
/*!*********************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/selection/parse.js ***!
  \*********************************************************************/
/*! exports provided: parseUnitSelection */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseUnitSelection", function() { return parseUnitSelection; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var vega_event_selector__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-event-selector */ "./node_modules/vega-event-selector/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../util */ "./node_modules/vega-lite/build/src/util.js");
/* harmony import */ var _transforms_transforms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./transforms/transforms */ "./node_modules/vega-lite/build/src/compile/selection/transforms/transforms.js");





function parseUnitSelection(model, selDefs) {
    const selCmpts = {};
    const selectionConfig = model.config.selection;
    if (selDefs) {
        selDefs = Object(_util__WEBPACK_IMPORTED_MODULE_3__["duplicate"])(selDefs); // duplicate to avoid side effects to original spec
    }
    for (let name in selDefs) {
        if (!selDefs.hasOwnProperty(name)) {
            continue;
        }
        const selDef = selDefs[name];
        const _a = selectionConfig[selDef.type], { fields, encodings } = _a, cfg = tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"](_a, ["fields", "encodings"]); // Project transform applies its defaults.
        // Set default values from config if a property hasn't been specified,
        // or if it is true. E.g., "translate": true should use the default
        // event handlers for translate. However, true may be a valid value for
        // a property (e.g., "nearest": true).
        for (const key in cfg) {
            // A selection should contain either `encodings` or `fields`, only use
            // default values for these two values if neither of them is specified.
            if ((key === 'encodings' && selDef.fields) || (key === 'fields' && selDef.encodings)) {
                continue;
            }
            if (key === 'mark') {
                selDef[key] = Object.assign({}, cfg[key], selDef[key]);
            }
            if (selDef[key] === undefined || selDef[key] === true) {
                selDef[key] = cfg[key] || selDef[key];
            }
        }
        name = Object(_util__WEBPACK_IMPORTED_MODULE_3__["varName"])(name);
        const selCmpt = (selCmpts[name] = Object.assign({}, selDef, { name: name, events: Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["isString"])(selDef.on) ? Object(vega_event_selector__WEBPACK_IMPORTED_MODULE_1__["selector"])(selDef.on, 'scope') : selDef.on }));
        Object(_transforms_transforms__WEBPACK_IMPORTED_MODULE_4__["forEachTransform"])(selCmpt, txCompiler => {
            if (txCompiler.parse) {
                txCompiler.parse(model, selDef, selCmpt);
            }
        });
    }
    return selCmpts;
}
//# sourceMappingURL=parse.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/selection/single.js":
/*!**********************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/selection/single.js ***!
  \**********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! . */ "./node_modules/vega-lite/build/src/compile/selection/index.js");
/* harmony import */ var _multi__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./multi */ "./node_modules/vega-lite/build/src/compile/selection/multi.js");


const single = {
    signals: _multi__WEBPACK_IMPORTED_MODULE_1__["singleOrMultiSignals"],
    modifyExpr: (model, selCmpt) => {
        const tpl = selCmpt.name + ___WEBPACK_IMPORTED_MODULE_0__["TUPLE"];
        return tpl + ', ' + (selCmpt.resolve === 'global' ? 'true' : `{unit: ${Object(___WEBPACK_IMPORTED_MODULE_0__["unitName"])(model)}}`);
    }
};
/* harmony default export */ __webpack_exports__["default"] = (single);
//# sourceMappingURL=single.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/selection/transforms/clear.js":
/*!********************************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/selection/transforms/clear.js ***!
  \********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var vega_event_selector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-event-selector */ "./node_modules/vega-event-selector/index.js");
/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! .. */ "./node_modules/vega-lite/build/src/compile/selection/index.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../util */ "./node_modules/vega-lite/build/src/util.js");
/* harmony import */ var _inputs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./inputs */ "./node_modules/vega-lite/build/src/compile/selection/transforms/inputs.js");
/* harmony import */ var _toggle__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./toggle */ "./node_modules/vega-lite/build/src/compile/selection/transforms/toggle.js");





const clear = {
    has: selCmpt => {
        return selCmpt.clear !== false;
    },
    parse: (model, selDef, selCmpt) => {
        if (selDef.clear) {
            selCmpt.clear = Object(vega_event_selector__WEBPACK_IMPORTED_MODULE_0__["selector"])(selDef.clear, 'scope');
        }
    },
    topLevelSignals: (model, selCmpt, signals) => {
        if (_inputs__WEBPACK_IMPORTED_MODULE_3__["default"].has(selCmpt)) {
            selCmpt.project.items.forEach(proj => {
                const idx = signals.findIndex(n => n.name === Object(_util__WEBPACK_IMPORTED_MODULE_2__["varName"])(`${selCmpt.name}_${proj.field}`));
                if (idx !== -1) {
                    signals[idx].on.push({ events: selCmpt.clear, update: 'null' });
                }
            });
        }
        return signals;
    },
    signals: (model, selCmpt, signals) => {
        function addClear(idx, update) {
            if (idx !== -1 && signals[idx].on) {
                signals[idx].on.push({ events: selCmpt.clear, update });
            }
        }
        // Be as minimalist as possible when adding clear triggers to minimize dataflow execution.
        if (selCmpt.type === 'interval') {
            selCmpt.project.items.forEach(proj => {
                const vIdx = signals.findIndex(n => n.name === proj.signals.visual);
                addClear(vIdx, '[0, 0]');
                if (vIdx === -1) {
                    const dIdx = signals.findIndex(n => n.name === proj.signals.data);
                    addClear(dIdx, 'null');
                }
            });
        }
        else {
            let tIdx = signals.findIndex(n => n.name === selCmpt.name + ___WEBPACK_IMPORTED_MODULE_1__["TUPLE"]);
            addClear(tIdx, 'null');
            if (_toggle__WEBPACK_IMPORTED_MODULE_4__["default"].has(selCmpt)) {
                tIdx = signals.findIndex(n => n.name === selCmpt.name + _toggle__WEBPACK_IMPORTED_MODULE_4__["TOGGLE"]);
                addClear(tIdx, 'false');
            }
        }
        return signals;
    }
};
/* harmony default export */ __webpack_exports__["default"] = (clear);
//# sourceMappingURL=clear.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/selection/transforms/inputs.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/selection/transforms/inputs.js ***!
  \*********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! .. */ "./node_modules/vega-lite/build/src/compile/selection/index.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../util */ "./node_modules/vega-lite/build/src/util.js");
/* harmony import */ var _assemble__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../assemble */ "./node_modules/vega-lite/build/src/compile/selection/assemble.js");
/* harmony import */ var _nearest__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./nearest */ "./node_modules/vega-lite/build/src/compile/selection/transforms/nearest.js");
/* harmony import */ var _project__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./project */ "./node_modules/vega-lite/build/src/compile/selection/transforms/project.js");





const inputBindings = {
    has: selCmpt => {
        return selCmpt.type === 'single' && selCmpt.resolve === 'global' && selCmpt.bind && selCmpt.bind !== 'scales';
    },
    topLevelSignals: (model, selCmpt, signals) => {
        const name = selCmpt.name;
        const proj = selCmpt.project;
        const bind = selCmpt.bind;
        const init = selCmpt.init && selCmpt.init[0]; // Can only exist on single selections (one initial value).
        const datum = _nearest__WEBPACK_IMPORTED_MODULE_3__["default"].has(selCmpt) ? '(item().isVoronoi ? datum.datum : datum)' : 'datum';
        proj.items.forEach((p, i) => {
            const sgname = Object(_util__WEBPACK_IMPORTED_MODULE_1__["varName"])(`${name}_${p.field}`);
            const hasSignal = signals.filter(s => s.name === sgname);
            if (!hasSignal.length) {
                signals.unshift(Object.assign({ name: sgname }, (init ? { init: Object(_assemble__WEBPACK_IMPORTED_MODULE_2__["assembleInit"])(init[i]) } : { value: null }), { on: [
                        {
                            events: selCmpt.events,
                            update: `datum && item().mark.marktype !== 'group' ? ${Object(_util__WEBPACK_IMPORTED_MODULE_1__["accessPathWithDatum"])(p.field, datum)} : null`
                        }
                    ], bind: bind[p.field] || bind[p.channel] || bind }));
            }
        });
        return signals;
    },
    signals: (model, selCmpt, signals) => {
        const name = selCmpt.name;
        const proj = selCmpt.project;
        const signal = signals.filter(s => s.name === name + ___WEBPACK_IMPORTED_MODULE_0__["TUPLE"])[0];
        const fields = name + _project__WEBPACK_IMPORTED_MODULE_4__["TUPLE_FIELDS"];
        const values = proj.items.map(p => Object(_util__WEBPACK_IMPORTED_MODULE_1__["varName"])(`${name}_${p.field}`));
        const valid = values.map(v => `${v} !== null`).join(' && ');
        if (values.length) {
            signal.update = `${valid} ? {fields: ${fields}, values: [${values.join(', ')}]} : null`;
        }
        delete signal.value;
        delete signal.on;
        return signals;
    }
};
/* harmony default export */ __webpack_exports__["default"] = (inputBindings);
//# sourceMappingURL=inputs.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/selection/transforms/nearest.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/selection/transforms/nearest.js ***!
  \**********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../log */ "./node_modules/vega-lite/build/src/log/index.js");
/* harmony import */ var _mark__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../mark */ "./node_modules/vega-lite/build/src/mark.js");
/* harmony import */ var _mark_mixins__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../mark/mixins */ "./node_modules/vega-lite/build/src/compile/mark/mixins.js");



const VORONOI = 'voronoi';
const nearest = {
    has: selCmpt => {
        return selCmpt.type !== 'interval' && selCmpt.nearest;
    },
    marks: (model, selCmpt, marks) => {
        const { x, y } = selCmpt.project.has;
        const markType = model.mark;
        if (Object(_mark__WEBPACK_IMPORTED_MODULE_1__["isPathMark"])(markType)) {
            _log__WEBPACK_IMPORTED_MODULE_0__["warn"](_log__WEBPACK_IMPORTED_MODULE_0__["message"].nearestNotSupportForContinuous(markType));
            return marks;
        }
        const cellDef = {
            name: model.getName(VORONOI),
            type: 'path',
            from: { data: model.getName('marks') },
            encode: {
                update: Object.assign({ fill: { value: 'transparent' }, strokeWidth: { value: 0.35 }, stroke: { value: 'transparent' }, isVoronoi: { value: true } }, Object(_mark_mixins__WEBPACK_IMPORTED_MODULE_2__["tooltip"])(model, { reactiveGeom: true }))
            },
            transform: [
                {
                    type: 'voronoi',
                    x: { expr: x || (!x && !y) ? 'datum.datum.x || 0' : '0' },
                    y: { expr: y || (!x && !y) ? 'datum.datum.y || 0' : '0' },
                    size: [model.getSizeSignalRef('width'), model.getSizeSignalRef('height')]
                }
            ]
        };
        let index = 0;
        let exists = false;
        marks.forEach((mark, i) => {
            const name = mark.name || '';
            if (name === model.component.mark[0].name) {
                index = i;
            }
            else if (name.indexOf(VORONOI) >= 0) {
                exists = true;
            }
        });
        if (!exists) {
            marks.splice(index + 1, 0, cellDef);
        }
        return marks;
    }
};
/* harmony default export */ __webpack_exports__["default"] = (nearest);
//# sourceMappingURL=nearest.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/selection/transforms/project.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/selection/transforms/project.js ***!
  \**********************************************************************************/
/*! exports provided: TUPLE_FIELDS, SelectionProjectionComponent, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TUPLE_FIELDS", function() { return TUPLE_FIELDS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SelectionProjectionComponent", function() { return SelectionProjectionComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../channel */ "./node_modules/vega-lite/build/src/channel.js");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../log */ "./node_modules/vega-lite/build/src/log/index.js");
/* harmony import */ var _scale__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../scale */ "./node_modules/vega-lite/build/src/scale.js");
/* harmony import */ var _selection__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../selection */ "./node_modules/vega-lite/build/src/selection.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../util */ "./node_modules/vega-lite/build/src/util.js");
/* harmony import */ var _data_timeunit__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../data/timeunit */ "./node_modules/vega-lite/build/src/compile/data/timeunit.js");
/* harmony import */ var _scales__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./scales */ "./node_modules/vega-lite/build/src/compile/selection/transforms/scales.js");









const TUPLE_FIELDS = '_tuple_fields';
class SelectionProjectionComponent {
    constructor(...items) {
        this.items = items;
        this.has = {};
    }
}
const project = {
    has: () => {
        return true; // This transform handles its own defaults, so always run parse.
    },
    parse: (model, selDef, selCmpt) => {
        const name = selCmpt.name;
        const proj = selCmpt.project || (selCmpt.project = new SelectionProjectionComponent());
        const parsed = {};
        const timeUnits = {};
        const signals = new Set();
        const signalName = (p, range) => {
            const suffix = range === 'visual' ? p.channel : p.field;
            let sg = Object(_util__WEBPACK_IMPORTED_MODULE_6__["varName"])(`${name}_${suffix}`);
            for (let counter = 1; signals.has(sg); counter++) {
                sg = Object(_util__WEBPACK_IMPORTED_MODULE_6__["varName"])(`${name}_${suffix}_${counter}`);
            }
            signals.add(sg);
            return { [range]: sg };
        };
        // If no explicit projection (either fields or encodings) is specified, set some defaults.
        // If an initial value is set, try to infer projections.
        // Otherwise, use the default configuration.
        if (!selDef.fields && !selDef.encodings) {
            const cfg = model.config.selection[selDef.type];
            if (selDef.init) {
                for (const init of Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["array"])(selDef.init)) {
                    for (const key of Object(_util__WEBPACK_IMPORTED_MODULE_6__["keys"])(init)) {
                        if (Object(_channel__WEBPACK_IMPORTED_MODULE_2__["isSingleDefUnitChannel"])(key)) {
                            (selDef.encodings || (selDef.encodings = [])).push(key);
                        }
                        else {
                            if (Object(_selection__WEBPACK_IMPORTED_MODULE_5__["isIntervalSelection"])(selDef)) {
                                _log__WEBPACK_IMPORTED_MODULE_3__["warn"]('Interval selections should be initialized using "x" and/or "y" keys.');
                                selDef.encodings = cfg.encodings;
                            }
                            else {
                                (selDef.fields || (selDef.fields = [])).push(key);
                            }
                        }
                    }
                }
            }
            else {
                selDef.encodings = cfg.encodings;
                selDef.fields = cfg.fields;
            }
        }
        // TODO: find a possible channel mapping for these fields.
        for (const field of selDef.fields || []) {
            const p = { type: 'E', field };
            p.signals = Object.assign({}, signalName(p, 'data'));
            proj.items.push(p);
        }
        for (const channel of selDef.encodings || []) {
            const fieldDef = model.fieldDef(channel);
            if (fieldDef) {
                let field = fieldDef.field;
                if (fieldDef.timeUnit) {
                    field = model.vgField(channel);
                    // Construct TimeUnitComponents which will be combined into a
                    // TimeUnitNode. This node may need to be inserted into the
                    // dataflow if the selection is used across views that do not
                    // have these time units defined.
                    timeUnits[field] = {
                        as: field,
                        field: fieldDef.field,
                        timeUnit: fieldDef.timeUnit
                    };
                }
                // Prevent duplicate projections on the same field.
                // TODO: what if the same field is bound to multiple channels (e.g., SPLOM diag).
                if (!parsed[field]) {
                    // Determine whether the tuple will store enumerated or ranged values.
                    // Interval selections store ranges for continuous scales, and enumerations otherwise.
                    // Single/multi selections store ranges for binned fields, and enumerations otherwise.
                    let type = 'E';
                    if (selCmpt.type === 'interval') {
                        const scaleType = model.getScaleComponent(channel).get('type');
                        if (Object(_scale__WEBPACK_IMPORTED_MODULE_4__["hasContinuousDomain"])(scaleType)) {
                            type = 'R';
                        }
                    }
                    else if (fieldDef.bin) {
                        type = 'R-RE';
                    }
                    const p = { field, channel, type };
                    p.signals = Object.assign({}, signalName(p, 'data'), signalName(p, 'visual'));
                    proj.items.push((parsed[field] = p));
                    proj.has[channel] = parsed[field];
                }
            }
            else {
                _log__WEBPACK_IMPORTED_MODULE_3__["warn"](_log__WEBPACK_IMPORTED_MODULE_3__["message"].cannotProjectOnChannelWithoutField(channel));
            }
        }
        if (selDef.init) {
            if (_scales__WEBPACK_IMPORTED_MODULE_8__["default"].has(selCmpt)) {
                _log__WEBPACK_IMPORTED_MODULE_3__["warn"](_log__WEBPACK_IMPORTED_MODULE_3__["message"].NO_INIT_SCALE_BINDINGS);
            }
            else {
                const parseInit = (i) => {
                    return proj.items.map(p => (i[p.channel] !== undefined ? i[p.channel] : i[p.field]));
                };
                if (Object(_selection__WEBPACK_IMPORTED_MODULE_5__["isIntervalSelection"])(selDef)) {
                    selCmpt.init = parseInit(selDef.init);
                }
                else {
                    const init = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(selDef.init) ? selDef.init : [selDef.init];
                    selCmpt.init = init.map(parseInit);
                }
            }
        }
        if (Object(_util__WEBPACK_IMPORTED_MODULE_6__["keys"])(timeUnits).length) {
            proj.timeUnit = new _data_timeunit__WEBPACK_IMPORTED_MODULE_7__["TimeUnitNode"](null, timeUnits);
        }
    },
    signals: (model, selCmpt, allSignals) => {
        const name = selCmpt.name + TUPLE_FIELDS;
        const hasSignal = allSignals.filter(s => s.name === name);
        return hasSignal.length
            ? allSignals
            : allSignals.concat({
                name,
                value: selCmpt.project.items.map(proj => {
                    const { signals } = proj, rest = tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"](proj, ["signals"]);
                    return rest;
                })
            });
    }
};
/* harmony default export */ __webpack_exports__["default"] = (project);
//# sourceMappingURL=project.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/selection/transforms/scales.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/selection/transforms/scales.js ***!
  \*********************************************************************************/
/*! exports provided: default, domain */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "domain", function() { return domain; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! .. */ "./node_modules/vega-lite/build/src/compile/selection/index.js");
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../channel */ "./node_modules/vega-lite/build/src/channel.js");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../log */ "./node_modules/vega-lite/build/src/log/index.js");
/* harmony import */ var _scale__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../scale */ "./node_modules/vega-lite/build/src/scale.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../util */ "./node_modules/vega-lite/build/src/util.js");






const scaleBindings = {
    has: selCmpt => {
        return selCmpt.type === 'interval' && selCmpt.resolve === 'global' && selCmpt.bind && selCmpt.bind === 'scales';
    },
    parse: (model, selDef, selCmpt) => {
        const name = Object(_util__WEBPACK_IMPORTED_MODULE_5__["varName"])(selCmpt.name);
        const bound = (selCmpt.scales = []);
        for (const proj of selCmpt.project.items) {
            const channel = proj.channel;
            if (!Object(_channel__WEBPACK_IMPORTED_MODULE_2__["isScaleChannel"])(channel)) {
                continue;
            }
            const scale = model.getScaleComponent(channel);
            const scaleType = scale ? scale.get('type') : undefined;
            if (!scale || !Object(_scale__WEBPACK_IMPORTED_MODULE_4__["hasContinuousDomain"])(scaleType)) {
                _log__WEBPACK_IMPORTED_MODULE_3__["warn"](_log__WEBPACK_IMPORTED_MODULE_3__["message"].SCALE_BINDINGS_CONTINUOUS);
                continue;
            }
            scale.set('domainRaw', { signal: Object(_util__WEBPACK_IMPORTED_MODULE_5__["accessPathWithDatum"])(proj.field, name) }, true);
            bound.push(proj);
            // Bind both x/y for diag plot of repeated views.
            if (model.repeater && model.repeater.row === model.repeater.column) {
                const scale2 = model.getScaleComponent(channel === _channel__WEBPACK_IMPORTED_MODULE_2__["X"] ? _channel__WEBPACK_IMPORTED_MODULE_2__["Y"] : _channel__WEBPACK_IMPORTED_MODULE_2__["X"]);
                scale2.set('domainRaw', { signal: Object(_util__WEBPACK_IMPORTED_MODULE_5__["accessPathWithDatum"])(proj.field, name) }, true);
            }
        }
    },
    topLevelSignals: (model, selCmpt, signals) => {
        const bound = selCmpt.scales.filter(proj => !signals.filter(s => s.name === proj.signals.data).length);
        // Top-level signals are only needed for multiview displays and if this
        // view's top-level signals haven't already been generated.
        if (!model.parent || !bound.length) {
            return signals;
        }
        // vlSelectionResolve does not account for the behavior of bound scales in
        // multiview displays. Each unit view adds a tuple to the store, but the
        // state of the selection is the unit selection most recently updated. This
        // state is captured by the top-level signals that we insert and "push
        // outer" to from within the units. We need to reassemble this state into
        // the top-level named signal, except no single selCmpt has a global view.
        const namedSg = signals.filter(s => s.name === selCmpt.name)[0];
        const update = namedSg.update;
        if (update.indexOf(___WEBPACK_IMPORTED_MODULE_1__["VL_SELECTION_RESOLVE"]) >= 0) {
            namedSg.update = `{${bound.map(proj => `${Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["stringValue"])(proj.field)}: ${proj.signals.data}`).join(', ')}}`;
        }
        else {
            for (const proj of bound) {
                const mapping = `, ${Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["stringValue"])(proj.field)}: ${proj.signals.data}`;
                if (update.indexOf(mapping) < 0) {
                    namedSg.update = update.substring(0, update.length - 1) + mapping + '}';
                }
            }
        }
        return signals.concat(bound.map(proj => ({ name: proj.signals.data })));
    },
    signals: (model, selCmpt, signals) => {
        // Nested signals need only push to top-level signals with multiview displays.
        if (model.parent) {
            for (const proj of selCmpt.scales) {
                const signal = signals.filter(s => s.name === proj.signals.data)[0];
                signal.push = 'outer';
                delete signal.value;
                delete signal.update;
            }
        }
        return signals;
    }
};
/* harmony default export */ __webpack_exports__["default"] = (scaleBindings);
function domain(model, channel) {
    const scale = Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["stringValue"])(model.scaleName(channel));
    return `domain(${scale})`;
}
//# sourceMappingURL=scales.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/selection/transforms/toggle.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/selection/transforms/toggle.js ***!
  \*********************************************************************************/
/*! exports provided: TOGGLE, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TOGGLE", function() { return TOGGLE; });
/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! .. */ "./node_modules/vega-lite/build/src/compile/selection/index.js");

const TOGGLE = '_toggle';
const toggle = {
    has: selCmpt => {
        return selCmpt.type === 'multi' && selCmpt.toggle;
    },
    signals: (model, selCmpt, signals) => {
        return signals.concat({
            name: selCmpt.name + TOGGLE,
            value: false,
            on: [{ events: selCmpt.events, update: selCmpt.toggle }]
        });
    },
    modifyExpr: (model, selCmpt) => {
        const tpl = selCmpt.name + ___WEBPACK_IMPORTED_MODULE_0__["TUPLE"];
        const signal = selCmpt.name + TOGGLE;
        return (`${signal} ? null : ${tpl}, ` +
            (selCmpt.resolve === 'global' ? `${signal} ? null : true, ` : `${signal} ? null : {unit: ${Object(___WEBPACK_IMPORTED_MODULE_0__["unitName"])(model)}}, `) +
            `${signal} ? ${tpl} : null`);
    }
};
/* harmony default export */ __webpack_exports__["default"] = (toggle);
//# sourceMappingURL=toggle.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/selection/transforms/transforms.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/selection/transforms/transforms.js ***!
  \*************************************************************************************/
/*! exports provided: forEachTransform */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "forEachTransform", function() { return forEachTransform; });
/* harmony import */ var _clear__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./clear */ "./node_modules/vega-lite/build/src/compile/selection/transforms/clear.js");
/* harmony import */ var _inputs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./inputs */ "./node_modules/vega-lite/build/src/compile/selection/transforms/inputs.js");
/* harmony import */ var _nearest__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./nearest */ "./node_modules/vega-lite/build/src/compile/selection/transforms/nearest.js");
/* harmony import */ var _project__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./project */ "./node_modules/vega-lite/build/src/compile/selection/transforms/project.js");
/* harmony import */ var _scales__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./scales */ "./node_modules/vega-lite/build/src/compile/selection/transforms/scales.js");
/* harmony import */ var _toggle__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./toggle */ "./node_modules/vega-lite/build/src/compile/selection/transforms/toggle.js");
/* harmony import */ var _translate__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./translate */ "./node_modules/vega-lite/build/src/compile/selection/transforms/translate.js");
/* harmony import */ var _zoom__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./zoom */ "./node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js");








const compilers = [_project__WEBPACK_IMPORTED_MODULE_3__["default"], _toggle__WEBPACK_IMPORTED_MODULE_5__["default"], _scales__WEBPACK_IMPORTED_MODULE_4__["default"], _translate__WEBPACK_IMPORTED_MODULE_6__["default"], _zoom__WEBPACK_IMPORTED_MODULE_7__["default"], _inputs__WEBPACK_IMPORTED_MODULE_1__["default"], _nearest__WEBPACK_IMPORTED_MODULE_2__["default"], _clear__WEBPACK_IMPORTED_MODULE_0__["default"]];
function forEachTransform(selCmpt, cb) {
    for (const t of compilers) {
        if (t.has(selCmpt)) {
            cb(t);
        }
    }
}
//# sourceMappingURL=transforms.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/selection/transforms/translate.js":
/*!************************************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/selection/transforms/translate.js ***!
  \************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var vega_event_selector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-event-selector */ "./node_modules/vega-event-selector/index.js");
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../channel */ "./node_modules/vega-lite/build/src/channel.js");
/* harmony import */ var _interval__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../interval */ "./node_modules/vega-lite/build/src/compile/selection/interval.js");
/* harmony import */ var _scales__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./scales */ "./node_modules/vega-lite/build/src/compile/selection/transforms/scales.js");




const ANCHOR = '_translate_anchor';
const DELTA = '_translate_delta';
const translate = {
    has: selCmpt => {
        return selCmpt.type === 'interval' && selCmpt.translate;
    },
    signals: (model, selCmpt, signals) => {
        const name = selCmpt.name;
        const hasScales = _scales__WEBPACK_IMPORTED_MODULE_3__["default"].has(selCmpt);
        const anchor = name + ANCHOR;
        const { x, y } = selCmpt.project.has;
        let events = Object(vega_event_selector__WEBPACK_IMPORTED_MODULE_0__["selector"])(selCmpt.translate, 'scope');
        if (!hasScales) {
            events = events.map(e => ((e.between[0].markname = name + _interval__WEBPACK_IMPORTED_MODULE_2__["BRUSH"]), e));
        }
        signals.push({
            name: anchor,
            value: {},
            on: [
                {
                    events: events.map(e => e.between[0]),
                    update: '{x: x(unit), y: y(unit)' +
                        (x !== undefined ? ', extent_x: ' + (hasScales ? Object(_scales__WEBPACK_IMPORTED_MODULE_3__["domain"])(model, _channel__WEBPACK_IMPORTED_MODULE_1__["X"]) : `slice(${x.signals.visual})`) : '') +
                        (y !== undefined ? ', extent_y: ' + (hasScales ? Object(_scales__WEBPACK_IMPORTED_MODULE_3__["domain"])(model, _channel__WEBPACK_IMPORTED_MODULE_1__["Y"]) : `slice(${y.signals.visual})`) : '') +
                        '}'
                }
            ]
        }, {
            name: name + DELTA,
            value: {},
            on: [
                {
                    events: events,
                    update: `{x: ${anchor}.x - x(unit), y: ${anchor}.y - y(unit)}`
                }
            ]
        });
        if (x !== undefined) {
            onDelta(model, selCmpt, x, 'width', signals);
        }
        if (y !== undefined) {
            onDelta(model, selCmpt, y, 'height', signals);
        }
        return signals;
    }
};
/* harmony default export */ __webpack_exports__["default"] = (translate);
function onDelta(model, selCmpt, proj, size, signals) {
    const name = selCmpt.name;
    const anchor = name + ANCHOR;
    const delta = name + DELTA;
    const channel = proj.channel;
    const hasScales = _scales__WEBPACK_IMPORTED_MODULE_3__["default"].has(selCmpt);
    const signal = signals.filter(s => s.name === proj.signals[hasScales ? 'data' : 'visual'])[0];
    const sizeSg = model.getSizeSignalRef(size).signal;
    const scaleCmpt = model.getScaleComponent(channel);
    const scaleType = scaleCmpt.get('type');
    const sign = hasScales && channel === _channel__WEBPACK_IMPORTED_MODULE_1__["X"] ? '-' : ''; // Invert delta when panning x-scales.
    const extent = `${anchor}.extent_${channel}`;
    const offset = `${sign}${delta}.${channel} / ` + (hasScales ? `${sizeSg}` : `span(${extent})`);
    const panFn = !hasScales
        ? 'panLinear'
        : scaleType === 'log'
            ? 'panLog'
            : scaleType === 'pow'
                ? 'panPow'
                : 'panLinear';
    const update = `${panFn}(${extent}, ${offset}` +
        (hasScales && scaleType === 'pow' ? `, ${scaleCmpt.get('exponent') || 1}` : '') +
        ')';
    signal.on.push({
        events: { signal: delta },
        update: hasScales ? update : `clampRange(${update}, 0, ${sizeSg})`
    });
}
//# sourceMappingURL=translate.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/selection/transforms/zoom.js ***!
  \*******************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var vega_event_selector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-event-selector */ "./node_modules/vega-event-selector/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../channel */ "./node_modules/vega-lite/build/src/channel.js");
/* harmony import */ var _interval__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../interval */ "./node_modules/vega-lite/build/src/compile/selection/interval.js");
/* harmony import */ var _scales__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./scales */ "./node_modules/vega-lite/build/src/compile/selection/transforms/scales.js");





const ANCHOR = '_zoom_anchor';
const DELTA = '_zoom_delta';
const zoom = {
    has: selCmpt => {
        return selCmpt.type === 'interval' && selCmpt.zoom;
    },
    signals: (model, selCmpt, signals) => {
        const name = selCmpt.name;
        const hasScales = _scales__WEBPACK_IMPORTED_MODULE_4__["default"].has(selCmpt);
        const delta = name + DELTA;
        const { x, y } = selCmpt.project.has;
        const sx = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["stringValue"])(model.scaleName(_channel__WEBPACK_IMPORTED_MODULE_2__["X"]));
        const sy = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["stringValue"])(model.scaleName(_channel__WEBPACK_IMPORTED_MODULE_2__["Y"]));
        let events = Object(vega_event_selector__WEBPACK_IMPORTED_MODULE_0__["selector"])(selCmpt.zoom, 'scope');
        if (!hasScales) {
            events = events.map(e => ((e.markname = name + _interval__WEBPACK_IMPORTED_MODULE_3__["BRUSH"]), e));
        }
        signals.push({
            name: name + ANCHOR,
            on: [
                {
                    events: events,
                    update: !hasScales
                        ? `{x: x(unit), y: y(unit)}`
                        : '{' +
                            [sx ? `x: invert(${sx}, x(unit))` : '', sy ? `y: invert(${sy}, y(unit))` : '']
                                .filter(expr => !!expr)
                                .join(', ') +
                            '}'
                }
            ]
        }, {
            name: delta,
            on: [
                {
                    events: events,
                    force: true,
                    update: 'pow(1.001, event.deltaY * pow(16, event.deltaMode))'
                }
            ]
        });
        if (x !== undefined) {
            onDelta(model, selCmpt, x, 'width', signals);
        }
        if (y !== undefined) {
            onDelta(model, selCmpt, y, 'height', signals);
        }
        return signals;
    }
};
/* harmony default export */ __webpack_exports__["default"] = (zoom);
function onDelta(model, selCmpt, proj, size, signals) {
    const name = selCmpt.name;
    const channel = proj.channel;
    const hasScales = _scales__WEBPACK_IMPORTED_MODULE_4__["default"].has(selCmpt);
    const signal = signals.filter(s => s.name === proj.signals[hasScales ? 'data' : 'visual'])[0];
    const sizeSg = model.getSizeSignalRef(size).signal;
    const scaleCmpt = model.getScaleComponent(channel);
    const scaleType = scaleCmpt.get('type');
    const base = hasScales ? Object(_scales__WEBPACK_IMPORTED_MODULE_4__["domain"])(model, channel) : signal.name;
    const delta = name + DELTA;
    const anchor = `${name}${ANCHOR}.${channel}`;
    const zoomFn = !hasScales
        ? 'zoomLinear'
        : scaleType === 'log'
            ? 'zoomLog'
            : scaleType === 'pow'
                ? 'zoomPow'
                : 'zoomLinear';
    const update = `${zoomFn}(${base}, ${anchor}, ${delta}` +
        (hasScales && scaleType === 'pow' ? `, ${scaleCmpt.get('exponent') || 1}` : '') +
        ')';
    signal.on.push({
        events: { signal: delta },
        update: hasScales ? update : `clampRange(${update}, 0, ${sizeSg})`
    });
}
//# sourceMappingURL=zoom.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/signal.js":
/*!************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/signal.js ***!
  \************************************************************/
/*! exports provided: SignalRefWrapper */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SignalRefWrapper", function() { return SignalRefWrapper; });
/**
 * A class that behaves like a SignalRef but lazily generates the signal.
 * The provided generator function should use `Model.getSignalName` to use the correct signal name.
 */
class SignalRefWrapper {
    constructor(exprGenerator) {
        Object.defineProperty(this, 'signal', {
            enumerable: true,
            get: exprGenerator
        });
    }
    static fromName(rename, signalName) {
        return new SignalRefWrapper(() => rename(signalName));
    }
}
//# sourceMappingURL=signal.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/split.js":
/*!***********************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/split.js ***!
  \***********************************************************/
/*! exports provided: Split, makeExplicit, makeImplicit, tieBreakByComparing, defaultTieBreaker, mergeValuesWithExplicit */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Split", function() { return Split; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "makeExplicit", function() { return makeExplicit; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "makeImplicit", function() { return makeImplicit; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tieBreakByComparing", function() { return tieBreakByComparing; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultTieBreaker", function() { return defaultTieBreaker; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mergeValuesWithExplicit", function() { return mergeValuesWithExplicit; });
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../log */ "./node_modules/vega-lite/build/src/log/index.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ "./node_modules/vega-lite/build/src/util.js");


/**
 * Generic class for storing properties that are explicitly specified
 * and implicitly determined by the compiler.
 * This is important for scale/axis/legend merging as
 * we want to prioritize properties that users explicitly specified.
 */
class Split {
    constructor(explicit = {}, implicit = {}) {
        this.explicit = explicit;
        this.implicit = implicit;
    }
    clone() {
        return new Split(Object(_util__WEBPACK_IMPORTED_MODULE_1__["duplicate"])(this.explicit), Object(_util__WEBPACK_IMPORTED_MODULE_1__["duplicate"])(this.implicit));
    }
    combine() {
        // FIXME remove "as any".
        // Add "as any" to avoid an error "Spread types may only be created from object types".
        return Object.assign({}, this.explicit, this.implicit);
    }
    get(key) {
        // Explicit has higher precedence
        return Object(_util__WEBPACK_IMPORTED_MODULE_1__["getFirstDefined"])(this.explicit[key], this.implicit[key]);
    }
    getWithExplicit(key) {
        // Explicit has higher precedence
        if (this.explicit[key] !== undefined) {
            return { explicit: true, value: this.explicit[key] };
        }
        else if (this.implicit[key] !== undefined) {
            return { explicit: false, value: this.implicit[key] };
        }
        return { explicit: false, value: undefined };
    }
    setWithExplicit(key, value) {
        if (value.value !== undefined) {
            this.set(key, value.value, value.explicit);
        }
    }
    set(key, value, explicit) {
        delete this[explicit ? 'implicit' : 'explicit'][key];
        this[explicit ? 'explicit' : 'implicit'][key] = value;
        return this;
    }
    copyKeyFromSplit(key, s) {
        // Explicit has higher precedence
        if (s.explicit[key] !== undefined) {
            this.set(key, s.explicit[key], true);
        }
        else if (s.implicit[key] !== undefined) {
            this.set(key, s.implicit[key], false);
        }
    }
    copyKeyFromObject(key, s) {
        // Explicit has higher precedence
        if (s[key] !== undefined) {
            this.set(key, s[key], true);
        }
    }
    /**
     * Merge split object into this split object. Properties from the other split
     * overwrite properties from this split.
     */
    copyAll(other) {
        for (const key of Object(_util__WEBPACK_IMPORTED_MODULE_1__["keys"])(other.combine())) {
            const val = other.getWithExplicit(key);
            this.setWithExplicit(key, val);
        }
    }
}
function makeExplicit(value) {
    return {
        explicit: true,
        value
    };
}
function makeImplicit(value) {
    return {
        explicit: false,
        value
    };
}
function tieBreakByComparing(compare) {
    return (v1, v2, property, propertyOf) => {
        const diff = compare(v1.value, v2.value);
        if (diff > 0) {
            return v1;
        }
        else if (diff < 0) {
            return v2;
        }
        return defaultTieBreaker(v1, v2, property, propertyOf);
    };
}
function defaultTieBreaker(v1, v2, property, propertyOf) {
    if (v1.explicit && v2.explicit) {
        _log__WEBPACK_IMPORTED_MODULE_0__["warn"](_log__WEBPACK_IMPORTED_MODULE_0__["message"].mergeConflictingProperty(property, propertyOf, v1.value, v2.value));
    }
    // If equal score, prefer v1.
    return v1;
}
function mergeValuesWithExplicit(v1, v2, property, propertyOf, tieBreaker = defaultTieBreaker) {
    if (v1 === undefined || v1.value === undefined) {
        // For first run
        return v2;
    }
    if (v1.explicit && !v2.explicit) {
        return v1;
    }
    else if (v2.explicit && !v1.explicit) {
        return v2;
    }
    else if (Object(_util__WEBPACK_IMPORTED_MODULE_1__["stringify"])(v1.value) === Object(_util__WEBPACK_IMPORTED_MODULE_1__["stringify"])(v2.value)) {
        return v1;
    }
    else {
        return tieBreaker(v1, v2, property, propertyOf);
    }
}
//# sourceMappingURL=split.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compile/unit.js":
/*!**********************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compile/unit.js ***!
  \**********************************************************/
/*! exports provided: UnitModel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UnitModel", function() { return UnitModel; });
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../channel */ "./node_modules/vega-lite/build/src/channel.js");
/* harmony import */ var _channeldef__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../channeldef */ "./node_modules/vega-lite/build/src/channeldef.js");
/* harmony import */ var _encoding__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../encoding */ "./node_modules/vega-lite/build/src/encoding.js");
/* harmony import */ var _mark__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../mark */ "./node_modules/vega-lite/build/src/mark.js");
/* harmony import */ var _stack__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../stack */ "./node_modules/vega-lite/build/src/stack.js");
/* harmony import */ var _axis_assemble__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./axis/assemble */ "./node_modules/vega-lite/build/src/compile/axis/assemble.js");
/* harmony import */ var _axis_parse__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./axis/parse */ "./node_modules/vega-lite/build/src/compile/axis/parse.js");
/* harmony import */ var _data_parse__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./data/parse */ "./node_modules/vega-lite/build/src/compile/data/parse.js");
/* harmony import */ var _layoutsize_assemble__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./layoutsize/assemble */ "./node_modules/vega-lite/build/src/compile/layoutsize/assemble.js");
/* harmony import */ var _layoutsize_parse__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./layoutsize/parse */ "./node_modules/vega-lite/build/src/compile/layoutsize/parse.js");
/* harmony import */ var _mark_init__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./mark/init */ "./node_modules/vega-lite/build/src/compile/mark/init.js");
/* harmony import */ var _mark_mark__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./mark/mark */ "./node_modules/vega-lite/build/src/compile/mark/mark.js");
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./model */ "./node_modules/vega-lite/build/src/compile/model.js");
/* harmony import */ var _repeater__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./repeater */ "./node_modules/vega-lite/build/src/compile/repeater.js");
/* harmony import */ var _selection_assemble__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./selection/assemble */ "./node_modules/vega-lite/build/src/compile/selection/assemble.js");
/* harmony import */ var _selection_parse__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./selection/parse */ "./node_modules/vega-lite/build/src/compile/selection/parse.js");

















/**
 * Internal model of Vega-Lite specification for the compiler.
 */
class UnitModel extends _model__WEBPACK_IMPORTED_MODULE_12__["ModelWithField"] {
    constructor(spec, parent, parentGivenName, parentGivenSize = {}, repeater, config, fit) {
        super(spec, 'unit', parent, parentGivenName, config, repeater, undefined, spec.view);
        this.fit = fit;
        this.specifiedScales = {};
        this.specifiedAxes = {};
        this.specifiedLegends = {};
        this.specifiedProjection = {};
        this.selection = {};
        this.children = [];
        this.initSize(Object.assign({}, parentGivenSize, (spec.width ? { width: spec.width } : {}), (spec.height ? { height: spec.height } : {})));
        const mark = Object(_mark__WEBPACK_IMPORTED_MODULE_3__["isMarkDef"])(spec.mark) ? spec.mark.type : spec.mark;
        const encoding = (this.encoding = Object(_encoding__WEBPACK_IMPORTED_MODULE_2__["normalizeEncoding"])(Object(_repeater__WEBPACK_IMPORTED_MODULE_13__["replaceRepeaterInEncoding"])(spec.encoding || {}, repeater), mark));
        this.markDef = Object(_mark_init__WEBPACK_IMPORTED_MODULE_10__["normalizeMarkDef"])(spec.mark, encoding, config);
        // calculate stack properties
        this.stack = Object(_stack__WEBPACK_IMPORTED_MODULE_4__["stack"])(mark, encoding, this.config.stack);
        this.specifiedScales = this.initScales(mark, encoding);
        this.specifiedAxes = this.initAxes(encoding);
        this.specifiedLegends = this.initLegend(encoding);
        this.specifiedProjection = spec.projection;
        // Selections will be initialized upon parse.
        this.selection = spec.selection;
    }
    get hasProjection() {
        const { encoding } = this;
        const isGeoShapeMark = this.mark === _mark__WEBPACK_IMPORTED_MODULE_3__["GEOSHAPE"];
        const hasGeoPosition = encoding && _channel__WEBPACK_IMPORTED_MODULE_0__["GEOPOSITION_CHANNELS"].some(channel => Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["isFieldDef"])(encoding[channel]));
        return isGeoShapeMark || hasGeoPosition;
    }
    /**
     * Return specified Vega-lite scale domain for a particular channel
     * @param channel
     */
    scaleDomain(channel) {
        const scale = this.specifiedScales[channel];
        return scale ? scale.domain : undefined;
    }
    axis(channel) {
        return this.specifiedAxes[channel];
    }
    legend(channel) {
        return this.specifiedLegends[channel];
    }
    initScales(mark, encoding) {
        return _channel__WEBPACK_IMPORTED_MODULE_0__["SCALE_CHANNELS"].reduce((scales, channel) => {
            let fieldDef;
            let specifiedScale;
            const channelDef = encoding[channel];
            if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["isFieldDef"])(channelDef)) {
                fieldDef = channelDef;
                specifiedScale = channelDef.scale;
            }
            else if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["hasConditionalFieldDef"])(channelDef)) {
                fieldDef = channelDef.condition;
                specifiedScale = channelDef.condition['scale'];
            }
            if (fieldDef) {
                scales[channel] = specifiedScale || {};
            }
            return scales;
        }, {});
    }
    initAxes(encoding) {
        return [_channel__WEBPACK_IMPORTED_MODULE_0__["X"], _channel__WEBPACK_IMPORTED_MODULE_0__["Y"]].reduce((_axis, channel) => {
            // Position Axis
            // TODO: handle ConditionFieldDef
            const channelDef = encoding[channel];
            if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["isFieldDef"])(channelDef) ||
                (channel === _channel__WEBPACK_IMPORTED_MODULE_0__["X"] && Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["isFieldDef"])(encoding.x2)) ||
                (channel === _channel__WEBPACK_IMPORTED_MODULE_0__["Y"] && Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["isFieldDef"])(encoding.y2))) {
                const axisSpec = Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["isFieldDef"])(channelDef) ? channelDef.axis : null;
                if (axisSpec !== null) {
                    _axis[channel] = Object.assign({}, axisSpec);
                }
            }
            return _axis;
        }, {});
    }
    initLegend(encoding) {
        return _channel__WEBPACK_IMPORTED_MODULE_0__["NONPOSITION_SCALE_CHANNELS"].reduce((_legend, channel) => {
            const channelDef = encoding[channel];
            if (channelDef) {
                const legend = Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["isFieldDef"])(channelDef)
                    ? channelDef.legend
                    : Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["hasConditionalFieldDef"])(channelDef)
                        ? channelDef.condition['legend']
                        : null;
                if (legend !== null && legend !== false && Object(_channel__WEBPACK_IMPORTED_MODULE_0__["supportLegend"])(channel)) {
                    _legend[channel] = Object.assign({}, legend);
                }
            }
            return _legend;
        }, {});
    }
    parseData() {
        this.component.data = Object(_data_parse__WEBPACK_IMPORTED_MODULE_7__["parseData"])(this);
    }
    parseLayoutSize() {
        Object(_layoutsize_parse__WEBPACK_IMPORTED_MODULE_9__["parseUnitLayoutSize"])(this);
    }
    parseSelections() {
        this.component.selection = Object(_selection_parse__WEBPACK_IMPORTED_MODULE_15__["parseUnitSelection"])(this, this.selection);
    }
    parseMarkGroup() {
        this.component.mark = Object(_mark_mark__WEBPACK_IMPORTED_MODULE_11__["parseMarkGroups"])(this);
    }
    parseAxesAndHeaders() {
        this.component.axes = Object(_axis_parse__WEBPACK_IMPORTED_MODULE_6__["parseUnitAxes"])(this);
    }
    assembleSelectionTopLevelSignals(signals) {
        return Object(_selection_assemble__WEBPACK_IMPORTED_MODULE_14__["assembleTopLevelSignals"])(this, signals);
    }
    assembleSignals() {
        return [...Object(_axis_assemble__WEBPACK_IMPORTED_MODULE_5__["assembleAxisSignals"])(this), ...Object(_selection_assemble__WEBPACK_IMPORTED_MODULE_14__["assembleUnitSelectionSignals"])(this, [])];
    }
    assembleSelectionData(data) {
        return Object(_selection_assemble__WEBPACK_IMPORTED_MODULE_14__["assembleUnitSelectionData"])(this, data);
    }
    assembleLayout() {
        return null;
    }
    assembleLayoutSignals() {
        return Object(_layoutsize_assemble__WEBPACK_IMPORTED_MODULE_8__["assembleLayoutSignals"])(this);
    }
    assembleMarks() {
        let marks = this.component.mark || [];
        // If this unit is part of a layer, selections should augment
        // all in concert rather than each unit individually. This
        // ensures correct interleaving of clipping and brushed marks.
        if (!this.parent || !Object(_model__WEBPACK_IMPORTED_MODULE_12__["isLayerModel"])(this.parent)) {
            marks = Object(_selection_assemble__WEBPACK_IMPORTED_MODULE_14__["assembleUnitSelectionMarks"])(this, marks);
        }
        return marks.map(this.correctDataNames);
    }
    getMapping() {
        return this.encoding;
    }
    get mark() {
        return this.markDef.type;
    }
    channelHasField(channel) {
        return _encoding__WEBPACK_IMPORTED_MODULE_2__["channelHasField"](this.encoding, channel);
    }
    fieldDef(channel) {
        const channelDef = this.encoding[channel];
        return Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["getTypedFieldDef"])(channelDef);
    }
}
//# sourceMappingURL=unit.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compositemark/base.js":
/*!****************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compositemark/base.js ***!
  \****************************************************************/
/*! exports provided: CompositeMarkNormalizer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CompositeMarkNormalizer", function() { return CompositeMarkNormalizer; });
/* harmony import */ var _mark__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../mark */ "./node_modules/vega-lite/build/src/mark.js");
/* harmony import */ var _spec_unit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../spec/unit */ "./node_modules/vega-lite/build/src/spec/unit.js");


class CompositeMarkNormalizer {
    constructor(name, run) {
        this.name = name;
        this.run = run;
    }
    hasMatchingType(spec) {
        if (Object(_spec_unit__WEBPACK_IMPORTED_MODULE_1__["isUnitSpec"])(spec)) {
            return Object(_mark__WEBPACK_IMPORTED_MODULE_0__["getMarkType"])(spec.mark) === this.name;
        }
        return false;
    }
}
//# sourceMappingURL=base.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compositemark/boxplot.js":
/*!*******************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compositemark/boxplot.js ***!
  \*******************************************************************/
/*! exports provided: BOXPLOT, BOXPLOT_PARTS, boxPlotNormalizer, getBoxPlotType, normalizeBoxPlot */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BOXPLOT", function() { return BOXPLOT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BOXPLOT_PARTS", function() { return BOXPLOT_PARTS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "boxPlotNormalizer", function() { return boxPlotNormalizer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getBoxPlotType", function() { return getBoxPlotType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "normalizeBoxPlot", function() { return normalizeBoxPlot; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var _encoding__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../encoding */ "./node_modules/vega-lite/build/src/encoding.js");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../log */ "./node_modules/vega-lite/build/src/log/index.js");
/* harmony import */ var _mark__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../mark */ "./node_modules/vega-lite/build/src/mark.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util */ "./node_modules/vega-lite/build/src/util.js");
/* harmony import */ var _base__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./base */ "./node_modules/vega-lite/build/src/compositemark/base.js");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./common */ "./node_modules/vega-lite/build/src/compositemark/common.js");








const BOXPLOT = 'boxplot';
const BOXPLOT_PART_INDEX = {
    box: 1,
    median: 1,
    outliers: 1,
    rule: 1,
    ticks: 1
};
const BOXPLOT_PARTS = Object(_util__WEBPACK_IMPORTED_MODULE_5__["keys"])(BOXPLOT_PART_INDEX);
const boxPlotNormalizer = new _base__WEBPACK_IMPORTED_MODULE_6__["CompositeMarkNormalizer"](BOXPLOT, normalizeBoxPlot);
function getBoxPlotType(extent) {
    if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isNumber"])(extent)) {
        return 'tukey';
    }
    // Ham: If we ever want to, we could add another extent syntax `{kIQR: number}` for the original [Q1-k*IQR, Q3+k*IQR] whisker and call this boxPlotType = `kIQR`.  However, I'm not exposing this for now.
    return extent;
}
function normalizeBoxPlot(spec, { config }) {
    // TODO: use selection
    const { mark, encoding: _encoding, selection, projection: _p } = spec, outerSpec = tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"](spec, ["mark", "encoding", "selection", "projection"]);
    const markDef = Object(_mark__WEBPACK_IMPORTED_MODULE_4__["isMarkDef"])(mark) ? mark : { type: mark };
    // TODO(https://github.com/vega/vega-lite/issues/3702): add selection support
    if (selection) {
        _log__WEBPACK_IMPORTED_MODULE_3__["warn"](_log__WEBPACK_IMPORTED_MODULE_3__["message"].selectionNotSupported('boxplot'));
    }
    const extent = markDef.extent || config.boxplot.extent;
    const sizeValue = Object(_util__WEBPACK_IMPORTED_MODULE_5__["getFirstDefined"])(markDef.size, config.boxplot.size);
    const boxPlotType = getBoxPlotType(extent);
    const { transform, continuousAxisChannelDef, continuousAxis, groupby, aggregate, encodingWithoutContinuousAxis, ticksOrient, customTooltipWithoutAggregatedField } = boxParams(spec, extent, config);
    const { color, size } = encodingWithoutContinuousAxis, encodingWithoutSizeColorAndContinuousAxis = tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"](encodingWithoutContinuousAxis, ["color", "size"]);
    const makeBoxPlotPart = (sharedEncoding) => {
        return Object(_common__WEBPACK_IMPORTED_MODULE_7__["makeCompositeAggregatePartFactory"])(markDef, continuousAxis, continuousAxisChannelDef, sharedEncoding, config.boxplot);
    };
    const makeBoxPlotExtent = makeBoxPlotPart(encodingWithoutSizeColorAndContinuousAxis);
    const makeBoxPlotBox = makeBoxPlotPart(encodingWithoutContinuousAxis);
    const makeBoxPlotMidTick = makeBoxPlotPart(Object.assign({}, encodingWithoutSizeColorAndContinuousAxis, (size ? { size } : {})));
    const fiveSummaryTooltipEncoding = Object(_common__WEBPACK_IMPORTED_MODULE_7__["getCompositeMarkTooltip"])([
        { fieldPrefix: boxPlotType === 'min-max' ? 'upper_whisker_' : 'max_', titlePrefix: 'Max' },
        { fieldPrefix: 'upper_box_', titlePrefix: 'Q3' },
        { fieldPrefix: 'mid_box_', titlePrefix: 'Median' },
        { fieldPrefix: 'lower_box_', titlePrefix: 'Q1' },
        { fieldPrefix: boxPlotType === 'min-max' ? 'lower_whisker_' : 'min_', titlePrefix: 'Min' }
    ], continuousAxisChannelDef, encodingWithoutContinuousAxis);
    // ## Whisker Layers
    const endTick = { type: 'tick', color: 'black', opacity: 1, orient: ticksOrient };
    const whiskerTooltipEncoding = boxPlotType === 'min-max'
        ? fiveSummaryTooltipEncoding // for min-max, show five-summary tooltip for whisker
        : // for tukey / k-IQR, just show upper/lower-whisker
            Object(_common__WEBPACK_IMPORTED_MODULE_7__["getCompositeMarkTooltip"])([
                { fieldPrefix: 'upper_whisker_', titlePrefix: 'Upper Whisker' },
                { fieldPrefix: 'lower_whisker_', titlePrefix: 'Lower Whisker' }
            ], continuousAxisChannelDef, encodingWithoutContinuousAxis);
    const whiskerLayers = [
        ...makeBoxPlotExtent({
            partName: 'rule',
            mark: 'rule',
            positionPrefix: 'lower_whisker',
            endPositionPrefix: 'lower_box',
            extraEncoding: whiskerTooltipEncoding
        }),
        ...makeBoxPlotExtent({
            partName: 'rule',
            mark: 'rule',
            positionPrefix: 'upper_box',
            endPositionPrefix: 'upper_whisker',
            extraEncoding: whiskerTooltipEncoding
        }),
        ...makeBoxPlotExtent({
            partName: 'ticks',
            mark: endTick,
            positionPrefix: 'lower_whisker',
            extraEncoding: whiskerTooltipEncoding
        }),
        ...makeBoxPlotExtent({
            partName: 'ticks',
            mark: endTick,
            positionPrefix: 'upper_whisker',
            extraEncoding: whiskerTooltipEncoding
        })
    ];
    // ## Box Layers
    // TODO: support hiding certain mark parts
    const boxLayers = [
        ...(boxPlotType !== 'tukey' ? whiskerLayers : []),
        ...makeBoxPlotBox({
            partName: 'box',
            mark: Object.assign({ type: 'bar' }, (sizeValue ? { size: sizeValue } : {})),
            positionPrefix: 'lower_box',
            endPositionPrefix: 'upper_box',
            extraEncoding: fiveSummaryTooltipEncoding
        }),
        ...makeBoxPlotMidTick({
            partName: 'median',
            mark: Object.assign({ type: 'tick' }, (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isObject"])(config.boxplot.median) && config.boxplot.median.color ? { color: config.boxplot.median.color } : {}), (sizeValue ? { size: sizeValue } : {}), { orient: ticksOrient }),
            positionPrefix: 'mid_box',
            extraEncoding: fiveSummaryTooltipEncoding
        })
    ];
    // ## Filtered Layers
    let filteredLayersMixins;
    if (boxPlotType !== 'min-max') {
        const lowerBoxExpr = `datum["lower_box_${continuousAxisChannelDef.field}"]`;
        const upperBoxExpr = `datum["upper_box_${continuousAxisChannelDef.field}"]`;
        const iqrExpr = `(${upperBoxExpr} - ${lowerBoxExpr})`;
        const lowerWhiskerExpr = `${lowerBoxExpr} - ${extent} * ${iqrExpr}`;
        const upperWhiskerExpr = `${upperBoxExpr} + ${extent} * ${iqrExpr}`;
        const fieldExpr = `datum["${continuousAxisChannelDef.field}"]`;
        const joinaggregateTransform = {
            joinaggregate: boxParamsQuartiles(continuousAxisChannelDef.field),
            groupby
        };
        let filteredWhiskerSpec = undefined;
        if (boxPlotType === 'tukey') {
            filteredWhiskerSpec = {
                transform: [
                    {
                        filter: `(${lowerWhiskerExpr} <= ${fieldExpr}) && (${fieldExpr} <= ${upperWhiskerExpr})`
                    },
                    {
                        aggregate: [
                            {
                                op: 'min',
                                field: continuousAxisChannelDef.field,
                                as: 'lower_whisker_' + continuousAxisChannelDef.field
                            },
                            {
                                op: 'max',
                                field: continuousAxisChannelDef.field,
                                as: 'upper_whisker_' + continuousAxisChannelDef.field
                            },
                            // preserve lower_box / upper_box
                            {
                                op: 'min',
                                field: 'lower_box_' + continuousAxisChannelDef.field,
                                as: 'lower_box_' + continuousAxisChannelDef.field
                            },
                            {
                                op: 'max',
                                field: 'upper_box_' + continuousAxisChannelDef.field,
                                as: 'upper_box_' + continuousAxisChannelDef.field
                            },
                            ...aggregate
                        ],
                        groupby
                    }
                ],
                layer: whiskerLayers
            };
        }
        const { tooltip } = encodingWithoutSizeColorAndContinuousAxis, encodingWithoutSizeColorContinuousAxisAndTooltip = tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"](encodingWithoutSizeColorAndContinuousAxis, ["tooltip"]);
        const outlierLayersMixins = Object(_common__WEBPACK_IMPORTED_MODULE_7__["partLayerMixins"])(markDef, 'outliers', config.boxplot, {
            transform: [{ filter: `(${fieldExpr} < ${lowerWhiskerExpr}) || (${fieldExpr} > ${upperWhiskerExpr})` }],
            mark: 'point',
            encoding: Object.assign({ [continuousAxis]: {
                    field: continuousAxisChannelDef.field,
                    type: continuousAxisChannelDef.type
                } }, encodingWithoutSizeColorContinuousAxisAndTooltip, (customTooltipWithoutAggregatedField ? { tooltip: customTooltipWithoutAggregatedField } : {}))
        })[0];
        if (outlierLayersMixins && filteredWhiskerSpec) {
            filteredLayersMixins = {
                transform: [joinaggregateTransform],
                layer: [outlierLayersMixins, filteredWhiskerSpec]
            };
        }
        else if (outlierLayersMixins) {
            filteredLayersMixins = outlierLayersMixins;
            filteredLayersMixins.transform.unshift(joinaggregateTransform);
        }
        else if (filteredWhiskerSpec) {
            filteredLayersMixins = filteredWhiskerSpec;
            filteredLayersMixins.transform.unshift(joinaggregateTransform);
        }
    }
    if (filteredLayersMixins) {
        // tukey box plot with outliers included
        return Object.assign({}, outerSpec, { layer: [
                ...(filteredLayersMixins ? [filteredLayersMixins] : []),
                {
                    // boxplot
                    transform,
                    layer: boxLayers
                }
            ] });
    }
    return Object.assign({}, outerSpec, { transform: (outerSpec.transform || []).concat(transform), layer: boxLayers });
}
function boxParamsQuartiles(continousAxisField) {
    return [
        {
            op: 'q1',
            field: continousAxisField,
            as: 'lower_box_' + continousAxisField
        },
        {
            op: 'q3',
            field: continousAxisField,
            as: 'upper_box_' + continousAxisField
        }
    ];
}
function boxParams(spec, extent, config) {
    const orient = Object(_common__WEBPACK_IMPORTED_MODULE_7__["compositeMarkOrient"])(spec, BOXPLOT);
    const { continuousAxisChannelDef, continuousAxis } = Object(_common__WEBPACK_IMPORTED_MODULE_7__["compositeMarkContinuousAxis"])(spec, orient, BOXPLOT);
    const continuousFieldName = continuousAxisChannelDef.field;
    const boxPlotType = getBoxPlotType(extent);
    const boxplotSpecificAggregate = [
        ...boxParamsQuartiles(continuousFieldName),
        {
            op: 'median',
            field: continuousFieldName,
            as: 'mid_box_' + continuousFieldName
        },
        {
            op: 'min',
            field: continuousFieldName,
            as: (boxPlotType === 'min-max' ? 'lower_whisker_' : 'min_') + continuousFieldName
        },
        {
            op: 'max',
            field: continuousFieldName,
            as: (boxPlotType === 'min-max' ? 'upper_whisker_' : 'max_') + continuousFieldName
        }
    ];
    const postAggregateCalculates = boxPlotType === 'min-max' || boxPlotType === 'tukey'
        ? []
        : [
            // This is for the  original k-IQR, which we do not expose
            {
                calculate: `datum["upper_box_${continuousFieldName}"] - datum["lower_box_${continuousFieldName}"]`,
                as: 'iqr_' + continuousFieldName
            },
            {
                calculate: `min(datum["upper_box_${continuousFieldName}"] + datum["iqr_${continuousFieldName}"] * ${extent}, datum["max_${continuousFieldName}"])`,
                as: 'upper_whisker_' + continuousFieldName
            },
            {
                calculate: `max(datum["lower_box_${continuousFieldName}"] - datum["iqr_${continuousFieldName}"] * ${extent}, datum["min_${continuousFieldName}"])`,
                as: 'lower_whisker_' + continuousFieldName
            }
        ];
    const _a = spec.encoding, _b = continuousAxis, oldContinuousAxisChannelDef = _a[_b], oldEncodingWithoutContinuousAxis = tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"](_a, [typeof _b === "symbol" ? _b : _b + ""]);
    const { customTooltipWithoutAggregatedField, filteredEncoding } = Object(_common__WEBPACK_IMPORTED_MODULE_7__["filterTooltipWithAggregatedField"])(oldEncodingWithoutContinuousAxis);
    const { bins, timeUnits, aggregate, groupby, encoding: encodingWithoutContinuousAxis } = Object(_encoding__WEBPACK_IMPORTED_MODULE_2__["extractTransformsFromEncoding"])(filteredEncoding, config);
    const ticksOrient = orient === 'vertical' ? 'horizontal' : 'vertical';
    return {
        transform: [
            ...bins,
            ...timeUnits,
            {
                aggregate: [...aggregate, ...boxplotSpecificAggregate],
                groupby
            },
            ...postAggregateCalculates
        ],
        groupby,
        aggregate,
        continuousAxisChannelDef,
        continuousAxis,
        encodingWithoutContinuousAxis,
        ticksOrient,
        customTooltipWithoutAggregatedField
    };
}
//# sourceMappingURL=boxplot.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compositemark/common.js":
/*!******************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compositemark/common.js ***!
  \******************************************************************/
/*! exports provided: filterTooltipWithAggregatedField, getCompositeMarkTooltip, makeCompositeAggregatePartFactory, partLayerMixins, compositeMarkContinuousAxis, compositeMarkOrient */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "filterTooltipWithAggregatedField", function() { return filterTooltipWithAggregatedField; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getCompositeMarkTooltip", function() { return getCompositeMarkTooltip; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "makeCompositeAggregatePartFactory", function() { return makeCompositeAggregatePartFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "partLayerMixins", function() { return partLayerMixins; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "compositeMarkContinuousAxis", function() { return compositeMarkContinuousAxis; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "compositeMarkOrient", function() { return compositeMarkOrient; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var _channeldef__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../channeldef */ "./node_modules/vega-lite/build/src/channeldef.js");
/* harmony import */ var _encoding__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../encoding */ "./node_modules/vega-lite/build/src/encoding.js");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../log */ "./node_modules/vega-lite/build/src/log/index.js");
/* harmony import */ var _mark__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../mark */ "./node_modules/vega-lite/build/src/mark.js");






function filterTooltipWithAggregatedField(oldEncoding) {
    const { tooltip } = oldEncoding, filteredEncoding = tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"](oldEncoding, ["tooltip"]);
    if (!tooltip) {
        return { filteredEncoding: oldEncoding };
    }
    let customTooltipWithAggregatedField;
    let customTooltipWithoutAggregatedField;
    if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(tooltip)) {
        tooltip.forEach((t) => {
            if (t.aggregate) {
                if (!customTooltipWithAggregatedField) {
                    customTooltipWithAggregatedField = [];
                }
                customTooltipWithAggregatedField.push(t);
            }
            else {
                if (!customTooltipWithoutAggregatedField) {
                    customTooltipWithoutAggregatedField = [];
                }
                customTooltipWithoutAggregatedField.push(t);
            }
        });
        if (customTooltipWithAggregatedField) {
            filteredEncoding.tooltip = customTooltipWithAggregatedField;
        }
    }
    else {
        if (tooltip['aggregate']) {
            filteredEncoding.tooltip = tooltip;
        }
        else {
            customTooltipWithoutAggregatedField = tooltip;
        }
    }
    if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(customTooltipWithoutAggregatedField) && customTooltipWithoutAggregatedField.length === 1) {
        customTooltipWithoutAggregatedField = customTooltipWithoutAggregatedField[0];
    }
    return { customTooltipWithoutAggregatedField, filteredEncoding };
}
function getCompositeMarkTooltip(tooltipSummary, continuousAxisChannelDef, encodingWithoutContinuousAxis, withFieldName = true) {
    const fiveSummaryTooltip = tooltipSummary.map(({ fieldPrefix, titlePrefix }) => ({
        field: fieldPrefix + continuousAxisChannelDef.field,
        type: continuousAxisChannelDef.type,
        title: titlePrefix + (withFieldName ? ' of ' + continuousAxisChannelDef.field : '')
    }));
    return {
        tooltip: [
            ...fiveSummaryTooltip,
            // need to cast because TextFieldDef support fewer types of bin
            ...Object(_encoding__WEBPACK_IMPORTED_MODULE_3__["fieldDefs"])(encodingWithoutContinuousAxis)
        ]
    };
}
function makeCompositeAggregatePartFactory(compositeMarkDef, continuousAxis, continuousAxisChannelDef, sharedEncoding, compositeMarkConfig) {
    const { scale, axis } = continuousAxisChannelDef;
    return ({ partName, mark, positionPrefix, endPositionPrefix = undefined, extraEncoding = {} }) => {
        const title = axis && axis.title !== undefined
            ? undefined
            : continuousAxisChannelDef.title !== undefined
                ? continuousAxisChannelDef.title
                : continuousAxisChannelDef.field;
        return partLayerMixins(compositeMarkDef, partName, compositeMarkConfig, {
            mark,
            encoding: Object.assign({ [continuousAxis]: Object.assign({ field: positionPrefix + '_' + continuousAxisChannelDef.field, type: continuousAxisChannelDef.type }, (title ? { title } : {}), (scale ? { scale } : {}), (axis ? { axis } : {})) }, (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isString"])(endPositionPrefix)
                ? {
                    [continuousAxis + '2']: {
                        field: endPositionPrefix + '_' + continuousAxisChannelDef.field,
                        type: continuousAxisChannelDef.type
                    }
                }
                : {}), sharedEncoding, extraEncoding)
        });
    };
}
function partLayerMixins(markDef, part, compositeMarkConfig, partBaseSpec) {
    const { clip, color, opacity } = markDef;
    const mark = markDef.type;
    if (markDef[part] || (markDef[part] === undefined && compositeMarkConfig[part])) {
        return [
            Object.assign({}, partBaseSpec, { mark: Object.assign({}, compositeMarkConfig[part], (clip ? { clip } : {}), (color ? { color } : {}), (opacity ? { opacity } : {}), (Object(_mark__WEBPACK_IMPORTED_MODULE_5__["isMarkDef"])(partBaseSpec.mark) ? partBaseSpec.mark : { type: partBaseSpec.mark }), { style: `${mark}-${part}` }, (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isBoolean"])(markDef[part]) ? {} : markDef[part])) })
        ];
    }
    return [];
}
function compositeMarkContinuousAxis(spec, orient, compositeMark) {
    const { encoding } = spec;
    const continuousAxis = orient === 'vertical' ? 'y' : 'x';
    const continuousAxisChannelDef = encoding[continuousAxis]; // Safe to cast because if x is not continuous fielddef, the orient would not be horizontal.
    const continuousAxisChannelDef2 = encoding[continuousAxis + '2'];
    const continuousAxisChannelDefError = encoding[continuousAxis + 'Error'];
    const continuousAxisChannelDefError2 = encoding[continuousAxis + 'Error2'];
    return {
        continuousAxisChannelDef: filterAggregateFromChannelDef(continuousAxisChannelDef, compositeMark),
        continuousAxisChannelDef2: filterAggregateFromChannelDef(continuousAxisChannelDef2, compositeMark),
        continuousAxisChannelDefError: filterAggregateFromChannelDef(continuousAxisChannelDefError, compositeMark),
        continuousAxisChannelDefError2: filterAggregateFromChannelDef(continuousAxisChannelDefError2, compositeMark),
        continuousAxis
    };
}
function filterAggregateFromChannelDef(continuousAxisChannelDef, compositeMark) {
    if (continuousAxisChannelDef && continuousAxisChannelDef.aggregate) {
        const { aggregate } = continuousAxisChannelDef, continuousAxisWithoutAggregate = tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"](continuousAxisChannelDef, ["aggregate"]);
        if (aggregate !== compositeMark) {
            _log__WEBPACK_IMPORTED_MODULE_4__["warn"](_log__WEBPACK_IMPORTED_MODULE_4__["message"].errorBarContinuousAxisHasCustomizedAggregate(aggregate, compositeMark));
        }
        return continuousAxisWithoutAggregate;
    }
    else {
        return continuousAxisChannelDef;
    }
}
function compositeMarkOrient(spec, compositeMark) {
    const { mark, encoding } = spec;
    if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_2__["isFieldDef"])(encoding.x) && Object(_channeldef__WEBPACK_IMPORTED_MODULE_2__["isContinuous"])(encoding.x)) {
        // x is continuous
        if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_2__["isFieldDef"])(encoding.y) && Object(_channeldef__WEBPACK_IMPORTED_MODULE_2__["isContinuous"])(encoding.y)) {
            // both x and y are continuous
            if (encoding.x.aggregate === undefined && encoding.y.aggregate === compositeMark) {
                return 'vertical';
            }
            else if (encoding.y.aggregate === undefined && encoding.x.aggregate === compositeMark) {
                return 'horizontal';
            }
            else if (encoding.x.aggregate === compositeMark && encoding.y.aggregate === compositeMark) {
                throw new Error('Both x and y cannot have aggregate');
            }
            else {
                if (Object(_mark__WEBPACK_IMPORTED_MODULE_5__["isMarkDef"])(mark) && mark.orient) {
                    return mark.orient;
                }
                // default orientation = vertical
                return 'vertical';
            }
        }
        // x is continuous but y is not
        return 'horizontal';
    }
    else if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_2__["isFieldDef"])(encoding.y) && Object(_channeldef__WEBPACK_IMPORTED_MODULE_2__["isContinuous"])(encoding.y)) {
        // y is continuous but x is not
        return 'vertical';
    }
    else {
        // Neither x nor y is continuous.
        throw new Error('Need a valid continuous axis for ' + compositeMark + 's');
    }
}
//# sourceMappingURL=common.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compositemark/errorband.js":
/*!*********************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compositemark/errorband.js ***!
  \*********************************************************************/
/*! exports provided: ERRORBAND, ERRORBAND_PARTS, errorBandNormalizer, normalizeErrorBand */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ERRORBAND", function() { return ERRORBAND; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ERRORBAND_PARTS", function() { return ERRORBAND_PARTS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "errorBandNormalizer", function() { return errorBandNormalizer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "normalizeErrorBand", function() { return normalizeErrorBand; });
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../log */ "./node_modules/vega-lite/build/src/log/index.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ "./node_modules/vega-lite/build/src/util.js");
/* harmony import */ var _base__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./base */ "./node_modules/vega-lite/build/src/compositemark/base.js");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./common */ "./node_modules/vega-lite/build/src/compositemark/common.js");
/* harmony import */ var _errorbar__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./errorbar */ "./node_modules/vega-lite/build/src/compositemark/errorbar.js");





const ERRORBAND = 'errorband';
const ERRORBAND_PART_INDEX = {
    band: 1,
    borders: 1
};
const ERRORBAND_PARTS = Object(_util__WEBPACK_IMPORTED_MODULE_1__["keys"])(ERRORBAND_PART_INDEX);
const errorBandNormalizer = new _base__WEBPACK_IMPORTED_MODULE_2__["CompositeMarkNormalizer"](ERRORBAND, normalizeErrorBand);
function normalizeErrorBand(spec, { config }) {
    const { transform, continuousAxisChannelDef, continuousAxis, encodingWithoutContinuousAxis, markDef, outerSpec, tooltipEncoding } = Object(_errorbar__WEBPACK_IMPORTED_MODULE_4__["errorBarParams"])(spec, ERRORBAND, config);
    const errorBandDef = markDef;
    const makeErrorBandPart = Object(_common__WEBPACK_IMPORTED_MODULE_3__["makeCompositeAggregatePartFactory"])(errorBandDef, continuousAxis, continuousAxisChannelDef, encodingWithoutContinuousAxis, config.errorband);
    const is2D = spec.encoding.x !== undefined && spec.encoding.y !== undefined;
    let bandMark = { type: is2D ? 'area' : 'rect' };
    let bordersMark = { type: is2D ? 'line' : 'rule' };
    const interpolate = Object.assign({}, (errorBandDef.interpolate ? { interpolate: errorBandDef.interpolate } : {}), (errorBandDef.tension && errorBandDef.interpolate ? { interpolate: errorBandDef.tension } : {}));
    if (is2D) {
        bandMark = Object.assign({}, bandMark, interpolate);
        bordersMark = Object.assign({}, bordersMark, interpolate);
    }
    else if (errorBandDef.interpolate) {
        _log__WEBPACK_IMPORTED_MODULE_0__["warn"](_log__WEBPACK_IMPORTED_MODULE_0__["message"].errorBand1DNotSupport('interpolate'));
    }
    else if (errorBandDef.tension) {
        _log__WEBPACK_IMPORTED_MODULE_0__["warn"](_log__WEBPACK_IMPORTED_MODULE_0__["message"].errorBand1DNotSupport('tension'));
    }
    return Object.assign({}, outerSpec, { transform, layer: [
            ...makeErrorBandPart({
                partName: 'band',
                mark: bandMark,
                positionPrefix: 'lower',
                endPositionPrefix: 'upper',
                extraEncoding: tooltipEncoding
            }),
            ...makeErrorBandPart({
                partName: 'borders',
                mark: bordersMark,
                positionPrefix: 'lower',
                extraEncoding: tooltipEncoding
            }),
            ...makeErrorBandPart({
                partName: 'borders',
                mark: bordersMark,
                positionPrefix: 'upper',
                extraEncoding: tooltipEncoding
            })
        ] });
}
//# sourceMappingURL=errorband.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compositemark/errorbar.js":
/*!********************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compositemark/errorbar.js ***!
  \********************************************************************/
/*! exports provided: ERRORBAR, ERRORBAR_PARTS, errorBarNormalizer, normalizeErrorBar, errorBarParams */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ERRORBAR", function() { return ERRORBAR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ERRORBAR_PARTS", function() { return ERRORBAR_PARTS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "errorBarNormalizer", function() { return errorBarNormalizer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "normalizeErrorBar", function() { return normalizeErrorBar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "errorBarParams", function() { return errorBarParams; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _channeldef__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../channeldef */ "./node_modules/vega-lite/build/src/channeldef.js");
/* harmony import */ var _encoding__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../encoding */ "./node_modules/vega-lite/build/src/encoding.js");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../log */ "./node_modules/vega-lite/build/src/log/index.js");
/* harmony import */ var _mark__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../mark */ "./node_modules/vega-lite/build/src/mark.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util */ "./node_modules/vega-lite/build/src/util.js");
/* harmony import */ var _base__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./base */ "./node_modules/vega-lite/build/src/compositemark/base.js");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./common */ "./node_modules/vega-lite/build/src/compositemark/common.js");








const ERRORBAR = 'errorbar';
const ERRORBAR_PART_INDEX = {
    ticks: 1,
    rule: 1
};
const ERRORBAR_PARTS = Object(_util__WEBPACK_IMPORTED_MODULE_5__["keys"])(ERRORBAR_PART_INDEX);
const errorBarNormalizer = new _base__WEBPACK_IMPORTED_MODULE_6__["CompositeMarkNormalizer"](ERRORBAR, normalizeErrorBar);
function normalizeErrorBar(spec, { config }) {
    const { transform, continuousAxisChannelDef, continuousAxis, encodingWithoutContinuousAxis, ticksOrient, markDef, outerSpec, tooltipEncoding } = errorBarParams(spec, ERRORBAR, config);
    const makeErrorBarPart = Object(_common__WEBPACK_IMPORTED_MODULE_7__["makeCompositeAggregatePartFactory"])(markDef, continuousAxis, continuousAxisChannelDef, encodingWithoutContinuousAxis, config.errorbar);
    const tick = { type: 'tick', orient: ticksOrient };
    return Object.assign({}, outerSpec, { transform, layer: [
            ...makeErrorBarPart({
                partName: 'ticks',
                mark: tick,
                positionPrefix: 'lower',
                extraEncoding: tooltipEncoding
            }),
            ...makeErrorBarPart({
                partName: 'ticks',
                mark: tick,
                positionPrefix: 'upper',
                extraEncoding: tooltipEncoding
            }),
            ...makeErrorBarPart({
                partName: 'rule',
                mark: 'rule',
                positionPrefix: 'lower',
                endPositionPrefix: 'upper',
                extraEncoding: tooltipEncoding
            })
        ] });
}
function errorBarOrientAndInputType(spec, compositeMark) {
    const { encoding } = spec;
    if (errorBarIsInputTypeRaw(encoding)) {
        return {
            orient: Object(_common__WEBPACK_IMPORTED_MODULE_7__["compositeMarkOrient"])(spec, compositeMark),
            inputType: 'raw'
        };
    }
    const isTypeAggregatedUpperLower = errorBarIsInputTypeAggregatedUpperLower(encoding);
    const isTypeAggregatedError = errorBarIsInputTypeAggregatedError(encoding);
    const x = encoding.x;
    const y = encoding.y;
    if (isTypeAggregatedUpperLower) {
        // type is aggregated-upper-lower
        if (isTypeAggregatedError) {
            throw new Error(compositeMark + ' cannot be both type aggregated-upper-lower and aggregated-error');
        }
        const x2 = encoding.x2;
        const y2 = encoding.y2;
        if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["isFieldDef"])(x2) && Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["isFieldDef"])(y2)) {
            // having both x, x2 and y, y2
            throw new Error(compositeMark + ' cannot have both x2 and y2');
        }
        else if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["isFieldDef"])(x2)) {
            if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["isFieldDef"])(x) && Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["isContinuous"])(x)) {
                // having x, x2 quantitative and field y, y2 are not specified
                return { orient: 'horizontal', inputType: 'aggregated-upper-lower' };
            }
            else {
                // having x, x2 that are not both quantitative
                throw new Error('Both x and x2 have to be quantitative in ' + compositeMark);
            }
        }
        else if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["isFieldDef"])(y2)) {
            // y2 is a FieldDef
            if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["isFieldDef"])(y) && Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["isContinuous"])(y)) {
                // having y, y2 quantitative and field x, x2 are not specified
                return { orient: 'vertical', inputType: 'aggregated-upper-lower' };
            }
            else {
                // having y, y2 that are not both quantitative
                throw new Error('Both y and y2 have to be quantitative in ' + compositeMark);
            }
        }
        throw new Error('No ranged axis');
    }
    else {
        // type is aggregated-error
        const xError = encoding.xError;
        const xError2 = encoding.xError2;
        const yError = encoding.yError;
        const yError2 = encoding.yError2;
        if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["isFieldDef"])(xError2) && !Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["isFieldDef"])(xError)) {
            // having xError2 without xError
            throw new Error(compositeMark + ' cannot have xError2 without xError');
        }
        if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["isFieldDef"])(yError2) && !Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["isFieldDef"])(yError)) {
            // having yError2 without yError
            throw new Error(compositeMark + ' cannot have yError2 without yError');
        }
        if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["isFieldDef"])(xError) && Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["isFieldDef"])(yError)) {
            // having both xError and yError
            throw new Error(compositeMark + ' cannot have both xError and yError with both are quantiative');
        }
        else if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["isFieldDef"])(xError)) {
            if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["isFieldDef"])(x) && Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["isContinuous"])(x)) {
                // having x and xError that are all quantitative
                return { orient: 'horizontal', inputType: 'aggregated-error' };
            }
            else {
                // having x, xError, and xError2 that are not all quantitative
                throw new Error('All x, xError, and xError2 (if exist) have to be quantitative');
            }
        }
        else if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["isFieldDef"])(yError)) {
            if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["isFieldDef"])(y) && Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["isContinuous"])(y)) {
                // having y and yError that are all quantitative
                return { orient: 'vertical', inputType: 'aggregated-error' };
            }
            else {
                // having y, yError, and yError2 that are not all quantitative
                throw new Error('All y, yError, and yError2 (if exist) have to be quantitative');
            }
        }
        throw new Error('No ranged axis');
    }
}
function errorBarIsInputTypeRaw(encoding) {
    return ((Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["isFieldDef"])(encoding.x) || Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["isFieldDef"])(encoding.y)) &&
        !Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["isFieldDef"])(encoding.x2) &&
        !Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["isFieldDef"])(encoding.y2) &&
        !Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["isFieldDef"])(encoding.xError) &&
        !Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["isFieldDef"])(encoding.xError2) &&
        !Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["isFieldDef"])(encoding.yError) &&
        !Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["isFieldDef"])(encoding.yError2));
}
function errorBarIsInputTypeAggregatedUpperLower(encoding) {
    return Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["isFieldDef"])(encoding.x2) || Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["isFieldDef"])(encoding.y2);
}
function errorBarIsInputTypeAggregatedError(encoding) {
    return (Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["isFieldDef"])(encoding.xError) ||
        Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["isFieldDef"])(encoding.xError2) ||
        Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["isFieldDef"])(encoding.yError) ||
        Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["isFieldDef"])(encoding.yError2));
}
function errorBarParams(spec, compositeMark, config) {
    // TODO: use selection
    const { mark, encoding, selection, projection: _p } = spec, outerSpec = tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"](spec, ["mark", "encoding", "selection", "projection"]);
    const markDef = Object(_mark__WEBPACK_IMPORTED_MODULE_4__["isMarkDef"])(mark) ? mark : { type: mark };
    // TODO(https://github.com/vega/vega-lite/issues/3702): add selection support
    if (selection) {
        _log__WEBPACK_IMPORTED_MODULE_3__["warn"](_log__WEBPACK_IMPORTED_MODULE_3__["message"].selectionNotSupported(compositeMark));
    }
    const { orient, inputType } = errorBarOrientAndInputType(spec, compositeMark);
    const { continuousAxisChannelDef, continuousAxisChannelDef2, continuousAxisChannelDefError, continuousAxisChannelDefError2, continuousAxis } = Object(_common__WEBPACK_IMPORTED_MODULE_7__["compositeMarkContinuousAxis"])(spec, orient, compositeMark);
    const { errorBarSpecificAggregate, postAggregateCalculates, tooltipSummary, tooltipTitleWithFieldName } = errorBarAggregationAndCalculation(markDef, continuousAxisChannelDef, continuousAxisChannelDef2, continuousAxisChannelDefError, continuousAxisChannelDefError2, inputType, compositeMark, config);
    const _a = continuousAxis, oldContinuousAxisChannelDef = encoding[_a], _b = continuousAxis === 'x' ? 'x2' : 'y2', oldContinuousAxisChannelDef2 = encoding[_b], _c = continuousAxis === 'x' ? 'xError' : 'yError', oldContinuousAxisChannelDefError = encoding[_c], _d = continuousAxis === 'x' ? 'xError2' : 'yError2', oldContinuousAxisChannelDefError2 = encoding[_d], oldEncodingWithoutContinuousAxis = tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"](encoding, [typeof _a === "symbol" ? _a : _a + "", typeof _b === "symbol" ? _b : _b + "", typeof _c === "symbol" ? _c : _c + "", typeof _d === "symbol" ? _d : _d + ""]);
    const { bins, timeUnits, aggregate: oldAggregate, groupby: oldGroupBy, encoding: encodingWithoutContinuousAxis } = Object(_encoding__WEBPACK_IMPORTED_MODULE_2__["extractTransformsFromEncoding"])(oldEncodingWithoutContinuousAxis, config);
    const aggregate = [...oldAggregate, ...errorBarSpecificAggregate];
    const groupby = inputType !== 'raw' ? [] : oldGroupBy;
    const tooltipEncoding = Object(_common__WEBPACK_IMPORTED_MODULE_7__["getCompositeMarkTooltip"])(tooltipSummary, continuousAxisChannelDef, encodingWithoutContinuousAxis, tooltipTitleWithFieldName);
    return {
        transform: [
            ...(outerSpec.transform || []),
            ...bins,
            ...timeUnits,
            ...(!aggregate.length ? [] : [{ aggregate, groupby }]),
            ...postAggregateCalculates
        ],
        groupby,
        continuousAxisChannelDef,
        continuousAxis,
        encodingWithoutContinuousAxis,
        ticksOrient: orient === 'vertical' ? 'horizontal' : 'vertical',
        markDef,
        outerSpec,
        tooltipEncoding
    };
}
function errorBarAggregationAndCalculation(markDef, continuousAxisChannelDef, continuousAxisChannelDef2, continuousAxisChannelDefError, continuousAxisChannelDefError2, inputType, compositeMark, config) {
    let errorBarSpecificAggregate = [];
    let postAggregateCalculates = [];
    const continuousFieldName = continuousAxisChannelDef.field;
    let tooltipSummary;
    let tooltipTitleWithFieldName = false;
    if (inputType === 'raw') {
        const center = markDef.center
            ? markDef.center
            : markDef.extent
                ? markDef.extent === 'iqr'
                    ? 'median'
                    : 'mean'
                : config.errorbar.center;
        const extent = markDef.extent ? markDef.extent : center === 'mean' ? 'stderr' : 'iqr';
        if ((center === 'median') !== (extent === 'iqr')) {
            _log__WEBPACK_IMPORTED_MODULE_3__["warn"](_log__WEBPACK_IMPORTED_MODULE_3__["message"].errorBarCenterIsUsedWithWrongExtent(center, extent, compositeMark));
        }
        if (extent === 'stderr' || extent === 'stdev') {
            errorBarSpecificAggregate = [
                { op: extent, field: continuousFieldName, as: 'extent_' + continuousFieldName },
                { op: center, field: continuousFieldName, as: 'center_' + continuousFieldName }
            ];
            postAggregateCalculates = [
                {
                    calculate: `datum["center_${continuousFieldName}"] + datum["extent_${continuousFieldName}"]`,
                    as: 'upper_' + continuousFieldName
                },
                {
                    calculate: `datum["center_${continuousFieldName}"] - datum["extent_${continuousFieldName}"]`,
                    as: 'lower_' + continuousFieldName
                }
            ];
            tooltipSummary = [
                { fieldPrefix: 'center_', titlePrefix: Object(_util__WEBPACK_IMPORTED_MODULE_5__["titlecase"])(center) },
                { fieldPrefix: 'upper_', titlePrefix: getTitlePrefix(center, extent, '+') },
                { fieldPrefix: 'lower_', titlePrefix: getTitlePrefix(center, extent, '-') }
            ];
            tooltipTitleWithFieldName = true;
        }
        else {
            if (markDef.center && markDef.extent) {
                _log__WEBPACK_IMPORTED_MODULE_3__["warn"](_log__WEBPACK_IMPORTED_MODULE_3__["message"].errorBarCenterIsNotNeeded(markDef.extent, compositeMark));
            }
            let centerOp;
            let lowerExtentOp;
            let upperExtentOp;
            if (extent === 'ci') {
                centerOp = 'mean';
                lowerExtentOp = 'ci0';
                upperExtentOp = 'ci1';
            }
            else {
                centerOp = 'median';
                lowerExtentOp = 'q1';
                upperExtentOp = 'q3';
            }
            errorBarSpecificAggregate = [
                { op: lowerExtentOp, field: continuousFieldName, as: 'lower_' + continuousFieldName },
                { op: upperExtentOp, field: continuousFieldName, as: 'upper_' + continuousFieldName },
                { op: centerOp, field: continuousFieldName, as: 'center_' + continuousFieldName }
            ];
            tooltipSummary = [
                {
                    fieldPrefix: 'upper_',
                    titlePrefix: Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["title"])({ field: continuousFieldName, aggregate: upperExtentOp, type: 'quantitative' }, config, {
                        allowDisabling: false
                    })
                },
                {
                    fieldPrefix: 'lower_',
                    titlePrefix: Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["title"])({ field: continuousFieldName, aggregate: lowerExtentOp, type: 'quantitative' }, config, {
                        allowDisabling: false
                    })
                },
                {
                    fieldPrefix: 'center_',
                    titlePrefix: Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["title"])({ field: continuousFieldName, aggregate: centerOp, type: 'quantitative' }, config, {
                        allowDisabling: false
                    })
                }
            ];
        }
    }
    else {
        if (markDef.center || markDef.extent) {
            _log__WEBPACK_IMPORTED_MODULE_3__["warn"](_log__WEBPACK_IMPORTED_MODULE_3__["message"].errorBarCenterAndExtentAreNotNeeded(markDef.center, markDef.extent));
        }
        if (inputType === 'aggregated-upper-lower') {
            tooltipSummary = [];
            postAggregateCalculates = [
                { calculate: `datum["${continuousAxisChannelDef2.field}"]`, as: 'upper_' + continuousFieldName },
                { calculate: `datum["${continuousFieldName}"]`, as: 'lower_' + continuousFieldName }
            ];
        }
        else if (inputType === 'aggregated-error') {
            tooltipSummary = [{ fieldPrefix: '', titlePrefix: continuousFieldName }];
            postAggregateCalculates = [
                {
                    calculate: `datum["${continuousFieldName}"] + datum["${continuousAxisChannelDefError.field}"]`,
                    as: 'upper_' + continuousFieldName
                }
            ];
            if (continuousAxisChannelDefError2) {
                postAggregateCalculates.push({
                    calculate: `datum["${continuousFieldName}"] + datum["${continuousAxisChannelDefError2.field}"]`,
                    as: 'lower_' + continuousFieldName
                });
            }
            else {
                postAggregateCalculates.push({
                    calculate: `datum["${continuousFieldName}"] - datum["${continuousAxisChannelDefError.field}"]`,
                    as: 'lower_' + continuousFieldName
                });
            }
        }
        for (const postAggregateCalculate of postAggregateCalculates) {
            tooltipSummary.push({
                fieldPrefix: postAggregateCalculate.as.substring(0, 6),
                titlePrefix: postAggregateCalculate.calculate
                    .replace(new RegExp('datum\\[\\"', 'g'), '')
                    .replace(new RegExp('\\"\\]', 'g'), '')
            });
        }
    }
    return { postAggregateCalculates, errorBarSpecificAggregate, tooltipSummary, tooltipTitleWithFieldName };
}
function getTitlePrefix(center, extent, operation) {
    return Object(_util__WEBPACK_IMPORTED_MODULE_5__["titlecase"])(center) + ' ' + operation + ' ' + extent;
}
//# sourceMappingURL=errorbar.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/compositemark/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/compositemark/index.js ***!
  \*****************************************************************/
/*! exports provided: add, remove, getAllCompositeMarks */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "add", function() { return add; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "remove", function() { return remove; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getAllCompositeMarks", function() { return getAllCompositeMarks; });
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ "./node_modules/vega-lite/build/src/util.js");
/* harmony import */ var _base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base */ "./node_modules/vega-lite/build/src/compositemark/base.js");
/* harmony import */ var _boxplot__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./boxplot */ "./node_modules/vega-lite/build/src/compositemark/boxplot.js");
/* harmony import */ var _errorband__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./errorband */ "./node_modules/vega-lite/build/src/compositemark/errorband.js");
/* harmony import */ var _errorbar__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./errorbar */ "./node_modules/vega-lite/build/src/compositemark/errorbar.js");





/**
 * Registry index for all composite mark's normalizer
 */
const compositeMarkRegistry = {};
function add(mark, run, parts) {
    const normalizer = new _base__WEBPACK_IMPORTED_MODULE_1__["CompositeMarkNormalizer"](mark, run);
    compositeMarkRegistry[mark] = { normalizer, parts };
}
function remove(mark) {
    delete compositeMarkRegistry[mark];
}
function getAllCompositeMarks() {
    return Object(_util__WEBPACK_IMPORTED_MODULE_0__["keys"])(compositeMarkRegistry);
}
add(_boxplot__WEBPACK_IMPORTED_MODULE_2__["BOXPLOT"], _boxplot__WEBPACK_IMPORTED_MODULE_2__["normalizeBoxPlot"], _boxplot__WEBPACK_IMPORTED_MODULE_2__["BOXPLOT_PARTS"]);
add(_errorbar__WEBPACK_IMPORTED_MODULE_4__["ERRORBAR"], _errorbar__WEBPACK_IMPORTED_MODULE_4__["normalizeErrorBar"], _errorbar__WEBPACK_IMPORTED_MODULE_4__["ERRORBAR_PARTS"]);
add(_errorband__WEBPACK_IMPORTED_MODULE_3__["ERRORBAND"], _errorband__WEBPACK_IMPORTED_MODULE_3__["normalizeErrorBand"], _errorband__WEBPACK_IMPORTED_MODULE_3__["ERRORBAND_PARTS"]);
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/config.js":
/*!****************************************************!*\
  !*** ./node_modules/vega-lite/build/src/config.js ***!
  \****************************************************/
/*! exports provided: defaultViewConfig, isVgScheme, defaultConfig, initConfig, stripAndRedirectConfig */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultViewConfig", function() { return defaultViewConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isVgScheme", function() { return isVgScheme; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultConfig", function() { return defaultConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initConfig", function() { return initConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "stripAndRedirectConfig", function() { return stripAndRedirectConfig; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var _compositemark__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./compositemark */ "./node_modules/vega-lite/build/src/compositemark/index.js");
/* harmony import */ var _guide__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./guide */ "./node_modules/vega-lite/build/src/guide.js");
/* harmony import */ var _legend__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./legend */ "./node_modules/vega-lite/build/src/legend.js");
/* harmony import */ var _mark__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./mark */ "./node_modules/vega-lite/build/src/mark.js");
/* harmony import */ var _scale__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./scale */ "./node_modules/vega-lite/build/src/scale.js");
/* harmony import */ var _selection__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./selection */ "./node_modules/vega-lite/build/src/selection.js");
/* harmony import */ var _spec_base__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./spec/base */ "./node_modules/vega-lite/build/src/spec/base.js");
/* harmony import */ var _title__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./title */ "./node_modules/vega-lite/build/src/title.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./util */ "./node_modules/vega-lite/build/src/util.js");











const defaultViewConfig = {
    width: 200,
    height: 200
};
function isVgScheme(rangeConfig) {
    return rangeConfig && !!rangeConfig['scheme'];
}
const defaultConfig = {
    padding: 5,
    timeFormat: '%b %d, %Y',
    countTitle: 'Count of Records',
    invalidValues: 'filter',
    view: defaultViewConfig,
    mark: _mark__WEBPACK_IMPORTED_MODULE_4__["defaultMarkConfig"],
    area: {},
    bar: _mark__WEBPACK_IMPORTED_MODULE_4__["defaultBarConfig"],
    circle: {},
    geoshape: {},
    line: {},
    point: {},
    rect: {},
    rule: { color: 'black' },
    square: {},
    text: { color: 'black' },
    tick: _mark__WEBPACK_IMPORTED_MODULE_4__["defaultTickConfig"],
    trail: {},
    boxplot: {
        size: 14,
        extent: 1.5,
        box: {},
        median: { color: 'white' },
        outliers: {},
        rule: {},
        ticks: null
    },
    errorbar: {
        center: 'mean',
        rule: true,
        ticks: false
    },
    errorband: {
        band: {
            opacity: 0.3
        },
        borders: false
    },
    scale: _scale__WEBPACK_IMPORTED_MODULE_5__["defaultScaleConfig"],
    projection: {},
    axis: {},
    axisX: {},
    axisY: {},
    axisLeft: {},
    axisRight: {},
    axisTop: {},
    axisBottom: {},
    axisBand: {},
    legend: _legend__WEBPACK_IMPORTED_MODULE_3__["defaultLegendConfig"],
    header: { titlePadding: 10, labelPadding: 10 },
    headerColumn: {},
    headerRow: {},
    headerFacet: {},
    selection: _selection__WEBPACK_IMPORTED_MODULE_6__["defaultConfig"],
    style: {},
    title: {},
    facet: { spacing: _spec_base__WEBPACK_IMPORTED_MODULE_7__["DEFAULT_SPACING"] },
    repeat: { spacing: _spec_base__WEBPACK_IMPORTED_MODULE_7__["DEFAULT_SPACING"] },
    concat: { spacing: _spec_base__WEBPACK_IMPORTED_MODULE_7__["DEFAULT_SPACING"] }
};
function initConfig(config) {
    return Object(_util__WEBPACK_IMPORTED_MODULE_9__["mergeDeep"])(Object(_util__WEBPACK_IMPORTED_MODULE_9__["duplicate"])(defaultConfig), config);
}
const MARK_STYLES = ['view', ..._mark__WEBPACK_IMPORTED_MODULE_4__["PRIMITIVE_MARKS"]];
const VL_ONLY_CONFIG_PROPERTIES = [
    'padding',
    'facet',
    'concat',
    'repeat',
    'numberFormat',
    'timeFormat',
    'countTitle',
    'header',
    'stack',
    'scale',
    'selection',
    'invalidValues',
    'overlay' // FIXME: Redesign and unhide this
];
const VL_ONLY_ALL_MARK_SPECIFIC_CONFIG_PROPERTY_INDEX = Object.assign({ view: ['width', 'height'] }, _mark__WEBPACK_IMPORTED_MODULE_4__["VL_ONLY_MARK_SPECIFIC_CONFIG_PROPERTY_INDEX"]);
function stripAndRedirectConfig(config) {
    config = Object(_util__WEBPACK_IMPORTED_MODULE_9__["duplicate"])(config);
    for (const prop of VL_ONLY_CONFIG_PROPERTIES) {
        delete config[prop];
    }
    // Remove Vega-Lite only axis/legend config
    if (config.axis) {
        for (const prop of _guide__WEBPACK_IMPORTED_MODULE_2__["VL_ONLY_GUIDE_CONFIG"]) {
            delete config.axis[prop];
        }
    }
    if (config.legend) {
        for (const prop of _guide__WEBPACK_IMPORTED_MODULE_2__["VL_ONLY_GUIDE_CONFIG"]) {
            delete config.legend[prop];
        }
        for (const prop of _guide__WEBPACK_IMPORTED_MODULE_2__["VL_ONLY_LEGEND_CONFIG"]) {
            delete config.legend[prop];
        }
    }
    // Remove Vega-Lite only generic mark config
    if (config.mark) {
        for (const prop of _mark__WEBPACK_IMPORTED_MODULE_4__["VL_ONLY_MARK_CONFIG_PROPERTIES"]) {
            delete config.mark[prop];
        }
    }
    for (const markType of MARK_STYLES) {
        // Remove Vega-Lite-only mark config
        for (const prop of _mark__WEBPACK_IMPORTED_MODULE_4__["VL_ONLY_MARK_CONFIG_PROPERTIES"]) {
            delete config[markType][prop];
        }
        // Remove Vega-Lite only mark-specific config
        const vlOnlyMarkSpecificConfigs = VL_ONLY_ALL_MARK_SPECIFIC_CONFIG_PROPERTY_INDEX[markType];
        if (vlOnlyMarkSpecificConfigs) {
            for (const prop of vlOnlyMarkSpecificConfigs) {
                delete config[markType][prop];
            }
        }
        // Redirect mark config to config.style so that mark config only affect its own mark type
        // without affecting other marks that share the same underlying Vega marks.
        // For example, config.rect should not affect bar marks.
        redirectConfig(config, markType);
    }
    for (const m of Object(_compositemark__WEBPACK_IMPORTED_MODULE_1__["getAllCompositeMarks"])()) {
        // Clean up the composite mark config as we don't need them in the output specs anymore
        delete config[m];
    }
    // Redirect config.title -- so that title config do not
    // affect header labels, which also uses `title` directive to implement.
    redirectConfig(config, 'title', 'group-title');
    // Remove empty config objects
    for (const prop in config) {
        if (Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isObject"])(config[prop]) && Object(_util__WEBPACK_IMPORTED_MODULE_9__["keys"])(config[prop]).length === 0) {
            delete config[prop];
        }
    }
    return Object(_util__WEBPACK_IMPORTED_MODULE_9__["keys"])(config).length > 0 ? config : undefined;
}
function redirectConfig(config, prop, // string = composite mark
toProp, compositeMarkPart) {
    const propConfig = prop === 'title'
        ? Object(_title__WEBPACK_IMPORTED_MODULE_8__["extractTitleConfig"])(config.title).mark
        : compositeMarkPart
            ? config[prop][compositeMarkPart]
            : config[prop];
    if (prop === 'view') {
        toProp = 'cell'; // View's default style is "cell"
    }
    const style = Object.assign({}, propConfig, config.style[prop]);
    // set config.style if it is not an empty object
    if (Object(_util__WEBPACK_IMPORTED_MODULE_9__["keys"])(style).length > 0) {
        config.style[toProp || prop] = style;
    }
    if (!compositeMarkPart) {
        // For composite mark, so don't delete the whole config yet as we have to do multiple redirections.
        delete config[prop];
    }
}
//# sourceMappingURL=config.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/data.js":
/*!**************************************************!*\
  !*** ./node_modules/vega-lite/build/src/data.js ***!
  \**************************************************/
/*! exports provided: isUrlData, isInlineData, isNamedData, isGenerator, isSequenceGenerator, isSphereGenerator, isGraticuleGenerator, MAIN, RAW */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isUrlData", function() { return isUrlData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isInlineData", function() { return isInlineData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isNamedData", function() { return isNamedData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isGenerator", function() { return isGenerator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isSequenceGenerator", function() { return isSequenceGenerator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isSphereGenerator", function() { return isSphereGenerator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isGraticuleGenerator", function() { return isGraticuleGenerator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAIN", function() { return MAIN; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RAW", function() { return RAW; });
function isUrlData(data) {
    return !!data['url'];
}
function isInlineData(data) {
    return !!data['values'];
}
function isNamedData(data) {
    return !!data['name'] && !isUrlData(data) && !isInlineData(data) && !isGenerator(data);
}
function isGenerator(data) {
    return data && (isSequenceGenerator(data) || isSphereGenerator(data) || isGraticuleGenerator(data));
}
function isSequenceGenerator(data) {
    return !!data['sequence'];
}
function isSphereGenerator(data) {
    return !!data['sphere'];
}
function isGraticuleGenerator(data) {
    return !!data['graticule'];
}
const MAIN = 'main';
const RAW = 'raw';
//# sourceMappingURL=data.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/datetime.js":
/*!******************************************************!*\
  !*** ./node_modules/vega-lite/build/src/datetime.js ***!
  \******************************************************/
/*! exports provided: isDateTime, MONTHS, SHORT_MONTHS, DAYS, SHORT_DAYS, dateTimeExpr */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isDateTime", function() { return isDateTime; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MONTHS", function() { return MONTHS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SHORT_MONTHS", function() { return SHORT_MONTHS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DAYS", function() { return DAYS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SHORT_DAYS", function() { return SHORT_DAYS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dateTimeExpr", function() { return dateTimeExpr; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./log */ "./node_modules/vega-lite/build/src/log/index.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util */ "./node_modules/vega-lite/build/src/util.js");
// DateTime definition object



/*
 * A designated year that starts on Sunday.
 */
const SUNDAY_YEAR = 2006;
function isDateTime(o) {
    return (!!o &&
        (!!o.year ||
            !!o.quarter ||
            !!o.month ||
            !!o.date ||
            !!o.day ||
            !!o.hours ||
            !!o.minutes ||
            !!o.seconds ||
            !!o.milliseconds));
}
const MONTHS = [
    'january',
    'february',
    'march',
    'april',
    'may',
    'june',
    'july',
    'august',
    'september',
    'october',
    'november',
    'december'
];
const SHORT_MONTHS = MONTHS.map(m => m.substr(0, 3));
const DAYS = ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday'];
const SHORT_DAYS = DAYS.map(d => d.substr(0, 3));
function normalizeQuarter(q) {
    if (Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isNumber"])(q)) {
        if (q > 4) {
            _log__WEBPACK_IMPORTED_MODULE_1__["warn"](_log__WEBPACK_IMPORTED_MODULE_1__["message"].invalidTimeUnit('quarter', q));
        }
        // We accept 1-based quarter, so need to readjust to 0-based quarter
        return (q - 1).toString();
    }
    else {
        // Invalid quarter
        throw new Error(_log__WEBPACK_IMPORTED_MODULE_1__["message"].invalidTimeUnit('quarter', q));
    }
}
function normalizeMonth(m) {
    if (Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isNumber"])(m)) {
        // We accept 1-based month, so need to readjust to 0-based month
        return (m - 1).toString();
    }
    else {
        const lowerM = m.toLowerCase();
        const monthIndex = MONTHS.indexOf(lowerM);
        if (monthIndex !== -1) {
            return monthIndex + ''; // 0 for january, ...
        }
        const shortM = lowerM.substr(0, 3);
        const shortMonthIndex = SHORT_MONTHS.indexOf(shortM);
        if (shortMonthIndex !== -1) {
            return shortMonthIndex + '';
        }
        // Invalid month
        throw new Error(_log__WEBPACK_IMPORTED_MODULE_1__["message"].invalidTimeUnit('month', m));
    }
}
function normalizeDay(d) {
    if (Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isNumber"])(d)) {
        // mod so that this can be both 0-based where 0 = sunday
        // and 1-based where 7=sunday
        return (d % 7) + '';
    }
    else {
        const lowerD = d.toLowerCase();
        const dayIndex = DAYS.indexOf(lowerD);
        if (dayIndex !== -1) {
            return dayIndex + ''; // 0 for january, ...
        }
        const shortD = lowerD.substr(0, 3);
        const shortDayIndex = SHORT_DAYS.indexOf(shortD);
        if (shortDayIndex !== -1) {
            return shortDayIndex + '';
        }
        // Invalid day
        throw new Error(_log__WEBPACK_IMPORTED_MODULE_1__["message"].invalidTimeUnit('day', d));
    }
}
/**
 * Return Vega Expression for a particular date time.
 * @param d
 * @param normalize whether to normalize quarter, month, day.
 */
function dateTimeExpr(d, normalize = false) {
    const units = [];
    if (normalize && d.day !== undefined) {
        if (Object(_util__WEBPACK_IMPORTED_MODULE_2__["keys"])(d).length > 1) {
            _log__WEBPACK_IMPORTED_MODULE_1__["warn"](_log__WEBPACK_IMPORTED_MODULE_1__["message"].droppedDay(d));
            d = Object(_util__WEBPACK_IMPORTED_MODULE_2__["duplicate"])(d);
            delete d.day;
        }
    }
    if (d.year !== undefined) {
        units.push(d.year);
    }
    else if (d.day !== undefined) {
        // Set year to 2006 for working with day since January 1 2006 is a Sunday
        units.push(SUNDAY_YEAR);
    }
    else {
        units.push(0);
    }
    if (d.month !== undefined) {
        const month = normalize ? normalizeMonth(d.month) : d.month;
        units.push(month);
    }
    else if (d.quarter !== undefined) {
        const quarter = normalize ? normalizeQuarter(d.quarter) : d.quarter;
        units.push(quarter + '*3');
    }
    else {
        units.push(0); // months start at zero in JS
    }
    if (d.date !== undefined) {
        units.push(d.date);
    }
    else if (d.day !== undefined) {
        // HACK: Day only works as a standalone unit
        // This is only correct because we always set year to 2006 for day
        const day = normalize ? normalizeDay(d.day) : d.day;
        units.push(day + '+1');
    }
    else {
        units.push(1); // Date starts at 1 in JS
    }
    // Note: can't use TimeUnit enum here as importing it will create
    // circular dependency problem!
    for (const timeUnit of ['hours', 'minutes', 'seconds', 'milliseconds']) {
        if (d[timeUnit] !== undefined) {
            units.push(d[timeUnit]);
        }
        else {
            units.push(0);
        }
    }
    if (d.utc) {
        return `utc(${units.join(', ')})`;
    }
    else {
        return `datetime(${units.join(', ')})`;
    }
}
//# sourceMappingURL=datetime.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/encoding.js":
/*!******************************************************!*\
  !*** ./node_modules/vega-lite/build/src/encoding.js ***!
  \******************************************************/
/*! exports provided: channelHasField, isAggregate, extractTransformsFromEncoding, markChannelCompatible, normalizeEncoding, isRanged, fieldDefs, forEach, reduce */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "channelHasField", function() { return channelHasField; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isAggregate", function() { return isAggregate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extractTransformsFromEncoding", function() { return extractTransformsFromEncoding; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "markChannelCompatible", function() { return markChannelCompatible; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "normalizeEncoding", function() { return normalizeEncoding; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isRanged", function() { return isRanged; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fieldDefs", function() { return fieldDefs; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "forEach", function() { return forEach; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "reduce", function() { return reduce; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var _aggregate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./aggregate */ "./node_modules/vega-lite/build/src/aggregate.js");
/* harmony import */ var _bin__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./bin */ "./node_modules/vega-lite/build/src/bin.js");
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./channel */ "./node_modules/vega-lite/build/src/channel.js");
/* harmony import */ var _channeldef__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./channeldef */ "./node_modules/vega-lite/build/src/channeldef.js");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./log */ "./node_modules/vega-lite/build/src/log/index.js");
/* harmony import */ var _timeunit__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./timeunit */ "./node_modules/vega-lite/build/src/timeunit.js");
/* harmony import */ var _type__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./type */ "./node_modules/vega-lite/build/src/type.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./util */ "./node_modules/vega-lite/build/src/util.js");










function channelHasField(encoding, channel) {
    const channelDef = encoding && encoding[channel];
    if (channelDef) {
        if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(channelDef)) {
            return Object(_util__WEBPACK_IMPORTED_MODULE_9__["some"])(channelDef, fieldDef => !!fieldDef.field);
        }
        else {
            return Object(_channeldef__WEBPACK_IMPORTED_MODULE_5__["isFieldDef"])(channelDef) || Object(_channeldef__WEBPACK_IMPORTED_MODULE_5__["hasConditionalFieldDef"])(channelDef);
        }
    }
    return false;
}
function isAggregate(encoding) {
    return Object(_util__WEBPACK_IMPORTED_MODULE_9__["some"])(_channel__WEBPACK_IMPORTED_MODULE_4__["CHANNELS"], channel => {
        if (channelHasField(encoding, channel)) {
            const channelDef = encoding[channel];
            if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(channelDef)) {
                return Object(_util__WEBPACK_IMPORTED_MODULE_9__["some"])(channelDef, fieldDef => !!fieldDef.aggregate);
            }
            else {
                const fieldDef = Object(_channeldef__WEBPACK_IMPORTED_MODULE_5__["getFieldDef"])(channelDef);
                return fieldDef && !!fieldDef.aggregate;
            }
        }
        return false;
    });
}
function extractTransformsFromEncoding(oldEncoding, config) {
    const groupby = [];
    const bins = [];
    const timeUnits = [];
    const aggregate = [];
    const encoding = {};
    forEach(oldEncoding, (channelDef, channel) => {
        // Extract potential embedded transformations along with remaining properties
        if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_5__["isFieldDef"])(channelDef)) {
            const { field, aggregate: aggOp, timeUnit, bin } = channelDef, remaining = tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"](channelDef, ["field", "aggregate", "timeUnit", "bin"]);
            if (aggOp || timeUnit || bin) {
                const guide = Object(_channeldef__WEBPACK_IMPORTED_MODULE_5__["getGuide"])(channelDef);
                const isTitleDefined = guide && guide.title;
                let newField = Object(_channeldef__WEBPACK_IMPORTED_MODULE_5__["vgField"])(channelDef, { forAs: true });
                const newFieldDef = Object.assign({}, (isTitleDefined ? [] : { title: Object(_channeldef__WEBPACK_IMPORTED_MODULE_5__["title"])(channelDef, config, { allowDisabling: true }) }), remaining, { 
                    // Always overwrite field
                    field: newField });
                const isPositionChannel = channel === 'x' || channel === 'y';
                if (aggOp) {
                    let op;
                    if (Object(_aggregate__WEBPACK_IMPORTED_MODULE_2__["isArgmaxDef"])(aggOp)) {
                        op = 'argmax';
                        newField = Object(_channeldef__WEBPACK_IMPORTED_MODULE_5__["vgField"])({ aggregate: 'argmax', field: aggOp.argmax }, { forAs: true });
                        newFieldDef.field = `${newField}.${field}`;
                    }
                    else if (Object(_aggregate__WEBPACK_IMPORTED_MODULE_2__["isArgminDef"])(aggOp)) {
                        op = 'argmin';
                        newField = Object(_channeldef__WEBPACK_IMPORTED_MODULE_5__["vgField"])({ aggregate: 'argmin', field: aggOp.argmin }, { forAs: true });
                        newFieldDef.field = `${newField}.${field}`;
                    }
                    else if (aggOp !== 'boxplot' && aggOp !== 'errorbar' && aggOp !== 'errorband') {
                        op = aggOp;
                    }
                    if (op) {
                        const aggregateEntry = {
                            op,
                            as: newField
                        };
                        if (field) {
                            aggregateEntry.field = field;
                        }
                        aggregate.push(aggregateEntry);
                    }
                }
                else if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_5__["isTypedFieldDef"])(channelDef) && Object(_bin__WEBPACK_IMPORTED_MODULE_3__["isBinning"])(bin)) {
                    bins.push({ bin, field, as: newField });
                    // Add additional groupbys for range and end of bins
                    groupby.push(Object(_channeldef__WEBPACK_IMPORTED_MODULE_5__["vgField"])(channelDef, { binSuffix: 'end' }));
                    if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_5__["binRequiresRange"])(channelDef, channel)) {
                        groupby.push(Object(_channeldef__WEBPACK_IMPORTED_MODULE_5__["vgField"])(channelDef, { binSuffix: 'range' }));
                    }
                    // Create accompanying 'x2' or 'y2' field if channel is 'x' or 'y' respectively
                    if (isPositionChannel) {
                        const secondaryChannel = {
                            field: newField + '_end'
                        };
                        encoding[channel + '2'] = secondaryChannel;
                    }
                    newFieldDef.bin = 'binned';
                    if (!Object(_channel__WEBPACK_IMPORTED_MODULE_4__["isSecondaryRangeChannel"])(channel)) {
                        newFieldDef['type'] = 'quantitative';
                    }
                }
                else if (timeUnit) {
                    timeUnits.push({ timeUnit, field, as: newField });
                    // Add formatting to appropriate property based on the type of channel we're processing
                    const format = Object(_timeunit__WEBPACK_IMPORTED_MODULE_7__["getDateTimeComponents"])(timeUnit, config.axis.shortTimeLabels).join(' ');
                    const formatType = Object(_channeldef__WEBPACK_IMPORTED_MODULE_5__["isTypedFieldDef"])(channelDef) && channelDef.type !== _type__WEBPACK_IMPORTED_MODULE_8__["TEMPORAL"] && 'time';
                    if (channel === 'text' || channel === 'tooltip') {
                        newFieldDef['format'] = newFieldDef['format'] || format;
                        if (formatType) {
                            newFieldDef['formatType'] = formatType;
                        }
                    }
                    else if (Object(_channel__WEBPACK_IMPORTED_MODULE_4__["isNonPositionScaleChannel"])(channel)) {
                        newFieldDef['legend'] = Object.assign({ format }, (formatType ? { formatType } : {}), newFieldDef['legend']);
                    }
                    else if (isPositionChannel) {
                        newFieldDef['axis'] = Object.assign({ format }, (formatType ? { formatType } : {}), newFieldDef['axis']);
                    }
                }
                if (!aggOp) {
                    groupby.push(newField);
                }
                // now the field should refer to post-transformed field instead
                encoding[channel] = newFieldDef;
            }
            else {
                groupby.push(field);
                encoding[channel] = oldEncoding[channel];
            }
        }
        else {
            // For value def, just copy
            encoding[channel] = oldEncoding[channel];
        }
    });
    return {
        bins,
        timeUnits,
        aggregate,
        groupby,
        encoding
    };
}
function markChannelCompatible(encoding, channel, mark) {
    const markSupported = Object(_channel__WEBPACK_IMPORTED_MODULE_4__["supportMark"])(channel, mark);
    if (!markSupported) {
        return false;
    }
    else if (markSupported === 'binned') {
        const primaryFieldDef = encoding[channel === 'x2' ? 'x' : 'y'];
        // circle, point, square and tick only support x2/y2 when their corresponding x/y fieldDef
        // has "binned" data and thus need x2/y2 to specify the bin-end field.
        if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_5__["isFieldDef"])(primaryFieldDef) && Object(_channeldef__WEBPACK_IMPORTED_MODULE_5__["isFieldDef"])(encoding[channel]) && primaryFieldDef.bin === 'binned') {
            return true;
        }
        else {
            return false;
        }
    }
    return true;
}
function normalizeEncoding(encoding, mark) {
    return Object(_util__WEBPACK_IMPORTED_MODULE_9__["keys"])(encoding).reduce((normalizedEncoding, channel) => {
        if (!Object(_channel__WEBPACK_IMPORTED_MODULE_4__["isChannel"])(channel)) {
            // Drop invalid channel
            _log__WEBPACK_IMPORTED_MODULE_6__["warn"](_log__WEBPACK_IMPORTED_MODULE_6__["message"].invalidEncodingChannel(channel));
            return normalizedEncoding;
        }
        if (!markChannelCompatible(encoding, channel, mark)) {
            // Drop unsupported channel
            _log__WEBPACK_IMPORTED_MODULE_6__["warn"](_log__WEBPACK_IMPORTED_MODULE_6__["message"].incompatibleChannel(channel, mark));
            return normalizedEncoding;
        }
        // Drop line's size if the field is aggregated.
        if (channel === 'size' && mark === 'line') {
            const fieldDef = Object(_channeldef__WEBPACK_IMPORTED_MODULE_5__["getTypedFieldDef"])(encoding[channel]);
            if (fieldDef && fieldDef.aggregate) {
                _log__WEBPACK_IMPORTED_MODULE_6__["warn"](_log__WEBPACK_IMPORTED_MODULE_6__["message"].LINE_WITH_VARYING_SIZE);
                return normalizedEncoding;
            }
        }
        // Drop color if either fill or stroke is specified
        if (channel === 'color' && ('fill' in encoding || 'stroke' in encoding)) {
            _log__WEBPACK_IMPORTED_MODULE_6__["warn"](_log__WEBPACK_IMPORTED_MODULE_6__["message"].droppingColor('encoding', { fill: 'fill' in encoding, stroke: 'stroke' in encoding }));
            return normalizedEncoding;
        }
        const channelDef = encoding[channel];
        if (channel === 'detail' ||
            (channel === 'order' && !Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(channelDef) && !Object(_channeldef__WEBPACK_IMPORTED_MODULE_5__["isValueDef"])(channelDef)) ||
            (channel === 'tooltip' && Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(channelDef))) {
            if (channelDef) {
                // Array of fieldDefs for detail channel (or production rule)
                normalizedEncoding[channel] = (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(channelDef) ? channelDef : [channelDef]).reduce((defs, fieldDef) => {
                    if (!Object(_channeldef__WEBPACK_IMPORTED_MODULE_5__["isFieldDef"])(fieldDef)) {
                        _log__WEBPACK_IMPORTED_MODULE_6__["warn"](_log__WEBPACK_IMPORTED_MODULE_6__["message"].emptyFieldDef(fieldDef, channel));
                    }
                    else {
                        defs.push(Object(_channeldef__WEBPACK_IMPORTED_MODULE_5__["normalizeFieldDef"])(fieldDef, channel));
                    }
                    return defs;
                }, []);
            }
        }
        else {
            if (channel === 'tooltip' && channelDef === null) {
                // Preserve null so we can use it to disable tooltip
                normalizedEncoding[channel] = null;
            }
            else if (!Object(_channeldef__WEBPACK_IMPORTED_MODULE_5__["isFieldDef"])(channelDef) && !Object(_channeldef__WEBPACK_IMPORTED_MODULE_5__["isValueDef"])(channelDef) && !Object(_channeldef__WEBPACK_IMPORTED_MODULE_5__["isConditionalDef"])(channelDef)) {
                _log__WEBPACK_IMPORTED_MODULE_6__["warn"](_log__WEBPACK_IMPORTED_MODULE_6__["message"].emptyFieldDef(channelDef, channel));
                return normalizedEncoding;
            }
            normalizedEncoding[channel] = Object(_channeldef__WEBPACK_IMPORTED_MODULE_5__["normalize"])(channelDef, channel);
        }
        return normalizedEncoding;
    }, {});
}
function isRanged(encoding) {
    return encoding && ((!!encoding.x && !!encoding.x2) || (!!encoding.y && !!encoding.y2));
}
function fieldDefs(encoding) {
    const arr = [];
    for (const channel of Object(_util__WEBPACK_IMPORTED_MODULE_9__["keys"])(encoding)) {
        if (channelHasField(encoding, channel)) {
            const channelDef = encoding[channel];
            (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(channelDef) ? channelDef : [channelDef]).forEach(def => {
                if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_5__["isFieldDef"])(def)) {
                    arr.push(def);
                }
                else if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_5__["hasConditionalFieldDef"])(def)) {
                    arr.push(def.condition);
                }
            });
        }
    }
    return arr;
}
function forEach(mapping, f, thisArg) {
    if (!mapping) {
        return;
    }
    for (const channel of Object(_util__WEBPACK_IMPORTED_MODULE_9__["keys"])(mapping)) {
        const el = mapping[channel];
        if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(el)) {
            el.forEach((channelDef) => {
                f.call(thisArg, channelDef, channel);
            });
        }
        else {
            f.call(thisArg, el, channel);
        }
    }
}
function reduce(mapping, f, init, thisArg) {
    if (!mapping) {
        return init;
    }
    return Object(_util__WEBPACK_IMPORTED_MODULE_9__["keys"])(mapping).reduce((r, channel) => {
        const map = mapping[channel];
        if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(map)) {
            return map.reduce((r1, channelDef) => {
                return f.call(thisArg, r1, channelDef, channel);
            }, r);
        }
        else {
            return f.call(thisArg, r, map, channel);
        }
    }, init);
}
//# sourceMappingURL=encoding.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/guide.js":
/*!***************************************************!*\
  !*** ./node_modules/vega-lite/build/src/guide.js ***!
  \***************************************************/
/*! exports provided: VL_ONLY_GUIDE_CONFIG, VL_ONLY_LEGEND_CONFIG */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VL_ONLY_GUIDE_CONFIG", function() { return VL_ONLY_GUIDE_CONFIG; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VL_ONLY_LEGEND_CONFIG", function() { return VL_ONLY_LEGEND_CONFIG; });
const VL_ONLY_GUIDE_CONFIG = ['shortTimeLabels'];
const VL_ONLY_LEGEND_CONFIG = [
    'gradientHorizontalMaxLength',
    'gradientHorizontalMinLength',
    'gradientVerticalMaxLength',
    'gradientVerticalMinLength'
];
//# sourceMappingURL=guide.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/header.js":
/*!****************************************************!*\
  !*** ./node_modules/vega-lite/build/src/header.js ***!
  \****************************************************/
/*! exports provided: HEADER_TITLE_PROPERTIES_MAP, HEADER_LABEL_PROPERTIES_MAP, HEADER_TITLE_PROPERTIES, HEADER_LABEL_PROPERTIES */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HEADER_TITLE_PROPERTIES_MAP", function() { return HEADER_TITLE_PROPERTIES_MAP; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HEADER_LABEL_PROPERTIES_MAP", function() { return HEADER_LABEL_PROPERTIES_MAP; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HEADER_TITLE_PROPERTIES", function() { return HEADER_TITLE_PROPERTIES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HEADER_LABEL_PROPERTIES", function() { return HEADER_LABEL_PROPERTIES; });
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util */ "./node_modules/vega-lite/build/src/util.js");

const HEADER_TITLE_PROPERTIES_MAP = {
    titleAlign: 'align',
    titleAnchor: 'anchor',
    titleAngle: 'angle',
    titleBaseline: 'baseline',
    titleColor: 'color',
    titleFont: 'font',
    titleFontSize: 'fontSize',
    titleFontWeight: 'fontWeight',
    titleLimit: 'limit',
    titleOrient: 'orient',
    titlePadding: 'offset'
};
const HEADER_LABEL_PROPERTIES_MAP = {
    labelAlign: 'align',
    labelAnchor: 'anchor',
    labelAngle: 'angle',
    labelColor: 'color',
    labelFont: 'font',
    labelFontSize: 'fontSize',
    labelLimit: 'limit',
    labelOrient: 'orient',
    labelPadding: 'offset'
};
const HEADER_TITLE_PROPERTIES = Object(_util__WEBPACK_IMPORTED_MODULE_0__["keys"])(HEADER_TITLE_PROPERTIES_MAP);
const HEADER_LABEL_PROPERTIES = Object(_util__WEBPACK_IMPORTED_MODULE_0__["keys"])(HEADER_LABEL_PROPERTIES_MAP);
//# sourceMappingURL=header.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/index.js":
/*!***************************************************!*\
  !*** ./node_modules/vega-lite/build/src/index.js ***!
  \***************************************************/
/*! exports provided: compile, extractTransforms, normalize, version */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "version", function() { return version; });
/* harmony import */ var _package_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../package.json */ "./node_modules/vega-lite/build/package.json");
var _package_json__WEBPACK_IMPORTED_MODULE_0___namespace = /*#__PURE__*/__webpack_require__.t(/*! ../package.json */ "./node_modules/vega-lite/build/package.json", 1);
/* harmony import */ var _normalize__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./normalize */ "./node_modules/vega-lite/build/src/normalize/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "normalize", function() { return _normalize__WEBPACK_IMPORTED_MODULE_1__["normalize"]; });

/* harmony import */ var _compile_compile__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./compile/compile */ "./node_modules/vega-lite/build/src/compile/compile.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "compile", function() { return _compile_compile__WEBPACK_IMPORTED_MODULE_2__["compile"]; });

/* harmony import */ var _transformextract__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./transformextract */ "./node_modules/vega-lite/build/src/transformextract.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "extractTransforms", function() { return _transformextract__WEBPACK_IMPORTED_MODULE_3__["extractTransforms"]; });



const version = _package_json__WEBPACK_IMPORTED_MODULE_0__.version;



//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/legend.js":
/*!****************************************************!*\
  !*** ./node_modules/vega-lite/build/src/legend.js ***!
  \****************************************************/
/*! exports provided: defaultLegendConfig, LEGEND_PROPERTIES, VG_LEGEND_PROPERTIES */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultLegendConfig", function() { return defaultLegendConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LEGEND_PROPERTIES", function() { return LEGEND_PROPERTIES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VG_LEGEND_PROPERTIES", function() { return VG_LEGEND_PROPERTIES; });
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util */ "./node_modules/vega-lite/build/src/util.js");

const defaultLegendConfig = {
    gradientHorizontalMaxLength: 200,
    gradientHorizontalMinLength: 100,
    gradientVerticalMaxLength: 200,
    gradientVerticalMinLength: 64 // This is the Vega's minimum.
};
const COMMON_LEGEND_PROPERTY_INDEX = {
    clipHeight: 1,
    columnPadding: 1,
    columns: 1,
    cornerRadius: 1,
    direction: 1,
    fillColor: 1,
    format: 1,
    formatType: 1,
    gradientLength: 1,
    gradientOpacity: 1,
    gradientStrokeColor: 1,
    gradientStrokeWidth: 1,
    gradientThickness: 1,
    gridAlign: 1,
    labelAlign: 1,
    labelBaseline: 1,
    labelColor: 1,
    labelFont: 1,
    labelFontSize: 1,
    labelFontStyle: 1,
    labelFontWeight: 1,
    labelLimit: 1,
    labelOffset: 1,
    labelOpacity: 1,
    labelOverlap: 1,
    labelPadding: 1,
    labelSeparation: 1,
    legendX: 1,
    legendY: 1,
    offset: 1,
    orient: 1,
    padding: 1,
    rowPadding: 1,
    strokeColor: 1,
    symbolDash: 1,
    symbolDashOffset: 1,
    symbolFillColor: 1,
    symbolOffset: 1,
    symbolOpacity: 1,
    symbolSize: 1,
    symbolStrokeColor: 1,
    symbolStrokeWidth: 1,
    symbolType: 1,
    tickCount: 1,
    tickMinStep: 1,
    title: 1,
    titleAlign: 1,
    titleAnchor: 1,
    titleBaseline: 1,
    titleColor: 1,
    titleFont: 1,
    titleFontSize: 1,
    titleFontStyle: 1,
    titleFontWeight: 1,
    titleLimit: 1,
    titleOpacity: 1,
    titleOrient: 1,
    titlePadding: 1,
    type: 1,
    values: 1,
    zindex: 1
};
const VG_LEGEND_PROPERTY_INDEX = Object.assign({}, COMMON_LEGEND_PROPERTY_INDEX, { 
    // channel scales
    opacity: 1, shape: 1, stroke: 1, fill: 1, size: 1, strokeWidth: 1, 
    // encode
    encode: 1 });
const LEGEND_PROPERTIES = Object(_util__WEBPACK_IMPORTED_MODULE_0__["flagKeys"])(COMMON_LEGEND_PROPERTY_INDEX);
const VG_LEGEND_PROPERTIES = Object(_util__WEBPACK_IMPORTED_MODULE_0__["flagKeys"])(VG_LEGEND_PROPERTY_INDEX);
//# sourceMappingURL=legend.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/log/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/vega-lite/build/src/log/index.js ***!
  \*******************************************************/
/*! exports provided: message, LocalLogger, wrap, set, reset, warn, info, debug */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "message", function() { return message; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LocalLogger", function() { return LocalLogger; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "wrap", function() { return wrap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "set", function() { return set; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "reset", function() { return reset; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "warn", function() { return warn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "info", function() { return info; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "debug", function() { return debug; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var _message__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./message */ "./node_modules/vega-lite/build/src/log/message.js");
/**
 * Vega-Lite's singleton logger utility.
 */


const message = _message__WEBPACK_IMPORTED_MODULE_1__;
/**
 * Main (default) Vega Logger instance for Vega-Lite
 */
const main = Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["logger"])(vega_util__WEBPACK_IMPORTED_MODULE_0__["Warn"]);
let current = main;
/**
 * Logger tool for checking if the code throws correct warning
 */
class LocalLogger {
    constructor() {
        this.warns = [];
        this.infos = [];
        this.debugs = [];
    }
    level() {
        return this;
    }
    warn(...args) {
        this.warns.push(...args);
        return this;
    }
    info(...args) {
        this.infos.push(...args);
        return this;
    }
    debug(...args) {
        this.debugs.push(...args);
        return this;
    }
    error(...args) {
        throw Error(...args);
        return this; // @ts-ignore
    }
}
function wrap(f) {
    return () => {
        current = new LocalLogger();
        f(current);
        reset();
    };
}
/**
 * Set the singleton logger to be a custom logger
 */
function set(newLogger) {
    current = newLogger;
    return current;
}
/**
 * Reset the main logger to use the default Vega Logger
 */
function reset() {
    current = main;
    return current;
}
// eslint-disable-next-line @typescript-eslint/no-unused-vars
function warn(..._) {
    current.warn.apply(current, arguments);
}
// eslint-disable-next-line @typescript-eslint/no-unused-vars
function info(..._) {
    current.info.apply(current, arguments);
}
// eslint-disable-next-line @typescript-eslint/no-unused-vars
function debug(..._) {
    current.debug.apply(current, arguments);
}
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/log/message.js":
/*!*********************************************************!*\
  !*** ./node_modules/vega-lite/build/src/log/message.js ***!
  \*********************************************************/
/*! exports provided: INVALID_SPEC, FIT_NON_SINGLE, CANNOT_FIX_RANGE_STEP_WITH_FIT, cannotProjectOnChannelWithoutField, nearestNotSupportForContinuous, selectionNotSupported, selectionNotFound, SCALE_BINDINGS_CONTINUOUS, NO_INIT_SCALE_BINDINGS, noSuchRepeatedValue, columnsNotSupportByRowCol, CONCAT_CANNOT_SHARE_AXIS, REPEAT_CANNOT_SHARE_AXIS, unrecognizedParse, differentParse, invalidTransformIgnored, NO_FIELDS_NEEDS_AS, encodingOverridden, projectionOverridden, primitiveChannelDef, invalidFieldType, nonZeroScaleUsedWithLengthMark, invalidFieldTypeForCountAggregate, invalidAggregate, missingFieldType, droppingColor, emptyFieldDef, latLongDeprecated, LINE_WITH_VARYING_SIZE, incompatibleChannel, invalidEncodingChannel, facetChannelShouldBeDiscrete, facetChannelDropped, discreteChannelCannotEncode, BAR_WITH_POINT_SCALE_AND_RANGESTEP_NULL, lineWithRange, orientOverridden, CANNOT_UNION_CUSTOM_DOMAIN_WITH_FIELD_DOMAIN, cannotUseScalePropertyWithNonColor, unaggregateDomainHasNoEffectForRawField, unaggregateDomainWithNonSharedDomainOp, unaggregatedDomainWithLogScale, cannotApplySizeToNonOrientedMark, rangeStepDropped, scaleTypeNotWorkWithChannel, scaleTypeNotWorkWithFieldDef, scalePropertyNotWorkWithScaleType, scaleTypeNotWorkWithMark, mergeConflictingProperty, independentScaleMeansIndependentGuide, domainSortDropped, UNABLE_TO_MERGE_DOMAINS, MORE_THAN_ONE_SORT, INVALID_CHANNEL_FOR_AXIS, cannotStackRangedMark, cannotStackNonLinearScale, stackNonSummativeAggregate, invalidTimeUnit, dayReplacedWithDate, droppedDay, errorBarCenterAndExtentAreNotNeeded, errorBarCenterIsUsedWithWrongExtent, errorBarContinuousAxisHasCustomizedAggregate, errorBarCenterIsNotNeeded, errorBand1DNotSupport, channelRequiredForBinned, domainRequiredForThresholdScale */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "INVALID_SPEC", function() { return INVALID_SPEC; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FIT_NON_SINGLE", function() { return FIT_NON_SINGLE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CANNOT_FIX_RANGE_STEP_WITH_FIT", function() { return CANNOT_FIX_RANGE_STEP_WITH_FIT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cannotProjectOnChannelWithoutField", function() { return cannotProjectOnChannelWithoutField; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "nearestNotSupportForContinuous", function() { return nearestNotSupportForContinuous; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectionNotSupported", function() { return selectionNotSupported; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectionNotFound", function() { return selectionNotFound; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SCALE_BINDINGS_CONTINUOUS", function() { return SCALE_BINDINGS_CONTINUOUS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NO_INIT_SCALE_BINDINGS", function() { return NO_INIT_SCALE_BINDINGS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "noSuchRepeatedValue", function() { return noSuchRepeatedValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "columnsNotSupportByRowCol", function() { return columnsNotSupportByRowCol; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CONCAT_CANNOT_SHARE_AXIS", function() { return CONCAT_CANNOT_SHARE_AXIS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "REPEAT_CANNOT_SHARE_AXIS", function() { return REPEAT_CANNOT_SHARE_AXIS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "unrecognizedParse", function() { return unrecognizedParse; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "differentParse", function() { return differentParse; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "invalidTransformIgnored", function() { return invalidTransformIgnored; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NO_FIELDS_NEEDS_AS", function() { return NO_FIELDS_NEEDS_AS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "encodingOverridden", function() { return encodingOverridden; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "projectionOverridden", function() { return projectionOverridden; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "primitiveChannelDef", function() { return primitiveChannelDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "invalidFieldType", function() { return invalidFieldType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "nonZeroScaleUsedWithLengthMark", function() { return nonZeroScaleUsedWithLengthMark; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "invalidFieldTypeForCountAggregate", function() { return invalidFieldTypeForCountAggregate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "invalidAggregate", function() { return invalidAggregate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "missingFieldType", function() { return missingFieldType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "droppingColor", function() { return droppingColor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "emptyFieldDef", function() { return emptyFieldDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "latLongDeprecated", function() { return latLongDeprecated; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LINE_WITH_VARYING_SIZE", function() { return LINE_WITH_VARYING_SIZE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "incompatibleChannel", function() { return incompatibleChannel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "invalidEncodingChannel", function() { return invalidEncodingChannel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "facetChannelShouldBeDiscrete", function() { return facetChannelShouldBeDiscrete; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "facetChannelDropped", function() { return facetChannelDropped; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "discreteChannelCannotEncode", function() { return discreteChannelCannotEncode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BAR_WITH_POINT_SCALE_AND_RANGESTEP_NULL", function() { return BAR_WITH_POINT_SCALE_AND_RANGESTEP_NULL; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "lineWithRange", function() { return lineWithRange; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "orientOverridden", function() { return orientOverridden; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CANNOT_UNION_CUSTOM_DOMAIN_WITH_FIELD_DOMAIN", function() { return CANNOT_UNION_CUSTOM_DOMAIN_WITH_FIELD_DOMAIN; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cannotUseScalePropertyWithNonColor", function() { return cannotUseScalePropertyWithNonColor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "unaggregateDomainHasNoEffectForRawField", function() { return unaggregateDomainHasNoEffectForRawField; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "unaggregateDomainWithNonSharedDomainOp", function() { return unaggregateDomainWithNonSharedDomainOp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "unaggregatedDomainWithLogScale", function() { return unaggregatedDomainWithLogScale; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cannotApplySizeToNonOrientedMark", function() { return cannotApplySizeToNonOrientedMark; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rangeStepDropped", function() { return rangeStepDropped; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scaleTypeNotWorkWithChannel", function() { return scaleTypeNotWorkWithChannel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scaleTypeNotWorkWithFieldDef", function() { return scaleTypeNotWorkWithFieldDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scalePropertyNotWorkWithScaleType", function() { return scalePropertyNotWorkWithScaleType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scaleTypeNotWorkWithMark", function() { return scaleTypeNotWorkWithMark; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mergeConflictingProperty", function() { return mergeConflictingProperty; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "independentScaleMeansIndependentGuide", function() { return independentScaleMeansIndependentGuide; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "domainSortDropped", function() { return domainSortDropped; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UNABLE_TO_MERGE_DOMAINS", function() { return UNABLE_TO_MERGE_DOMAINS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MORE_THAN_ONE_SORT", function() { return MORE_THAN_ONE_SORT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "INVALID_CHANNEL_FOR_AXIS", function() { return INVALID_CHANNEL_FOR_AXIS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cannotStackRangedMark", function() { return cannotStackRangedMark; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cannotStackNonLinearScale", function() { return cannotStackNonLinearScale; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "stackNonSummativeAggregate", function() { return stackNonSummativeAggregate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "invalidTimeUnit", function() { return invalidTimeUnit; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dayReplacedWithDate", function() { return dayReplacedWithDate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "droppedDay", function() { return droppedDay; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "errorBarCenterAndExtentAreNotNeeded", function() { return errorBarCenterAndExtentAreNotNeeded; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "errorBarCenterIsUsedWithWrongExtent", function() { return errorBarCenterIsUsedWithWrongExtent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "errorBarContinuousAxisHasCustomizedAggregate", function() { return errorBarContinuousAxisHasCustomizedAggregate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "errorBarCenterIsNotNeeded", function() { return errorBarCenterIsNotNeeded; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "errorBand1DNotSupport", function() { return errorBand1DNotSupport; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "channelRequiredForBinned", function() { return channelRequiredForBinned; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "domainRequiredForThresholdScale", function() { return domainRequiredForThresholdScale; });
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ "./node_modules/vega-lite/build/src/util.js");

/**
 * Collection of all Vega-Lite Error Messages
 */
const INVALID_SPEC = 'Invalid spec';
// FIT
const FIT_NON_SINGLE = 'Autosize "fit" only works for single views and layered views.';
const CANNOT_FIX_RANGE_STEP_WITH_FIT = 'Cannot use a fixed value of "rangeStep" when "autosize" is "fit".';
// SELECTION
function cannotProjectOnChannelWithoutField(channel) {
    return `Cannot project a selection on encoding channel "${channel}", which has no field.`;
}
function nearestNotSupportForContinuous(mark) {
    return `The "nearest" transform is not supported for ${mark} marks.`;
}
function selectionNotSupported(mark) {
    return `Selection not supported for ${mark} yet`;
}
function selectionNotFound(name) {
    return `Cannot find a selection named "${name}"`;
}
const SCALE_BINDINGS_CONTINUOUS = 'Scale bindings are currently only supported for scales with unbinned, continuous domains.';
const NO_INIT_SCALE_BINDINGS = 'Selections bound to scales cannot be separately initialized.';
// REPEAT
function noSuchRepeatedValue(field) {
    return `Unknown repeated value "${field}".`;
}
function columnsNotSupportByRowCol(type) {
    return `The "columns" property cannot be used when "${type}" has nested row/column.`;
}
// CONCAT
const CONCAT_CANNOT_SHARE_AXIS = 'Axes cannot be shared in concatenated views yet (https://github.com/vega/vega-lite/issues/2415).';
// REPEAT
const REPEAT_CANNOT_SHARE_AXIS = 'Axes cannot be shared in repeated views yet (https://github.com/vega/vega-lite/issues/2415).';
// DATA
function unrecognizedParse(p) {
    return `Unrecognized parse "${p}".`;
}
function differentParse(field, local, ancestor) {
    return `An ancestor parsed field "${field}" as ${ancestor} but a child wants to parse the field as ${local}.`;
}
// TRANSFORMS
function invalidTransformIgnored(transform) {
    return `Ignoring an invalid transform: ${Object(_util__WEBPACK_IMPORTED_MODULE_0__["stringify"])(transform)}.`;
}
const NO_FIELDS_NEEDS_AS = 'If "from.fields" is not specified, "as" has to be a string that specifies the key to be used for the data from the secondary source.';
// ENCODING & FACET
function encodingOverridden(channels) {
    return `Layer's shared ${channels.join(',')} channel ${channels.length === 1 ? 'is' : 'are'} overriden`;
}
function projectionOverridden(opt) {
    const { parentProjection, projection } = opt;
    return `Layer's shared projection ${Object(_util__WEBPACK_IMPORTED_MODULE_0__["stringify"])(parentProjection)} is overridden by a child projection ${Object(_util__WEBPACK_IMPORTED_MODULE_0__["stringify"])(projection)}.`;
}
function primitiveChannelDef(channel, type, value) {
    return `Channel ${channel} is a ${type}. Converted to {value: ${Object(_util__WEBPACK_IMPORTED_MODULE_0__["stringify"])(value)}}.`;
}
function invalidFieldType(type) {
    return `Invalid field type "${type}"`;
}
function nonZeroScaleUsedWithLengthMark(mark, channel, opt) {
    const scaleText = opt.scaleType
        ? `${opt.scaleType} scale`
        : opt.zeroFalse
            ? 'scale with zero=false'
            : 'scale with custom domain that excludes zero';
    return `A ${scaleText} is used to encode ${mark}'s ${channel}. This can be misleading as the ${channel === 'x' ? 'width' : 'height'} of the ${mark} can be arbitrary based on the scale domain. You may want to use point mark instead.`;
}
function invalidFieldTypeForCountAggregate(type, aggregate) {
    return `Invalid field type "${type}" for aggregate: "${aggregate}", using "quantitative" instead.`;
}
function invalidAggregate(aggregate) {
    return `Invalid aggregation operator "${aggregate}"`;
}
function missingFieldType(channel, newType) {
    return `Missing type for channel "${channel}", using "${newType}" instead.`;
}
function droppingColor(type, opt) {
    const { fill, stroke } = opt;
    return (`Dropping color ${type} as the plot also has ` + (fill && stroke ? 'fill and stroke' : fill ? 'fill' : 'stroke'));
}
function emptyFieldDef(fieldDef, channel) {
    return `Dropping ${Object(_util__WEBPACK_IMPORTED_MODULE_0__["stringify"])(fieldDef)} from channel "${channel}" since it does not contain data field or value.`;
}
function latLongDeprecated(channel, type, newChannel) {
    return `${channel}-encoding with type ${type} is deprecated. Replacing with ${newChannel}-encoding.`;
}
const LINE_WITH_VARYING_SIZE = 'Line marks cannot encode size with a non-groupby field. You may want to use trail marks instead.';
function incompatibleChannel(channel, markOrFacet, when) {
    return `${channel} dropped as it is incompatible with "${markOrFacet}"${when ? ` when ${when}` : ''}.`;
}
function invalidEncodingChannel(channel) {
    return `${channel}-encoding is dropped as ${channel} is not a valid encoding channel.`;
}
function facetChannelShouldBeDiscrete(channel) {
    return `${channel} encoding should be discrete (ordinal / nominal / binned).`;
}
function facetChannelDropped(channels) {
    return `Facet encoding dropped as ${channels.join(' and ')} ${channels.length > 1 ? 'are' : 'is'} also specified.`;
}
function discreteChannelCannotEncode(channel, type) {
    return `Using discrete channel "${channel}" to encode "${type}" field can be misleading as it does not encode ${type === 'ordinal' ? 'order' : 'magnitude'}.`;
}
// Mark
const BAR_WITH_POINT_SCALE_AND_RANGESTEP_NULL = 'Bar mark should not be used with point scale when rangeStep is null. Please use band scale instead.';
function lineWithRange(hasX2, hasY2) {
    const channels = hasX2 && hasY2 ? 'x2 and y2' : hasX2 ? 'x2' : 'y2';
    return `Line mark is for continuous lines and thus cannot be used with ${channels}. We will use the rule mark (line segments) instead.`;
}
function orientOverridden(original, actual) {
    return `Specified orient "${original}" overridden with "${actual}"`;
}
// SCALE
const CANNOT_UNION_CUSTOM_DOMAIN_WITH_FIELD_DOMAIN = 'custom domain scale cannot be unioned with default field-based domain';
function cannotUseScalePropertyWithNonColor(prop) {
    return `Cannot use the scale property "${prop}" with non-color channel.`;
}
function unaggregateDomainHasNoEffectForRawField(fieldDef) {
    return `Using unaggregated domain with raw field has no effect (${Object(_util__WEBPACK_IMPORTED_MODULE_0__["stringify"])(fieldDef)}).`;
}
function unaggregateDomainWithNonSharedDomainOp(aggregate) {
    return `Unaggregated domain not applicable for "${aggregate}" since it produces values outside the origin domain of the source data.`;
}
function unaggregatedDomainWithLogScale(fieldDef) {
    return `Unaggregated domain is currently unsupported for log scale (${Object(_util__WEBPACK_IMPORTED_MODULE_0__["stringify"])(fieldDef)}).`;
}
function cannotApplySizeToNonOrientedMark(mark) {
    return `Cannot apply size to non-oriented mark "${mark}".`;
}
function rangeStepDropped(channel) {
    return `rangeStep for "${channel}" is dropped as top-level ${channel === 'x' ? 'width' : 'height'} is provided.`;
}
function scaleTypeNotWorkWithChannel(channel, scaleType, defaultScaleType) {
    return `Channel "${channel}" does not work with "${scaleType}" scale. We are using "${defaultScaleType}" scale instead.`;
}
function scaleTypeNotWorkWithFieldDef(scaleType, defaultScaleType) {
    return `FieldDef does not work with "${scaleType}" scale. We are using "${defaultScaleType}" scale instead.`;
}
function scalePropertyNotWorkWithScaleType(scaleType, propName, channel) {
    return `${channel}-scale's "${propName}" is dropped as it does not work with ${scaleType} scale.`;
}
function scaleTypeNotWorkWithMark(mark, scaleType) {
    return `Scale type "${scaleType}" does not work with mark "${mark}".`;
}
function mergeConflictingProperty(property, propertyOf, v1, v2) {
    return `Conflicting ${propertyOf.toString()} property "${property.toString()}" (${Object(_util__WEBPACK_IMPORTED_MODULE_0__["stringify"])(v1)} and ${Object(_util__WEBPACK_IMPORTED_MODULE_0__["stringify"])(v2)}).  Using ${Object(_util__WEBPACK_IMPORTED_MODULE_0__["stringify"])(v1)}.`;
}
function independentScaleMeansIndependentGuide(channel) {
    return `Setting the scale to be independent for "${channel}" means we also have to set the guide (axis or legend) to be independent.`;
}
function domainSortDropped(sort) {
    return `Dropping sort property ${Object(_util__WEBPACK_IMPORTED_MODULE_0__["stringify"])(sort)} as unioned domains only support boolean or op 'count'.`;
}
const UNABLE_TO_MERGE_DOMAINS = 'Unable to merge domains';
const MORE_THAN_ONE_SORT = 'Domains that should be unioned has conflicting sort properties. Sort will be set to true.';
// AXIS
const INVALID_CHANNEL_FOR_AXIS = 'Invalid channel for axis.';
// STACK
function cannotStackRangedMark(channel) {
    return `Cannot stack "${channel}" if there is already "${channel}2"`;
}
function cannotStackNonLinearScale(scaleType) {
    return `Cannot stack non-linear scale (${scaleType})`;
}
function stackNonSummativeAggregate(aggregate) {
    return `Stacking is applied even though the aggregate function is non-summative ("${aggregate}")`;
}
// TIMEUNIT
function invalidTimeUnit(unitName, value) {
    return `Invalid ${unitName}: ${Object(_util__WEBPACK_IMPORTED_MODULE_0__["stringify"])(value)}`;
}
function dayReplacedWithDate(fullTimeUnit) {
    return `Time unit "${fullTimeUnit}" is not supported. We are replacing it with ${fullTimeUnit.replace('day', 'date')}.`;
}
function droppedDay(d) {
    return `Dropping day from datetime ${Object(_util__WEBPACK_IMPORTED_MODULE_0__["stringify"])(d)} as day cannot be combined with other units.`;
}
function errorBarCenterAndExtentAreNotNeeded(center, extent) {
    return `${extent ? 'extent ' : ''}${extent && center ? 'and ' : ''}${center ? 'center ' : ''}${extent && center ? 'are ' : 'is '}not needed when data are aggregated.`;
}
function errorBarCenterIsUsedWithWrongExtent(center, extent, mark) {
    return `${center} is not usually used with ${extent} for ${mark}.`;
}
function errorBarContinuousAxisHasCustomizedAggregate(aggregate, compositeMark) {
    return `Continuous axis should not have customized aggregation function ${aggregate}; ${compositeMark} already agregates the axis.`;
}
function errorBarCenterIsNotNeeded(extent, mark) {
    return `Center is not needed to be specified in ${mark} when extent is ${extent}.`;
}
function errorBand1DNotSupport(property) {
    return `1D error band does not support ${property}`;
}
// CHANNEL
function channelRequiredForBinned(channel) {
    return `Channel ${channel} is required for "binned" bin`;
}
function domainRequiredForThresholdScale(channel) {
    return `Domain for ${channel} is required for threshold scale`;
}
//# sourceMappingURL=message.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/logical.js":
/*!*****************************************************!*\
  !*** ./node_modules/vega-lite/build/src/logical.js ***!
  \*****************************************************/
/*! exports provided: isLogicalOr, isLogicalAnd, isLogicalNot, forEachLeaf, normalizeLogicalOperand */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isLogicalOr", function() { return isLogicalOr; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isLogicalAnd", function() { return isLogicalAnd; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isLogicalNot", function() { return isLogicalNot; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "forEachLeaf", function() { return forEachLeaf; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "normalizeLogicalOperand", function() { return normalizeLogicalOperand; });
function isLogicalOr(op) {
    return !!op.or;
}
function isLogicalAnd(op) {
    return !!op.and;
}
function isLogicalNot(op) {
    return !!op.not;
}
function forEachLeaf(op, fn) {
    if (isLogicalNot(op)) {
        forEachLeaf(op.not, fn);
    }
    else if (isLogicalAnd(op)) {
        for (const subop of op.and) {
            forEachLeaf(subop, fn);
        }
    }
    else if (isLogicalOr(op)) {
        for (const subop of op.or) {
            forEachLeaf(subop, fn);
        }
    }
    else {
        fn(op);
    }
}
function normalizeLogicalOperand(op, normalizer) {
    if (isLogicalNot(op)) {
        return { not: normalizeLogicalOperand(op.not, normalizer) };
    }
    else if (isLogicalAnd(op)) {
        return { and: op.and.map(o => normalizeLogicalOperand(o, normalizer)) };
    }
    else if (isLogicalOr(op)) {
        return { or: op.or.map(o => normalizeLogicalOperand(o, normalizer)) };
    }
    else {
        return normalizer(op);
    }
}
//# sourceMappingURL=logical.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/mark.js":
/*!**************************************************!*\
  !*** ./node_modules/vega-lite/build/src/mark.js ***!
  \**************************************************/
/*! exports provided: AREA, BAR, LINE, POINT, RECT, RULE, TEXT, TICK, TRAIL, CIRCLE, SQUARE, GEOSHAPE, isMark, isPathMark, PRIMITIVE_MARKS, isMarkDef, isPrimitiveMark, STROKE_CONFIG, FILL_CONFIG, FILL_STROKE_CONFIG, VL_ONLY_MARK_CONFIG_PROPERTIES, VL_ONLY_MARK_SPECIFIC_CONFIG_PROPERTY_INDEX, defaultMarkConfig, defaultBarConfig, defaultTickConfig, getMarkType */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AREA", function() { return AREA; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BAR", function() { return BAR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LINE", function() { return LINE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "POINT", function() { return POINT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RECT", function() { return RECT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RULE", function() { return RULE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TEXT", function() { return TEXT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TICK", function() { return TICK; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TRAIL", function() { return TRAIL; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CIRCLE", function() { return CIRCLE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SQUARE", function() { return SQUARE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GEOSHAPE", function() { return GEOSHAPE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isMark", function() { return isMark; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isPathMark", function() { return isPathMark; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PRIMITIVE_MARKS", function() { return PRIMITIVE_MARKS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isMarkDef", function() { return isMarkDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isPrimitiveMark", function() { return isPrimitiveMark; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "STROKE_CONFIG", function() { return STROKE_CONFIG; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FILL_CONFIG", function() { return FILL_CONFIG; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FILL_STROKE_CONFIG", function() { return FILL_STROKE_CONFIG; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VL_ONLY_MARK_CONFIG_PROPERTIES", function() { return VL_ONLY_MARK_CONFIG_PROPERTIES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VL_ONLY_MARK_SPECIFIC_CONFIG_PROPERTY_INDEX", function() { return VL_ONLY_MARK_SPECIFIC_CONFIG_PROPERTY_INDEX; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultMarkConfig", function() { return defaultMarkConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultBarConfig", function() { return defaultBarConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultTickConfig", function() { return defaultTickConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getMarkType", function() { return getMarkType; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util */ "./node_modules/vega-lite/build/src/util.js");


const AREA = 'area';
const BAR = 'bar';
const LINE = 'line';
const POINT = 'point';
const RECT = 'rect';
const RULE = 'rule';
const TEXT = 'text';
const TICK = 'tick';
const TRAIL = 'trail';
const CIRCLE = 'circle';
const SQUARE = 'square';
const GEOSHAPE = 'geoshape';
// Using mapped type to declare index, ensuring we always have all marks when we add more.
const MARK_INDEX = {
    area: 1,
    bar: 1,
    line: 1,
    point: 1,
    text: 1,
    tick: 1,
    trail: 1,
    rect: 1,
    geoshape: 1,
    rule: 1,
    circle: 1,
    square: 1
};
function isMark(m) {
    return !!MARK_INDEX[m];
}
function isPathMark(m) {
    return Object(_util__WEBPACK_IMPORTED_MODULE_1__["contains"])(['line', 'area', 'trail'], m);
}
const PRIMITIVE_MARKS = Object(_util__WEBPACK_IMPORTED_MODULE_1__["flagKeys"])(MARK_INDEX);
function isMarkDef(mark) {
    return mark['type'];
}
const PRIMITIVE_MARK_INDEX = Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["toSet"])(PRIMITIVE_MARKS);
function isPrimitiveMark(mark) {
    const markType = isMarkDef(mark) ? mark.type : mark;
    return markType in PRIMITIVE_MARK_INDEX;
}
const STROKE_CONFIG = [
    'stroke',
    'strokeWidth',
    'strokeDash',
    'strokeDashOffset',
    'strokeOpacity',
    'strokeJoin',
    'strokeMiterLimit'
];
const FILL_CONFIG = ['fill', 'fillOpacity'];
const FILL_STROKE_CONFIG = [].concat(STROKE_CONFIG, FILL_CONFIG);
const VL_ONLY_MARK_CONFIG_PROPERTIES = ['filled', 'color', 'tooltip'];
const VL_ONLY_MARK_SPECIFIC_CONFIG_PROPERTY_INDEX = {
    area: ['line', 'point'],
    bar: ['binSpacing', 'continuousBandSize', 'discreteBandSize'],
    line: ['point'],
    text: ['shortTimeLabels'],
    tick: ['bandSize', 'thickness']
};
const defaultMarkConfig = {
    color: '#4c78a8',
    tooltip: { content: 'encoding' }
};
const defaultBarConfig = {
    binSpacing: 1,
    continuousBandSize: 5
};
const defaultTickConfig = {
    thickness: 1
};
function getMarkType(m) {
    return isMarkDef(m) ? m.type : m;
}
//# sourceMappingURL=mark.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/normalize/core.js":
/*!************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/normalize/core.js ***!
  \************************************************************/
/*! exports provided: CoreNormalizer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CoreNormalizer", function() { return CoreNormalizer; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../channel */ "./node_modules/vega-lite/build/src/channel.js");
/* harmony import */ var _compositemark_boxplot__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../compositemark/boxplot */ "./node_modules/vega-lite/build/src/compositemark/boxplot.js");
/* harmony import */ var _compositemark_errorband__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../compositemark/errorband */ "./node_modules/vega-lite/build/src/compositemark/errorband.js");
/* harmony import */ var _compositemark_errorbar__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../compositemark/errorbar */ "./node_modules/vega-lite/build/src/compositemark/errorbar.js");
/* harmony import */ var _encoding__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../encoding */ "./node_modules/vega-lite/build/src/encoding.js");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../log */ "./node_modules/vega-lite/build/src/log/index.js");
/* harmony import */ var _spec_facet__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../spec/facet */ "./node_modules/vega-lite/build/src/spec/facet.js");
/* harmony import */ var _spec_map__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../spec/map */ "./node_modules/vega-lite/build/src/spec/map.js");
/* harmony import */ var _spec_unit__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../spec/unit */ "./node_modules/vega-lite/build/src/spec/unit.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../util */ "./node_modules/vega-lite/build/src/util.js");
/* harmony import */ var _pathoverlay__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./pathoverlay */ "./node_modules/vega-lite/build/src/normalize/pathoverlay.js");
/* harmony import */ var _ruleforrangedline__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./ruleforrangedline */ "./node_modules/vega-lite/build/src/normalize/ruleforrangedline.js");














class CoreNormalizer extends _spec_map__WEBPACK_IMPORTED_MODULE_9__["SpecMapper"] {
    constructor() {
        super(...arguments);
        this.nonFacetUnitNormalizers = [
            _compositemark_boxplot__WEBPACK_IMPORTED_MODULE_3__["boxPlotNormalizer"],
            _compositemark_errorbar__WEBPACK_IMPORTED_MODULE_5__["errorBarNormalizer"],
            _compositemark_errorband__WEBPACK_IMPORTED_MODULE_4__["errorBandNormalizer"],
            new _pathoverlay__WEBPACK_IMPORTED_MODULE_12__["PathOverlayNormalizer"](),
            new _ruleforrangedline__WEBPACK_IMPORTED_MODULE_13__["RuleForRangedLineNormalizer"]()
        ];
    }
    map(spec, params) {
        // Special handling for a faceted unit spec as it can return a facet spec, not just a layer or unit spec like a normal unit spec.
        if (Object(_spec_unit__WEBPACK_IMPORTED_MODULE_10__["isUnitSpec"])(spec)) {
            const hasRow = Object(_encoding__WEBPACK_IMPORTED_MODULE_6__["channelHasField"])(spec.encoding, _channel__WEBPACK_IMPORTED_MODULE_2__["ROW"]);
            const hasColumn = Object(_encoding__WEBPACK_IMPORTED_MODULE_6__["channelHasField"])(spec.encoding, _channel__WEBPACK_IMPORTED_MODULE_2__["COLUMN"]);
            const hasFacet = Object(_encoding__WEBPACK_IMPORTED_MODULE_6__["channelHasField"])(spec.encoding, _channel__WEBPACK_IMPORTED_MODULE_2__["FACET"]);
            if (hasRow || hasColumn || hasFacet) {
                return this.mapFacetedUnit(spec, params);
            }
        }
        return super.map(spec, params);
    }
    // This is for normalizing non-facet unit
    mapUnit(spec, params) {
        const { parentEncoding, parentProjection } = params;
        if (parentEncoding || parentProjection) {
            return this.mapUnitWithParentEncodingOrProjection(spec, params);
        }
        const normalizeLayerOrUnit = this.mapLayerOrUnit.bind(this);
        for (const unitNormalizer of this.nonFacetUnitNormalizers) {
            if (unitNormalizer.hasMatchingType(spec, params.config)) {
                return unitNormalizer.run(spec, params, normalizeLayerOrUnit);
            }
        }
        return spec;
    }
    mapRepeat(spec, params) {
        const { repeat } = spec;
        if (!Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(repeat) && spec.columns) {
            // is repeat with row/column
            spec = Object(_util__WEBPACK_IMPORTED_MODULE_11__["omit"])(spec, ['columns']);
            _log__WEBPACK_IMPORTED_MODULE_7__["warn"](_log__WEBPACK_IMPORTED_MODULE_7__["message"].columnsNotSupportByRowCol('repeat'));
        }
        return Object.assign({}, spec, { spec: this.map(spec.spec, params) });
    }
    mapFacet(spec, params) {
        const { facet } = spec;
        if (Object(_spec_facet__WEBPACK_IMPORTED_MODULE_8__["isFacetMapping"])(facet) && spec.columns) {
            // is facet with row/column
            spec = Object(_util__WEBPACK_IMPORTED_MODULE_11__["omit"])(spec, ['columns']);
            _log__WEBPACK_IMPORTED_MODULE_7__["warn"](_log__WEBPACK_IMPORTED_MODULE_7__["message"].columnsNotSupportByRowCol('facet'));
        }
        return super.mapFacet(spec, params);
    }
    mapUnitWithParentEncodingOrProjection(spec, params) {
        const { encoding, projection } = spec;
        const { parentEncoding, parentProjection, config } = params;
        const mergedProjection = mergeProjection({ parentProjection, projection });
        const mergedEncoding = mergeEncoding({ parentEncoding, encoding });
        return this.mapUnit(Object.assign({}, spec, (mergedProjection ? { projection: mergedProjection } : {}), (mergedEncoding ? { encoding: mergedEncoding } : {})), { config });
    }
    mapFacetedUnit(spec, params) {
        // New encoding in the inside spec should not contain row / column
        // as row/column should be moved to facet
        const _a = spec.encoding, { row, column, facet } = _a, encoding = tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"](_a, ["row", "column", "facet"]);
        // Mark and encoding should be moved into the inner spec
        const { mark, width, projection, height, selection, encoding: _ } = spec, outerSpec = tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"](spec, ["mark", "width", "projection", "height", "selection", "encoding"]);
        if (facet && (row || column)) {
            _log__WEBPACK_IMPORTED_MODULE_7__["warn"](_log__WEBPACK_IMPORTED_MODULE_7__["message"].facetChannelDropped([...(row ? [_channel__WEBPACK_IMPORTED_MODULE_2__["ROW"]] : []), ...(column ? [_channel__WEBPACK_IMPORTED_MODULE_2__["COLUMN"]] : [])]));
        }
        return this.mapFacet(Object.assign({}, outerSpec, { 
            // row / column has higher precedence than facet
            facet: row || column
                ? Object.assign({}, (row ? { row } : {}), (column ? { column } : {})) : facet, spec: Object.assign({}, (projection ? { projection } : {}), { mark }, (width ? { width } : {}), (height ? { height } : {}), { encoding }, (selection ? { selection } : {})) }), params);
    }
    mapLayer(spec, _a) {
        // Special handling for extended layer spec
        var { parentEncoding, parentProjection } = _a, otherParams = tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"](_a, ["parentEncoding", "parentProjection"]);
        const { encoding, projection } = spec, rest = tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"](spec, ["encoding", "projection"]);
        const params = Object.assign({}, otherParams, { parentEncoding: mergeEncoding({ parentEncoding, encoding }), parentProjection: mergeProjection({ parentProjection, projection }) });
        return super.mapLayer(rest, params);
    }
}
function mergeEncoding(opt) {
    const { parentEncoding, encoding } = opt;
    if (parentEncoding && encoding) {
        const overriden = Object(_util__WEBPACK_IMPORTED_MODULE_11__["keys"])(parentEncoding).reduce((o, key) => {
            if (encoding[key]) {
                o.push(key);
            }
            return o;
        }, []);
        if (overriden.length > 0) {
            _log__WEBPACK_IMPORTED_MODULE_7__["warn"](_log__WEBPACK_IMPORTED_MODULE_7__["message"].encodingOverridden(overriden));
        }
    }
    const merged = Object.assign({}, (parentEncoding || {}), (encoding || {}));
    return Object(_util__WEBPACK_IMPORTED_MODULE_11__["keys"])(merged).length > 0 ? merged : undefined;
}
function mergeProjection(opt) {
    const { parentProjection, projection } = opt;
    if (parentProjection && projection) {
        _log__WEBPACK_IMPORTED_MODULE_7__["warn"](_log__WEBPACK_IMPORTED_MODULE_7__["message"].projectionOverridden({ parentProjection, projection }));
    }
    return projection || parentProjection;
}
//# sourceMappingURL=core.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/normalize/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/normalize/index.js ***!
  \*************************************************************/
/*! exports provided: normalize */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "normalize", function() { return normalize; });
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../config */ "./node_modules/vega-lite/build/src/config.js");
/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./core */ "./node_modules/vega-lite/build/src/normalize/core.js");


function normalize(spec, config) {
    if (config === undefined) {
        config = Object(_config__WEBPACK_IMPORTED_MODULE_0__["initConfig"])(spec.config);
    }
    return normalizeGenericSpec(spec, config);
}
const normalizer = new _core__WEBPACK_IMPORTED_MODULE_1__["CoreNormalizer"]();
/**
 * Decompose extended unit specs into composition of pure unit specs.
 */
function normalizeGenericSpec(spec, config = {}) {
    return normalizer.map(spec, { config });
}
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/normalize/pathoverlay.js":
/*!*******************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/normalize/pathoverlay.js ***!
  \*******************************************************************/
/*! exports provided: PathOverlayNormalizer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PathOverlayNormalizer", function() { return PathOverlayNormalizer; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var _mark__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../mark */ "./node_modules/vega-lite/build/src/mark.js");
/* harmony import */ var _spec_unit__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../spec/unit */ "./node_modules/vega-lite/build/src/spec/unit.js");
/* harmony import */ var _stack__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../stack */ "./node_modules/vega-lite/build/src/stack.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util */ "./node_modules/vega-lite/build/src/util.js");






function dropLineAndPoint(markDef) {
    const { point: _point, line: _line } = markDef, mark = tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"](markDef, ["point", "line"]);
    return Object(_util__WEBPACK_IMPORTED_MODULE_5__["keys"])(mark).length > 1 ? mark : mark.type;
}
function dropLineAndPointFromConfig(config) {
    for (const mark of ['line', 'area', 'rule', 'trail']) {
        if (config[mark]) {
            config = Object.assign({}, config, { [mark]: Object(_util__WEBPACK_IMPORTED_MODULE_5__["omit"])(config[mark], ['point', 'line']) });
        }
    }
    return config;
}
function getPointOverlay(markDef, markConfig = {}, encoding) {
    if (markDef.point === 'transparent') {
        return { opacity: 0 };
    }
    else if (markDef.point) {
        // truthy : true or object
        return Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isObject"])(markDef.point) ? markDef.point : {};
    }
    else if (markDef.point !== undefined) {
        // false or null
        return null;
    }
    else {
        // undefined (not disabled)
        if (markConfig.point || encoding.shape) {
            // enable point overlay if config[mark].point is truthy or if encoding.shape is provided
            return Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isObject"])(markConfig.point) ? markConfig.point : {};
        }
        // markDef.point is defined as falsy
        return undefined;
    }
}
function getLineOverlay(markDef, markConfig = {}) {
    if (markDef.line) {
        // true or object
        return markDef.line === true ? {} : markDef.line;
    }
    else if (markDef.line !== undefined) {
        // false or null
        return null;
    }
    else {
        // undefined (not disabled)
        if (markConfig.line) {
            // enable line overlay if config[mark].line is truthy
            return markConfig.line === true ? {} : markConfig.line;
        }
        // markDef.point is defined as falsy
        return undefined;
    }
}
class PathOverlayNormalizer {
    constructor() {
        this.name = 'path-overlay';
    }
    hasMatchingType(spec, config) {
        if (Object(_spec_unit__WEBPACK_IMPORTED_MODULE_3__["isUnitSpec"])(spec)) {
            const { mark, encoding } = spec;
            const markDef = Object(_mark__WEBPACK_IMPORTED_MODULE_2__["isMarkDef"])(mark) ? mark : { type: mark };
            switch (markDef.type) {
                case 'line':
                case 'rule':
                case 'trail':
                    return !!getPointOverlay(markDef, config[markDef.type], encoding);
                case 'area':
                    return (
                    // false / null are also included as we want to remove the properties
                    !!getPointOverlay(markDef, config[markDef.type], encoding) ||
                        !!getLineOverlay(markDef, config[markDef.type]));
            }
        }
        return false;
    }
    run(spec, params, normalize) {
        const { config } = params;
        const { selection, projection, encoding, mark } = spec, outerSpec = tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"](spec, ["selection", "projection", "encoding", "mark"]);
        const markDef = Object(_mark__WEBPACK_IMPORTED_MODULE_2__["isMarkDef"])(mark) ? mark : { type: mark };
        const pointOverlay = getPointOverlay(markDef, config[markDef.type], encoding);
        const lineOverlay = markDef.type === 'area' && getLineOverlay(markDef, config[markDef.type]);
        const layer = [
            Object.assign({}, (selection ? { selection } : {}), { 
                // Do not include point / line overlay in the normalize spec
                mark: dropLineAndPoint(Object.assign({}, markDef, (markDef.type === 'area' ? { opacity: 0.7 } : {}))), 
                // drop shape from encoding as this might be used to trigger point overlay
                encoding: Object(_util__WEBPACK_IMPORTED_MODULE_5__["omit"])(encoding, ['shape']) })
        ];
        // FIXME: determine rules for applying selections.
        // Need to copy stack config to overlayed layer
        const stackProps = Object(_stack__WEBPACK_IMPORTED_MODULE_4__["stack"])(markDef, encoding, config ? config.stack : undefined);
        let overlayEncoding = encoding;
        if (stackProps) {
            const { fieldChannel: stackFieldChannel, offset } = stackProps;
            overlayEncoding = Object.assign({}, encoding, { [stackFieldChannel]: Object.assign({}, encoding[stackFieldChannel], (offset ? { stack: offset } : {})) });
        }
        if (lineOverlay) {
            layer.push(Object.assign({}, (projection ? { projection } : {}), { mark: Object.assign({ type: 'line' }, Object(_util__WEBPACK_IMPORTED_MODULE_5__["pick"])(markDef, ['clip', 'interpolate', 'tension']), lineOverlay), encoding: overlayEncoding }));
        }
        if (pointOverlay) {
            layer.push(Object.assign({}, (projection ? { projection } : {}), { mark: Object.assign({ type: 'point', opacity: 1, filled: true }, Object(_util__WEBPACK_IMPORTED_MODULE_5__["pick"])(markDef, ['clip']), pointOverlay), encoding: overlayEncoding }));
        }
        return normalize(Object.assign({}, outerSpec, { layer }), Object.assign({}, params, { config: dropLineAndPointFromConfig(config) }));
    }
}
//# sourceMappingURL=pathoverlay.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/normalize/ruleforrangedline.js":
/*!*************************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/normalize/ruleforrangedline.js ***!
  \*************************************************************************/
/*! exports provided: RuleForRangedLineNormalizer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RuleForRangedLineNormalizer", function() { return RuleForRangedLineNormalizer; });
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../channel */ "./node_modules/vega-lite/build/src/channel.js");
/* harmony import */ var _channeldef__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../channeldef */ "./node_modules/vega-lite/build/src/channeldef.js");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../log */ "./node_modules/vega-lite/build/src/log/index.js");
/* harmony import */ var _spec_unit__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../spec/unit */ "./node_modules/vega-lite/build/src/spec/unit.js");




class RuleForRangedLineNormalizer {
    constructor() {
        this.name = 'RuleForRangedLine';
    }
    hasMatchingType(spec) {
        if (Object(_spec_unit__WEBPACK_IMPORTED_MODULE_3__["isUnitSpec"])(spec)) {
            const { encoding, mark } = spec;
            if (mark === 'line') {
                for (const channel of _channel__WEBPACK_IMPORTED_MODULE_0__["SECONDARY_RANGE_CHANNEL"]) {
                    const mainChannel = Object(_channel__WEBPACK_IMPORTED_MODULE_0__["getMainRangeChannel"])(channel);
                    const mainChannelDef = encoding[mainChannel];
                    if (!!encoding[channel] && Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["isFieldDef"])(mainChannelDef) && mainChannelDef.bin !== 'binned') {
                        return true;
                    }
                }
            }
        }
        return false;
    }
    run(spec, params, normalize) {
        const { encoding } = spec;
        _log__WEBPACK_IMPORTED_MODULE_2__["warn"](_log__WEBPACK_IMPORTED_MODULE_2__["message"].lineWithRange(!!encoding.x2, !!encoding.y2));
        return normalize(Object.assign({}, spec, { mark: 'rule' }), params);
    }
}
//# sourceMappingURL=ruleforrangedline.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/predicate.js":
/*!*******************************************************!*\
  !*** ./node_modules/vega-lite/build/src/predicate.js ***!
  \*******************************************************/
/*! exports provided: isSelectionPredicate, isFieldEqualPredicate, isFieldLTPredicate, isFieldLTEPredicate, isFieldGTPredicate, isFieldGTEPredicate, isFieldRangePredicate, isFieldOneOfPredicate, isFieldValidPredicate, isFieldPredicate, fieldFilterExpression, normalizePredicate */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isSelectionPredicate", function() { return isSelectionPredicate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isFieldEqualPredicate", function() { return isFieldEqualPredicate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isFieldLTPredicate", function() { return isFieldLTPredicate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isFieldLTEPredicate", function() { return isFieldLTEPredicate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isFieldGTPredicate", function() { return isFieldGTPredicate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isFieldGTEPredicate", function() { return isFieldGTEPredicate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isFieldRangePredicate", function() { return isFieldRangePredicate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isFieldOneOfPredicate", function() { return isFieldOneOfPredicate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isFieldValidPredicate", function() { return isFieldValidPredicate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isFieldPredicate", function() { return isFieldPredicate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fieldFilterExpression", function() { return fieldFilterExpression; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "normalizePredicate", function() { return normalizePredicate; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var _channeldef__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./channeldef */ "./node_modules/vega-lite/build/src/channeldef.js");
/* harmony import */ var _timeunit__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./timeunit */ "./node_modules/vega-lite/build/src/timeunit.js");



function isSelectionPredicate(predicate) {
    return predicate && predicate['selection'];
}
function isFieldEqualPredicate(predicate) {
    return predicate && !!predicate.field && predicate.equal !== undefined;
}
function isFieldLTPredicate(predicate) {
    return predicate && !!predicate.field && predicate.lt !== undefined;
}
function isFieldLTEPredicate(predicate) {
    return predicate && !!predicate.field && predicate.lte !== undefined;
}
function isFieldGTPredicate(predicate) {
    return predicate && !!predicate.field && predicate.gt !== undefined;
}
function isFieldGTEPredicate(predicate) {
    return predicate && !!predicate.field && predicate.gte !== undefined;
}
function isFieldRangePredicate(predicate) {
    if (predicate && predicate.field) {
        if (Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isArray"])(predicate.range) && predicate.range.length === 2) {
            return true;
        }
    }
    return false;
}
function isFieldOneOfPredicate(predicate) {
    return (predicate && !!predicate.field && (Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isArray"])(predicate.oneOf) || Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isArray"])(predicate.in)) // backward compatibility
    );
}
function isFieldValidPredicate(predicate) {
    return predicate && !!predicate.field && predicate.valid !== undefined;
}
function isFieldPredicate(predicate) {
    return (isFieldOneOfPredicate(predicate) ||
        isFieldEqualPredicate(predicate) ||
        isFieldRangePredicate(predicate) ||
        isFieldLTPredicate(predicate) ||
        isFieldGTPredicate(predicate) ||
        isFieldLTEPredicate(predicate) ||
        isFieldGTEPredicate(predicate));
}
function predicateValueExpr(v, timeUnit) {
    return Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["valueExpr"])(v, { timeUnit, time: true });
}
function predicateValuesExpr(vals, timeUnit) {
    return vals.map(v => predicateValueExpr(v, timeUnit));
}
// This method is used by Voyager.  Do not change its behavior without changing Voyager.
function fieldFilterExpression(predicate, useInRange = true) {
    const { field, timeUnit } = predicate;
    const fieldExpr = timeUnit
        ? // For timeUnit, cast into integer with time() so we can use ===, inrange, indexOf to compare values directly.
            // TODO: We calculate timeUnit on the fly here. Consider if we would like to consolidate this with timeUnit pipeline
            // TODO: support utc
            'time(' + Object(_timeunit__WEBPACK_IMPORTED_MODULE_2__["fieldExpr"])(timeUnit, field) + ')'
        : Object(_channeldef__WEBPACK_IMPORTED_MODULE_1__["vgField"])(predicate, { expr: 'datum' });
    if (isFieldEqualPredicate(predicate)) {
        return fieldExpr + '===' + predicateValueExpr(predicate.equal, timeUnit);
    }
    else if (isFieldLTPredicate(predicate)) {
        const upper = predicate.lt;
        return `${fieldExpr}<${predicateValueExpr(upper, timeUnit)}`;
    }
    else if (isFieldGTPredicate(predicate)) {
        const lower = predicate.gt;
        return `${fieldExpr}>${predicateValueExpr(lower, timeUnit)}`;
    }
    else if (isFieldLTEPredicate(predicate)) {
        const upper = predicate.lte;
        return `${fieldExpr}<=${predicateValueExpr(upper, timeUnit)}`;
    }
    else if (isFieldGTEPredicate(predicate)) {
        const lower = predicate.gte;
        return `${fieldExpr}>=${predicateValueExpr(lower, timeUnit)}`;
    }
    else if (isFieldOneOfPredicate(predicate)) {
        return `indexof([${predicateValuesExpr(predicate.oneOf, timeUnit).join(',')}], ${fieldExpr}) !== -1`;
    }
    else if (isFieldValidPredicate(predicate)) {
        return predicate.valid ? `${fieldExpr}!==null&&!isNaN(${fieldExpr})` : `${fieldExpr}===null||isNaN(${fieldExpr})`;
    }
    else if (isFieldRangePredicate(predicate)) {
        const lower = predicate.range[0];
        const upper = predicate.range[1];
        if (lower !== null && upper !== null && useInRange) {
            return ('inrange(' +
                fieldExpr +
                ', [' +
                predicateValueExpr(lower, timeUnit) +
                ', ' +
                predicateValueExpr(upper, timeUnit) +
                '])');
        }
        const exprs = [];
        if (lower !== null) {
            exprs.push(`${fieldExpr} >= ${predicateValueExpr(lower, timeUnit)}`);
        }
        if (upper !== null) {
            exprs.push(`${fieldExpr} <= ${predicateValueExpr(upper, timeUnit)}`);
        }
        return exprs.length > 0 ? exprs.join(' && ') : 'true';
    }
    /* istanbul ignore next: it should never reach here */
    throw new Error(`Invalid field predicate: ${JSON.stringify(predicate)}`);
}
function normalizePredicate(f) {
    if (isFieldPredicate(f) && f.timeUnit) {
        return Object.assign({}, f, { timeUnit: Object(_timeunit__WEBPACK_IMPORTED_MODULE_2__["normalizeTimeUnit"])(f.timeUnit) });
    }
    return f;
}
//# sourceMappingURL=predicate.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/projection.js":
/*!********************************************************!*\
  !*** ./node_modules/vega-lite/build/src/projection.js ***!
  \********************************************************/
/*! exports provided: PROJECTION_PROPERTIES */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PROJECTION_PROPERTIES", function() { return PROJECTION_PROPERTIES; });
const PROJECTION_PROPERTIES = [
    'type',
    'clipAngle',
    'clipExtent',
    'center',
    'rotate',
    'precision',
    'reflectX',
    'reflectY',
    'coefficient',
    'distance',
    'fraction',
    'lobes',
    'parallel',
    'radius',
    'ratio',
    'spacing',
    'tilt'
];
//# sourceMappingURL=projection.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/scale.js":
/*!***************************************************!*\
  !*** ./node_modules/vega-lite/build/src/scale.js ***!
  \***************************************************/
/*! exports provided: ScaleType, SCALE_TYPES, scaleCompatible, scaleTypePrecedence, CONTINUOUS_TO_CONTINUOUS_SCALES, CONTINUOUS_TO_DISCRETE_SCALES, CONTINUOUS_DOMAIN_SCALES, DISCRETE_DOMAIN_SCALES, TIME_SCALE_TYPES, hasDiscreteDomain, hasContinuousDomain, isContinuousToContinuous, isContinuousToDiscrete, defaultScaleConfig, isExtendedScheme, isSelectionDomain, SCALE_PROPERTIES, NON_TYPE_DOMAIN_RANGE_VEGA_SCALE_PROPERTIES, SCALE_TYPE_INDEX, scaleTypeSupportProperty, channelScalePropertyIncompatability, scaleTypeSupportDataType, channelSupportScaleType, getSupportedScaleType */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ScaleType", function() { return ScaleType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SCALE_TYPES", function() { return SCALE_TYPES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scaleCompatible", function() { return scaleCompatible; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scaleTypePrecedence", function() { return scaleTypePrecedence; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CONTINUOUS_TO_CONTINUOUS_SCALES", function() { return CONTINUOUS_TO_CONTINUOUS_SCALES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CONTINUOUS_TO_DISCRETE_SCALES", function() { return CONTINUOUS_TO_DISCRETE_SCALES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CONTINUOUS_DOMAIN_SCALES", function() { return CONTINUOUS_DOMAIN_SCALES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DISCRETE_DOMAIN_SCALES", function() { return DISCRETE_DOMAIN_SCALES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TIME_SCALE_TYPES", function() { return TIME_SCALE_TYPES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hasDiscreteDomain", function() { return hasDiscreteDomain; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hasContinuousDomain", function() { return hasContinuousDomain; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isContinuousToContinuous", function() { return isContinuousToContinuous; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isContinuousToDiscrete", function() { return isContinuousToDiscrete; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultScaleConfig", function() { return defaultScaleConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isExtendedScheme", function() { return isExtendedScheme; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isSelectionDomain", function() { return isSelectionDomain; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SCALE_PROPERTIES", function() { return SCALE_PROPERTIES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NON_TYPE_DOMAIN_RANGE_VEGA_SCALE_PROPERTIES", function() { return NON_TYPE_DOMAIN_RANGE_VEGA_SCALE_PROPERTIES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SCALE_TYPE_INDEX", function() { return SCALE_TYPE_INDEX; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scaleTypeSupportProperty", function() { return scaleTypeSupportProperty; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "channelScalePropertyIncompatability", function() { return channelScalePropertyIncompatability; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scaleTypeSupportDataType", function() { return scaleTypeSupportDataType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "channelSupportScaleType", function() { return channelSupportScaleType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getSupportedScaleType", function() { return getSupportedScaleType; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./channel */ "./node_modules/vega-lite/build/src/channel.js");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./log */ "./node_modules/vega-lite/build/src/log/index.js");
/* harmony import */ var _type__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./type */ "./node_modules/vega-lite/build/src/type.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./util */ "./node_modules/vega-lite/build/src/util.js");








var ScaleType;
(function (ScaleType) {
    // Continuous - Quantitative
    ScaleType.LINEAR = 'linear';
    ScaleType.LOG = 'log';
    ScaleType.POW = 'pow';
    ScaleType.SQRT = 'sqrt';
    ScaleType.SYMLOG = 'symlog';
    // Continuous - Time
    ScaleType.TIME = 'time';
    ScaleType.UTC = 'utc';
    // Discretizing scales
    ScaleType.QUANTILE = 'quantile';
    ScaleType.QUANTIZE = 'quantize';
    ScaleType.THRESHOLD = 'threshold';
    ScaleType.BIN_ORDINAL = 'bin-ordinal';
    // Discrete scales
    ScaleType.ORDINAL = 'ordinal';
    ScaleType.POINT = 'point';
    ScaleType.BAND = 'band';
})(ScaleType || (ScaleType = {}));
/**
 * Index for scale categories -- only scale of the same categories can be merged together.
 * Current implementation is trying to be conservative and avoid merging scale type that might not work together
 */
const SCALE_CATEGORY_INDEX = {
    linear: 'numeric',
    log: 'numeric',
    pow: 'numeric',
    sqrt: 'numeric',
    symlog: 'numeric',
    time: 'time',
    utc: 'time',
    ordinal: 'ordinal',
    'bin-ordinal': 'bin-ordinal',
    point: 'ordinal-position',
    band: 'ordinal-position',
    quantile: 'discretizing',
    quantize: 'discretizing',
    threshold: 'discretizing'
};
const SCALE_TYPES = Object(_util__WEBPACK_IMPORTED_MODULE_5__["keys"])(SCALE_CATEGORY_INDEX);
/**
 * Whether the two given scale types can be merged together.
 */
function scaleCompatible(scaleType1, scaleType2) {
    const scaleCategory1 = SCALE_CATEGORY_INDEX[scaleType1];
    const scaleCategory2 = SCALE_CATEGORY_INDEX[scaleType2];
    return (scaleCategory1 === scaleCategory2 ||
        (scaleCategory1 === 'ordinal-position' && scaleCategory2 === 'time') ||
        (scaleCategory2 === 'ordinal-position' && scaleCategory1 === 'time'));
}
/**
 * Index for scale precedence -- high score = higher priority for merging.
 */
const SCALE_PRECEDENCE_INDEX = {
    // numeric
    linear: 0,
    log: 1,
    pow: 1,
    sqrt: 1,
    symlog: 1,
    // time
    time: 0,
    utc: 0,
    // ordinal-position -- these have higher precedence than continuous scales as they support more types of data
    point: 10,
    band: 11,
    // non grouped types
    ordinal: 0,
    'bin-ordinal': 0,
    quantile: 0,
    quantize: 0,
    threshold: 0
};
/**
 * Return scale categories -- only scale of the same categories can be merged together.
 */
function scaleTypePrecedence(scaleType) {
    return SCALE_PRECEDENCE_INDEX[scaleType];
}
const CONTINUOUS_TO_CONTINUOUS_SCALES = ['linear', 'log', 'pow', 'sqrt', 'symlog', 'time', 'utc'];
const CONTINUOUS_TO_CONTINUOUS_INDEX = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["toSet"])(CONTINUOUS_TO_CONTINUOUS_SCALES);
const CONTINUOUS_TO_DISCRETE_SCALES = ['quantile', 'quantize', 'threshold'];
const CONTINUOUS_TO_DISCRETE_INDEX = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["toSet"])(CONTINUOUS_TO_DISCRETE_SCALES);
const CONTINUOUS_DOMAIN_SCALES = CONTINUOUS_TO_CONTINUOUS_SCALES.concat([
    'quantile',
    'quantize',
    'threshold'
]);
const CONTINUOUS_DOMAIN_INDEX = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["toSet"])(CONTINUOUS_DOMAIN_SCALES);
const DISCRETE_DOMAIN_SCALES = ['ordinal', 'bin-ordinal', 'point', 'band'];
const DISCRETE_DOMAIN_INDEX = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["toSet"])(DISCRETE_DOMAIN_SCALES);
const TIME_SCALE_TYPES = ['time', 'utc'];
function hasDiscreteDomain(type) {
    return type in DISCRETE_DOMAIN_INDEX;
}
function hasContinuousDomain(type) {
    return type in CONTINUOUS_DOMAIN_INDEX;
}
function isContinuousToContinuous(type) {
    return type in CONTINUOUS_TO_CONTINUOUS_INDEX;
}
function isContinuousToDiscrete(type) {
    return type in CONTINUOUS_TO_DISCRETE_INDEX;
}
const defaultScaleConfig = {
    textXRangeStep: 90,
    rangeStep: 20,
    pointPadding: 0.5,
    barBandPaddingInner: 0.1,
    rectBandPaddingInner: 0,
    minBandSize: 2,
    minFontSize: 8,
    maxFontSize: 40,
    minOpacity: 0.3,
    maxOpacity: 0.8,
    // FIXME: revise if these *can* become ratios of rangeStep
    minSize: 9,
    minStrokeWidth: 1,
    maxStrokeWidth: 4,
    quantileCount: 4,
    quantizeCount: 4
};
function isExtendedScheme(scheme) {
    return scheme && !!scheme['name'];
}
function isSelectionDomain(domain) {
    return domain && domain['selection'];
}
const SCALE_PROPERTY_INDEX = {
    type: 1,
    domain: 1,
    range: 1,
    rangeStep: 1,
    scheme: 1,
    bins: 1,
    // Other properties
    reverse: 1,
    round: 1,
    // quantitative / time
    clamp: 1,
    nice: 1,
    // quantitative
    base: 1,
    exponent: 1,
    constant: 1,
    interpolate: 1,
    zero: 1,
    // band/point
    padding: 1,
    paddingInner: 1,
    paddingOuter: 1
};
const SCALE_PROPERTIES = Object(_util__WEBPACK_IMPORTED_MODULE_5__["flagKeys"])(SCALE_PROPERTY_INDEX);
const { type, domain, range, rangeStep, scheme } = SCALE_PROPERTY_INDEX, NON_TYPE_DOMAIN_RANGE_VEGA_SCALE_PROPERTY_INDEX = tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"](SCALE_PROPERTY_INDEX, ["type", "domain", "range", "rangeStep", "scheme"]);
const NON_TYPE_DOMAIN_RANGE_VEGA_SCALE_PROPERTIES = Object(_util__WEBPACK_IMPORTED_MODULE_5__["flagKeys"])(NON_TYPE_DOMAIN_RANGE_VEGA_SCALE_PROPERTY_INDEX);
const SCALE_TYPE_INDEX = generateScaleTypeIndex();
function scaleTypeSupportProperty(scaleType, propName) {
    switch (propName) {
        case 'type':
        case 'domain':
        case 'reverse':
        case 'range':
            return true;
        case 'scheme':
        case 'interpolate':
            return !Object(_util__WEBPACK_IMPORTED_MODULE_5__["contains"])(['point', 'band', 'identity'], scaleType);
        case 'bins':
            return !Object(_util__WEBPACK_IMPORTED_MODULE_5__["contains"])(['point', 'band', 'identity', 'ordinal'], scaleType);
        case 'round':
            return isContinuousToContinuous(scaleType) || scaleType === 'band' || scaleType === 'point';
        case 'padding':
            return isContinuousToContinuous(scaleType) || Object(_util__WEBPACK_IMPORTED_MODULE_5__["contains"])(['point', 'band'], scaleType);
        case 'paddingOuter':
        case 'rangeStep':
            return Object(_util__WEBPACK_IMPORTED_MODULE_5__["contains"])(['point', 'band'], scaleType);
        case 'paddingInner':
            return scaleType === 'band';
        case 'clamp':
            return isContinuousToContinuous(scaleType);
        case 'nice':
            return isContinuousToContinuous(scaleType) || scaleType === 'quantize' || scaleType === 'threshold';
        case 'exponent':
            return scaleType === 'pow';
        case 'base':
            return scaleType === 'log';
        case 'constant':
            return scaleType === 'symlog';
        case 'zero':
            return (hasContinuousDomain(scaleType) &&
                !Object(_util__WEBPACK_IMPORTED_MODULE_5__["contains"])([
                    'log',
                    'time',
                    'utc',
                    'threshold',
                    'quantile' // quantile depends on distribution so zero does not matter
                ], scaleType));
    }
    /* istanbul ignore next: should never reach here*/
    throw new Error(`Invalid scale property ${propName}.`);
}
/**
 * Returns undefined if the input channel supports the input scale property name
 */
function channelScalePropertyIncompatability(channel, propName) {
    switch (propName) {
        case 'interpolate':
        case 'scheme':
            if (!Object(_channel__WEBPACK_IMPORTED_MODULE_2__["isColorChannel"])(channel)) {
                return _log__WEBPACK_IMPORTED_MODULE_3__["message"].cannotUseScalePropertyWithNonColor(channel);
            }
            return undefined;
        case 'type':
        case 'bins':
        case 'domain':
        case 'range':
        case 'base':
        case 'exponent':
        case 'constant':
        case 'nice':
        case 'padding':
        case 'paddingInner':
        case 'paddingOuter':
        case 'rangeStep':
        case 'reverse':
        case 'round':
        case 'clamp':
        case 'zero':
            return undefined; // GOOD!
    }
    /* istanbul ignore next: it should never reach here */
    throw new Error(`Invalid scale property "${propName}".`);
}
function scaleTypeSupportDataType(specifiedType, fieldDefType) {
    if (Object(_util__WEBPACK_IMPORTED_MODULE_5__["contains"])([_type__WEBPACK_IMPORTED_MODULE_4__["ORDINAL"], _type__WEBPACK_IMPORTED_MODULE_4__["NOMINAL"]], fieldDefType)) {
        return specifiedType === undefined || hasDiscreteDomain(specifiedType);
    }
    else if (fieldDefType === _type__WEBPACK_IMPORTED_MODULE_4__["TEMPORAL"]) {
        return Object(_util__WEBPACK_IMPORTED_MODULE_5__["contains"])([ScaleType.TIME, ScaleType.UTC, undefined], specifiedType);
    }
    else if (fieldDefType === _type__WEBPACK_IMPORTED_MODULE_4__["QUANTITATIVE"]) {
        return Object(_util__WEBPACK_IMPORTED_MODULE_5__["contains"])([
            ScaleType.LOG,
            ScaleType.POW,
            ScaleType.SQRT,
            ScaleType.SYMLOG,
            ScaleType.QUANTILE,
            ScaleType.QUANTIZE,
            ScaleType.THRESHOLD,
            ScaleType.LINEAR,
            undefined
        ], specifiedType);
    }
    return true;
}
function channelSupportScaleType(channel, scaleType) {
    switch (channel) {
        case _channel__WEBPACK_IMPORTED_MODULE_2__["X"]:
        case _channel__WEBPACK_IMPORTED_MODULE_2__["Y"]:
            return isContinuousToContinuous(scaleType) || Object(_util__WEBPACK_IMPORTED_MODULE_5__["contains"])(['band', 'point'], scaleType);
        case _channel__WEBPACK_IMPORTED_MODULE_2__["SIZE"]: // TODO: size and opacity can support ordinal with more modification
        case _channel__WEBPACK_IMPORTED_MODULE_2__["STROKEWIDTH"]:
        case _channel__WEBPACK_IMPORTED_MODULE_2__["OPACITY"]:
        case _channel__WEBPACK_IMPORTED_MODULE_2__["FILLOPACITY"]:
        case _channel__WEBPACK_IMPORTED_MODULE_2__["STROKEOPACITY"]:
            // Although it generally doesn't make sense to use band with size and opacity,
            // it can also work since we use band: 0.5 to get midpoint.
            return (isContinuousToContinuous(scaleType) ||
                isContinuousToDiscrete(scaleType) ||
                Object(_util__WEBPACK_IMPORTED_MODULE_5__["contains"])(['band', 'point'], scaleType));
        case _channel__WEBPACK_IMPORTED_MODULE_2__["COLOR"]:
        case _channel__WEBPACK_IMPORTED_MODULE_2__["FILL"]:
        case _channel__WEBPACK_IMPORTED_MODULE_2__["STROKE"]:
            return scaleType !== 'band'; // band does not make sense with color
        case _channel__WEBPACK_IMPORTED_MODULE_2__["SHAPE"]:
            return scaleType === 'ordinal'; // shape = lookup only
    }
    /* istanbul ignore next: it should never reach here */
    return false;
}
function getSupportedScaleType(channel, fieldDefType) {
    return SCALE_TYPE_INDEX[generateScaleTypeIndexKey(channel, fieldDefType)];
}
// generates ScaleTypeIndex where keys are encoding channels and values are list of valid ScaleTypes
function generateScaleTypeIndex() {
    const index = {};
    for (const channel of _channel__WEBPACK_IMPORTED_MODULE_2__["CHANNELS"]) {
        for (const fieldDefType of Object(_util__WEBPACK_IMPORTED_MODULE_5__["keys"])(_type__WEBPACK_IMPORTED_MODULE_4__["TYPE_INDEX"])) {
            for (const scaleType of SCALE_TYPES) {
                const key = generateScaleTypeIndexKey(channel, fieldDefType);
                if (channelSupportScaleType(channel, scaleType) && scaleTypeSupportDataType(scaleType, fieldDefType)) {
                    index[key] = index[key] || [];
                    index[key].push(scaleType);
                }
            }
        }
    }
    return index;
}
function generateScaleTypeIndexKey(channel, fieldDefType) {
    return channel + '_' + fieldDefType;
}
//# sourceMappingURL=scale.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/selection.js":
/*!*******************************************************!*\
  !*** ./node_modules/vega-lite/build/src/selection.js ***!
  \*******************************************************/
/*! exports provided: SELECTION_ID, isIntervalSelection, defaultConfig */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SELECTION_ID", function() { return SELECTION_ID; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isIntervalSelection", function() { return isIntervalSelection; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultConfig", function() { return defaultConfig; });
const SELECTION_ID = '_vgsid_';
function isIntervalSelection(s) {
    return s.type === 'interval';
}
const defaultConfig = {
    single: {
        on: 'click',
        fields: [SELECTION_ID],
        resolve: 'global',
        empty: 'all',
        clear: 'dblclick'
    },
    multi: {
        on: 'click',
        fields: [SELECTION_ID],
        toggle: 'event.shiftKey',
        resolve: 'global',
        empty: 'all',
        clear: 'dblclick'
    },
    interval: {
        on: '[mousedown, window:mouseup] > window:mousemove!',
        encodings: ['x', 'y'],
        translate: '[mousedown, window:mouseup] > window:mousemove!',
        zoom: 'wheel!',
        mark: { fill: '#333', fillOpacity: 0.125, stroke: 'white' },
        resolve: 'global',
        clear: 'dblclick'
    }
};
//# sourceMappingURL=selection.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/sort.js":
/*!**************************************************!*\
  !*** ./node_modules/vega-lite/build/src/sort.js ***!
  \**************************************************/
/*! exports provided: DEFAULT_SORT_OP, isSortByEncoding, isSortField, isSortArray */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DEFAULT_SORT_OP", function() { return DEFAULT_SORT_OP; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isSortByEncoding", function() { return isSortByEncoding; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isSortField", function() { return isSortField; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isSortArray", function() { return isSortArray; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");

const DEFAULT_SORT_OP = 'mean';
function isSortByEncoding(sort) {
    return !!sort && !!sort['encoding'];
}
function isSortField(sort) {
    return !!sort && (sort['op'] === 'count' || !!sort['field']);
}
function isSortArray(sort) {
    return !!sort && Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isArray"])(sort);
}
//# sourceMappingURL=sort.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/spec/base.js":
/*!*******************************************************!*\
  !*** ./node_modules/vega-lite/build/src/spec/base.js ***!
  \*******************************************************/
/*! exports provided: DEFAULT_SPACING, extractCompositionLayout */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DEFAULT_SPACING", function() { return DEFAULT_SPACING; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extractCompositionLayout", function() { return extractCompositionLayout; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ "./node_modules/vega-lite/build/src/util.js");
/* harmony import */ var _concat__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./concat */ "./node_modules/vega-lite/build/src/spec/concat.js");
/* harmony import */ var _facet__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./facet */ "./node_modules/vega-lite/build/src/spec/facet.js");
/* harmony import */ var _repeat__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./repeat */ "./node_modules/vega-lite/build/src/spec/repeat.js");





const DEFAULT_SPACING = 20;
const COMPOSITION_LAYOUT_INDEX = {
    align: 1,
    bounds: 1,
    center: 1,
    columns: 1,
    spacing: 1
};
const COMPOSITION_LAYOUT_PROPERTIES = Object(_util__WEBPACK_IMPORTED_MODULE_1__["flagKeys"])(COMPOSITION_LAYOUT_INDEX);
function extractCompositionLayout(spec, specType, config) {
    const compositionConfig = config[specType];
    const layout = {};
    // Apply config first
    const { spacing: spacingConfig, columns } = compositionConfig;
    if (spacingConfig !== undefined) {
        layout.spacing = spacingConfig;
    }
    if (columns !== undefined) {
        if ((Object(_facet__WEBPACK_IMPORTED_MODULE_3__["isFacetSpec"])(spec) && !Object(_facet__WEBPACK_IMPORTED_MODULE_3__["isFacetMapping"])(spec.facet)) ||
            (Object(_repeat__WEBPACK_IMPORTED_MODULE_4__["isRepeatSpec"])(spec) && Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isArray"])(spec.repeat)) ||
            Object(_concat__WEBPACK_IMPORTED_MODULE_2__["isConcatSpec"])(spec)) {
            layout.columns = columns;
        }
    }
    // Then copy properties from the spec
    for (const prop of COMPOSITION_LAYOUT_PROPERTIES) {
        if (spec[prop] !== undefined) {
            if (prop === 'spacing') {
                const spacing = spec[prop];
                layout[prop] = Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isNumber"])(spacing)
                    ? spacing
                    : {
                        row: spacing.row || spacingConfig,
                        column: spacing.column || spacingConfig
                    };
            }
            else {
                layout[prop] = spec[prop];
            }
        }
    }
    return layout;
}
//# sourceMappingURL=base.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/spec/concat.js":
/*!*********************************************************!*\
  !*** ./node_modules/vega-lite/build/src/spec/concat.js ***!
  \*********************************************************/
/*! exports provided: isAnyConcatSpec, isConcatSpec, isVConcatSpec, isHConcatSpec */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isAnyConcatSpec", function() { return isAnyConcatSpec; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isConcatSpec", function() { return isConcatSpec; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isVConcatSpec", function() { return isVConcatSpec; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isHConcatSpec", function() { return isHConcatSpec; });
function isAnyConcatSpec(spec) {
    return isVConcatSpec(spec) || isHConcatSpec(spec) || isConcatSpec(spec);
}
function isConcatSpec(spec) {
    return spec['concat'] !== undefined;
}
function isVConcatSpec(spec) {
    return spec['vconcat'] !== undefined;
}
function isHConcatSpec(spec) {
    return spec['hconcat'] !== undefined;
}
//# sourceMappingURL=concat.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/spec/facet.js":
/*!********************************************************!*\
  !*** ./node_modules/vega-lite/build/src/spec/facet.js ***!
  \********************************************************/
/*! exports provided: isFacetMapping, isFacetFieldDef, isFacetSpec */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isFacetMapping", function() { return isFacetMapping; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isFacetFieldDef", function() { return isFacetFieldDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isFacetSpec", function() { return isFacetSpec; });
function isFacetMapping(f) {
    return !!f['row'] || !!f['column'];
}
function isFacetFieldDef(channelDef) {
    return !!channelDef && !!channelDef['header'];
}
function isFacetSpec(spec) {
    return spec['facet'] !== undefined;
}
//# sourceMappingURL=facet.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/spec/index.js":
/*!********************************************************!*\
  !*** ./node_modules/vega-lite/build/src/spec/index.js ***!
  \********************************************************/
/*! exports provided: isAnyConcatSpec, isHConcatSpec, isVConcatSpec, isFacetSpec, isLayerSpec, isRepeatSpec, isUnitSpec */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _concat__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./concat */ "./node_modules/vega-lite/build/src/spec/concat.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isAnyConcatSpec", function() { return _concat__WEBPACK_IMPORTED_MODULE_0__["isAnyConcatSpec"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isHConcatSpec", function() { return _concat__WEBPACK_IMPORTED_MODULE_0__["isHConcatSpec"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isVConcatSpec", function() { return _concat__WEBPACK_IMPORTED_MODULE_0__["isVConcatSpec"]; });

/* harmony import */ var _facet__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./facet */ "./node_modules/vega-lite/build/src/spec/facet.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isFacetSpec", function() { return _facet__WEBPACK_IMPORTED_MODULE_1__["isFacetSpec"]; });

/* harmony import */ var _layer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./layer */ "./node_modules/vega-lite/build/src/spec/layer.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isLayerSpec", function() { return _layer__WEBPACK_IMPORTED_MODULE_2__["isLayerSpec"]; });

/* harmony import */ var _repeat__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./repeat */ "./node_modules/vega-lite/build/src/spec/repeat.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isRepeatSpec", function() { return _repeat__WEBPACK_IMPORTED_MODULE_3__["isRepeatSpec"]; });

/* harmony import */ var _unit__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./unit */ "./node_modules/vega-lite/build/src/spec/unit.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isUnitSpec", function() { return _unit__WEBPACK_IMPORTED_MODULE_4__["isUnitSpec"]; });

/**
 * Definition for specifications in Vega-Lite.  In general, there are 3 variants of specs for each type of specs:
 * - Generic specs are generic versions of specs and they are parameterized differently for internal and external specs.
 * - The external specs (no prefix) would allow composite marks, row/column encodings, and mark macros like point/line overlay.
 * - The internal specs (with `Normalized` prefix) would only support primitive marks and support no macros/shortcuts.
 */





//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/spec/layer.js":
/*!********************************************************!*\
  !*** ./node_modules/vega-lite/build/src/spec/layer.js ***!
  \********************************************************/
/*! exports provided: isLayerSpec */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isLayerSpec", function() { return isLayerSpec; });
function isLayerSpec(spec) {
    return spec['layer'] !== undefined;
}
//# sourceMappingURL=layer.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/spec/map.js":
/*!******************************************************!*\
  !*** ./node_modules/vega-lite/build/src/spec/map.js ***!
  \******************************************************/
/*! exports provided: SpecMapper */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SpecMapper", function() { return SpecMapper; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../log */ "./node_modules/vega-lite/build/src/log/index.js");
/* harmony import */ var _concat__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./concat */ "./node_modules/vega-lite/build/src/spec/concat.js");
/* harmony import */ var _facet__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./facet */ "./node_modules/vega-lite/build/src/spec/facet.js");
/* harmony import */ var _layer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./layer */ "./node_modules/vega-lite/build/src/spec/layer.js");
/* harmony import */ var _repeat__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./repeat */ "./node_modules/vega-lite/build/src/spec/repeat.js");
/* harmony import */ var _unit__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./unit */ "./node_modules/vega-lite/build/src/spec/unit.js");







class SpecMapper {
    map(spec, params) {
        if (Object(_facet__WEBPACK_IMPORTED_MODULE_3__["isFacetSpec"])(spec)) {
            return this.mapFacet(spec, params);
        }
        else if (Object(_repeat__WEBPACK_IMPORTED_MODULE_5__["isRepeatSpec"])(spec)) {
            return this.mapRepeat(spec, params);
        }
        else if (Object(_concat__WEBPACK_IMPORTED_MODULE_2__["isHConcatSpec"])(spec)) {
            return this.mapHConcat(spec, params);
        }
        else if (Object(_concat__WEBPACK_IMPORTED_MODULE_2__["isVConcatSpec"])(spec)) {
            return this.mapVConcat(spec, params);
        }
        else if (Object(_concat__WEBPACK_IMPORTED_MODULE_2__["isConcatSpec"])(spec)) {
            return this.mapConcat(spec, params);
        }
        else {
            return this.mapLayerOrUnit(spec, params);
        }
    }
    mapLayerOrUnit(spec, params) {
        if (Object(_layer__WEBPACK_IMPORTED_MODULE_4__["isLayerSpec"])(spec)) {
            return this.mapLayer(spec, params);
        }
        else if (Object(_unit__WEBPACK_IMPORTED_MODULE_6__["isUnitSpec"])(spec)) {
            return this.mapUnit(spec, params);
        }
        throw new Error(_log__WEBPACK_IMPORTED_MODULE_1__["message"].INVALID_SPEC);
    }
    mapLayer(spec, params) {
        return Object.assign({}, spec, { layer: spec.layer.map(subspec => this.mapLayerOrUnit(subspec, params)) });
    }
    mapHConcat(spec, params) {
        return Object.assign({}, spec, { hconcat: spec.hconcat.map(subspec => this.map(subspec, params)) });
    }
    mapVConcat(spec, params) {
        return Object.assign({}, spec, { vconcat: spec.vconcat.map(subspec => this.map(subspec, params)) });
    }
    mapConcat(spec, params) {
        const { concat } = spec, rest = tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"](spec, ["concat"]);
        return Object.assign({}, rest, { concat: concat.map(subspec => this.map(subspec, params)) });
    }
    mapFacet(spec, params) {
        return Object.assign({}, spec, { 
            // TODO: remove "any" once we support all facet listed in https://github.com/vega/vega-lite/issues/2760
            spec: this.map(spec.spec, params) });
    }
    mapRepeat(spec, params) {
        return Object.assign({}, spec, { spec: this.map(spec.spec, params) });
    }
}
//# sourceMappingURL=map.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/spec/repeat.js":
/*!*********************************************************!*\
  !*** ./node_modules/vega-lite/build/src/spec/repeat.js ***!
  \*********************************************************/
/*! exports provided: isRepeatSpec */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isRepeatSpec", function() { return isRepeatSpec; });
function isRepeatSpec(spec) {
    return spec['repeat'] !== undefined;
}
//# sourceMappingURL=repeat.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/spec/toplevel.js":
/*!***********************************************************!*\
  !*** ./node_modules/vega-lite/build/src/spec/toplevel.js ***!
  \***********************************************************/
/*! exports provided: normalizeAutoSize, extractTopLevelProperties */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "normalizeAutoSize", function() { return normalizeAutoSize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extractTopLevelProperties", function() { return extractTopLevelProperties; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../log */ "./node_modules/vega-lite/build/src/log/index.js");


function _normalizeAutoSize(autosize) {
    return Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isString"])(autosize) ? { type: autosize } : autosize || {};
}
function normalizeAutoSize(topLevelAutosize, configAutosize, isUnitOrLayer = true) {
    const autosize = Object.assign({ type: 'pad' }, _normalizeAutoSize(configAutosize), _normalizeAutoSize(topLevelAutosize));
    if (autosize.type === 'fit') {
        if (!isUnitOrLayer) {
            _log__WEBPACK_IMPORTED_MODULE_1__["warn"](_log__WEBPACK_IMPORTED_MODULE_1__["message"].FIT_NON_SINGLE);
            autosize.type = 'pad';
        }
    }
    return autosize;
}
const TOP_LEVEL_PROPERTIES = [
    'background',
    'padding'
    // We do not include "autosize" here as it is supported by only unit and layer specs and thus need to be normalized
];
function extractTopLevelProperties(t) {
    return TOP_LEVEL_PROPERTIES.reduce((o, p) => {
        if (t && t[p] !== undefined) {
            o[p] = t[p];
        }
        return o;
    }, {});
}
//# sourceMappingURL=toplevel.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/spec/unit.js":
/*!*******************************************************!*\
  !*** ./node_modules/vega-lite/build/src/spec/unit.js ***!
  \*******************************************************/
/*! exports provided: isUnitSpec */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isUnitSpec", function() { return isUnitSpec; });
function isUnitSpec(spec) {
    return !!spec['mark'];
}
//# sourceMappingURL=unit.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/stack.js":
/*!***************************************************!*\
  !*** ./node_modules/vega-lite/build/src/stack.js ***!
  \***************************************************/
/*! exports provided: isStackOffset, STACKABLE_MARKS, STACK_BY_DEFAULT_MARKS, stack */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isStackOffset", function() { return isStackOffset; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "STACKABLE_MARKS", function() { return STACKABLE_MARKS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "STACK_BY_DEFAULT_MARKS", function() { return STACK_BY_DEFAULT_MARKS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "stack", function() { return stack; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var _aggregate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./aggregate */ "./node_modules/vega-lite/build/src/aggregate.js");
/* harmony import */ var _channel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./channel */ "./node_modules/vega-lite/build/src/channel.js");
/* harmony import */ var _channeldef__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./channeldef */ "./node_modules/vega-lite/build/src/channeldef.js");
/* harmony import */ var _encoding__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./encoding */ "./node_modules/vega-lite/build/src/encoding.js");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./log */ "./node_modules/vega-lite/build/src/log/index.js");
/* harmony import */ var _mark__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./mark */ "./node_modules/vega-lite/build/src/mark.js");
/* harmony import */ var _scale__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./scale */ "./node_modules/vega-lite/build/src/scale.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./util */ "./node_modules/vega-lite/build/src/util.js");









const STACK_OFFSET_INDEX = {
    zero: 1,
    center: 1,
    normalize: 1
};
function isStackOffset(s) {
    return !!STACK_OFFSET_INDEX[s];
}
const STACKABLE_MARKS = [_mark__WEBPACK_IMPORTED_MODULE_6__["BAR"], _mark__WEBPACK_IMPORTED_MODULE_6__["AREA"], _mark__WEBPACK_IMPORTED_MODULE_6__["RULE"], _mark__WEBPACK_IMPORTED_MODULE_6__["POINT"], _mark__WEBPACK_IMPORTED_MODULE_6__["CIRCLE"], _mark__WEBPACK_IMPORTED_MODULE_6__["SQUARE"], _mark__WEBPACK_IMPORTED_MODULE_6__["LINE"], _mark__WEBPACK_IMPORTED_MODULE_6__["TEXT"], _mark__WEBPACK_IMPORTED_MODULE_6__["TICK"]];
const STACK_BY_DEFAULT_MARKS = [_mark__WEBPACK_IMPORTED_MODULE_6__["BAR"], _mark__WEBPACK_IMPORTED_MODULE_6__["AREA"]];
function potentialStackedChannel(encoding) {
    const xDef = encoding.x;
    const yDef = encoding.y;
    if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_3__["isFieldDef"])(xDef) && Object(_channeldef__WEBPACK_IMPORTED_MODULE_3__["isFieldDef"])(yDef)) {
        if (xDef.type === 'quantitative' && yDef.type === 'quantitative') {
            if (xDef.stack) {
                return 'x';
            }
            else if (yDef.stack) {
                return 'y';
            }
            // if there is no explicit stacking, only apply stack if there is only one aggregate for x or y
            if (!!xDef.aggregate !== !!yDef.aggregate) {
                return xDef.aggregate ? 'x' : 'y';
            }
        }
        else if (xDef.type === 'quantitative') {
            return 'x';
        }
        else if (yDef.type === 'quantitative') {
            return 'y';
        }
    }
    else if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_3__["isFieldDef"])(xDef) && xDef.type === 'quantitative') {
        return 'x';
    }
    else if (Object(_channeldef__WEBPACK_IMPORTED_MODULE_3__["isFieldDef"])(yDef) && yDef.type === 'quantitative') {
        return 'y';
    }
    return undefined;
}
// Note: CompassQL uses this method and only pass in required properties of each argument object.
// If required properties change, make sure to update CompassQL.
function stack(m, encoding, stackConfig, opt = {}) {
    const mark = Object(_mark__WEBPACK_IMPORTED_MODULE_6__["isMarkDef"])(m) ? m.type : m;
    // Should have stackable mark
    if (!Object(_util__WEBPACK_IMPORTED_MODULE_8__["contains"])(STACKABLE_MARKS, mark)) {
        return null;
    }
    const fieldChannel = potentialStackedChannel(encoding);
    if (!fieldChannel) {
        return null;
    }
    const stackedFieldDef = encoding[fieldChannel];
    const stackedField = Object(_channeldef__WEBPACK_IMPORTED_MODULE_3__["isStringFieldDef"])(stackedFieldDef) ? Object(_channeldef__WEBPACK_IMPORTED_MODULE_3__["vgField"])(stackedFieldDef, {}) : undefined;
    const dimensionChannel = fieldChannel === 'x' ? 'y' : 'x';
    const dimensionDef = encoding[dimensionChannel];
    const dimensionField = Object(_channeldef__WEBPACK_IMPORTED_MODULE_3__["isStringFieldDef"])(dimensionDef) ? Object(_channeldef__WEBPACK_IMPORTED_MODULE_3__["vgField"])(dimensionDef, {}) : undefined;
    // Should have grouping level of detail that is different from the dimension field
    const stackBy = _channel__WEBPACK_IMPORTED_MODULE_2__["NONPOSITION_CHANNELS"].reduce((sc, channel) => {
        // Ignore tooltip in stackBy (https://github.com/vega/vega-lite/issues/4001)
        if (channel !== 'tooltip' && Object(_encoding__WEBPACK_IMPORTED_MODULE_4__["channelHasField"])(encoding, channel)) {
            const channelDef = encoding[channel];
            (Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isArray"])(channelDef) ? channelDef : [channelDef]).forEach(cDef => {
                const fieldDef = Object(_channeldef__WEBPACK_IMPORTED_MODULE_3__["getTypedFieldDef"])(cDef);
                if (fieldDef.aggregate) {
                    return;
                }
                // Check whether the channel's field is identical to x/y's field or if the channel is a repeat
                const f = Object(_channeldef__WEBPACK_IMPORTED_MODULE_3__["isStringFieldDef"])(fieldDef) ? Object(_channeldef__WEBPACK_IMPORTED_MODULE_3__["vgField"])(fieldDef, {}) : undefined;
                if (
                // if fielddef is a repeat, just include it in the stack by
                !f ||
                    // otherwise, the field must be different from x and y fields.
                    (f !== dimensionField && f !== stackedField)) {
                    sc.push({ channel, fieldDef });
                }
            });
        }
        return sc;
    }, []);
    if (stackBy.length === 0) {
        return null;
    }
    // Automatically determine offset
    let offset;
    if (stackedFieldDef.stack !== undefined) {
        if (Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isBoolean"])(stackedFieldDef.stack)) {
            offset = stackedFieldDef.stack ? 'zero' : null;
        }
        else {
            offset = stackedFieldDef.stack;
        }
    }
    else if (Object(_util__WEBPACK_IMPORTED_MODULE_8__["contains"])(STACK_BY_DEFAULT_MARKS, mark)) {
        // Bar and Area with sum ops are automatically stacked by default
        offset = Object(_util__WEBPACK_IMPORTED_MODULE_8__["getFirstDefined"])(stackConfig, 'zero');
    }
    else {
        offset = stackConfig;
    }
    if (!offset || !isStackOffset(offset)) {
        return null;
    }
    // warn when stacking non-linear
    if (stackedFieldDef.scale && stackedFieldDef.scale.type && stackedFieldDef.scale.type !== _scale__WEBPACK_IMPORTED_MODULE_7__["ScaleType"].LINEAR) {
        if (opt.disallowNonLinearStack) {
            return null;
        }
        else {
            _log__WEBPACK_IMPORTED_MODULE_5__["warn"](_log__WEBPACK_IMPORTED_MODULE_5__["message"].cannotStackNonLinearScale(stackedFieldDef.scale.type));
        }
    }
    // Check if it is a ranged mark
    if (Object(_encoding__WEBPACK_IMPORTED_MODULE_4__["channelHasField"])(encoding, fieldChannel === _channel__WEBPACK_IMPORTED_MODULE_2__["X"] ? _channel__WEBPACK_IMPORTED_MODULE_2__["X2"] : _channel__WEBPACK_IMPORTED_MODULE_2__["Y2"])) {
        if (stackedFieldDef.stack !== undefined) {
            _log__WEBPACK_IMPORTED_MODULE_5__["warn"](_log__WEBPACK_IMPORTED_MODULE_5__["message"].cannotStackRangedMark(fieldChannel));
        }
        return null;
    }
    // Warn if stacking summative aggregate
    if (stackedFieldDef.aggregate && !Object(_util__WEBPACK_IMPORTED_MODULE_8__["contains"])(_aggregate__WEBPACK_IMPORTED_MODULE_1__["SUM_OPS"], stackedFieldDef.aggregate)) {
        _log__WEBPACK_IMPORTED_MODULE_5__["warn"](_log__WEBPACK_IMPORTED_MODULE_5__["message"].stackNonSummativeAggregate(stackedFieldDef.aggregate));
    }
    return {
        groupbyChannel: dimensionDef ? dimensionChannel : undefined,
        fieldChannel,
        impute: Object(_mark__WEBPACK_IMPORTED_MODULE_6__["isPathMark"])(mark),
        stackBy,
        offset
    };
}
//# sourceMappingURL=stack.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/timeunit.js":
/*!******************************************************!*\
  !*** ./node_modules/vega-lite/build/src/timeunit.js ***!
  \******************************************************/
/*! exports provided: TimeUnit, TIMEUNIT_PARTS, isLocalSingleTimeUnit, isUtcSingleTimeUnit, isUTCTimeUnit, getLocalTimeUnit, TIMEUNITS, isTimeUnit, convert, getTimeUnitParts, containsTimeUnit, fieldExpr, getDateTimeComponents, formatExpression, normalizeTimeUnit */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TimeUnit", function() { return TimeUnit; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TIMEUNIT_PARTS", function() { return TIMEUNIT_PARTS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isLocalSingleTimeUnit", function() { return isLocalSingleTimeUnit; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isUtcSingleTimeUnit", function() { return isUtcSingleTimeUnit; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isUTCTimeUnit", function() { return isUTCTimeUnit; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getLocalTimeUnit", function() { return getLocalTimeUnit; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TIMEUNITS", function() { return TIMEUNITS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isTimeUnit", function() { return isTimeUnit; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "convert", function() { return convert; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getTimeUnitParts", function() { return getTimeUnitParts; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "containsTimeUnit", function() { return containsTimeUnit; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fieldExpr", function() { return fieldExpr; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getDateTimeComponents", function() { return getDateTimeComponents; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "formatExpression", function() { return formatExpression; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "normalizeTimeUnit", function() { return normalizeTimeUnit; });
/* harmony import */ var _datetime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./datetime */ "./node_modules/vega-lite/build/src/datetime.js");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./log */ "./node_modules/vega-lite/build/src/log/index.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util */ "./node_modules/vega-lite/build/src/util.js");



var TimeUnit;
(function (TimeUnit) {
    TimeUnit.YEAR = 'year';
    TimeUnit.MONTH = 'month';
    TimeUnit.DAY = 'day';
    TimeUnit.DATE = 'date';
    TimeUnit.HOURS = 'hours';
    TimeUnit.MINUTES = 'minutes';
    TimeUnit.SECONDS = 'seconds';
    TimeUnit.MILLISECONDS = 'milliseconds';
    TimeUnit.YEARMONTH = 'yearmonth';
    TimeUnit.YEARMONTHDATE = 'yearmonthdate';
    TimeUnit.YEARMONTHDATEHOURS = 'yearmonthdatehours';
    TimeUnit.YEARMONTHDATEHOURSMINUTES = 'yearmonthdatehoursminutes';
    TimeUnit.YEARMONTHDATEHOURSMINUTESSECONDS = 'yearmonthdatehoursminutesseconds';
    // MONTHDATE and MONTHDATEHOURS always include 29 February since we use year 0th (which is a leap year);
    TimeUnit.MONTHDATE = 'monthdate';
    TimeUnit.MONTHDATEHOURS = 'monthdatehours';
    TimeUnit.HOURSMINUTES = 'hoursminutes';
    TimeUnit.HOURSMINUTESSECONDS = 'hoursminutesseconds';
    TimeUnit.MINUTESSECONDS = 'minutesseconds';
    TimeUnit.SECONDSMILLISECONDS = 'secondsmilliseconds';
    TimeUnit.QUARTER = 'quarter';
    TimeUnit.YEARQUARTER = 'yearquarter';
    TimeUnit.QUARTERMONTH = 'quartermonth';
    TimeUnit.YEARQUARTERMONTH = 'yearquartermonth';
    TimeUnit.UTCYEAR = 'utcyear';
    TimeUnit.UTCMONTH = 'utcmonth';
    TimeUnit.UTCDAY = 'utcday';
    TimeUnit.UTCDATE = 'utcdate';
    TimeUnit.UTCHOURS = 'utchours';
    TimeUnit.UTCMINUTES = 'utcminutes';
    TimeUnit.UTCSECONDS = 'utcseconds';
    TimeUnit.UTCMILLISECONDS = 'utcmilliseconds';
    TimeUnit.UTCYEARMONTH = 'utcyearmonth';
    TimeUnit.UTCYEARMONTHDATE = 'utcyearmonthdate';
    TimeUnit.UTCYEARMONTHDATEHOURS = 'utcyearmonthdatehours';
    TimeUnit.UTCYEARMONTHDATEHOURSMINUTES = 'utcyearmonthdatehoursminutes';
    TimeUnit.UTCYEARMONTHDATEHOURSMINUTESSECONDS = 'utcyearmonthdatehoursminutesseconds';
    // UTCMONTHDATE and UTCMONTHDATEHOURS always include 29 February since we use year 0th (which is a leap year);
    TimeUnit.UTCMONTHDATE = 'utcmonthdate';
    TimeUnit.UTCMONTHDATEHOURS = 'utcmonthdatehours';
    TimeUnit.UTCHOURSMINUTES = 'utchoursminutes';
    TimeUnit.UTCHOURSMINUTESSECONDS = 'utchoursminutesseconds';
    TimeUnit.UTCMINUTESSECONDS = 'utcminutesseconds';
    TimeUnit.UTCSECONDSMILLISECONDS = 'utcsecondsmilliseconds';
    TimeUnit.UTCQUARTER = 'utcquarter';
    TimeUnit.UTCYEARQUARTER = 'utcyearquarter';
    TimeUnit.UTCQUARTERMONTH = 'utcquartermonth';
    TimeUnit.UTCYEARQUARTERMONTH = 'utcyearquartermonth';
})(TimeUnit || (TimeUnit = {}));
/** Time Unit that only corresponds to only one part of Date objects. */
const LOCAL_SINGLE_TIMEUNIT_INDEX = {
    year: 1,
    quarter: 1,
    month: 1,
    day: 1,
    date: 1,
    hours: 1,
    minutes: 1,
    seconds: 1,
    milliseconds: 1
};
const TIMEUNIT_PARTS = Object(_util__WEBPACK_IMPORTED_MODULE_2__["flagKeys"])(LOCAL_SINGLE_TIMEUNIT_INDEX);
function isLocalSingleTimeUnit(timeUnit) {
    return !!LOCAL_SINGLE_TIMEUNIT_INDEX[timeUnit];
}
const UTC_SINGLE_TIMEUNIT_INDEX = {
    utcyear: 1,
    utcquarter: 1,
    utcmonth: 1,
    utcday: 1,
    utcdate: 1,
    utchours: 1,
    utcminutes: 1,
    utcseconds: 1,
    utcmilliseconds: 1
};
function isUtcSingleTimeUnit(timeUnit) {
    return !!UTC_SINGLE_TIMEUNIT_INDEX[timeUnit];
}
const LOCAL_MULTI_TIMEUNIT_INDEX = {
    yearquarter: 1,
    yearquartermonth: 1,
    yearmonth: 1,
    yearmonthdate: 1,
    yearmonthdatehours: 1,
    yearmonthdatehoursminutes: 1,
    yearmonthdatehoursminutesseconds: 1,
    quartermonth: 1,
    monthdate: 1,
    monthdatehours: 1,
    hoursminutes: 1,
    hoursminutesseconds: 1,
    minutesseconds: 1,
    secondsmilliseconds: 1
};
const UTC_MULTI_TIMEUNIT_INDEX = {
    utcyearquarter: 1,
    utcyearquartermonth: 1,
    utcyearmonth: 1,
    utcyearmonthdate: 1,
    utcyearmonthdatehours: 1,
    utcyearmonthdatehoursminutes: 1,
    utcyearmonthdatehoursminutesseconds: 1,
    utcquartermonth: 1,
    utcmonthdate: 1,
    utcmonthdatehours: 1,
    utchoursminutes: 1,
    utchoursminutesseconds: 1,
    utcminutesseconds: 1,
    utcsecondsmilliseconds: 1
};
const UTC_TIMEUNIT_INDEX = Object.assign({}, UTC_SINGLE_TIMEUNIT_INDEX, UTC_MULTI_TIMEUNIT_INDEX);
function isUTCTimeUnit(t) {
    return !!UTC_TIMEUNIT_INDEX[t];
}
function getLocalTimeUnit(t) {
    return t.substr(3);
}
const TIMEUNIT_INDEX = Object.assign({}, LOCAL_SINGLE_TIMEUNIT_INDEX, UTC_SINGLE_TIMEUNIT_INDEX, LOCAL_MULTI_TIMEUNIT_INDEX, UTC_MULTI_TIMEUNIT_INDEX);
const TIMEUNITS = Object(_util__WEBPACK_IMPORTED_MODULE_2__["flagKeys"])(TIMEUNIT_INDEX);
function isTimeUnit(t) {
    return !!TIMEUNIT_INDEX[t];
}
const SET_DATE_METHOD = {
    year: 'setFullYear',
    month: 'setMonth',
    date: 'setDate',
    hours: 'setHours',
    minutes: 'setMinutes',
    seconds: 'setSeconds',
    milliseconds: 'setMilliseconds',
    // Day and quarter have their own special cases
    quarter: null,
    day: null
};
/**
 * Converts a date to only have the measurements relevant to the specified unit
 * i.e. ('yearmonth', '2000-12-04 07:58:14') -> '2000-12-01 00:00:00'
 * Note: the base date is Jan 01 1900 00:00:00
 */
function convert(unit, date) {
    const isUTC = isUTCTimeUnit(unit);
    const result = isUTC
        ? // start with uniform date
            new Date(Date.UTC(1972, 0, 1, 0, 0, 0, 0)) // 1972 is the first leap year after 1970, the start of unix time
        : new Date(1972, 0, 1, 0, 0, 0, 0);
    for (const timeUnitPart of TIMEUNIT_PARTS) {
        if (containsTimeUnit(unit, timeUnitPart)) {
            switch (timeUnitPart) {
                case TimeUnit.DAY:
                    throw new Error("Cannot convert to TimeUnits containing 'day'");
                case TimeUnit.QUARTER: {
                    const { getDateMethod, setDateMethod } = dateMethods('month', isUTC);
                    // indicate quarter by setting month to be the first of the quarter i.e. may (4) -> april (3)
                    result[setDateMethod](Math.floor(date[getDateMethod]() / 3) * 3);
                    break;
                }
                default: {
                    const { getDateMethod, setDateMethod } = dateMethods(timeUnitPart, isUTC);
                    result[setDateMethod](date[getDateMethod]());
                }
            }
        }
    }
    return result;
}
function dateMethods(singleUnit, isUtc) {
    const rawSetDateMethod = SET_DATE_METHOD[singleUnit];
    const setDateMethod = isUtc ? 'setUTC' + rawSetDateMethod.substr(3) : rawSetDateMethod;
    const getDateMethod = 'get' + (isUtc ? 'UTC' : '') + rawSetDateMethod.substr(3);
    return { setDateMethod, getDateMethod };
}
function getTimeUnitParts(timeUnit) {
    return TIMEUNIT_PARTS.reduce((parts, part) => {
        if (containsTimeUnit(timeUnit, part)) {
            return [...parts, part];
        }
        return parts;
    }, []);
}
/** Returns true if fullTimeUnit contains the timeUnit, false otherwise. */
function containsTimeUnit(fullTimeUnit, timeUnit) {
    const index = fullTimeUnit.indexOf(timeUnit);
    return (index > -1 && (timeUnit !== TimeUnit.SECONDS || index === 0 || fullTimeUnit.charAt(index - 1) !== 'i') // exclude milliseconds
    );
}
/**
 * Returns Vega expresssion for a given timeUnit and fieldRef
 */
function fieldExpr(fullTimeUnit, field) {
    const fieldRef = Object(_util__WEBPACK_IMPORTED_MODULE_2__["accessPathWithDatum"])(field);
    const utc = isUTCTimeUnit(fullTimeUnit) ? 'utc' : '';
    function func(timeUnit) {
        if (timeUnit === TimeUnit.QUARTER) {
            // quarter starting at 0 (0,3,6,9).
            return `(${utc}quarter(${fieldRef})-1)`;
        }
        else {
            return `${utc}${timeUnit}(${fieldRef})`;
        }
    }
    const d = TIMEUNIT_PARTS.reduce((dateExpr, tu) => {
        if (containsTimeUnit(fullTimeUnit, tu)) {
            dateExpr[tu] = func(tu);
        }
        return dateExpr;
    }, {});
    return Object(_datetime__WEBPACK_IMPORTED_MODULE_0__["dateTimeExpr"])(d);
}
function getDateTimeComponents(timeUnit, shortTimeLabels) {
    if (!timeUnit) {
        return undefined;
    }
    const dateComponents = [];
    const hasYear = containsTimeUnit(timeUnit, TimeUnit.YEAR);
    if (containsTimeUnit(timeUnit, TimeUnit.MONTH)) {
        // By default use short month name
        dateComponents.push(shortTimeLabels !== false ? '%b' : '%B');
    }
    if (containsTimeUnit(timeUnit, TimeUnit.DAY)) {
        dateComponents.push(shortTimeLabels ? '%a' : '%A');
    }
    else if (containsTimeUnit(timeUnit, TimeUnit.DATE)) {
        dateComponents.push('%d' + (hasYear ? ',' : '')); // add comma if there is year
    }
    if (hasYear) {
        dateComponents.push(shortTimeLabels ? '%y' : '%Y');
    }
    const timeComponents = [];
    if (containsTimeUnit(timeUnit, TimeUnit.HOURS)) {
        timeComponents.push('%H');
    }
    if (containsTimeUnit(timeUnit, TimeUnit.MINUTES)) {
        timeComponents.push('%M');
    }
    if (containsTimeUnit(timeUnit, TimeUnit.SECONDS)) {
        timeComponents.push('%S');
    }
    if (containsTimeUnit(timeUnit, TimeUnit.MILLISECONDS)) {
        timeComponents.push('%L');
    }
    const dateTimeComponents = [];
    if (dateComponents.length > 0) {
        dateTimeComponents.push(dateComponents.join(' '));
    }
    if (timeComponents.length > 0) {
        dateTimeComponents.push(timeComponents.join(':'));
    }
    return dateTimeComponents;
}
/**
 * returns the signal expression used for axis labels for a time unit
 */
function formatExpression(timeUnit, field, shortTimeLabels, isUTCScale) {
    if (!timeUnit) {
        return undefined;
    }
    const dateTimeComponents = getDateTimeComponents(timeUnit, shortTimeLabels);
    let expression = '';
    if (containsTimeUnit(timeUnit, TimeUnit.QUARTER)) {
        // special expression for quarter as prefix
        expression = `'Q' + quarter(${field})`;
    }
    if (dateTimeComponents.length > 0) {
        if (expression) {
            // Add space between quarter and main time format
            expression += ` + ' ' + `;
        }
        // We only use utcFormat for utc scale
        // For utc time units, the data is already converted as a part of timeUnit transform.
        // Thus, utc time units should use timeFormat to avoid shifting the time twice.
        if (isUTCScale) {
            expression += `utcFormat(${field}, '${dateTimeComponents.join(' ')}')`;
        }
        else {
            expression += `timeFormat(${field}, '${dateTimeComponents.join(' ')}')`;
        }
    }
    // If expression is still an empty string, return undefined instead.
    return expression || undefined;
}
function normalizeTimeUnit(timeUnit) {
    if (timeUnit !== 'day' && timeUnit.indexOf('day') >= 0) {
        _log__WEBPACK_IMPORTED_MODULE_1__["warn"](_log__WEBPACK_IMPORTED_MODULE_1__["message"].dayReplacedWithDate(timeUnit));
        return timeUnit.replace('day', 'date');
    }
    return timeUnit;
}
//# sourceMappingURL=timeunit.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/title.js":
/*!***************************************************!*\
  !*** ./node_modules/vega-lite/build/src/title.js ***!
  \***************************************************/
/*! exports provided: extractTitleConfig */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extractTitleConfig", function() { return extractTitleConfig; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");

function extractTitleConfig(titleConfig) {
    const { 
    // These are non-mark title config that need to be hardcoded
    anchor, frame, offset, orient, 
    // color needs to be redirect to fill
    color } = titleConfig, 
    // The rest are mark config.
    titleMarkConfig = tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"](titleConfig, ["anchor", "frame", "offset", "orient", "color"]);
    const mark = Object.assign({}, titleMarkConfig, (color ? { fill: color } : {}));
    const nonMark = Object.assign({}, (anchor ? { anchor } : {}), (frame ? { frame } : {}), (offset ? { offset } : {}), (orient ? { orient } : {}));
    return { mark, nonMark };
}
//# sourceMappingURL=title.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/transform.js":
/*!*******************************************************!*\
  !*** ./node_modules/vega-lite/build/src/transform.js ***!
  \*******************************************************/
/*! exports provided: isFilter, isImputeSequence, isLookup, isSample, isWindow, isJoinAggregate, isFlatten, isCalculate, isBin, isImpute, isTimeUnit, isAggregate, isStack, isFold, normalizeTransform */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isFilter", function() { return isFilter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isImputeSequence", function() { return isImputeSequence; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isLookup", function() { return isLookup; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isSample", function() { return isSample; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isWindow", function() { return isWindow; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isJoinAggregate", function() { return isJoinAggregate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isFlatten", function() { return isFlatten; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isCalculate", function() { return isCalculate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isBin", function() { return isBin; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isImpute", function() { return isImpute; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isTimeUnit", function() { return isTimeUnit; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isAggregate", function() { return isAggregate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isStack", function() { return isStack; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isFold", function() { return isFold; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "normalizeTransform", function() { return normalizeTransform; });
/* harmony import */ var _logical__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./logical */ "./node_modules/vega-lite/build/src/logical.js");
/* harmony import */ var _predicate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./predicate */ "./node_modules/vega-lite/build/src/predicate.js");


function isFilter(t) {
    return t['filter'] !== undefined;
}
function isImputeSequence(t) {
    return t && t['start'] !== undefined && t['stop'] !== undefined;
}
function isLookup(t) {
    return t['lookup'] !== undefined;
}
function isSample(t) {
    return t['sample'] !== undefined;
}
function isWindow(t) {
    return t['window'] !== undefined;
}
function isJoinAggregate(t) {
    return t['joinaggregate'] !== undefined;
}
function isFlatten(t) {
    return t['flatten'] !== undefined;
}
function isCalculate(t) {
    return t['calculate'] !== undefined;
}
function isBin(t) {
    return !!t['bin'];
}
function isImpute(t) {
    return t['impute'] !== undefined;
}
function isTimeUnit(t) {
    return t['timeUnit'] !== undefined;
}
function isAggregate(t) {
    return t['aggregate'] !== undefined;
}
function isStack(t) {
    return t['stack'] !== undefined;
}
function isFold(t) {
    return t['fold'] !== undefined;
}
function normalizeTransform(transform) {
    return transform.map(t => {
        if (isFilter(t)) {
            return {
                filter: Object(_logical__WEBPACK_IMPORTED_MODULE_0__["normalizeLogicalOperand"])(t.filter, _predicate__WEBPACK_IMPORTED_MODULE_1__["normalizePredicate"])
            };
        }
        return t;
    });
}
//# sourceMappingURL=transform.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/transformextract.js":
/*!**************************************************************!*\
  !*** ./node_modules/vega-lite/build/src/transformextract.js ***!
  \**************************************************************/
/*! exports provided: extractTransforms */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extractTransforms", function() { return extractTransforms; });
/* harmony import */ var _encoding__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./encoding */ "./node_modules/vega-lite/build/src/encoding.js");
/* harmony import */ var _spec_map__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./spec/map */ "./node_modules/vega-lite/build/src/spec/map.js");


class TransformExtractMapper extends _spec_map__WEBPACK_IMPORTED_MODULE_1__["SpecMapper"] {
    mapUnit(spec, { config }) {
        if (spec.encoding) {
            const { encoding: oldEncoding, transform: oldTransforms } = spec;
            const { bins, timeUnits, aggregate, groupby, encoding } = Object(_encoding__WEBPACK_IMPORTED_MODULE_0__["extractTransformsFromEncoding"])(oldEncoding, config);
            const transform = [
                ...(oldTransforms ? oldTransforms : []),
                ...bins,
                ...timeUnits,
                ...(!aggregate.length ? [] : [{ aggregate, groupby }])
            ];
            return Object.assign({}, spec, (transform.length > 0 ? { transform } : {}), { encoding });
        }
        else {
            return spec;
        }
    }
}
const extractor = new TransformExtractMapper();
/**
 * Modifies spec extracting transformations from encoding and moving them to the transforms array
 */
function extractTransforms(spec, config) {
    return extractor.map(spec, { config });
}
//# sourceMappingURL=transformextract.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/type.js":
/*!**************************************************!*\
  !*** ./node_modules/vega-lite/build/src/type.js ***!
  \**************************************************/
/*! exports provided: TYPE_INDEX, isType, QUANTITATIVE, ORDINAL, TEMPORAL, NOMINAL, GEOJSON, getFullName */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TYPE_INDEX", function() { return TYPE_INDEX; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isType", function() { return isType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "QUANTITATIVE", function() { return QUANTITATIVE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ORDINAL", function() { return ORDINAL; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TEMPORAL", function() { return TEMPORAL; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NOMINAL", function() { return NOMINAL; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GEOJSON", function() { return GEOJSON; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getFullName", function() { return getFullName; });
/** Constants and utilities for data type */
/** Data type based on level of measurement */
const TYPE_INDEX = {
    quantitative: 1,
    ordinal: 1,
    temporal: 1,
    nominal: 1,
    geojson: 1
};
function isType(t) {
    return !!TYPE_INDEX[t];
}
const QUANTITATIVE = 'quantitative';
const ORDINAL = 'ordinal';
const TEMPORAL = 'temporal';
const NOMINAL = 'nominal';
const GEOJSON = 'geojson';
/**
 * Get full, lowercase type name for a given type.
 * @param  type
 * @return Full type name.
 */
function getFullName(type) {
    if (type) {
        type = type.toLowerCase();
        switch (type) {
            case 'q':
            case QUANTITATIVE:
                return 'quantitative';
            case 't':
            case TEMPORAL:
                return 'temporal';
            case 'o':
            case ORDINAL:
                return 'ordinal';
            case 'n':
            case NOMINAL:
                return 'nominal';
            case GEOJSON:
                return 'geojson';
        }
    }
    // If we get invalid input, return undefined type.
    return undefined;
}
//# sourceMappingURL=type.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/util.js":
/*!**************************************************!*\
  !*** ./node_modules/vega-lite/build/src/util.js ***!
  \**************************************************/
/*! exports provided: deepEqual, duplicate, pick, omit, stringify, hash, isNullOrFalse, contains, without, union, some, every, flatten, fill, mergeDeep, unique, isEqual, setEqual, hasIntersection, prefixGenerator, fieldIntersection, isNumeric, differArray, keys, vals, entries, flagKeys, isBoolean, varName, logicalExpr, deleteNestedProperty, titlecase, accessPathWithDatum, flatAccessWithDatum, replacePathInField, removePathFromField, accessPathDepth, getFirstDefined, uniqueId, resetIdCounter, internalField, isInternalField, normalizeAngle */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "deepEqual", function() { return deepEqual; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "duplicate", function() { return duplicate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pick", function() { return pick; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "omit", function() { return omit; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "stringify", function() { return stringify; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hash", function() { return hash; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isNullOrFalse", function() { return isNullOrFalse; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "contains", function() { return contains; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "without", function() { return without; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "union", function() { return union; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "some", function() { return some; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "every", function() { return every; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "flatten", function() { return flatten; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fill", function() { return fill; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mergeDeep", function() { return mergeDeep; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "unique", function() { return unique; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isEqual", function() { return isEqual; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setEqual", function() { return setEqual; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hasIntersection", function() { return hasIntersection; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "prefixGenerator", function() { return prefixGenerator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fieldIntersection", function() { return fieldIntersection; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isNumeric", function() { return isNumeric; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "differArray", function() { return differArray; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "keys", function() { return keys; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vals", function() { return vals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "entries", function() { return entries; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "flagKeys", function() { return flagKeys; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isBoolean", function() { return isBoolean; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "varName", function() { return varName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "logicalExpr", function() { return logicalExpr; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "deleteNestedProperty", function() { return deleteNestedProperty; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "titlecase", function() { return titlecase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "accessPathWithDatum", function() { return accessPathWithDatum; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "flatAccessWithDatum", function() { return flatAccessWithDatum; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "replacePathInField", function() { return replacePathInField; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "removePathFromField", function() { return removePathFromField; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "accessPathDepth", function() { return accessPathDepth; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getFirstDefined", function() { return getFirstDefined; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "uniqueId", function() { return uniqueId; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "resetIdCounter", function() { return resetIdCounter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "internalField", function() { return internalField; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isInternalField", function() { return isInternalField; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "normalizeAngle", function() { return normalizeAngle; });
/* harmony import */ var clone__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! clone */ "./node_modules/clone/clone.js");
/* harmony import */ var clone__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(clone__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var fast_deep_equal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! fast-deep-equal */ "./node_modules/fast-deep-equal/index.js");
/* harmony import */ var fast_deep_equal__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(fast_deep_equal__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var fast_json_stable_stringify__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! fast-json-stable-stringify */ "./node_modules/fast-json-stable-stringify/index.js");
/* harmony import */ var fast_json_stable_stringify__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(fast_json_stable_stringify__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var _logical__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./logical */ "./node_modules/vega-lite/build/src/logical.js");





const deepEqual = fast_deep_equal__WEBPACK_IMPORTED_MODULE_1___default.a;
const duplicate = clone__WEBPACK_IMPORTED_MODULE_0___default.a;
/**
 * Creates an object composed of the picked object properties.
 *
 * var object = {'a': 1, 'b': '2', 'c': 3};
 * pick(object, ['a', 'c']);
 * // → {'a': 1, 'c': 3}
 *
 */
function pick(obj, props) {
    const copy = {};
    for (const prop of props) {
        if (obj.hasOwnProperty(prop)) {
            copy[prop] = obj[prop];
        }
    }
    return copy;
}
/**
 * The opposite of _.pick; this method creates an object composed of the own
 * and inherited enumerable string keyed properties of object that are not omitted.
 */
function omit(obj, props) {
    const copy = Object.assign({}, obj);
    for (const prop of props) {
        delete copy[prop];
    }
    return copy;
}
/**
 * Monkey patch Set so that `stringify` produces a string representation of sets.
 */
Set.prototype['toJSON'] = function () {
    return `Set(${[...this].map(x => fast_json_stable_stringify__WEBPACK_IMPORTED_MODULE_2___default()(x)).join(',')})`;
};
/**
 * Converts any object to a string representation that can be consumed by humans.
 */
const stringify = fast_json_stable_stringify__WEBPACK_IMPORTED_MODULE_2___default.a;
/**
 * Converts any object to a string of limited size, or a number.
 */
function hash(a) {
    if (Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["isNumber"])(a)) {
        return a;
    }
    const str = Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["isString"])(a) ? a : fast_json_stable_stringify__WEBPACK_IMPORTED_MODULE_2___default()(a);
    // short strings can be used as hash directly, longer strings are hashed to reduce memory usage
    if (str.length < 250) {
        return str;
    }
    // from http://werxltd.com/wp/2010/05/13/javascript-implementation-of-javas-string-hashcode-method/
    let h = 0;
    for (let i = 0; i < str.length; i++) {
        const char = str.charCodeAt(i);
        h = (h << 5) - h + char;
        h = h & h; // Convert to 32bit integer
    }
    return h;
}
function isNullOrFalse(x) {
    return x === false || x === null;
}
function contains(array, item) {
    return array.indexOf(item) > -1;
}
/** Returns the array without the elements in item */
function without(array, excludedItems) {
    return array.filter(item => !contains(excludedItems, item));
}
function union(array, other) {
    return array.concat(without(other, array));
}
/**
 * Returns true if any item returns true.
 */
function some(arr, f) {
    let i = 0;
    for (const [k, a] of arr.entries()) {
        if (f(a, k, i++)) {
            return true;
        }
    }
    return false;
}
/**
 * Returns true if all items return true.
 */
function every(arr, f) {
    let i = 0;
    for (const [k, a] of arr.entries()) {
        if (!f(a, k, i++)) {
            return false;
        }
    }
    return true;
}
function flatten(arrays) {
    return [].concat(...arrays);
}
function fill(val, len) {
    const arr = new Array(len);
    for (let i = 0; i < len; ++i) {
        arr[i] = val;
    }
    return arr;
}
/**
 * recursively merges src into dest
 */
function mergeDeep(dest, ...src) {
    for (const s of src) {
        dest = deepMerge_(dest, s);
    }
    return dest;
}
// recursively merges src into dest
function deepMerge_(dest, src) {
    if (typeof src !== 'object' || src === null) {
        return dest;
    }
    for (const p in src) {
        if (!src.hasOwnProperty(p)) {
            continue;
        }
        if (src[p] === undefined) {
            continue;
        }
        if (typeof src[p] !== 'object' || Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["isArray"])(src[p]) || src[p] === null) {
            dest[p] = src[p];
        }
        else if (typeof dest[p] !== 'object' || dest[p] === null) {
            dest[p] = mergeDeep(Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["isArray"])(src[p].constructor) ? [] : {}, src[p]);
        }
        else {
            mergeDeep(dest[p], src[p]);
        }
    }
    return dest;
}
function unique(values, f) {
    const results = [];
    const u = {};
    let v;
    for (const val of values) {
        v = f(val);
        if (v in u) {
            continue;
        }
        u[v] = 1;
        results.push(val);
    }
    return results;
}
/**
 * Returns true if the two dictionaries disagree. Applies only to defined values.
 */
function isEqual(dict, other) {
    const dictKeys = keys(dict);
    const otherKeys = keys(other);
    if (dictKeys.length !== otherKeys.length) {
        return false;
    }
    for (const key of dictKeys) {
        if (dict[key] !== other[key]) {
            return false;
        }
    }
    return true;
}
function setEqual(a, b) {
    if (a.size !== b.size) {
        return false;
    }
    for (const e of a) {
        if (!b.has(e)) {
            return false;
        }
    }
    return true;
}
function hasIntersection(a, b) {
    for (const key of a) {
        if (b.has(key)) {
            return true;
        }
    }
    return false;
}
function prefixGenerator(a) {
    const prefixes = new Set();
    for (const x of a) {
        const splitField = Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["splitAccessPath"])(x);
        // Wrap every element other than the first in `[]`
        const wrappedWithAccessors = splitField.map((y, i) => (i === 0 ? y : `[${y}]`));
        const computedPrefixes = wrappedWithAccessors.map((_, i) => wrappedWithAccessors.slice(0, i + 1).join(''));
        computedPrefixes.forEach(y => prefixes.add(y));
    }
    return prefixes;
}
function fieldIntersection(a, b) {
    return hasIntersection(prefixGenerator(a), prefixGenerator(b));
}
function isNumeric(num) {
    return !isNaN(num);
}
function differArray(array, other) {
    if (array.length !== other.length) {
        return true;
    }
    array.sort();
    other.sort();
    for (let i = 0; i < array.length; i++) {
        if (other[i] !== array[i]) {
            return true;
        }
    }
    return false;
}
// This is a stricter version of Object.keys but with better types. See https://github.com/Microsoft/TypeScript/pull/12253#issuecomment-263132208
const keys = Object.keys;
function vals(x) {
    const _vals = [];
    for (const k in x) {
        if (x.hasOwnProperty(k)) {
            _vals.push(x[k]);
        }
    }
    return _vals;
}
function entries(x) {
    const _entries = [];
    for (const k in x) {
        if (x.hasOwnProperty(k)) {
            _entries.push({
                key: k,
                value: x[k]
            });
        }
    }
    return _entries;
}
function flagKeys(f) {
    return keys(f);
}
function isBoolean(b) {
    return b === true || b === false;
}
/**
 * Convert a string into a valid variable name
 */
function varName(s) {
    // Replace non-alphanumeric characters (anything besides a-zA-Z0-9_) with _
    const alphanumericS = s.replace(/\W/g, '_');
    // Add _ if the string has leading numbers.
    return (s.match(/^\d+/) ? '_' : '') + alphanumericS;
}
function logicalExpr(op, cb) {
    if (Object(_logical__WEBPACK_IMPORTED_MODULE_4__["isLogicalNot"])(op)) {
        return '!(' + logicalExpr(op.not, cb) + ')';
    }
    else if (Object(_logical__WEBPACK_IMPORTED_MODULE_4__["isLogicalAnd"])(op)) {
        return '(' + op.and.map((and) => logicalExpr(and, cb)).join(') && (') + ')';
    }
    else if (Object(_logical__WEBPACK_IMPORTED_MODULE_4__["isLogicalOr"])(op)) {
        return '(' + op.or.map((or) => logicalExpr(or, cb)).join(') || (') + ')';
    }
    else {
        return cb(op);
    }
}
/**
 * Delete nested property of an object, and delete the ancestors of the property if they become empty.
 */
function deleteNestedProperty(obj, orderedProps) {
    if (orderedProps.length === 0) {
        return true;
    }
    const prop = orderedProps.shift();
    if (deleteNestedProperty(obj[prop], orderedProps)) {
        delete obj[prop];
    }
    return keys(obj).length === 0;
}
function titlecase(s) {
    return s.charAt(0).toUpperCase() + s.substr(1);
}
/**
 * Converts a path to an access path with datum.
 * @param path The field name.
 * @param datum The string to use for `datum`.
 */
function accessPathWithDatum(path, datum = 'datum') {
    const pieces = Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["splitAccessPath"])(path);
    const prefixes = [];
    for (let i = 1; i <= pieces.length; i++) {
        const prefix = `[${pieces
            .slice(0, i)
            .map(vega_util__WEBPACK_IMPORTED_MODULE_3__["stringValue"])
            .join('][')}]`;
        prefixes.push(`${datum}${prefix}`);
    }
    return prefixes.join(' && ');
}
/**
 * Return access with datum to the flattened field.
 *
 * @param path The field name.
 * @param datum The string to use for `datum`.
 */
function flatAccessWithDatum(path, datum = 'datum') {
    return `${datum}[${Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["stringValue"])(Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["splitAccessPath"])(path).join('.'))}]`;
}
/**
 * Replaces path accesses with access to non-nested field.
 * For example, `foo["bar"].baz` becomes `foo\\.bar\\.baz`.
 */
function replacePathInField(path) {
    return `${Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["splitAccessPath"])(path)
        .map(p => p.replace('.', '\\.'))
        .join('\\.')}`;
}
/**
 * Remove path accesses with access from field.
 * For example, `foo["bar"].baz` becomes `foo.bar.baz`.
 */
function removePathFromField(path) {
    return `${Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["splitAccessPath"])(path).join('.')}`;
}
/**
 * Count the depth of the path. Returns 1 for fields that are not nested.
 */
function accessPathDepth(path) {
    if (!path) {
        return 0;
    }
    return Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["splitAccessPath"])(path).length;
}
/**
 * This is a replacement for chained || for numeric properties or properties that respect null so that 0 will be included.
 */
function getFirstDefined(...args) {
    for (const arg of args) {
        if (arg !== undefined) {
            return arg;
        }
    }
    return undefined;
}
// variable used to generate id
let idCounter = 42;
/**
 * Returns a new random id every time it gets called.
 *
 * Has side effect!
 */
function uniqueId(prefix) {
    const id = ++idCounter;
    return prefix ? String(prefix) + id : id;
}
/**
 * Resets the id counter used in uniqueId. This can be useful for testing.
 */
function resetIdCounter() {
    idCounter = 42;
}
function internalField(name) {
    return isInternalField(name) ? name : `__${name}`;
}
function isInternalField(name) {
    return name.indexOf('__') === 0;
}
/**
 * Normalize angle to be within [0,360).
 */
function normalizeAngle(angle) {
    return ((angle % 360) + 360) % 360;
}
//# sourceMappingURL=util.js.map

/***/ }),

/***/ "./node_modules/vega-lite/build/src/vega.schema.js":
/*!*********************************************************!*\
  !*** ./node_modules/vega-lite/build/src/vega.schema.js ***!
  \*********************************************************/
/*! exports provided: isSignalRef, isVgRangeStep, isDataRefUnionedDomain, isFieldRefUnionDomain, isDataRefDomain, VG_MARK_CONFIGS */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isSignalRef", function() { return isSignalRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isVgRangeStep", function() { return isVgRangeStep; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isDataRefUnionedDomain", function() { return isDataRefUnionedDomain; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isFieldRefUnionDomain", function() { return isFieldRefUnionDomain; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isDataRefDomain", function() { return isDataRefDomain; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VG_MARK_CONFIGS", function() { return VG_MARK_CONFIGS; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util */ "./node_modules/vega-lite/build/src/util.js");


function isSignalRef(o) {
    return !!o['signal'];
}
function isVgRangeStep(range) {
    return !!range['step'];
}
function isDataRefUnionedDomain(domain) {
    if (!Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isArray"])(domain)) {
        return 'fields' in domain && !('data' in domain);
    }
    return false;
}
function isFieldRefUnionDomain(domain) {
    if (!Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isArray"])(domain)) {
        return 'fields' in domain && 'data' in domain;
    }
    return false;
}
function isDataRefDomain(domain) {
    if (!Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isArray"])(domain)) {
        return 'field' in domain && 'data' in domain;
    }
    return false;
}
const VG_MARK_CONFIG_INDEX = {
    opacity: 1,
    fill: 1,
    fillOpacity: 1,
    stroke: 1,
    strokeCap: 1,
    strokeWidth: 1,
    strokeOpacity: 1,
    strokeDash: 1,
    strokeDashOffset: 1,
    strokeJoin: 1,
    strokeMiterLimit: 1,
    size: 1,
    shape: 1,
    interpolate: 1,
    tension: 1,
    orient: 1,
    align: 1,
    baseline: 1,
    text: 1,
    dir: 1,
    dx: 1,
    dy: 1,
    ellipsis: 1,
    limit: 1,
    radius: 1,
    theta: 1,
    angle: 1,
    font: 1,
    fontSize: 1,
    fontWeight: 1,
    fontStyle: 1,
    cursor: 1,
    href: 1,
    tooltip: 1,
    cornerRadius: 1,
    x: 1,
    y: 1,
    x2: 1,
    y2: 1
    // commented below are vg channel that do not have mark config.
    // xc'|'width'|'yc'|'height'
    // clip: 1,
    // endAngle: 1,
    // innerRadius: 1,
    // outerRadius: 1,
    // path: 1,
    // startAngle: 1,
    // url: 1,
};
const VG_MARK_CONFIGS = Object(_util__WEBPACK_IMPORTED_MODULE_1__["flagKeys"])(VG_MARK_CONFIG_INDEX);
//# sourceMappingURL=vega.schema.js.map

/***/ }),

/***/ "./node_modules/vega-loader/index.browser.js":
/*!***************************************************!*\
  !*** ./node_modules/vega-loader/index.browser.js ***!
  \***************************************************/
/*! exports provided: loader, read, inferType, inferTypes, typeParsers, format, formats, responseType */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loader", function() { return loader; });
/* harmony import */ var _src_loader__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/loader */ "./node_modules/vega-loader/src/loader.js");
/* harmony import */ var _src_read__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/read */ "./node_modules/vega-loader/src/read.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "read", function() { return _src_read__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _src_type__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/type */ "./node_modules/vega-loader/src/type.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "inferType", function() { return _src_type__WEBPACK_IMPORTED_MODULE_2__["inferType"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "inferTypes", function() { return _src_type__WEBPACK_IMPORTED_MODULE_2__["inferTypes"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "typeParsers", function() { return _src_type__WEBPACK_IMPORTED_MODULE_2__["typeParsers"]; });

/* harmony import */ var _src_formats_index__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/formats/index */ "./node_modules/vega-loader/src/formats/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "format", function() { return _src_formats_index__WEBPACK_IMPORTED_MODULE_3__["format"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "formats", function() { return _src_formats_index__WEBPACK_IMPORTED_MODULE_3__["formats"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "responseType", function() { return _src_formats_index__WEBPACK_IMPORTED_MODULE_3__["responseType"]; });



var loader = Object(_src_loader__WEBPACK_IMPORTED_MODULE_0__["default"])(
  typeof fetch !== 'undefined' && fetch, // use built-in fetch API
  null // no file system access
);








/***/ }),

/***/ "./node_modules/vega-loader/src/formats/dsv.js":
/*!*****************************************************!*\
  !*** ./node_modules/vega-loader/src/formats/dsv.js ***!
  \*****************************************************/
/*! exports provided: delimitedFormat, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "delimitedFormat", function() { return delimitedFormat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return dsv; });
/* harmony import */ var d3_dsv__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-dsv */ "./node_modules/d3-dsv/src/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");



function delimitedFormat(delimiter) {
  const parse = function(data, format) {
    const delim = {delimiter: delimiter};
    return dsv(data, format ? Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["extend"])(format, delim) : delim);
  };

  parse.responseType = 'text';

  return parse;
}

function dsv(data, format) {
  if (format.header) {
    data = format.header
      .map(vega_util__WEBPACK_IMPORTED_MODULE_1__["stringValue"])
      .join(format.delimiter) + '\n' + data;
  }
  return Object(d3_dsv__WEBPACK_IMPORTED_MODULE_0__["dsvFormat"])(format.delimiter).parse(data + '');
}

dsv.responseType = 'text';


/***/ }),

/***/ "./node_modules/vega-loader/src/formats/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/vega-loader/src/formats/index.js ***!
  \*******************************************************/
/*! exports provided: format, formats, responseType */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "format", function() { return format; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "formats", function() { return formats; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "responseType", function() { return responseType; });
/* harmony import */ var _dsv__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dsv */ "./node_modules/vega-loader/src/formats/dsv.js");
/* harmony import */ var _json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./json */ "./node_modules/vega-loader/src/formats/json.js");
/* harmony import */ var _topojson__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./topojson */ "./node_modules/vega-loader/src/formats/topojson.js");




const format = {
  dsv: _dsv__WEBPACK_IMPORTED_MODULE_0__["default"],
  csv: Object(_dsv__WEBPACK_IMPORTED_MODULE_0__["delimitedFormat"])(','),
  tsv: Object(_dsv__WEBPACK_IMPORTED_MODULE_0__["delimitedFormat"])('\t'),
  json: _json__WEBPACK_IMPORTED_MODULE_1__["default"],
  topojson: _topojson__WEBPACK_IMPORTED_MODULE_2__["default"]
};

function formats(name, reader) {
  if (arguments.length > 1) {
    format[name] = reader;
    return this;
  } else {
    return format.hasOwnProperty(name) ? format[name] : null;
  }
}

function responseType(type) {
  const f = formats(type);
  return f && f.responseType || 'text';
}


/***/ }),

/***/ "./node_modules/vega-loader/src/formats/json.js":
/*!******************************************************!*\
  !*** ./node_modules/vega-loader/src/formats/json.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(Buffer) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return json; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");


function isBuffer(_) {
  return (typeof Buffer === 'function' && Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isFunction"])(Buffer.isBuffer))
    ? Buffer.isBuffer(_) : false;
}

function json(data, format) {
  const prop = (format && format.property) ? Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["field"])(format.property) : vega_util__WEBPACK_IMPORTED_MODULE_0__["identity"];
  return Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isObject"])(data) && !isBuffer(data)
    ? parseJSON(prop(data))
    : prop(JSON.parse(data));
}

json.responseType = 'json';

function parseJSON(data, format) {
  return (format && format.copy)
    ? JSON.parse(JSON.stringify(data))
    : data;
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../buffer/index.js */ "./node_modules/buffer/index.js").Buffer))

/***/ }),

/***/ "./node_modules/vega-loader/src/formats/topojson.js":
/*!**********************************************************!*\
  !*** ./node_modules/vega-loader/src/formats/topojson.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return topojson; });
/* harmony import */ var _json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./json */ "./node_modules/vega-loader/src/formats/json.js");
/* harmony import */ var topojson_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! topojson-client */ "./node_modules/topojson-client/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");




const filters = {
  interior: (a, b) => a !== b,
  exterior: (a, b) => a === b
};

function topojson(data, format) {
  let method, object, property, filter;
  data = Object(_json__WEBPACK_IMPORTED_MODULE_0__["default"])(data, format);

  if (format && format.feature) {
    method = topojson_client__WEBPACK_IMPORTED_MODULE_1__["feature"];
    property = format.feature;
  } else if (format && format.mesh) {
    method = topojson_client__WEBPACK_IMPORTED_MODULE_1__["mesh"];
    property = format.mesh;
    filter = filters[format.filter];
  } else {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["error"])('Missing TopoJSON feature or mesh parameter.');
  }

  object = (object = data.objects[property])
    ? method(data, object, filter)
    : Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["error"])('Invalid TopoJSON object: ' + property);

  return object && object.features || [object];
}

topojson.responseType = 'json';


/***/ }),

/***/ "./node_modules/vega-loader/src/loader.js":
/*!************************************************!*\
  !*** ./node_modules/vega-loader/src/loader.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");


// Matches absolute URLs with optional protocol
//   https://...    file://...    //...
var protocol_re = /^([A-Za-z]+:)?\/\//;

// Special treatment in node.js for the file: protocol
var fileProtocol = 'file://';

/**
 * Factory for a loader constructor that provides methods for requesting
 * files from either the network or disk, and for sanitizing request URIs.
 * @param {function} fetch - The Fetch API for HTTP network requests.
 *   If null or undefined, HTTP loading will be disabled.
 * @param {object} fs - The file system interface for file loading.
 *   If null or undefined, local file loading will be disabled.
 * @return {function} A loader constructor with the following signature:
 *   param {object} [options] - Optional default loading options to use.
 *   return {object} - A new loader instance.
 */
/* harmony default export */ __webpack_exports__["default"] = (function(fetch, fs) {
  return function(options) {
    return {
      options: options || {},
      sanitize: sanitize,
      load: load,
      fileAccess: !!fs,
      file: fileLoader(fs),
      http: httpLoader(fetch)
    };
  };
});

/**
 * Load an external resource, typically either from the web or from the local
 * filesystem. This function uses {@link sanitize} to first sanitize the uri,
 * then calls either {@link http} (for web requests) or {@link file} (for
 * filesystem loading).
 * @param {string} uri - The resource indicator (e.g., URL or filename).
 * @param {object} [options] - Optional loading options. These options will
 *   override any existing default options.
 * @return {Promise} - A promise that resolves to the loaded content.
 */
async function load(uri, options) {
  const opt = await this.sanitize(uri, options),
        url = opt.href;

  return opt.localFile
    ? this.file(url)
    : this.http(url, options);
}

/**
 * URI sanitizer function.
 * @param {string} uri - The uri (url or filename) to sanity check.
 * @param {object} options - An options hash.
 * @return {Promise} - A promise that resolves to an object containing
 *  sanitized uri data, or rejects it the input uri is deemed invalid.
 *  The properties of the resolved object are assumed to be
 *  valid attributes for an HTML 'a' tag. The sanitized uri *must* be
 *  provided by the 'href' property of the returned object.
 */
async function sanitize(uri, options) {
  options = Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["extend"])({}, this.options, options);

  const fileAccess = this.fileAccess,
        result = {href: null};

  let isFile, hasProtocol, loadFile, base;

  if (uri == null || typeof uri !== 'string') {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["error"])('Sanitize failure, invalid URI: ' + Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["stringValue"])(uri));
  }

  hasProtocol = protocol_re.test(uri);

  // if relative url (no protocol/host), prepend baseURL
  if ((base = options.baseURL) && !hasProtocol) {
    // Ensure that there is a slash between the baseURL (e.g. hostname) and url
    if (!uri.startsWith('/') && base[base.length-1] !== '/') {
      uri = '/' + uri;
    }
    uri = base + uri;
  }

  // should we load from file system?
  loadFile = (isFile = uri.startsWith(fileProtocol))
    || options.mode === 'file'
    || options.mode !== 'http' && !hasProtocol && fileAccess;

  if (isFile) {
    // strip file protocol
    uri = uri.slice(fileProtocol.length);
  } else if (uri.startsWith('//')) {
    if (options.defaultProtocol === 'file') {
      // if is file, strip protocol and set loadFile flag
      uri = uri.slice(2);
      loadFile = true;
    } else {
      // if relative protocol (starts with '//'), prepend default protocol
      uri = (options.defaultProtocol || 'http') + ':' + uri;
    }
  }

  // set non-enumerable mode flag to indicate local file load
  Object.defineProperty(result, 'localFile', {value: !!loadFile});

  // set uri
  result.href = uri;

  // set default result target, if specified
  if (options.target) {
    result.target = options.target + '';
  }

  // set default result rel, if specified (#1542)
  if (options.rel) {
    result.rel = options.rel + '';
  }

  // return
  return result;
}

/**
 * File system loader factory.
 * @param {object} fs - The file system interface.
 * @return {function} - A file loader with the following signature:
 *   param {string} filename - The file system path to load.
 *   param {string} filename - The file system path to load.
 *   return {Promise} A promise that resolves to the file contents.
 */
function fileLoader(fs) {
  return fs
    ? function(filename) {
        return new Promise(function(accept, reject) {
          fs.readFile(filename, function(error, data) {
            if (error) reject(error);
            else accept(data);
          });
        });
      }
    : fileReject;
}

/**
 * Default file system loader that simply rejects.
 */
async function fileReject() {
  Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["error"])('No file system access.');
}

/**
 * HTTP request handler factory.
 * @param {function} fetch - The Fetch API method.
 * @return {function} - An http loader with the following signature:
 *   param {string} url - The url to request.
 *   param {object} options - An options hash.
 *   return {Promise} - A promise that resolves to the file contents.
 */
function httpLoader(fetch) {
  return fetch
    ? async function(url, options) {
        const opt = Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["extend"])({}, this.options.http, options),
              type = options && options.response,
              response = await fetch(url, opt);

        return !response.ok
          ? Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["error"])(response.status + '' + response.statusText)
          : Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isFunction"])(response[type]) ? response[type]()
          : response.text();
      }
    : httpReject;
}

/**
 * Default http request handler that simply rejects.
 */
async function httpReject() {
  Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["error"])('No HTTP fetch method available.');
}


/***/ }),

/***/ "./node_modules/vega-loader/src/read.js":
/*!**********************************************!*\
  !*** ./node_modules/vega-loader/src/read.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _type__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./type */ "./node_modules/vega-loader/src/type.js");
/* harmony import */ var _formats_index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./formats/index */ "./node_modules/vega-loader/src/formats/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var d3_time_format__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3-time-format */ "./node_modules/d3-time-format/src/index.js");





/* harmony default export */ __webpack_exports__["default"] = (function(data, schema, dateParse) {
  schema = schema || {};

  const reader = Object(_formats_index__WEBPACK_IMPORTED_MODULE_1__["formats"])(schema.type || 'json');
  if (!reader) Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["error"])('Unknown data format type: ' + schema.type);

  data = reader(data, schema);
  if (schema.parse) parse(data, schema.parse, dateParse);

  if (data.hasOwnProperty('columns')) delete data.columns;
  return data;
});

function parse(data, types, dateParse) {
  if (!data.length) return; // early exit for empty data

  dateParse = dateParse || d3_time_format__WEBPACK_IMPORTED_MODULE_3__["timeParse"];

  var fields = data.columns || Object.keys(data[0]),
      parsers, datum, field, i, j, n, m;

  if (types === 'auto') types = Object(_type__WEBPACK_IMPORTED_MODULE_0__["inferTypes"])(data, fields);

  fields = Object.keys(types);
  parsers = fields.map(function(field) {
    var type = types[field],
        parts, pattern;

    if (type && (type.indexOf('date:') === 0 || type.indexOf('utc:') === 0)) {
      parts = type.split(/:(.+)?/, 2);  // split on first :
      pattern = parts[1];

      if ((pattern[0] === '\'' && pattern[pattern.length-1] === '\'') ||
          (pattern[0] === '"'  && pattern[pattern.length-1] === '"')) {
        pattern = pattern.slice(1, -1);
      }

      return parts[0] === 'utc' ? Object(d3_time_format__WEBPACK_IMPORTED_MODULE_3__["utcParse"])(pattern) : dateParse(pattern);
    }

    if (!_type__WEBPACK_IMPORTED_MODULE_0__["typeParsers"][type]) {
      throw Error('Illegal format pattern: ' + field + ':' + type);
    }

    return _type__WEBPACK_IMPORTED_MODULE_0__["typeParsers"][type];
  });

  for (i=0, n=data.length, m=fields.length; i<n; ++i) {
    datum = data[i];
    for (j=0; j<m; ++j) {
      field = fields[j];
      datum[field] = parsers[j](datum[field]);
    }
  }
}


/***/ }),

/***/ "./node_modules/vega-loader/src/type.js":
/*!**********************************************!*\
  !*** ./node_modules/vega-loader/src/type.js ***!
  \**********************************************/
/*! exports provided: typeParsers, inferType, inferTypes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "typeParsers", function() { return typeParsers; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "inferType", function() { return inferType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "inferTypes", function() { return inferTypes; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");


var typeParsers = {
  boolean: vega_util__WEBPACK_IMPORTED_MODULE_0__["toBoolean"],
  integer: vega_util__WEBPACK_IMPORTED_MODULE_0__["toNumber"],
  number:  vega_util__WEBPACK_IMPORTED_MODULE_0__["toNumber"],
  date:    vega_util__WEBPACK_IMPORTED_MODULE_0__["toDate"],
  string:  vega_util__WEBPACK_IMPORTED_MODULE_0__["toString"],
  unknown: vega_util__WEBPACK_IMPORTED_MODULE_0__["identity"]
};

var typeTests = [
  isBoolean,
  isInteger,
  isNumber,
  isDate
];

var typeList = [
  'boolean',
  'integer',
  'number',
  'date'
];

function inferType(values, field) {
  if (!values || !values.length) return 'unknown';

  var value, i, j, t = 0,
      n = values.length,
      m = typeTests.length,
      a = typeTests.map(function(_, i) { return i + 1; });

  for (i=0, n=values.length; i<n; ++i) {
    value = field ? values[i][field] : values[i];
    for (j=0; j<m; ++j) {
      if (a[j] && isValid(value) && !typeTests[j](value)) {
        a[j] = 0;
        ++t;
        if (t === typeTests.length) return 'string';
      }
    }
  }

  t = a.reduce(function(u, v) { return u === 0 ? v : u; }, 0) - 1;
  return typeList[t];
}

function inferTypes(data, fields) {
  return fields.reduce(function(types, field) {
    types[field] = inferType(data, field);
    return types;
  }, {});
}

// -- Type Checks ----

function isValid(_) {
  return _ != null && _ === _;
}

function isBoolean(_) {
  return _ === 'true' || _ === 'false' || _ === true || _ === false;
}

function isDate(_) {
  return !isNaN(Date.parse(_));
}

function isNumber(_) {
  return !isNaN(+_) && !(_ instanceof Date);
}

function isInteger(_) {
  return isNumber(_) && (_=+_) === ~~_;
}


/***/ }),

/***/ "./node_modules/vega-parser/index.js":
/*!*******************************************!*\
  !*** ./node_modules/vega-parser/index.js ***!
  \*******************************************/
/*! exports provided: parse, config, signal, signalUpdates, stream, MarkRole, FrameRole, ScopeRole, AxisRole, AxisDomainRole, AxisGridRole, AxisLabelRole, AxisTickRole, AxisTitleRole, LegendRole, LegendEntryRole, LegendLabelRole, LegendSymbolRole, LegendTitleRole, Scope, DataScope */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _src_parse__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/parse */ "./node_modules/vega-parser/src/parse.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "parse", function() { return _src_parse__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _src_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/config */ "./node_modules/vega-parser/src/config.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "config", function() { return _src_config__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _src_parsers_signal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/parsers/signal */ "./node_modules/vega-parser/src/parsers/signal.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "signal", function() { return _src_parsers_signal__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _src_parsers_signal_updates__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/parsers/signal-updates */ "./node_modules/vega-parser/src/parsers/signal-updates.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "signalUpdates", function() { return _src_parsers_signal_updates__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _src_parsers_stream__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./src/parsers/stream */ "./node_modules/vega-parser/src/parsers/stream.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stream", function() { return _src_parsers_stream__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _src_parsers_marks_roles__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./src/parsers/marks/roles */ "./node_modules/vega-parser/src/parsers/marks/roles.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MarkRole", function() { return _src_parsers_marks_roles__WEBPACK_IMPORTED_MODULE_5__["MarkRole"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FrameRole", function() { return _src_parsers_marks_roles__WEBPACK_IMPORTED_MODULE_5__["FrameRole"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ScopeRole", function() { return _src_parsers_marks_roles__WEBPACK_IMPORTED_MODULE_5__["ScopeRole"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AxisRole", function() { return _src_parsers_marks_roles__WEBPACK_IMPORTED_MODULE_5__["AxisRole"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AxisDomainRole", function() { return _src_parsers_marks_roles__WEBPACK_IMPORTED_MODULE_5__["AxisDomainRole"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AxisGridRole", function() { return _src_parsers_marks_roles__WEBPACK_IMPORTED_MODULE_5__["AxisGridRole"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AxisLabelRole", function() { return _src_parsers_marks_roles__WEBPACK_IMPORTED_MODULE_5__["AxisLabelRole"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AxisTickRole", function() { return _src_parsers_marks_roles__WEBPACK_IMPORTED_MODULE_5__["AxisTickRole"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AxisTitleRole", function() { return _src_parsers_marks_roles__WEBPACK_IMPORTED_MODULE_5__["AxisTitleRole"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LegendRole", function() { return _src_parsers_marks_roles__WEBPACK_IMPORTED_MODULE_5__["LegendRole"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LegendEntryRole", function() { return _src_parsers_marks_roles__WEBPACK_IMPORTED_MODULE_5__["LegendEntryRole"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LegendLabelRole", function() { return _src_parsers_marks_roles__WEBPACK_IMPORTED_MODULE_5__["LegendLabelRole"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LegendSymbolRole", function() { return _src_parsers_marks_roles__WEBPACK_IMPORTED_MODULE_5__["LegendSymbolRole"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LegendTitleRole", function() { return _src_parsers_marks_roles__WEBPACK_IMPORTED_MODULE_5__["LegendTitleRole"]; });

/* harmony import */ var _src_Scope__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./src/Scope */ "./node_modules/vega-parser/src/Scope.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Scope", function() { return _src_Scope__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony import */ var _src_DataScope__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./src/DataScope */ "./node_modules/vega-parser/src/DataScope.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DataScope", function() { return _src_DataScope__WEBPACK_IMPORTED_MODULE_7__["default"]; });














/***/ }),

/***/ "./node_modules/vega-parser/src/DataScope.js":
/*!***************************************************!*\
  !*** ./node_modules/vega-parser/src/DataScope.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return DataScope; });
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util */ "./node_modules/vega-parser/src/util.js");
/* harmony import */ var _transforms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./transforms */ "./node_modules/vega-parser/src/transforms.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");




function DataScope(scope, input, output, values, aggr) {
  this.scope = scope;   // parent scope object
  this.input = input;   // first operator in pipeline (tuple input)
  this.output = output; // last operator in pipeline (tuple output)
  this.values = values; // operator for accessing tuples (but not tuple flow)

  // last aggregate in transform pipeline
  this.aggregate = aggr;

  // lookup table of field indices
  this.index = {};
}

DataScope.fromEntries = function(scope, entries) {
  var n = entries.length,
      i = 1,
      input  = entries[0],
      values = entries[n-1],
      output = entries[n-2],
      aggr = null;

  if (input && input.type === 'load') {
    input = entries[1];
  }

  // add operator entries to this scope, wire up pulse chain
  scope.add(entries[0]);
  for (; i<n; ++i) {
    entries[i].params.pulse = Object(_util__WEBPACK_IMPORTED_MODULE_0__["ref"])(entries[i-1]);
    scope.add(entries[i]);
    if (entries[i].type === 'aggregate') aggr = entries[i];
  }

  return new DataScope(scope, input, output, values, aggr);
};

var prototype = DataScope.prototype;

prototype.countsRef = function(scope, field, sort) {
  var ds = this,
      cache = ds.counts || (ds.counts = {}),
      k = fieldKey(field), v, a, p;

  if (k != null) {
    scope = ds.scope;
    v = cache[k];
  }

  if (!v) {
    p = {
      groupby: scope.fieldRef(field, 'key'),
      pulse: Object(_util__WEBPACK_IMPORTED_MODULE_0__["ref"])(ds.output)
    };
    if (sort && sort.field) addSortField(scope, p, sort);
    a = scope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_1__["Aggregate"])(p));
    v = scope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_1__["Collect"])({pulse: Object(_util__WEBPACK_IMPORTED_MODULE_0__["ref"])(a)}));
    v = {agg: a, ref: Object(_util__WEBPACK_IMPORTED_MODULE_0__["ref"])(v)};
    if (k != null) cache[k] = v;
  } else if (sort && sort.field) {
    addSortField(scope, v.agg.params, sort);
  }

  return v.ref;
};

function fieldKey(field) {
  return Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["isString"])(field) ? field : null;
}

function addSortField(scope, p, sort) {
  var as = Object(_util__WEBPACK_IMPORTED_MODULE_0__["aggrField"])(sort.op, sort.field), s;

  if (p.ops) {
    for (var i=0, n=p.as.length; i<n; ++i) {
      if (p.as[i] === as) return;
    }
  } else {
    p.ops = ['count'];
    p.fields = [null];
    p.as = ['count'];
  }
  if (sort.op) {
    p.ops.push((s=sort.op.signal) ? scope.signalRef(s) : sort.op);
    p.fields.push(scope.fieldRef(sort.field));
    p.as.push(as);
  }
}

function cache(scope, ds, name, optype, field, counts, index) {
  var cache = ds[name] || (ds[name] = {}),
      sort = Object(_util__WEBPACK_IMPORTED_MODULE_0__["sortKey"])(counts),
      k = fieldKey(field), v, op;

  if (k != null) {
    scope = ds.scope;
    k = k + (sort ? '|' + sort : '');
    v = cache[k];
  }

  if (!v) {
    var params = counts
      ? {field: _util__WEBPACK_IMPORTED_MODULE_0__["keyFieldRef"], pulse: ds.countsRef(scope, field, counts)}
      : {field: scope.fieldRef(field), pulse: Object(_util__WEBPACK_IMPORTED_MODULE_0__["ref"])(ds.output)};
    if (sort) params.sort = scope.sortRef(counts);
    op = scope.add(Object(_util__WEBPACK_IMPORTED_MODULE_0__["entry"])(optype, undefined, params));
    if (index) ds.index[field] = op;
    v = Object(_util__WEBPACK_IMPORTED_MODULE_0__["ref"])(op);
    if (k != null) cache[k] = v;
  }
  return v;
}

prototype.tuplesRef = function() {
  return Object(_util__WEBPACK_IMPORTED_MODULE_0__["ref"])(this.values);
};

prototype.extentRef = function(scope, field) {
  return cache(scope, this, 'extent', 'extent', field, false);
};

prototype.domainRef = function(scope, field) {
  return cache(scope, this, 'domain', 'values', field, false);
};

prototype.valuesRef = function(scope, field, sort) {
  return cache(scope, this, 'vals', 'values', field, sort || true);
};

prototype.lookupRef = function(scope, field) {
  return cache(scope, this, 'lookup', 'tupleindex', field, false);
};

prototype.indataRef = function(scope, field) {
  return cache(scope, this, 'indata', 'tupleindex', field, true, true);
};


/***/ }),

/***/ "./node_modules/vega-parser/src/Scope.js":
/*!***********************************************!*\
  !*** ./node_modules/vega-parser/src/Scope.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Scope; });
/* harmony import */ var _DataScope__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./DataScope */ "./node_modules/vega-parser/src/DataScope.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util */ "./node_modules/vega-parser/src/util.js");
/* harmony import */ var _parsers_expression__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./parsers/expression */ "./node_modules/vega-parser/src/parsers/expression.js");
/* harmony import */ var _transforms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./transforms */ "./node_modules/vega-parser/src/transforms.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");






function Scope(config) {
  this.config = config;

  this.bindings = [];
  this.field = {};
  this.signals = {};
  this.lambdas = {};
  this.scales = {};
  this.events = {};
  this.data = {};

  this.streams = [];
  this.updates = [];
  this.operators = [];
  this.background = null;
  this.eventConfig = null;

  this._id = 0;
  this._subid = 0;
  this._nextsub = [0];

  this._parent = [];
  this._encode = [];
  this._lookup = [];
  this._markpath = [];
}

function Subscope(scope) {
  this.config = scope.config;
  this.legends = scope.legends;

  this.field = Object.create(scope.field);
  this.signals = Object.create(scope.signals);
  this.lambdas = Object.create(scope.lambdas);
  this.scales = Object.create(scope.scales);
  this.events = Object.create(scope.events);
  this.data = Object.create(scope.data);

  this.streams = [];
  this.updates = [];
  this.operators = [];

  this._id = 0;
  this._subid = ++scope._nextsub[0];
  this._nextsub = scope._nextsub;

  this._parent = scope._parent.slice();
  this._encode = scope._encode.slice();
  this._lookup = scope._lookup.slice();
  this._markpath = scope._markpath;
}

var prototype = Scope.prototype = Subscope.prototype;

// ----

prototype.fork = function() {
  return new Subscope(this);
};

prototype.isSubscope = function() {
  return this._subid > 0;
};

prototype.toRuntime = function() {
  this.finish();
  return {
    background:  this.background,
    operators:   this.operators,
    streams:     this.streams,
    updates:     this.updates,
    bindings:    this.bindings,
    eventConfig: this.eventConfig
  };
};

prototype.id = function() {
  return (this._subid ? this._subid + ':' : 0) + this._id++;
};

prototype.add = function(op) {
  this.operators.push(op);
  op.id = this.id();
  // if pre-registration references exist, resolve them now
  if (op.refs) {
    op.refs.forEach(function(ref) { ref.$ref = op.id; });
    op.refs = null;
  }
  return op;
};

prototype.proxy = function(op) {
  var vref = op instanceof _util__WEBPACK_IMPORTED_MODULE_1__["Entry"] ? Object(_util__WEBPACK_IMPORTED_MODULE_1__["ref"])(op) : op;
  return this.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_3__["Proxy"])({value: vref}));
};

prototype.addStream = function(stream) {
  this.streams.push(stream);
  stream.id = this.id();
  return stream;
};

prototype.addUpdate = function(update) {
  this.updates.push(update);
  return update;
};

// Apply metadata
prototype.finish = function() {
  var name, ds;

  // annotate root
  if (this.root) this.root.root = true;

  // annotate signals
  for (name in this.signals) {
    this.signals[name].signal = name;
  }

  // annotate scales
  for (name in this.scales) {
    this.scales[name].scale = name;
  }

  // annotate data sets
  function annotate(op, name, type) {
    var data, list;
    if (op) {
      data = op.data || (op.data = {});
      list = data[name] || (data[name] = []);
      list.push(type);
    }
  }
  for (name in this.data) {
    ds = this.data[name];
    annotate(ds.input,  name, 'input');
    annotate(ds.output, name, 'output');
    annotate(ds.values, name, 'values');
    for (var field in ds.index) {
      annotate(ds.index[field], name, 'index:' + field);
    }
  }

  return this;
};

// ----

prototype.pushState = function(encode, parent, lookup) {
  this._encode.push(Object(_util__WEBPACK_IMPORTED_MODULE_1__["ref"])(this.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_3__["Sieve"])({pulse: encode}))));
  this._parent.push(parent);
  this._lookup.push(lookup ? Object(_util__WEBPACK_IMPORTED_MODULE_1__["ref"])(this.proxy(lookup)) : null);
  this._markpath.push(-1);
};

prototype.popState = function() {
  this._encode.pop();
  this._parent.pop();
  this._lookup.pop();
  this._markpath.pop();
};

prototype.parent = function() {
  return Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["peek"])(this._parent);
};

prototype.encode = function() {
  return Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["peek"])(this._encode);
};

prototype.lookup = function() {
  return Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["peek"])(this._lookup);
};

prototype.markpath = function() {
  var p = this._markpath;
  return ++p[p.length-1];
};

// ----

prototype.fieldRef = function(field, name) {
  if (Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["isString"])(field)) return Object(_util__WEBPACK_IMPORTED_MODULE_1__["fieldRef"])(field, name);
  if (!field.signal) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["error"])('Unsupported field reference: ' + Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["stringValue"])(field));
  }

  var s = field.signal,
      f = this.field[s],
      params;

  if (!f) {
    params = {name: this.signalRef(s)};
    if (name) params.as = name;
    this.field[s] = f = Object(_util__WEBPACK_IMPORTED_MODULE_1__["ref"])(this.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_3__["Field"])(params)));
  }
  return f;
};

prototype.compareRef = function(cmp, stable) {
  function check(_) {
    if (Object(_util__WEBPACK_IMPORTED_MODULE_1__["isSignal"])(_)) {
      signal = true;
      return scope.signalRef(_.signal);
    } else if (Object(_util__WEBPACK_IMPORTED_MODULE_1__["isExpr"])(_)) {
      signal = true;
      return scope.exprRef(_.expr);
    } else {
      return _;
    }
  }

  var scope = this,
      signal = false,
      fields = Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["array"])(cmp.field).map(check),
      orders = Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["array"])(cmp.order).map(check);

  if (stable) {
    fields.push(_util__WEBPACK_IMPORTED_MODULE_1__["tupleidRef"]);
  }

  return signal
    ? Object(_util__WEBPACK_IMPORTED_MODULE_1__["ref"])(this.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_3__["Compare"])({fields: fields, orders: orders})))
    : Object(_util__WEBPACK_IMPORTED_MODULE_1__["compareRef"])(fields, orders);
};

prototype.keyRef = function(fields, flat) {
  function check(_) {
    if (Object(_util__WEBPACK_IMPORTED_MODULE_1__["isSignal"])(_)) {
      signal = true;
      return Object(_util__WEBPACK_IMPORTED_MODULE_1__["ref"])(sig[_.signal]);
    } else {
      return _;
    }
  }

  var sig = this.signals,
      signal = false;
  fields = Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["array"])(fields).map(check);

  return signal
    ? Object(_util__WEBPACK_IMPORTED_MODULE_1__["ref"])(this.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_3__["Key"])({fields: fields, flat: flat})))
    : Object(_util__WEBPACK_IMPORTED_MODULE_1__["keyRef"])(fields, flat);
};

prototype.sortRef = function(sort) {
  if (!sort) return sort;

  // including id ensures stable sorting
  var a = [Object(_util__WEBPACK_IMPORTED_MODULE_1__["aggrField"])(sort.op, sort.field), _util__WEBPACK_IMPORTED_MODULE_1__["tupleidRef"]],
      o = sort.order || _util__WEBPACK_IMPORTED_MODULE_1__["Ascending"];

  return o.signal
    ? Object(_util__WEBPACK_IMPORTED_MODULE_1__["ref"])(this.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_3__["Compare"])({
        fields: a,
        orders: [o = this.signalRef(o.signal), o]
      })))
    : Object(_util__WEBPACK_IMPORTED_MODULE_1__["compareRef"])(a, [o, o]);
};

// ----

prototype.event = function(source, type) {
  var key = source + ':' + type;
  if (!this.events[key]) {
    var id = this.id();
    this.streams.push({
      id: id,
      source: source,
      type: type
    });
    this.events[key] = id;
  }
  return this.events[key];
};

// ----

prototype.addSignal = function(name, value) {
  if (this.signals.hasOwnProperty(name)) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["error"])('Duplicate signal name: ' + Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["stringValue"])(name));
  }
  var op = value instanceof _util__WEBPACK_IMPORTED_MODULE_1__["Entry"] ? value : this.add(Object(_util__WEBPACK_IMPORTED_MODULE_1__["operator"])(value));
  return this.signals[name] = op;
};

prototype.getSignal = function(name) {
  if (!this.signals[name]) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["error"])('Unrecognized signal name: ' + Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["stringValue"])(name));
  }
  return this.signals[name];
};

prototype.signalRef = function(s) {
  if (this.signals[s]) {
    return Object(_util__WEBPACK_IMPORTED_MODULE_1__["ref"])(this.signals[s]);
  } else if (!this.lambdas.hasOwnProperty(s)) {
    this.lambdas[s] = this.add(Object(_util__WEBPACK_IMPORTED_MODULE_1__["operator"])(null));
  }
  return Object(_util__WEBPACK_IMPORTED_MODULE_1__["ref"])(this.lambdas[s]);
};

prototype.parseLambdas = function() {
  var code = Object.keys(this.lambdas);
  for (var i=0, n=code.length; i<n; ++i) {
    var s = code[i],
        e = Object(_parsers_expression__WEBPACK_IMPORTED_MODULE_2__["default"])(s, this),
        op = this.lambdas[s];
    op.params = e.$params;
    op.update = e.$expr;
  }
};

prototype.property = function(spec) {
  return spec && spec.signal ? this.signalRef(spec.signal) : spec;
};

prototype.objectProperty = function(spec) {
  return (!spec || !Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["isObject"])(spec)) ? spec
    : this.signalRef(spec.signal || propertyLambda(spec));
};

function propertyLambda(spec) {
  return (Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["isArray"])(spec) ? arrayLambda : objectLambda)(spec);
}

function arrayLambda(array) {
  var code = '[',
      i = 0,
      n = array.length,
      value;

  for (; i<n; ++i) {
    value = array[i];
    code += (i > 0 ? ',' : '')
      + (Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["isObject"])(value)
        ? (value.signal || propertyLambda(value))
        : Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["stringValue"])(value));
  }
  return code + ']';
}

function objectLambda(obj) {
  var code = '{',
      i = 0,
      key, value;

  for (key in obj) {
    value = obj[key];
    code += (++i > 1 ? ',' : '')
      + Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["stringValue"])(key) + ':'
      + (Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["isObject"])(value)
        ? (value.signal || propertyLambda(value))
        : Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["stringValue"])(value));
  }
  return code + '}';
}

prototype.exprRef = function(code, name) {
  var params = {expr: Object(_parsers_expression__WEBPACK_IMPORTED_MODULE_2__["default"])(code, this)};
  if (name) params.expr.$name = name;
  return Object(_util__WEBPACK_IMPORTED_MODULE_1__["ref"])(this.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_3__["Expression"])(params)));
}

prototype.addBinding = function(name, bind) {
  if (!this.bindings) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["error"])('Nested signals do not support binding: ' + Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["stringValue"])(name));
  }
  this.bindings.push(Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["extend"])({signal: name}, bind));
};

// ----

prototype.addScaleProj = function(name, transform) {
  if (this.scales.hasOwnProperty(name)) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["error"])('Duplicate scale or projection name: ' + Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["stringValue"])(name));
  }
  this.scales[name] = this.add(transform);
};

prototype.addScale = function(name, params) {
  this.addScaleProj(name, Object(_transforms__WEBPACK_IMPORTED_MODULE_3__["Scale"])(params));
};

prototype.addProjection = function(name, params) {
  this.addScaleProj(name, Object(_transforms__WEBPACK_IMPORTED_MODULE_3__["Projection"])(params));
};

prototype.getScale = function(name) {
  if (!this.scales[name]) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["error"])('Unrecognized scale name: ' + Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["stringValue"])(name));
  }
  return this.scales[name];
};

prototype.projectionRef =
prototype.scaleRef = function(name) {
  return Object(_util__WEBPACK_IMPORTED_MODULE_1__["ref"])(this.getScale(name));
};

prototype.projectionType =
prototype.scaleType = function(name) {
  return this.getScale(name).params.type;
};

// ----

prototype.addData = function(name, dataScope) {
  if (this.data.hasOwnProperty(name)) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["error"])('Duplicate data set name: ' + Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["stringValue"])(name));
  }
  return (this.data[name] = dataScope);
};

prototype.getData = function(name) {
  if (!this.data[name]) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["error"])('Undefined data set name: ' + Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["stringValue"])(name));
  }
  return this.data[name];
};

prototype.addDataPipeline = function(name, entries) {
  if (this.data.hasOwnProperty(name)) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["error"])('Duplicate data set name: ' + Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["stringValue"])(name));
  }
  return this.addData(name, _DataScope__WEBPACK_IMPORTED_MODULE_0__["default"].fromEntries(this, entries));
};


/***/ }),

/***/ "./node_modules/vega-parser/src/config.js":
/*!************************************************!*\
  !*** ./node_modules/vega-parser/src/config.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");


/* harmony default export */ __webpack_exports__["default"] = (function(configs) {
  return (configs || []).reduce((out, config) => {
    for (var key in config) {
      var r = key === 'legend' ? {'layout': 1}
        : key === 'style' ? true : null;
      copy(out, key, config[key], r);
    }
    return out;
  }, defaults());
});

function copy(output, key, value, recurse) {
  var k, o;
  if (Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isObject"])(value) && !Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isArray"])(value)) {
    o = Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isObject"])(output[key]) ? output[key] : (output[key] = {});
    for (k in value) {
      if (recurse && (recurse === true || recurse[k])) {
        copy(o, k, value[k]);
      } else {
        o[k] = value[k];
      }
    }
  } else {
    output[key] = value;
  }
}

var defaultFont = 'sans-serif',
    defaultSymbolSize = 30,
    defaultStrokeWidth = 2,
    defaultColor = '#4c78a8',
    black = '#000',
    gray = '#888',
    lightGray = '#ddd';

/**
 * Standard configuration defaults for Vega specification parsing.
 * Users can provide their own (sub-)set of these default values
 * by passing in a config object to the top-level parse method.
 */
function defaults() {
  return {
    // default padding around visualization
    padding: 0,

    // default for automatic sizing; options: 'none', 'pad', 'fit'
    // or provide an object (e.g., {'type': 'pad', 'resize': true})
    autosize: 'pad',

    // default view background color
    // covers the entire view component
    background: null,

    // default event handling configuration
    // preventDefault for view-sourced event types except 'wheel'
    events: {
      defaults: {allow: ['wheel']}
    },

    // defaults for top-level group marks
    // accepts mark properties (fill, stroke, etc)
    // covers the data rectangle within group width/height
    group: null,

    // defaults for basic mark types
    // each subset accepts mark properties (fill, stroke, etc)
    mark: null,
    arc: { fill: defaultColor },
    area: { fill: defaultColor },
    image: null,
    line: {
      stroke: defaultColor,
      strokeWidth: defaultStrokeWidth
    },
    path: { stroke: defaultColor },
    rect: { fill: defaultColor },
    rule: { stroke: black },
    shape: { stroke: defaultColor },
    symbol: {
      fill: defaultColor,
      size: 64
    },
    text: {
      fill: black,
      font: defaultFont,
      fontSize: 11
    },

    // style definitions
    style: {
      // axis & legend labels
      'guide-label': {
        fill: black,
        font: defaultFont,
        fontSize: 10
      },
      // axis & legend titles
      'guide-title': {
        fill: black,
        font: defaultFont,
        fontSize: 11,
        fontWeight: 'bold'
      },
      // headers, including chart title
      'group-title': {
        fill: black,
        font: defaultFont,
        fontSize: 13,
        fontWeight: 'bold'
      },
      // defaults for styled point marks in Vega-Lite
      point: {
        size: defaultSymbolSize,
        strokeWidth: defaultStrokeWidth,
        shape: 'circle'
      },
      circle: {
        size: defaultSymbolSize,
        strokeWidth: defaultStrokeWidth
      },
      square: {
        size: defaultSymbolSize,
        strokeWidth: defaultStrokeWidth,
        shape: 'square'
      },
      // defaults for styled group marks in Vega-Lite
      cell: {
        fill: 'transparent',
        stroke: lightGray
      }
    },

    // defaults for title
    title: {
      orient: 'top',
      anchor: 'middle',
      offset: 4
    },

    // defaults for axes
    axis: {
      minExtent: 0,
      maxExtent: 200,
      bandPosition: 0.5,
      domain: true,
      domainWidth: 1,
      domainColor: gray,
      grid: false,
      gridWidth: 1,
      gridColor: lightGray,
      labels: true,
      labelAngle: 0,
      labelLimit: 180,
      labelPadding: 2,
      ticks: true,
      tickColor: gray,
      tickOffset: 0,
      tickRound: true,
      tickSize: 5,
      tickWidth: 1,
      titlePadding: 4
    },

    // correction for centering bias
    axisBand: {
      tickOffset: -1
    },

    // defaults for legends
    legend: {
      orient: 'right',
      padding: 0,
      gridAlign: 'each',
      columnPadding: 10,
      rowPadding: 2,
      symbolDirection: 'vertical',
      gradientDirection: 'vertical',
      gradientLength: 200,
      gradientThickness: 16,
      gradientStrokeColor: lightGray,
      gradientStrokeWidth: 0,
      gradientLabelOffset: 2,
      labelAlign: 'left',
      labelBaseline: 'middle',
      labelLimit: 160,
      labelOffset: 4,
      labelOverlap: true,
      symbolType: 'circle',
      symbolSize: 100,
      symbolOffset: 0,
      symbolStrokeWidth: 1.5,
      symbolBaseFillColor: 'transparent',
      symbolBaseStrokeColor: gray,
      titleLimit: 180,
      titleOrient: 'top',
      titlePadding: 5,
      layout: {
        offset: 18,
        direction: 'horizontal',
        left:   { direction: 'vertical' },
        right:  { direction: 'vertical' }
      }
    },

    // defaults for scale ranges
    range: {
      category: {
        scheme: 'tableau10'
      },
      ordinal: {
        scheme: 'blues'
      },
      heatmap: {
        scheme: 'yellowgreenblue'
      },
      ramp: {
        scheme: 'blues'
      },
      diverging: {
        scheme: 'blueorange',
        extent: [1, 0]
      },
      symbol: [
        'circle',
        'square',
        'triangle-up',
        'cross',
        'diamond',
        'triangle-right',
        'triangle-down',
        'triangle-left'
      ]
    }
  };
}


/***/ }),

/***/ "./node_modules/vega-parser/src/parse.js":
/*!***********************************************!*\
  !*** ./node_modules/vega-parser/src/parse.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _parsers_view__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parsers/view */ "./node_modules/vega-parser/src/parsers/view.js");
/* harmony import */ var _Scope__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Scope */ "./node_modules/vega-parser/src/Scope.js");
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./config */ "./node_modules/vega-parser/src/config.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");





/* harmony default export */ __webpack_exports__["default"] = (function(spec, config) {
  if (!Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["isObject"])(spec)) Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["error"])('Input Vega specification must be an object.');
  return Object(_parsers_view__WEBPACK_IMPORTED_MODULE_0__["default"])(spec, new _Scope__WEBPACK_IMPORTED_MODULE_1__["default"](Object(_config__WEBPACK_IMPORTED_MODULE_2__["default"])([config, spec.config])))
    .toRuntime();
});


/***/ }),

/***/ "./node_modules/vega-parser/src/parsers/autosize.js":
/*!**********************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/autosize.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");


/* harmony default export */ __webpack_exports__["default"] = (function(spec, config) {
  spec = spec || config.autosize;
  return Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isObject"])(spec)
    ? spec
    : {type: spec || 'pad'};
});


/***/ }),

/***/ "./node_modules/vega-parser/src/parsers/axis.js":
/*!******************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/axis.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _guides_axis_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./guides/axis-config */ "./node_modules/vega-parser/src/parsers/guides/axis-config.js");
/* harmony import */ var _guides_axis_domain__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./guides/axis-domain */ "./node_modules/vega-parser/src/parsers/guides/axis-domain.js");
/* harmony import */ var _guides_axis_grid__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./guides/axis-grid */ "./node_modules/vega-parser/src/parsers/guides/axis-grid.js");
/* harmony import */ var _guides_axis_ticks__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./guides/axis-ticks */ "./node_modules/vega-parser/src/parsers/guides/axis-ticks.js");
/* harmony import */ var _guides_axis_labels__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./guides/axis-labels */ "./node_modules/vega-parser/src/parsers/guides/axis-labels.js");
/* harmony import */ var _guides_axis_title__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./guides/axis-title */ "./node_modules/vega-parser/src/parsers/guides/axis-title.js");
/* harmony import */ var _guides_guide_group__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./guides/guide-group */ "./node_modules/vega-parser/src/parsers/guides/guide-group.js");
/* harmony import */ var _guides_guide_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./guides/guide-util */ "./node_modules/vega-parser/src/parsers/guides/guide-util.js");
/* harmony import */ var _marks_roles__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./marks/roles */ "./node_modules/vega-parser/src/parsers/marks/roles.js");
/* harmony import */ var _mark__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./mark */ "./node_modules/vega-parser/src/parsers/mark.js");
/* harmony import */ var _encode_encode_util__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./encode/encode-util */ "./node_modules/vega-parser/src/parsers/encode/encode-util.js");
/* harmony import */ var _guides_constants__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./guides/constants */ "./node_modules/vega-parser/src/parsers/guides/constants.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../util */ "./node_modules/vega-parser/src/util.js");
/* harmony import */ var _transforms__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../transforms */ "./node_modules/vega-parser/src/transforms.js");















/* harmony default export */ __webpack_exports__["default"] = (function(spec, scope) {
  var config = Object(_guides_axis_config__WEBPACK_IMPORTED_MODULE_0__["default"])(spec, scope),
      encode = spec.encode || {},
      axisEncode = encode.axis || {},
      name = axisEncode.name || undefined,
      interactive = axisEncode.interactive,
      style = axisEncode.style,
      _ = Object(_guides_guide_util__WEBPACK_IMPORTED_MODULE_7__["lookup"])(spec, config),
      datum, dataRef, ticksRef, size, group, children;

  // single-element data source for axis group
  datum = {
    orient: spec.orient,
    ticks:  !!_('ticks'),
    labels: !!_('labels'),
    grid:   !!_('grid'),
    domain: !!_('domain'),
    title:  spec.title != null
  };
  dataRef = Object(_util__WEBPACK_IMPORTED_MODULE_12__["ref"])(scope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_13__["Collect"])({}, [datum])));

  // encoding properties for axis group item
  axisEncode = Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_10__["extendEncode"])({
    update: {
      offset:       Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_10__["encoder"])(_('offset') || 0),
      position:     Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_10__["encoder"])(Object(_util__WEBPACK_IMPORTED_MODULE_12__["value"])(spec.position, 0)),
      titlePadding: Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_10__["encoder"])(_('titlePadding')),
      minExtent:    Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_10__["encoder"])(_('minExtent')),
      maxExtent:    Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_10__["encoder"])(_('maxExtent')),
      range:        {signal: `abs(span(range("${spec.scale}")))`}
    }
  }, encode.axis, _guides_constants__WEBPACK_IMPORTED_MODULE_11__["Skip"]);

  // data source for axis ticks
  ticksRef = Object(_util__WEBPACK_IMPORTED_MODULE_12__["ref"])(scope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_13__["AxisTicks"])({
    scale:   scope.scaleRef(spec.scale),
    extra:   scope.property(_('tickExtra')),
    count:   scope.objectProperty(spec.tickCount),
    values:  scope.objectProperty(spec.values),
    minstep: scope.property(spec.tickMinStep),
    formatType: scope.property(spec.formatType),
    formatSpecifier: scope.property(spec.format)
  })));

  // generate axis marks
  children = [];

  // include axis gridlines if requested
  if (datum.grid) {
    children.push(Object(_guides_axis_grid__WEBPACK_IMPORTED_MODULE_2__["default"])(spec, config, encode.grid, ticksRef));
  }

  // include axis ticks if requested
  if (datum.ticks) {
    size = _('tickSize');
    children.push(Object(_guides_axis_ticks__WEBPACK_IMPORTED_MODULE_3__["default"])(spec, config, encode.ticks, ticksRef, size));
  }

  // include axis labels if requested
  if (datum.labels) {
    size = datum.ticks ? size : 0;
    children.push(Object(_guides_axis_labels__WEBPACK_IMPORTED_MODULE_4__["default"])(spec, config, encode.labels, ticksRef, size));
  }

  // include axis domain path if requested
  if (datum.domain) {
    children.push(Object(_guides_axis_domain__WEBPACK_IMPORTED_MODULE_1__["default"])(spec, config, encode.domain, dataRef));
  }

  // include axis title if defined
  if (datum.title) {
    children.push(Object(_guides_axis_title__WEBPACK_IMPORTED_MODULE_5__["default"])(spec, config, encode.title, dataRef));
  }

  // build axis specification
  group = Object(_guides_guide_group__WEBPACK_IMPORTED_MODULE_6__["default"])(_marks_roles__WEBPACK_IMPORTED_MODULE_8__["AxisRole"], style, name, dataRef, interactive, axisEncode, children);
  if (spec.zindex) group.zindex = spec.zindex;

  // parse axis specification
  return Object(_mark__WEBPACK_IMPORTED_MODULE_9__["default"])(group, scope);
});


/***/ }),

/***/ "./node_modules/vega-parser/src/parsers/data.js":
/*!******************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/data.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return parseData; });
/* harmony import */ var _transform__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./transform */ "./node_modules/vega-parser/src/parsers/transform.js");
/* harmony import */ var _trigger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./trigger */ "./node_modules/vega-parser/src/parsers/trigger.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ "./node_modules/vega-parser/src/util.js");
/* harmony import */ var _transforms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../transforms */ "./node_modules/vega-parser/src/transforms.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");






function parseData(data, scope) {
  var transforms = [];

  if (data.transform) {
    data.transform.forEach(function(tx) {
      transforms.push(Object(_transform__WEBPACK_IMPORTED_MODULE_0__["default"])(tx, scope));
    });
  }

  if (data.on) {
    data.on.forEach(function(on) {
      Object(_trigger__WEBPACK_IMPORTED_MODULE_1__["default"])(on, scope, data.name);
    });
  }

  scope.addDataPipeline(data.name, analyze(data, scope, transforms));
}

/**
 * Analyze a data pipeline, add needed operators.
 */
function analyze(data, scope, ops) {
  var output = [],
      source = null,
      modify = false,
      generate = false,
      upstream, i, n, t, m;

  if (data.values) {
    // hard-wired input data set
    if (Object(_util__WEBPACK_IMPORTED_MODULE_2__["hasSignal"])(data.values) || Object(_util__WEBPACK_IMPORTED_MODULE_2__["hasSignal"])(data.format)) {
      // if either values or format has signal, use dynamic loader
      output.push(load(scope, data));
      output.push(source = collect());
    } else {
      // otherwise, ingest upon dataflow init
      output.push(source = collect({
        $ingest: data.values,
        $format: data.format
      }));
    }
  } else if (data.url) {
    // load data from external source
    if (Object(_util__WEBPACK_IMPORTED_MODULE_2__["hasSignal"])(data.url) || Object(_util__WEBPACK_IMPORTED_MODULE_2__["hasSignal"])(data.format)) {
      // if either url or format has signal, use dynamic loader
      output.push(load(scope, data));
      output.push(source = collect());
    } else {
      // otherwise, request load upon dataflow init
      output.push(source = collect({
        $request: data.url,
        $format: data.format
      }));
    }
  } else if (data.source) {
    // derives from one or more other data sets
    source = upstream = Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["array"])(data.source).map(function(d) {
      return Object(_util__WEBPACK_IMPORTED_MODULE_2__["ref"])(scope.getData(d).output);
    });
    output.push(null); // populate later
  }

  // scan data transforms, add collectors as needed
  for (i=0, n=ops.length; i<n; ++i) {
    t = ops[i];
    m = t.metadata;

    if (!source && !m.source) {
      output.push(source = collect());
    }
    output.push(t);

    if (m.generates) generate = true;
    if (m.modifies && !generate) modify = true;

    if (m.source) source = t;
    else if (m.changes) source = null;
  }

  if (upstream) {
    n = upstream.length - 1;
    output[0] = Object(_transforms__WEBPACK_IMPORTED_MODULE_3__["Relay"])({
      derive: modify,
      pulse: n ? upstream : upstream[0]
    });
    if (modify || n) {
      // collect derived and multi-pulse tuples
      output.splice(1, 0, collect());
    }
  }

  if (!source) output.push(collect());
  output.push(Object(_transforms__WEBPACK_IMPORTED_MODULE_3__["Sieve"])({}));
  return output;
}

function collect(values) {
  var s = Object(_transforms__WEBPACK_IMPORTED_MODULE_3__["Collect"])({}, values);
  s.metadata = {source: true};
  return s;
}

function load(scope, data) {
  return Object(_transforms__WEBPACK_IMPORTED_MODULE_3__["Load"])({
    url:    data.url ? scope.property(data.url) : undefined,
    values: data.values ? scope.property(data.values) : undefined,
    format: scope.objectProperty(data.format)
  });
}


/***/ }),

/***/ "./node_modules/vega-parser/src/parsers/encode.js":
/*!********************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/encode.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return parseEncode; });
/* harmony import */ var _encode_adjust_spatial__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./encode/adjust-spatial */ "./node_modules/vega-parser/src/parsers/encode/adjust-spatial.js");
/* harmony import */ var _encode_entry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./encode/entry */ "./node_modules/vega-parser/src/parsers/encode/entry.js");
/* harmony import */ var _encode_rule__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./encode/rule */ "./node_modules/vega-parser/src/parsers/encode/rule.js");
/* harmony import */ var _encode_set__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./encode/set */ "./node_modules/vega-parser/src/parsers/encode/set.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");






function parseEncode(encode, marktype, params, scope) {
  var fields = {},
      code = 'var o=item,datum=o.datum,m=0,$;',
      channel, enc, value;

  for (channel in encode) {
    enc = encode[channel];
    if (Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["isArray"])(enc)) { // rule
      code += Object(_encode_rule__WEBPACK_IMPORTED_MODULE_2__["default"])(channel, enc, scope, params, fields);
    } else {
      value = Object(_encode_entry__WEBPACK_IMPORTED_MODULE_1__["default"])(channel, enc, scope, params, fields);
      code += Object(_encode_set__WEBPACK_IMPORTED_MODULE_3__["default"])('o', channel, value);
    }
  }

  code += Object(_encode_adjust_spatial__WEBPACK_IMPORTED_MODULE_0__["default"])(encode, marktype);
  code += 'return m;';

  return {
    $expr:   code,
    $fields: Object.keys(fields),
    $output: Object.keys(encode)
  };
}


/***/ }),

/***/ "./node_modules/vega-parser/src/parsers/encode/adjust-spatial.js":
/*!***********************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/encode/adjust-spatial.js ***!
  \***********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");


var Skip = Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["toSet"])(['rule']),
    Swap = Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["toSet"])(['group', 'image', 'rect']);

/* harmony default export */ __webpack_exports__["default"] = (function(encode, marktype) {
  var code = '';

  if (Skip[marktype]) return code;

  if (encode.x2) {
    if (encode.x) {
      if (Swap[marktype]) {
        code += 'if(o.x>o.x2)$=o.x,o.x=o.x2,o.x2=$;';
      }
      code += 'o.width=o.x2-o.x;';
    } else {
      code += 'o.x=o.x2-(o.width||0);';
    }
  }

  if (encode.xc) {
    code += 'o.x=o.xc-(o.width||0)/2;';
  }

  if (encode.y2) {
    if (encode.y) {
      if (Swap[marktype]) {
        code += 'if(o.y>o.y2)$=o.y,o.y=o.y2,o.y2=$;';
      }
      code += 'o.height=o.y2-o.y;';
    } else {
      code += 'o.y=o.y2-(o.height||0);';
    }
  }

  if (encode.yc) {
    code += 'o.y=o.yc-(o.height||0)/2;';
  }

  return code;
});


/***/ }),

/***/ "./node_modules/vega-parser/src/parsers/encode/color.js":
/*!**************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/encode/color.js ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _entry__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./entry */ "./node_modules/vega-parser/src/parsers/encode/entry.js");


/* harmony default export */ __webpack_exports__["default"] = (function(enc, scope, params, fields) {
  function color(type, x, y, z) {
    var a = Object(_entry__WEBPACK_IMPORTED_MODULE_0__["default"])(null, x, scope, params, fields),
        b = Object(_entry__WEBPACK_IMPORTED_MODULE_0__["default"])(null, y, scope, params, fields),
        c = Object(_entry__WEBPACK_IMPORTED_MODULE_0__["default"])(null, z, scope, params, fields);
    return 'this.' + type + '(' + [a, b, c].join(',') + ').toString()';
  }

  return (enc.c) ? color('hcl', enc.h, enc.c, enc.l)
    : (enc.h || enc.s) ? color('hsl', enc.h, enc.s, enc.l)
    : (enc.l || enc.a) ? color('lab', enc.l, enc.a, enc.b)
    : (enc.r || enc.g || enc.b) ? color('rgb', enc.r, enc.g, enc.b)
    : null;
});


/***/ }),

/***/ "./node_modules/vega-parser/src/parsers/encode/encode-util.js":
/*!********************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/encode/encode-util.js ***!
  \********************************************************************/
/*! exports provided: encoder, addEncode, addEncoders, extendEncode, encoders, has */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "encoder", function() { return encoder; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addEncode", function() { return addEncode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addEncoders", function() { return addEncoders; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extendEncode", function() { return extendEncode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "encoders", function() { return encoders; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "has", function() { return has; });
/* harmony import */ var _encode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../encode */ "./node_modules/vega-parser/src/parsers/encode.js");
/* harmony import */ var _marks_roles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../marks/roles */ "./node_modules/vega-parser/src/parsers/marks/roles.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");




function encoder(_) {
  return Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["isObject"])(_) ? Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["extend"])({}, _) : {value: _};
}

function addEncode(object, name, value, set) {
  if (value != null) {
    if (Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["isObject"])(value) && !Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["isArray"])(value)) {
      object.update[name] = value;
    } else {
      object[set || 'enter'][name] = {value: value};
    }
    return 1;
  } else {
    return 0;
  }
}

function addEncoders(object, enter, update) {
  for (let name in enter) {
    addEncode(object, name, enter[name]);
  }
  for (let name in update) {
    addEncode(object, name, update[name], 'update');
  }
}

function extendEncode(encode, extra, skip) {
  for (var name in extra) {
    if (skip && skip.hasOwnProperty(name)) continue;
    encode[name] = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["extend"])(encode[name] || {}, extra[name]);
  }
  return encode;
}

function encoders(encode, type, role, style, scope, params) {
  var enc, key;
  params = params || {};
  params.encoders = {$encode: (enc = {})};

  encode = applyDefaults(encode, type, role, style, scope.config);

  for (key in encode) {
    enc[key] = Object(_encode__WEBPACK_IMPORTED_MODULE_0__["default"])(encode[key], type, params, scope);
  }

  return params;
}

function applyDefaults(encode, type, role, style, config) {
  var enter = {}, key, skip, props;

  // ignore legend and axis
  if (role == 'legend' || String(role).indexOf('axis') === 0) {
    role = null;
  }

  // resolve mark config
  props = role === _marks_roles__WEBPACK_IMPORTED_MODULE_1__["FrameRole"] ? config.group
    : (role === _marks_roles__WEBPACK_IMPORTED_MODULE_1__["MarkRole"]) ? Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["extend"])({}, config.mark, config[type])
    : null;

  for (key in props) {
    // do not apply defaults if relevant fields are defined
    skip = has(key, encode)
      || (key === 'fill' || key === 'stroke')
      && (has('fill', encode) || has('stroke', encode));

    if (!skip) enter[key] = defaultEncode(props[key]);
  }

  // resolve styles, apply with increasing precedence
  Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["array"])(style).forEach(function(name) {
    var props = config.style && config.style[name];
    for (var key in props) {
      if (!has(key, encode)) {
        enter[key] = defaultEncode(props[key]);
      }
    }
  });

  encode = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["extend"])({}, encode); // defensive copy
  encode.enter = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["extend"])(enter, encode.enter);

  return encode;
}

function defaultEncode(value) {
  return value && value.signal
    ? {signal: value.signal}
    : {value: value};
}

function has(key, encode) {
  return encode && (
    (encode.enter && encode.enter[key]) ||
    (encode.update && encode.update[key])
  );
}


/***/ }),

/***/ "./node_modules/vega-parser/src/parsers/encode/entry.js":
/*!**************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/encode/entry.js ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./color */ "./node_modules/vega-parser/src/parsers/encode/color.js");
/* harmony import */ var _field__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./field */ "./node_modules/vega-parser/src/parsers/encode/field.js");
/* harmony import */ var _scale__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scale */ "./node_modules/vega-parser/src/parsers/encode/scale.js");
/* harmony import */ var _gradient__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./gradient */ "./node_modules/vega-parser/src/parsers/encode/gradient.js");
/* harmony import */ var _property__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./property */ "./node_modules/vega-parser/src/parsers/encode/property.js");
/* harmony import */ var _expression__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./expression */ "./node_modules/vega-parser/src/parsers/encode/expression.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");








/* harmony default export */ __webpack_exports__["default"] = (function(channel, enc, scope, params, fields) {
  if (enc.gradient != null) {
    return Object(_gradient__WEBPACK_IMPORTED_MODULE_3__["default"])(enc, scope, params, fields);
  }

  var value = enc.signal ? Object(_expression__WEBPACK_IMPORTED_MODULE_5__["default"])(enc.signal, scope, params, fields)
    : enc.color ? Object(_color__WEBPACK_IMPORTED_MODULE_0__["default"])(enc.color, scope, params, fields)
    : enc.field != null ? Object(_field__WEBPACK_IMPORTED_MODULE_1__["default"])(enc.field, scope, params, fields)
    : enc.value !== undefined ? Object(vega_util__WEBPACK_IMPORTED_MODULE_6__["stringValue"])(enc.value)
    : undefined;

  if (enc.scale != null) {
    value = Object(_scale__WEBPACK_IMPORTED_MODULE_2__["default"])(enc, value, scope, params, fields);
  }

  if (value === undefined) {
    value = null;
  }

  if (enc.exponent != null) {
    value = 'Math.pow(' + value + ','
      + Object(_property__WEBPACK_IMPORTED_MODULE_4__["default"])(enc.exponent, scope, params, fields) + ')';
  }

  if (enc.mult != null) {
    value += '*' + Object(_property__WEBPACK_IMPORTED_MODULE_4__["default"])(enc.mult, scope, params, fields);
  }

  if (enc.offset != null) {
    value += '+' + Object(_property__WEBPACK_IMPORTED_MODULE_4__["default"])(enc.offset, scope, params, fields);
  }

  if (enc.round) {
    value = 'Math.round(' + value + ')';
  }

  return value;
});


/***/ }),

/***/ "./node_modules/vega-parser/src/parsers/encode/expression.js":
/*!*******************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/encode/expression.js ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _expression__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../expression */ "./node_modules/vega-parser/src/parsers/expression.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");



/* harmony default export */ __webpack_exports__["default"] = (function(code, scope, params, fields) {
  var expr = Object(_expression__WEBPACK_IMPORTED_MODULE_0__["default"])(code, scope);
  expr.$fields.forEach(function(name) { fields[name] = 1; });
  Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["extend"])(params, expr.$params);
  return expr.$expr;
});


/***/ }),

/***/ "./node_modules/vega-parser/src/parsers/encode/field.js":
/*!**************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/encode/field.js ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _expression__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./expression */ "./node_modules/vega-parser/src/parsers/encode/expression.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");



/* harmony default export */ __webpack_exports__["default"] = (function(ref, scope, params, fields) {
  return resolve(Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isObject"])(ref) ? ref : {datum: ref}, scope, params, fields);
});

function resolve(ref, scope, params, fields) {
  var object, level, field;

  if (ref.signal) {
    object = 'datum';
    field = Object(_expression__WEBPACK_IMPORTED_MODULE_0__["default"])(ref.signal, scope, params, fields);
  } else if (ref.group || ref.parent) {
    level = Math.max(1, ref.level || 1);
    object = 'item';

    while (level-- > 0) {
      object += '.mark.group';
    }

    if (ref.parent) {
      field = ref.parent;
      object += '.datum';
    } else {
      field = ref.group;
    }
  } else if (ref.datum) {
    object = 'datum';
    field = ref.datum;
  } else {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["error"])('Invalid field reference: ' + Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["stringValue"])(ref));
  }

  if (!ref.signal) {
    if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isString"])(field)) {
      fields[field] = 1; // TODO review field tracking?
      field = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["splitAccessPath"])(field).map(vega_util__WEBPACK_IMPORTED_MODULE_1__["stringValue"]).join('][');
    } else {
      field = resolve(field, scope, params, fields);
    }
  }

  return object + '[' + field + ']';
}


/***/ }),

/***/ "./node_modules/vega-parser/src/parsers/encode/gradient.js":
/*!*****************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/encode/gradient.js ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _scale__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scale */ "./node_modules/vega-parser/src/parsers/encode/scale.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");



/* harmony default export */ __webpack_exports__["default"] = (function(enc, scope, params, fields) {
  return 'this.gradient('
    + Object(_scale__WEBPACK_IMPORTED_MODULE_0__["getScale"])(enc.gradient, scope, params, fields)
    + ',' + Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["stringValue"])(enc.start)
    + ',' + Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["stringValue"])(enc.stop)
    + ',' + Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["stringValue"])(enc.count)
    + ')';
});


/***/ }),

/***/ "./node_modules/vega-parser/src/parsers/encode/property.js":
/*!*****************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/encode/property.js ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _entry__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./entry */ "./node_modules/vega-parser/src/parsers/encode/entry.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");



/* harmony default export */ __webpack_exports__["default"] = (function(property, scope, params, fields) {
  return Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isObject"])(property)
      ? '(' + Object(_entry__WEBPACK_IMPORTED_MODULE_0__["default"])(null, property, scope, params, fields) + ')'
      : property;
});


/***/ }),

/***/ "./node_modules/vega-parser/src/parsers/encode/rule.js":
/*!*************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/encode/rule.js ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _entry__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./entry */ "./node_modules/vega-parser/src/parsers/encode/entry.js");
/* harmony import */ var _set__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./set */ "./node_modules/vega-parser/src/parsers/encode/set.js");
/* harmony import */ var _expression__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./expression */ "./node_modules/vega-parser/src/parsers/encode/expression.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");





/* harmony default export */ __webpack_exports__["default"] = (function(channel, rules, scope, params, fields) {
  var code = '';

  rules.forEach(function(rule) {
    var value = Object(_entry__WEBPACK_IMPORTED_MODULE_0__["default"])(channel, rule, scope, params, fields);
    code += rule.test
      ? Object(_expression__WEBPACK_IMPORTED_MODULE_2__["default"])(rule.test, scope, params, fields) + '?' + value + ':'
      : value;
  });

  // if no else clause, terminate with null (vega/vega#1366)
  if (Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["peek"])(code) === ':') {
    code += 'null';
  }

  return Object(_set__WEBPACK_IMPORTED_MODULE_1__["default"])('o', channel, code);
});


/***/ }),

/***/ "./node_modules/vega-parser/src/parsers/encode/scale.js":
/*!**************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/encode/scale.js ***!
  \**************************************************************/
/*! exports provided: default, getScale */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getScale", function() { return getScale; });
/* harmony import */ var _expression__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./expression */ "./node_modules/vega-parser/src/parsers/encode/expression.js");
/* harmony import */ var _field__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./field */ "./node_modules/vega-parser/src/parsers/encode/field.js");
/* harmony import */ var vega_functions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-functions */ "./node_modules/vega-functions/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");





/* harmony default export */ __webpack_exports__["default"] = (function(enc, value, scope, params, fields) {
  var scale = getScale(enc.scale, scope, params, fields),
      interp, func, flag;

  if (enc.range != null) {
    // pull value from scale range
    interp = +enc.range;
    func = scale + '.range()';
    value = (interp === 0) ? (func + '[0]')
      : '($=' + func + ',' + ((interp === 1) ? '$[$.length-1]'
      : '$[0]+' + interp + '*($[$.length-1]-$[0])') + ')';
  } else {
    // run value through scale and/or pull scale bandwidth
    if (value !== undefined) value = scale + '(' + value + ')';

    if (enc.band && (flag = hasBandwidth(enc.scale, scope))) {
      func = scale + '.bandwidth';
      interp = +enc.band;
      interp = func + '()' + (interp===1 ? '' : '*' + interp);

      // if we don't know the scale type, check for bandwidth
      if (flag < 0) interp = '(' + func + '?' + interp + ':0)';

      value = (value ? value + '+' : '') + interp;

      if (enc.extra) {
        // include logic to handle extraneous elements
        value = '(datum.extra?' + scale + '(datum.extra.value):' + value + ')';
      }
    }

    if (value == null) value = '0';
  }

  return value;
});

function hasBandwidth(name, scope) {
  if (!Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["isString"])(name)) return -1;
  var type = scope.scaleType(name);
  return type === 'band' || type === 'point' ? 1 : 0;
}

function getScale(name, scope, params, fields) {
  var scaleName;

  if (Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["isString"])(name)) {
    // direct scale lookup; add scale as parameter
    scaleName = vega_functions__WEBPACK_IMPORTED_MODULE_2__["ScalePrefix"] + name;
    if (!params.hasOwnProperty(scaleName)) {
      params[scaleName] = scope.scaleRef(name);
    }
    scaleName = Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["stringValue"])(scaleName);
  } else {
    // indirect scale lookup; add all scales as parameters
    for (scaleName in scope.scales) {
      params[vega_functions__WEBPACK_IMPORTED_MODULE_2__["ScalePrefix"] + scaleName] = scope.scaleRef(scaleName);
    }
    scaleName = Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["stringValue"])(vega_functions__WEBPACK_IMPORTED_MODULE_2__["ScalePrefix"]) + '+'
      + (name.signal
        ? '(' + Object(_expression__WEBPACK_IMPORTED_MODULE_0__["default"])(name.signal, scope, params, fields) + ')'
        : Object(_field__WEBPACK_IMPORTED_MODULE_1__["default"])(name, scope, params, fields));
  }

  return '_[' + scaleName + ']';
}


/***/ }),

/***/ "./node_modules/vega-parser/src/parsers/encode/set.js":
/*!************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/encode/set.js ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");


/* harmony default export */ __webpack_exports__["default"] = (function(obj, key, value) {
  const o = obj + '[' + Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["stringValue"])(key) + ']';
  return `$=${value};if(${o}!==$)${o}=$,m=1;`;
});


/***/ }),

/***/ "./node_modules/vega-parser/src/parsers/expression.js":
/*!************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/expression.js ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var vega_expression__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-expression */ "./node_modules/vega-expression/index.js");
/* harmony import */ var vega_functions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-functions */ "./node_modules/vega-functions/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");




/* harmony default export */ __webpack_exports__["default"] = (function(expr, scope, preamble) {
  var params = {}, ast, gen;

  // parse the expression to an abstract syntax tree (ast)
  try {
    expr = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["isString"])(expr) ? expr : (Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["stringValue"])(expr) + '');
    ast = Object(vega_expression__WEBPACK_IMPORTED_MODULE_0__["parse"])(expr);
  } catch (err) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["error"])('Expression parse error: ' + expr);
  }

  // analyze ast function calls for dependencies
  ast.visit(function visitor(node) {
    if (node.type !== vega_expression__WEBPACK_IMPORTED_MODULE_0__["CallExpression"]) return;
    var name = node.callee.name,
        visit = vega_functions__WEBPACK_IMPORTED_MODULE_1__["codegenParams"].visitors[name];
    if (visit) visit(name, node.arguments, scope, params);
  });

  // perform code generation
  gen = Object(vega_functions__WEBPACK_IMPORTED_MODULE_1__["codeGenerator"])(ast);

  // collect signal dependencies
  gen.globals.forEach(function(name) {
    var signalName = vega_functions__WEBPACK_IMPORTED_MODULE_1__["SignalPrefix"] + name;
    if (!params.hasOwnProperty(signalName) && scope.getSignal(name)) {
      params[signalName] = scope.signalRef(name);
    }
  });

  // return generated expression code and dependencies
  return {
    $expr:   preamble ? preamble + 'return(' + gen.code + ');' : gen.code,
    $fields: gen.fields,
    $params: params
  };
});


/***/ }),

/***/ "./node_modules/vega-parser/src/parsers/guides/axis-config.js":
/*!********************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/guides/axis-config.js ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ "./node_modules/vega-parser/src/parsers/guides/constants.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");



/* harmony default export */ __webpack_exports__["default"] = (function(spec, scope) {
  var config = scope.config,
      orient = spec.orient,
      xy = (orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Top"] || orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Bottom"]) ? config.axisX : config.axisY,
      or = config['axis' + orient[0].toUpperCase() + orient.slice(1)],
      band = scope.scaleType(spec.scale) === 'band' && config.axisBand;

  return (xy || or || band)
    ? Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["extend"])({}, config.axis, xy, or, band)
    : config.axis;
});

/***/ }),

/***/ "./node_modules/vega-parser/src/parsers/guides/axis-domain.js":
/*!********************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/guides/axis-domain.js ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ "./node_modules/vega-parser/src/parsers/guides/constants.js");
/* harmony import */ var _guide_mark__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./guide-mark */ "./node_modules/vega-parser/src/parsers/guides/guide-mark.js");
/* harmony import */ var _guide_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./guide-util */ "./node_modules/vega-parser/src/parsers/guides/guide-util.js");
/* harmony import */ var _marks_marktypes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../marks/marktypes */ "./node_modules/vega-parser/src/parsers/marks/marktypes.js");
/* harmony import */ var _marks_roles__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../marks/roles */ "./node_modules/vega-parser/src/parsers/marks/roles.js");
/* harmony import */ var _encode_encode_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../encode/encode-util */ "./node_modules/vega-parser/src/parsers/encode/encode-util.js");







/* harmony default export */ __webpack_exports__["default"] = (function(spec, config, userEncode, dataRef) {
  var _ = Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])(spec, config),
      orient = spec.orient,
      encode, enter, update, u, u2, v;

  encode = {
    enter: enter = {opacity: _constants__WEBPACK_IMPORTED_MODULE_0__["zero"]},
    update: update = {opacity: _constants__WEBPACK_IMPORTED_MODULE_0__["one"]},
    exit: {opacity: _constants__WEBPACK_IMPORTED_MODULE_0__["zero"]}
  };

  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_5__["addEncoders"])(encode, {
    stroke:           _('domainColor'),
    strokeDash:       _('domainDash'),
    strokeDashOffset: _('domainDashOffset'),
    strokeWidth:      _('domainWidth'),
    strokeOpacity:    _('domainOpacity')
  });

  if (orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Top"] || orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Bottom"]) {
    u = 'x';
    v = 'y';
  } else {
    u = 'y';
    v = 'x';
  }
  u2 = u + '2';

  enter[v] = _constants__WEBPACK_IMPORTED_MODULE_0__["zero"];
  update[u] = enter[u] = position(spec, 0);
  update[u2] = enter[u2] = position(spec, 1);

  return Object(_guide_mark__WEBPACK_IMPORTED_MODULE_1__["default"])(_marks_marktypes__WEBPACK_IMPORTED_MODULE_3__["RuleMark"], _marks_roles__WEBPACK_IMPORTED_MODULE_4__["AxisDomainRole"], null, null, dataRef, encode, userEncode);
});

function position(spec, pos) {
  return {scale: spec.scale, range: pos};
}


/***/ }),

/***/ "./node_modules/vega-parser/src/parsers/guides/axis-grid.js":
/*!******************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/guides/axis-grid.js ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ "./node_modules/vega-parser/src/parsers/guides/constants.js");
/* harmony import */ var _guide_mark__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./guide-mark */ "./node_modules/vega-parser/src/parsers/guides/guide-mark.js");
/* harmony import */ var _guide_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./guide-util */ "./node_modules/vega-parser/src/parsers/guides/guide-util.js");
/* harmony import */ var _marks_marktypes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../marks/marktypes */ "./node_modules/vega-parser/src/parsers/marks/marktypes.js");
/* harmony import */ var _marks_roles__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../marks/roles */ "./node_modules/vega-parser/src/parsers/marks/roles.js");
/* harmony import */ var _encode_encode_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../encode/encode-util */ "./node_modules/vega-parser/src/parsers/encode/encode-util.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");








/* harmony default export */ __webpack_exports__["default"] = (function(spec, config, userEncode, dataRef) {
  var _ = Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])(spec, config),
      orient = spec.orient,
      vscale = spec.gridScale,
      sign = (orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Left"] || orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Top"]) ? 1 : -1,
      offset = offsetValue(spec.offset, sign),
      encode, enter, exit, update, tickPos, u, v, v2, s;

  encode = {
    enter: enter = {opacity: _constants__WEBPACK_IMPORTED_MODULE_0__["zero"]},
    update: update = {opacity: _constants__WEBPACK_IMPORTED_MODULE_0__["one"]},
    exit: exit = {opacity: _constants__WEBPACK_IMPORTED_MODULE_0__["zero"]}
  };

  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_5__["addEncoders"])(encode, {
    stroke:           _('gridColor'),
    strokeDash:       _('gridDash'),
    strokeDashOffset: _('gridDashOffset'),
    strokeOpacity:    _('gridOpacity'),
    strokeWidth:      _('gridWidth')
  });

  tickPos = {
    scale:  spec.scale,
    field:  _constants__WEBPACK_IMPORTED_MODULE_0__["Value"],
    band:   _('bandPosition'),
    round:  _('tickRound'),
    extra:  _('tickExtra'),
    offset: _('tickOffset')
  };

  if (orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Top"] || orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Bottom"]) {
    u = 'x';
    v = 'y';
    s = 'height';
  } else {
    u = 'y';
    v = 'x';
    s = 'width';
  }
  v2 = v + '2';

  update[u] = enter[u] = exit[u] = tickPos;

  if (vscale) {
    update[v] = enter[v] = {scale: vscale, range: 0, mult: sign, offset: offset};
    update[v2] = enter[v2] = {scale: vscale, range: 1, mult: sign, offset: offset};
  } else {
    update[v] = enter[v] = {value: 0, offset: offset};
    update[v2] = enter[v2] = {signal: s, mult: sign, offset: offset};
  }

  return Object(_guide_mark__WEBPACK_IMPORTED_MODULE_1__["default"])(_marks_marktypes__WEBPACK_IMPORTED_MODULE_3__["RuleMark"], _marks_roles__WEBPACK_IMPORTED_MODULE_4__["AxisGridRole"], null, _constants__WEBPACK_IMPORTED_MODULE_0__["Value"], dataRef, encode, userEncode);
});

function offsetValue(offset, sign)  {
  if (sign === 1) {
    // do nothing!
  } else if (!Object(vega_util__WEBPACK_IMPORTED_MODULE_6__["isObject"])(offset)) {
    offset = sign * (offset || 0);
  } else {
    var entry = offset = Object(vega_util__WEBPACK_IMPORTED_MODULE_6__["extend"])({}, offset);

    while (entry.mult != null) {
      if (!Object(vega_util__WEBPACK_IMPORTED_MODULE_6__["isObject"])(entry.mult)) {
        entry.mult *= sign;
        return offset;
      } else {
        entry = entry.mult = Object(vega_util__WEBPACK_IMPORTED_MODULE_6__["extend"])({}, entry.mult);
      }
    }

    entry.mult = sign;
  }

  return offset;
}


/***/ }),

/***/ "./node_modules/vega-parser/src/parsers/guides/axis-labels.js":
/*!********************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/guides/axis-labels.js ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ "./node_modules/vega-parser/src/parsers/guides/constants.js");
/* harmony import */ var _guide_mark__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./guide-mark */ "./node_modules/vega-parser/src/parsers/guides/guide-mark.js");
/* harmony import */ var _guide_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./guide-util */ "./node_modules/vega-parser/src/parsers/guides/guide-util.js");
/* harmony import */ var _marks_marktypes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../marks/marktypes */ "./node_modules/vega-parser/src/parsers/marks/marktypes.js");
/* harmony import */ var _marks_roles__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../marks/roles */ "./node_modules/vega-parser/src/parsers/marks/roles.js");
/* harmony import */ var _encode_encode_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../encode/encode-util */ "./node_modules/vega-parser/src/parsers/encode/encode-util.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../util */ "./node_modules/vega-parser/src/util.js");








function flushExpr(scale, threshold, a, b, c) {
  return {
    signal: 'flush(range("' + scale + '"), '
      + 'scale("' + scale + '", datum.value), '
      + threshold + ',' + a + ',' + b + ',' + c + ')'
  };
}

/* harmony default export */ __webpack_exports__["default"] = (function(spec, config, userEncode, dataRef, size) {
  var _ = Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])(spec, config),
      orient = spec.orient,
      sign = (orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Left"] || orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Top"]) ? -1 : 1,
      isXAxis = (orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Top"] || orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Bottom"]),
      scale = spec.scale,
      flush = Object(_util__WEBPACK_IMPORTED_MODULE_6__["deref"])(_('labelFlush')),
      flushOffset = Object(_util__WEBPACK_IMPORTED_MODULE_6__["deref"])(_('labelFlushOffset')),
      flushOn = flush === 0 || !!flush,
      labelAlign = _('labelAlign'),
      labelBaseline = _('labelBaseline'),
      encode, enter, tickSize, tickPos, align, baseline, offset,
      bound, overlap, separation;

  tickSize = Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_5__["encoder"])(size);
  tickSize.mult = sign;
  tickSize.offset = Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_5__["encoder"])(_('labelPadding') || 0);
  tickSize.offset.mult = sign;

  tickPos = {
    scale:  scale,
    field:  _constants__WEBPACK_IMPORTED_MODULE_0__["Value"],
    band:   0.5,
    offset: _('tickOffset')
  };

  if (isXAxis) {
    align = labelAlign || (flushOn
      ? flushExpr(scale, flush, '"left"', '"right"', '"center"')
      : 'center');
    baseline = labelBaseline || (orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Top"] ? 'bottom' : 'top');
    offset = !labelAlign;
  } else {
    align = labelAlign || (orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Right"] ? 'left' : 'right');
    baseline = labelBaseline || (flushOn
      ? flushExpr(scale, flush, '"top"', '"bottom"', '"middle"')
      : 'middle');
    offset = !labelBaseline;
  }

  offset = offset && flushOn && flushOffset
    ? flushExpr(scale, flush, '-' + flushOffset, flushOffset, 0)
    : null;

  encode = {
    enter: enter = {
      opacity: _constants__WEBPACK_IMPORTED_MODULE_0__["zero"],
      x: isXAxis ? tickPos : tickSize,
      y: isXAxis ? tickSize : tickPos
    },
    update: {
      opacity: _constants__WEBPACK_IMPORTED_MODULE_0__["one"],
      text: {field: _constants__WEBPACK_IMPORTED_MODULE_0__["Label"]},
      x: enter.x,
      y: enter.y
    },
    exit: {
      opacity: _constants__WEBPACK_IMPORTED_MODULE_0__["zero"],
      x: enter.x,
      y: enter.y
    }
  };

  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_5__["addEncoders"])(encode, {
    [isXAxis ? 'dx' : 'dy']: offset,
    align:       align,
    baseline:    baseline,
    angle:       _('labelAngle'),
    fill:        _('labelColor'),
    fillOpacity: _('labelOpacity'),
    font:        _('labelFont'),
    fontSize:    _('labelFontSize'),
    fontWeight:  _('labelFontWeight'),
    fontStyle:   _('labelFontStyle'),
    limit:       _('labelLimit')
  });

  bound   = _('labelBound');
  overlap = _('labelOverlap');
  separation = _('labelSeparation');

  spec = Object(_guide_mark__WEBPACK_IMPORTED_MODULE_1__["default"])(_marks_marktypes__WEBPACK_IMPORTED_MODULE_3__["TextMark"], _marks_roles__WEBPACK_IMPORTED_MODULE_4__["AxisLabelRole"], _constants__WEBPACK_IMPORTED_MODULE_0__["GuideLabelStyle"], _constants__WEBPACK_IMPORTED_MODULE_0__["Value"], dataRef, encode, userEncode);

  // if overlap method or bound defined, request label overlap removal
  if (overlap || bound) {
    spec.overlap = {
      separation: separation,
      method: overlap,
      order: 'datum.index',
      bound: bound ? {scale: scale, orient: orient, tolerance: bound} : null
    };
  }

  return spec;
});


/***/ }),

/***/ "./node_modules/vega-parser/src/parsers/guides/axis-ticks.js":
/*!*******************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/guides/axis-ticks.js ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ "./node_modules/vega-parser/src/parsers/guides/constants.js");
/* harmony import */ var _guide_mark__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./guide-mark */ "./node_modules/vega-parser/src/parsers/guides/guide-mark.js");
/* harmony import */ var _guide_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./guide-util */ "./node_modules/vega-parser/src/parsers/guides/guide-util.js");
/* harmony import */ var _marks_marktypes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../marks/marktypes */ "./node_modules/vega-parser/src/parsers/marks/marktypes.js");
/* harmony import */ var _marks_roles__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../marks/roles */ "./node_modules/vega-parser/src/parsers/marks/roles.js");
/* harmony import */ var _encode_encode_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../encode/encode-util */ "./node_modules/vega-parser/src/parsers/encode/encode-util.js");







/* harmony default export */ __webpack_exports__["default"] = (function(spec, config, userEncode, dataRef, size) {
  var _ = Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])(spec, config),
      orient = spec.orient,
      sign = (orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Left"] || orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Top"]) ? -1 : 1,
      encode, enter, exit, update, tickSize, tickPos;

  encode = {
    enter: enter = {opacity: _constants__WEBPACK_IMPORTED_MODULE_0__["zero"]},
    update: update = {opacity: _constants__WEBPACK_IMPORTED_MODULE_0__["one"]},
    exit: exit = {opacity: _constants__WEBPACK_IMPORTED_MODULE_0__["zero"]}
  };

  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_5__["addEncoders"])(encode, {
    stroke:           _('tickColor'),
    strokeDash:       _('tickDash'),
    strokeDashOffset: _('tickDashOffset'),
    strokeOpacity:    _('tickOpacity'),
    strokeWidth:      _('tickWidth')
  });

  tickSize = Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_5__["encoder"])(size);
  tickSize.mult = sign;

  tickPos = {
    scale:  spec.scale,
    field:  _constants__WEBPACK_IMPORTED_MODULE_0__["Value"],
    band:   _('bandPosition'),
    round:  _('tickRound'),
    extra:  _('tickExtra'),
    offset: _('tickOffset')
  };

  if (orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Top"] || orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Bottom"]) {
    update.y = enter.y = _constants__WEBPACK_IMPORTED_MODULE_0__["zero"];
    update.y2 = enter.y2 = tickSize;
    update.x = enter.x = exit.x = tickPos;
  } else {
    update.x = enter.x = _constants__WEBPACK_IMPORTED_MODULE_0__["zero"];
    update.x2 = enter.x2 = tickSize;
    update.y = enter.y = exit.y = tickPos;
  }

  return Object(_guide_mark__WEBPACK_IMPORTED_MODULE_1__["default"])(_marks_marktypes__WEBPACK_IMPORTED_MODULE_3__["RuleMark"], _marks_roles__WEBPACK_IMPORTED_MODULE_4__["AxisTickRole"], null, _constants__WEBPACK_IMPORTED_MODULE_0__["Value"], dataRef, encode, userEncode);
});


/***/ }),

/***/ "./node_modules/vega-parser/src/parsers/guides/axis-title.js":
/*!*******************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/guides/axis-title.js ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ "./node_modules/vega-parser/src/parsers/guides/constants.js");
/* harmony import */ var _guide_mark__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./guide-mark */ "./node_modules/vega-parser/src/parsers/guides/guide-mark.js");
/* harmony import */ var _guide_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./guide-util */ "./node_modules/vega-parser/src/parsers/guides/guide-util.js");
/* harmony import */ var _encode_encode_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../encode/encode-util */ "./node_modules/vega-parser/src/parsers/encode/encode-util.js");
/* harmony import */ var _marks_marktypes__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../marks/marktypes */ "./node_modules/vega-parser/src/parsers/marks/marktypes.js");
/* harmony import */ var _marks_roles__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../marks/roles */ "./node_modules/vega-parser/src/parsers/marks/roles.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");









/* harmony default export */ __webpack_exports__["default"] = (function(spec, config, userEncode, dataRef) {
  var _ = Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])(spec, config),
      orient = spec.orient,
      sign = (orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Left"] || orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Top"]) ? -1 : 1,
      horizontal = (orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Top"] || orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Bottom"]),
      encode, enter, update, titlePos;

  encode = {
    enter: enter = {
      opacity: _constants__WEBPACK_IMPORTED_MODULE_0__["zero"],
      anchor: Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_3__["encoder"])(_('titleAnchor')),
      align: {signal: _guide_util__WEBPACK_IMPORTED_MODULE_2__["alignExpr"]}
    },
    update: update = Object(vega_util__WEBPACK_IMPORTED_MODULE_6__["extend"])({}, enter, {
      opacity: _constants__WEBPACK_IMPORTED_MODULE_0__["one"],
      text: Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_3__["encoder"])(spec.title)
    }),
    exit: {
      opacity: _constants__WEBPACK_IMPORTED_MODULE_0__["zero"]
    }
  };

  titlePos = {
    signal: `lerp(range("${spec.scale}"), ${Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["anchorExpr"])(0, 1, 0.5)})`
  };

  if (horizontal) {
    update.x = titlePos;
    enter.angle = {value: 0};
    enter.baseline = {value: orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Top"] ? 'bottom' : 'top'};
  } else {
    update.y = titlePos;
    enter.angle = {value: sign * 90};
    enter.baseline = {value: 'bottom'};
  }

  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_3__["addEncoders"])(encode, {
    angle:       _('titleAngle'),
    baseline:    _('titleBaseline'),
    fill:        _('titleColor'),
    fillOpacity: _('titleOpacity'),
    font:        _('titleFont'),
    fontSize:    _('titleFontSize'),
    fontStyle:   _('titleFontStyle'),
    fontWeight:  _('titleFontWeight'),
    limit:       _('titleLimit')
  }, { // require update
    align:       _('titleAlign')
  });

  !Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_3__["addEncode"])(encode, 'x', _('titleX'), 'update')
    && !horizontal && !Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_3__["has"])('x', userEncode)
    && (encode.enter.auto = {value: true});

  !Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_3__["addEncode"])(encode, 'y', _('titleY'), 'update')
    && horizontal && !Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_3__["has"])('y', userEncode)
    && (encode.enter.auto = {value: true});

  return Object(_guide_mark__WEBPACK_IMPORTED_MODULE_1__["default"])(_marks_marktypes__WEBPACK_IMPORTED_MODULE_4__["TextMark"], _marks_roles__WEBPACK_IMPORTED_MODULE_5__["AxisTitleRole"], _constants__WEBPACK_IMPORTED_MODULE_0__["GuideTitleStyle"], null, dataRef, encode, userEncode);
});


/***/ }),

/***/ "./node_modules/vega-parser/src/parsers/guides/constants.js":
/*!******************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/guides/constants.js ***!
  \******************************************************************/
/*! exports provided: Top, Left, Right, Bottom, Center, Vertical, Start, Middle, End, Index, Label, Offset, Perc, Perc2, Size, Value, GuideLabelStyle, GuideTitleStyle, GroupTitleStyle, Symbols, Gradient, Discrete, LegendScales, Skip, zero, one */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Top", function() { return Top; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Left", function() { return Left; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Right", function() { return Right; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Bottom", function() { return Bottom; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Center", function() { return Center; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Vertical", function() { return Vertical; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Start", function() { return Start; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Middle", function() { return Middle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "End", function() { return End; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Index", function() { return Index; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Label", function() { return Label; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Offset", function() { return Offset; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Perc", function() { return Perc; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Perc2", function() { return Perc2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Size", function() { return Size; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Value", function() { return Value; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GuideLabelStyle", function() { return GuideLabelStyle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GuideTitleStyle", function() { return GuideTitleStyle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GroupTitleStyle", function() { return GroupTitleStyle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Symbols", function() { return Symbols; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Gradient", function() { return Gradient; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Discrete", function() { return Discrete; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LegendScales", function() { return LegendScales; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Skip", function() { return Skip; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "zero", function() { return zero; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "one", function() { return one; });
const Top = 'top';
const Left = 'left';
const Right = 'right';
const Bottom = 'bottom';
const Center = 'center';

const Vertical = 'vertical';

const Start = 'start';
const Middle = 'middle';
const End = 'end';

const Index  = 'index';
const Label  = 'label';
const Offset = 'offset';
const Perc   = 'perc';
const Perc2  = 'perc2';
const Size   = 'size';
const Value  = 'value';

const GuideLabelStyle = 'guide-label';
const GuideTitleStyle = 'guide-title';
const GroupTitleStyle = 'group-title';

const Symbols = 'symbol';
const Gradient = 'gradient';
const Discrete = 'discrete';

// Encoding channels supported by legends
// In priority order of 'canonical' scale
const LegendScales = [
  'size',
  'shape',
  'fill',
  'stroke',
  'strokeWidth',
  'strokeDash',
  'opacity'
];

const Skip = {
  name: 1,
  interactive: 1
};

const zero = {value: 0};
const one = {value: 1};


/***/ }),

/***/ "./node_modules/vega-parser/src/parsers/guides/guide-group.js":
/*!********************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/guides/guide-group.js ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _marks_marktypes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../marks/marktypes */ "./node_modules/vega-parser/src/parsers/marks/marktypes.js");


/* harmony default export */ __webpack_exports__["default"] = (function(role, style, name, dataRef, interactive, encode, marks, layout) {
  return {
    type: _marks_marktypes__WEBPACK_IMPORTED_MODULE_0__["GroupMark"],
    name: name,
    role: role,
    style: style,
    from: dataRef,
    interactive: interactive || false,
    encode: encode,
    marks: marks,
    layout: layout
  };
});


/***/ }),

/***/ "./node_modules/vega-parser/src/parsers/guides/guide-mark.js":
/*!*******************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/guides/guide-mark.js ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ "./node_modules/vega-parser/src/parsers/guides/constants.js");
/* harmony import */ var _encode_encode_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../encode/encode-util */ "./node_modules/vega-parser/src/parsers/encode/encode-util.js");



/* harmony default export */ __webpack_exports__["default"] = (function(type, role, style, key, dataRef, encode, extras) {
  return {
    type:  type,
    name:  extras ? extras.name : undefined,
    role:  role,
    style: (extras && extras.style) || style,
    key:   key,
    from:  dataRef,
    interactive: !!(extras && extras.interactive),
    encode: Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_1__["extendEncode"])(encode, extras, _constants__WEBPACK_IMPORTED_MODULE_0__["Skip"])
  };
});


/***/ }),

/***/ "./node_modules/vega-parser/src/parsers/guides/guide-util.js":
/*!*******************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/guides/guide-util.js ***!
  \*******************************************************************/
/*! exports provided: lookup, getEncoding, getStyle, anchorExpr, alignExpr */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "lookup", function() { return lookup; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getEncoding", function() { return getEncoding; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getStyle", function() { return getStyle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "anchorExpr", function() { return anchorExpr; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "alignExpr", function() { return alignExpr; });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ "./node_modules/vega-parser/src/parsers/guides/constants.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../util */ "./node_modules/vega-parser/src/util.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");




function lookup(spec, config) {
  const _ = name => Object(_util__WEBPACK_IMPORTED_MODULE_1__["value"])(spec[name], config[name]);

  _.isVertical = s => _constants__WEBPACK_IMPORTED_MODULE_0__["Vertical"] === Object(_util__WEBPACK_IMPORTED_MODULE_1__["value"])(
    spec.direction,
    config.direction || (s ? config.symbolDirection : config.gradientDirection)
  );

  _.gradientLength = () => Object(_util__WEBPACK_IMPORTED_MODULE_1__["value"])(
    spec.gradientLength,
    config.gradientLength || config.gradientWidth
  );

  _.gradientThickness = () => Object(_util__WEBPACK_IMPORTED_MODULE_1__["value"])(
    spec.gradientThickness,
    config.gradientThickness || config.gradientHeight
  );

  _.entryColumns = () => Object(_util__WEBPACK_IMPORTED_MODULE_1__["value"])(
    spec.columns,
    Object(_util__WEBPACK_IMPORTED_MODULE_1__["value"])(config.columns, +_.isVertical(true))
  );

  return _;
}

function getEncoding(name, encode) {
  var v = encode && (
    (encode.update && encode.update[name]) ||
    (encode.enter && encode.enter[name])
  );
  return v && v.signal ? v : v ? v.value : null;
}

function getStyle(name, scope, style) {
  var s = scope.config.style[style];
  return s && s[name];
}

function anchorExpr(s, e, m) {
  return `item.anchor === "${_constants__WEBPACK_IMPORTED_MODULE_0__["Start"]}" ? ${s} : item.anchor === "${_constants__WEBPACK_IMPORTED_MODULE_0__["End"]}" ? ${e} : ${m}`;
}

const alignExpr = anchorExpr(
  Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["stringValue"])(_constants__WEBPACK_IMPORTED_MODULE_0__["Left"]),
  Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["stringValue"])(_constants__WEBPACK_IMPORTED_MODULE_0__["Right"]),
  Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["stringValue"])(_constants__WEBPACK_IMPORTED_MODULE_0__["Center"])
);


/***/ }),

/***/ "./node_modules/vega-parser/src/parsers/guides/legend-gradient-discrete.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/guides/legend-gradient-discrete.js ***!
  \*********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ "./node_modules/vega-parser/src/parsers/guides/constants.js");
/* harmony import */ var _guide_mark__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./guide-mark */ "./node_modules/vega-parser/src/parsers/guides/guide-mark.js");
/* harmony import */ var _guide_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./guide-util */ "./node_modules/vega-parser/src/parsers/guides/guide-util.js");
/* harmony import */ var _marks_marktypes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../marks/marktypes */ "./node_modules/vega-parser/src/parsers/marks/marktypes.js");
/* harmony import */ var _marks_roles__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../marks/roles */ "./node_modules/vega-parser/src/parsers/marks/roles.js");
/* harmony import */ var _encode_encode_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../encode/encode-util */ "./node_modules/vega-parser/src/parsers/encode/encode-util.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");








/* harmony default export */ __webpack_exports__["default"] = (function(spec, scale, config, userEncode, dataRef) {
  var _ = Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])(spec, config),
      vertical = _.isVertical(),
      thickness = _.gradientThickness(),
      length = _.gradientLength(),
      encode, enter, u, v, uu, vv, adjust = '';

  vertical
    ? (u = 'y', uu = 'y2', v = 'x', vv = 'width', adjust = '1-')
    : (u = 'x', uu = 'x2', v = 'y', vv = 'height');

  enter = {
    opacity: _constants__WEBPACK_IMPORTED_MODULE_0__["zero"],
    fill: {scale: scale, field: _constants__WEBPACK_IMPORTED_MODULE_0__["Value"]}
  };
  enter[u]  = {signal: adjust + 'datum.' + _constants__WEBPACK_IMPORTED_MODULE_0__["Perc"], mult: length};
  enter[v]  = _constants__WEBPACK_IMPORTED_MODULE_0__["zero"];
  enter[uu] = {signal: adjust + 'datum.' + _constants__WEBPACK_IMPORTED_MODULE_0__["Perc2"], mult: length};
  enter[vv] = Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_5__["encoder"])(thickness);

  encode = {
    enter: enter,
    update: Object(vega_util__WEBPACK_IMPORTED_MODULE_6__["extend"])({}, enter, {opacity: _constants__WEBPACK_IMPORTED_MODULE_0__["one"]}),
    exit: {opacity: _constants__WEBPACK_IMPORTED_MODULE_0__["zero"]}
  };

  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_5__["addEncoders"])(encode, {
    stroke:      _('gradientStrokeColor'),
    strokeWidth: _('gradientStrokeWidth')
  }, { // update
    opacity:     _('gradientOpacity')
  });

  return Object(_guide_mark__WEBPACK_IMPORTED_MODULE_1__["default"])(_marks_marktypes__WEBPACK_IMPORTED_MODULE_3__["RectMark"], _marks_roles__WEBPACK_IMPORTED_MODULE_4__["LegendBandRole"], null, _constants__WEBPACK_IMPORTED_MODULE_0__["Value"], dataRef, encode, userEncode);
});


/***/ }),

/***/ "./node_modules/vega-parser/src/parsers/guides/legend-gradient-labels.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/guides/legend-gradient-labels.js ***!
  \*******************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ "./node_modules/vega-parser/src/parsers/guides/constants.js");
/* harmony import */ var _guide_mark__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./guide-mark */ "./node_modules/vega-parser/src/parsers/guides/guide-mark.js");
/* harmony import */ var _guide_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./guide-util */ "./node_modules/vega-parser/src/parsers/guides/guide-util.js");
/* harmony import */ var _marks_marktypes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../marks/marktypes */ "./node_modules/vega-parser/src/parsers/marks/marktypes.js");
/* harmony import */ var _marks_roles__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../marks/roles */ "./node_modules/vega-parser/src/parsers/marks/roles.js");
/* harmony import */ var _encode_encode_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../encode/encode-util */ "./node_modules/vega-parser/src/parsers/encode/encode-util.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../util */ "./node_modules/vega-parser/src/util.js");








const alignExpr = `datum.${_constants__WEBPACK_IMPORTED_MODULE_0__["Perc"]}<=0?"${_constants__WEBPACK_IMPORTED_MODULE_0__["Left"]}":datum.${_constants__WEBPACK_IMPORTED_MODULE_0__["Perc"]}>=1?"${_constants__WEBPACK_IMPORTED_MODULE_0__["Right"]}":"${_constants__WEBPACK_IMPORTED_MODULE_0__["Center"]}"`,
      baselineExpr = `datum.${_constants__WEBPACK_IMPORTED_MODULE_0__["Perc"]}<=0?"${_constants__WEBPACK_IMPORTED_MODULE_0__["Bottom"]}":datum.${_constants__WEBPACK_IMPORTED_MODULE_0__["Perc"]}>=1?"${_constants__WEBPACK_IMPORTED_MODULE_0__["Top"]}":"${_constants__WEBPACK_IMPORTED_MODULE_0__["Middle"]}"`;

/* harmony default export */ __webpack_exports__["default"] = (function(spec, config, userEncode, dataRef) {
  var _ = Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])(spec, config),
      vertical = _.isVertical(),
      thickness = Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_5__["encoder"])(_.gradientThickness()),
      length = _.gradientLength(),
      overlap = _('labelOverlap'),
      separation = _('labelSeparation'),
      encode, enter, update, u, v, adjust = '';

  encode = {
    enter: enter = {
      opacity: _constants__WEBPACK_IMPORTED_MODULE_0__["zero"]
    },
    update: update = {
      opacity: _constants__WEBPACK_IMPORTED_MODULE_0__["one"],
      text: {field: _constants__WEBPACK_IMPORTED_MODULE_0__["Label"]}
    },
    exit: {
      opacity: _constants__WEBPACK_IMPORTED_MODULE_0__["zero"]
    }
  };

  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_5__["addEncoders"])(encode, {
    fill:        _('labelColor'),
    fillOpacity: _('labelOpacity'),
    font:        _('labelFont'),
    fontSize:    _('labelFontSize'),
    fontStyle:   _('labelFontStyle'),
    fontWeight:  _('labelFontWeight'),
    limit:       Object(_util__WEBPACK_IMPORTED_MODULE_6__["value"])(spec.labelLimit, config.gradientLabelLimit)
  });

  if (vertical) {
    enter.align = {value: 'left'};
    enter.baseline = update.baseline = {signal: baselineExpr};
    u = 'y'; v = 'x'; adjust = '1-';
  } else {
    enter.align = update.align = {signal: alignExpr};
    enter.baseline = {value: 'top'};
    u = 'x'; v = 'y';
  }

  enter[u] = update[u] = {signal: adjust + 'datum.' + _constants__WEBPACK_IMPORTED_MODULE_0__["Perc"], mult: length};

  enter[v] = update[v] = thickness;
  thickness.offset = Object(_util__WEBPACK_IMPORTED_MODULE_6__["value"])(spec.labelOffset, config.gradientLabelOffset) || 0;

  spec = Object(_guide_mark__WEBPACK_IMPORTED_MODULE_1__["default"])(_marks_marktypes__WEBPACK_IMPORTED_MODULE_3__["TextMark"], _marks_roles__WEBPACK_IMPORTED_MODULE_4__["LegendLabelRole"], _constants__WEBPACK_IMPORTED_MODULE_0__["GuideLabelStyle"], _constants__WEBPACK_IMPORTED_MODULE_0__["Value"], dataRef, encode, userEncode);
  if (overlap) {
    spec.overlap = {
      separation: separation,
      method: overlap,
      order: 'datum.' + _constants__WEBPACK_IMPORTED_MODULE_0__["Index"]
    };
  }
  return spec;
});


/***/ }),

/***/ "./node_modules/vega-parser/src/parsers/guides/legend-gradient.js":
/*!************************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/guides/legend-gradient.js ***!
  \************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ "./node_modules/vega-parser/src/parsers/guides/constants.js");
/* harmony import */ var _guide_mark__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./guide-mark */ "./node_modules/vega-parser/src/parsers/guides/guide-mark.js");
/* harmony import */ var _guide_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./guide-util */ "./node_modules/vega-parser/src/parsers/guides/guide-util.js");
/* harmony import */ var _marks_marktypes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../marks/marktypes */ "./node_modules/vega-parser/src/parsers/marks/marktypes.js");
/* harmony import */ var _marks_roles__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../marks/roles */ "./node_modules/vega-parser/src/parsers/marks/roles.js");
/* harmony import */ var _encode_encode_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../encode/encode-util */ "./node_modules/vega-parser/src/parsers/encode/encode-util.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");








/* harmony default export */ __webpack_exports__["default"] = (function(spec, scale, config, userEncode) {
  var _ = Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])(spec, config),
      vertical = _.isVertical(),
      thickness = _.gradientThickness(),
      length = _.gradientLength(),
      encode, enter, start, stop, width, height;

  if (vertical) {
    start = [0, 1];
    stop = [0, 0];
    width = thickness;
    height = length;
  } else {
    start = [0, 0];
    stop = [1, 0];
    width = length;
    height = thickness;
  }

  encode = {
    enter: enter = {
      opacity: _constants__WEBPACK_IMPORTED_MODULE_0__["zero"],
      x: _constants__WEBPACK_IMPORTED_MODULE_0__["zero"],
      y: _constants__WEBPACK_IMPORTED_MODULE_0__["zero"],
      width: Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_5__["encoder"])(width),
      height: Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_5__["encoder"])(height)
    },
    update: Object(vega_util__WEBPACK_IMPORTED_MODULE_6__["extend"])({}, enter, {
      opacity: _constants__WEBPACK_IMPORTED_MODULE_0__["one"],
      fill: {gradient: scale, start: start, stop: stop}
    }),
    exit: {
      opacity: _constants__WEBPACK_IMPORTED_MODULE_0__["zero"]
    }
  };

  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_5__["addEncoders"])(encode, {
    stroke:      _('gradientStrokeColor'),
    strokeWidth: _('gradientStrokeWidth')
  }, { // update
    opacity:     _('gradientOpacity')
  });

  return Object(_guide_mark__WEBPACK_IMPORTED_MODULE_1__["default"])(_marks_marktypes__WEBPACK_IMPORTED_MODULE_3__["RectMark"], _marks_roles__WEBPACK_IMPORTED_MODULE_4__["LegendGradientRole"], null, undefined, undefined, encode, userEncode);
});


/***/ }),

/***/ "./node_modules/vega-parser/src/parsers/guides/legend-symbol-groups.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/guides/legend-symbol-groups.js ***!
  \*****************************************************************************/
/*! exports provided: default, legendSymbolLayout */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "legendSymbolLayout", function() { return legendSymbolLayout; });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ "./node_modules/vega-parser/src/parsers/guides/constants.js");
/* harmony import */ var _guide_group__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./guide-group */ "./node_modules/vega-parser/src/parsers/guides/guide-group.js");
/* harmony import */ var _guide_mark__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./guide-mark */ "./node_modules/vega-parser/src/parsers/guides/guide-mark.js");
/* harmony import */ var _guide_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./guide-util */ "./node_modules/vega-parser/src/parsers/guides/guide-util.js");
/* harmony import */ var _marks_marktypes__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../marks/marktypes */ "./node_modules/vega-parser/src/parsers/marks/marktypes.js");
/* harmony import */ var _marks_roles__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../marks/roles */ "./node_modules/vega-parser/src/parsers/marks/roles.js");
/* harmony import */ var _encode_encode_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../encode/encode-util */ "./node_modules/vega-parser/src/parsers/encode/encode-util.js");








// userEncode is top-level, includes entries, symbols, labels
/* harmony default export */ __webpack_exports__["default"] = (function(spec, config, userEncode, dataRef, columns) {
  var _ = Object(_guide_util__WEBPACK_IMPORTED_MODULE_3__["lookup"])(spec, config),
      entries = userEncode.entries,
      interactive = !!(entries && entries.interactive),
      name = entries ? entries.name : undefined,
      height = _('clipHeight'),
      symbolOffset = _('symbolOffset'),
      valueRef = {data: 'value'},
      encode = {},
      xSignal = `${columns} ? datum.${_constants__WEBPACK_IMPORTED_MODULE_0__["Offset"]} : datum.${_constants__WEBPACK_IMPORTED_MODULE_0__["Size"]}`,
      yEncode = height ? Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_6__["encoder"])(height) : {field: _constants__WEBPACK_IMPORTED_MODULE_0__["Size"]},
      index = `datum.${_constants__WEBPACK_IMPORTED_MODULE_0__["Index"]}`,
      ncols = `max(1, ${columns})`,
      enter, update, labelOffset, symbols, labels, nrows, sort;

  yEncode.mult = 0.5;

  // -- LEGEND SYMBOLS --
  encode = {
    enter:  enter = {
      opacity: _constants__WEBPACK_IMPORTED_MODULE_0__["zero"],
      x: {signal: xSignal, mult: 0.5, offset: symbolOffset},
      y: yEncode
    },
    update: update = {
      opacity: _constants__WEBPACK_IMPORTED_MODULE_0__["one"],
      x: enter.x,
      y: enter.y
    },
    exit: {
      opacity: _constants__WEBPACK_IMPORTED_MODULE_0__["zero"]
    }
  };

  if (!spec.fill) {
    Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_6__["addEncoders"])(encode, {
      fill:   config.symbolBaseFillColor,
      stroke: config.symbolBaseStrokeColor
    });
  }

  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_6__["addEncoders"])(encode, {
    fill:             _('symbolFillColor'),
    shape:            _('symbolType'),
    size:             _('symbolSize'),
    stroke:           _('symbolStrokeColor'),
    strokeDash:       _('symbolDash'),
    strokeDashOffset: _('symbolDashOffset'),
    strokeWidth:      _('symbolStrokeWidth')
  }, { // update
    opacity:          _('symbolOpacity')
  });

  _constants__WEBPACK_IMPORTED_MODULE_0__["LegendScales"].forEach(function(scale) {
    if (spec[scale]) {
      update[scale] = enter[scale] = {scale: spec[scale], field: _constants__WEBPACK_IMPORTED_MODULE_0__["Value"]};
    }
  });

  symbols = Object(_guide_mark__WEBPACK_IMPORTED_MODULE_2__["default"])(
    _marks_marktypes__WEBPACK_IMPORTED_MODULE_4__["SymbolMark"], _marks_roles__WEBPACK_IMPORTED_MODULE_5__["LegendSymbolRole"], null,
    _constants__WEBPACK_IMPORTED_MODULE_0__["Value"], valueRef, encode, userEncode.symbols
  );
  if (height) symbols.clip = true;

  // -- LEGEND LABELS --
  labelOffset = Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_6__["encoder"])(symbolOffset);
  labelOffset.offset = _('labelOffset');

  encode = {
    enter:  enter = {
      opacity: _constants__WEBPACK_IMPORTED_MODULE_0__["zero"],
      x: {signal: xSignal, offset: labelOffset},
      y: yEncode
    },
    update: update = {
      opacity: _constants__WEBPACK_IMPORTED_MODULE_0__["one"],
      text: {field: _constants__WEBPACK_IMPORTED_MODULE_0__["Label"]},
      x: enter.x,
      y: enter.y
    },
    exit: {
      opacity: _constants__WEBPACK_IMPORTED_MODULE_0__["zero"]
    }
  };

  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_6__["addEncoders"])(encode, {
    align:       _('labelAlign'),
    baseline:    _('labelBaseline'),
    fill:        _('labelColor'),
    fillOpacity: _('labelOpacity'),
    font:        _('labelFont'),
    fontSize:    _('labelFontSize'),
    fontStyle:   _('labelFontStyle'),
    fontWeight:  _('labelFontWeight'),
    limit:       _('labelLimit')
  });

  labels = Object(_guide_mark__WEBPACK_IMPORTED_MODULE_2__["default"])(
    _marks_marktypes__WEBPACK_IMPORTED_MODULE_4__["TextMark"], _marks_roles__WEBPACK_IMPORTED_MODULE_5__["LegendLabelRole"], _constants__WEBPACK_IMPORTED_MODULE_0__["GuideLabelStyle"],
    _constants__WEBPACK_IMPORTED_MODULE_0__["Value"], valueRef, encode, userEncode.labels
  );

  // -- LEGEND ENTRY GROUPS --
  encode = {
    enter: {
      noBound: {value: !height}, // ignore width/height in bounds calc
      width: _constants__WEBPACK_IMPORTED_MODULE_0__["zero"],
      height: height ? Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_6__["encoder"])(height) : _constants__WEBPACK_IMPORTED_MODULE_0__["zero"],
      opacity: _constants__WEBPACK_IMPORTED_MODULE_0__["zero"]
    },
    exit: {opacity: _constants__WEBPACK_IMPORTED_MODULE_0__["zero"]},
    update: update = {
      opacity: _constants__WEBPACK_IMPORTED_MODULE_0__["one"],
      row: {signal: null},
      column: {signal: null}
    }
  };

  // annotate and sort groups to ensure correct ordering
  if (_.isVertical(true)) {
    nrows = `ceil(item.mark.items.length / ${ncols})`;
    update.row.signal = `${index}%${nrows}`;
    update.column.signal = `floor(${index} / ${nrows})`;
    sort = {field: ['row', index]};
  } else {
    update.row.signal = `floor(${index} / ${ncols})`;
    update.column.signal = `${index} % ${ncols}`;
    sort = {field: index};
  }
  // handle zero column case (implies infinite columns)
  update.column.signal = `${columns}?${update.column.signal}:${index}`;

  // facet legend entries into sub-groups
  dataRef = {facet: {data: dataRef, name: 'value', groupby: _constants__WEBPACK_IMPORTED_MODULE_0__["Index"]}};

  spec = Object(_guide_group__WEBPACK_IMPORTED_MODULE_1__["default"])(
    _marks_roles__WEBPACK_IMPORTED_MODULE_5__["ScopeRole"], null, name, dataRef, interactive,
    Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_6__["extendEncode"])(encode, entries, _constants__WEBPACK_IMPORTED_MODULE_0__["Skip"]), [symbols, labels]
  );
  spec.sort = sort;
  return spec;
});

function legendSymbolLayout(spec, config) {
  const _ = Object(_guide_util__WEBPACK_IMPORTED_MODULE_3__["lookup"])(spec, config);

  // layout parameters for legend entries
  return {
    align:   _('gridAlign'),
    columns: _.entryColumns(),
    center:  {
      row: true,
      column: false
    },
    padding: {
      row:    _('rowPadding'),
      column: _('columnPadding')
    }
  };
}


/***/ }),

/***/ "./node_modules/vega-parser/src/parsers/guides/legend-title.js":
/*!*********************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/guides/legend-title.js ***!
  \*********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ "./node_modules/vega-parser/src/parsers/guides/constants.js");
/* harmony import */ var _guide_mark__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./guide-mark */ "./node_modules/vega-parser/src/parsers/guides/guide-mark.js");
/* harmony import */ var _guide_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./guide-util */ "./node_modules/vega-parser/src/parsers/guides/guide-util.js");
/* harmony import */ var _marks_marktypes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../marks/marktypes */ "./node_modules/vega-parser/src/parsers/marks/marktypes.js");
/* harmony import */ var _marks_roles__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../marks/roles */ "./node_modules/vega-parser/src/parsers/marks/roles.js");
/* harmony import */ var _encode_encode_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../encode/encode-util */ "./node_modules/vega-parser/src/parsers/encode/encode-util.js");







// expression logic for align, anchor, angle, and baseline calculation
const isL = 'item.orient === "left"',
      isR = 'item.orient === "right"',
      isLR = `(${isL} || ${isR})`,
      isVG = `datum.vgrad && ${isLR}`,
      baseline = Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["anchorExpr"])('"top"', '"bottom"', '"middle"'),
      alignFlip = Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["anchorExpr"])('"right"', '"left"', '"center"'),
      exprAlign = `datum.vgrad && ${isR} ? (${alignFlip}) : (${isLR} && !(datum.vgrad && ${isL})) ? "left" : ${_guide_util__WEBPACK_IMPORTED_MODULE_2__["alignExpr"]}`,
      exprAnchor = `item._anchor || (${isLR} ? "middle" : "start")`,
      exprAngle = `${isVG} ? (${isL} ? -90 : 90) : 0`,
      exprBaseline = `${isLR} ? (datum.vgrad ? (${isR} ? "bottom" : "top") : ${baseline}) : "top"`;

/* harmony default export */ __webpack_exports__["default"] = (function(spec, config, userEncode, dataRef) {
  var _ = Object(_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])(spec, config), encode;

  encode = {
    enter: {opacity: _constants__WEBPACK_IMPORTED_MODULE_0__["zero"]},
    update: {
      opacity: _constants__WEBPACK_IMPORTED_MODULE_0__["one"],
      x: {field: {group: 'padding'}},
      y: {field: {group: 'padding'}}
    },
    exit: {opacity: _constants__WEBPACK_IMPORTED_MODULE_0__["zero"]}
  };

  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_5__["addEncoders"])(encode, {
    orient:      _('titleOrient'),
    _anchor:     _('titleAnchor'),
    anchor:      {signal: exprAnchor},
    angle:       {signal: exprAngle},
    align:       {signal: exprAlign},
    baseline:    {signal: exprBaseline},
    text:        spec.title,
    fill:        _('titleColor'),
    fillOpacity: _('titleOpacity'),
    font:        _('titleFont'),
    fontSize:    _('titleFontSize'),
    fontStyle:   _('titleFontStyle'),
    fontWeight:  _('titleFontWeight'),
    limit:       _('titleLimit')
  }, { // require update
    align:       _('titleAlign'),
    baseline:    _('titleBaseline'),
  });

  return Object(_guide_mark__WEBPACK_IMPORTED_MODULE_1__["default"])(_marks_marktypes__WEBPACK_IMPORTED_MODULE_3__["TextMark"], _marks_roles__WEBPACK_IMPORTED_MODULE_4__["LegendTitleRole"], _constants__WEBPACK_IMPORTED_MODULE_0__["GuideTitleStyle"], null, dataRef, encode, userEncode);
});


/***/ }),

/***/ "./node_modules/vega-parser/src/parsers/legend.js":
/*!********************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/legend.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _guides_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./guides/constants */ "./node_modules/vega-parser/src/parsers/guides/constants.js");
/* harmony import */ var _guides_legend_gradient__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./guides/legend-gradient */ "./node_modules/vega-parser/src/parsers/guides/legend-gradient.js");
/* harmony import */ var _guides_legend_gradient_discrete__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./guides/legend-gradient-discrete */ "./node_modules/vega-parser/src/parsers/guides/legend-gradient-discrete.js");
/* harmony import */ var _guides_legend_gradient_labels__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./guides/legend-gradient-labels */ "./node_modules/vega-parser/src/parsers/guides/legend-gradient-labels.js");
/* harmony import */ var _guides_legend_symbol_groups__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./guides/legend-symbol-groups */ "./node_modules/vega-parser/src/parsers/guides/legend-symbol-groups.js");
/* harmony import */ var _guides_legend_title__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./guides/legend-title */ "./node_modules/vega-parser/src/parsers/guides/legend-title.js");
/* harmony import */ var _guides_guide_group__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./guides/guide-group */ "./node_modules/vega-parser/src/parsers/guides/guide-group.js");
/* harmony import */ var _guides_guide_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./guides/guide-util */ "./node_modules/vega-parser/src/parsers/guides/guide-util.js");
/* harmony import */ var _expression__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./expression */ "./node_modules/vega-parser/src/parsers/expression.js");
/* harmony import */ var _mark__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./mark */ "./node_modules/vega-parser/src/parsers/mark.js");
/* harmony import */ var _marks_roles__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./marks/roles */ "./node_modules/vega-parser/src/parsers/marks/roles.js");
/* harmony import */ var _encode_encode_util__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./encode/encode-util */ "./node_modules/vega-parser/src/parsers/encode/encode-util.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../util */ "./node_modules/vega-parser/src/util.js");
/* harmony import */ var _transforms__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../transforms */ "./node_modules/vega-parser/src/transforms.js");
/* harmony import */ var vega_scale__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! vega-scale */ "./node_modules/vega-scale/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");


















/* harmony default export */ __webpack_exports__["default"] = (function(spec, scope) {
  var config = scope.config.legend,
      encode = spec.encode || {},
      legendEncode = encode.legend || {},
      name = legendEncode.name || undefined,
      interactive = legendEncode.interactive,
      style = legendEncode.style,
      _ = Object(_guides_guide_util__WEBPACK_IMPORTED_MODULE_7__["lookup"])(spec, config),
      entryEncode, entryLayout, params, children,
      type, datum, dataRef, entryRef, group;

  // resolve 'canonical' scale name
  var scale = _guides_constants__WEBPACK_IMPORTED_MODULE_0__["LegendScales"].reduce(function(a, b) { return a || spec[b]; }, 0);
  if (!scale) Object(vega_util__WEBPACK_IMPORTED_MODULE_15__["error"])('Missing valid scale for legend.');

  // resolve legend type (symbol, gradient, or discrete gradient)
  type = legendType(spec, scope.scaleType(scale));

  // single-element data source for legend group
  datum = {
    title:  spec.title != null,
    type:   type,
    vgrad:  type !== 'symbol' &&  _.isVertical()
  };
  dataRef = Object(_util__WEBPACK_IMPORTED_MODULE_12__["ref"])(scope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_13__["Collect"])(null, [datum])));

  // encoding properties for legend group
  legendEncode = Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_11__["extendEncode"])(
    buildLegendEncode(_, config), legendEncode, _guides_constants__WEBPACK_IMPORTED_MODULE_0__["Skip"]
  );

  // encoding properties for legend entry sub-group
  entryEncode = {enter: {x: {value: 0}, y: {value: 0}}};

  // data source for legend values
  entryRef = Object(_util__WEBPACK_IMPORTED_MODULE_12__["ref"])(scope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_13__["LegendEntries"])(params = {
    type:    type,
    scale:   scope.scaleRef(scale),
    count:   scope.objectProperty(spec.tickCount),
    values:  scope.objectProperty(spec.values),
    minstep: scope.property(spec.tickMinStep),
    formatType: scope.property(spec.formatType),
    formatSpecifier: scope.property(spec.format)
  })));

  // continuous gradient legend
  if (type === _guides_constants__WEBPACK_IMPORTED_MODULE_0__["Gradient"]) {
    children = [
      Object(_guides_legend_gradient__WEBPACK_IMPORTED_MODULE_1__["default"])(spec, scale, config, encode.gradient),
      Object(_guides_legend_gradient_labels__WEBPACK_IMPORTED_MODULE_3__["default"])(spec, config, encode.labels, entryRef)
    ];
    // adjust default tick count based on the gradient length
    params.count = params.count || scope.signalRef(
      `max(2,2*floor((${Object(_util__WEBPACK_IMPORTED_MODULE_12__["deref"])(_.gradientLength())})/100))`
    );
  }

  // discrete gradient legend
  else if (type === _guides_constants__WEBPACK_IMPORTED_MODULE_0__["Discrete"]) {
    children = [
      Object(_guides_legend_gradient_discrete__WEBPACK_IMPORTED_MODULE_2__["default"])(spec, scale, config, encode.gradient, entryRef),
      Object(_guides_legend_gradient_labels__WEBPACK_IMPORTED_MODULE_3__["default"])(spec, config, encode.labels, entryRef)
    ];
  }

  // symbol legend
  else {
    // determine legend symbol group layout
    entryLayout = Object(_guides_legend_symbol_groups__WEBPACK_IMPORTED_MODULE_4__["legendSymbolLayout"])(spec, config);
    children = [
      Object(_guides_legend_symbol_groups__WEBPACK_IMPORTED_MODULE_4__["default"])(spec, config, encode, entryRef, Object(_util__WEBPACK_IMPORTED_MODULE_12__["deref"])(entryLayout.columns))
    ];
    // pass symbol size information to legend entry generator
    params.size = sizeExpression(spec, scope, children[0].marks);
  }

  // generate legend marks
  children = [
    Object(_guides_guide_group__WEBPACK_IMPORTED_MODULE_6__["default"])(_marks_roles__WEBPACK_IMPORTED_MODULE_10__["LegendEntryRole"], null, null, dataRef, interactive,
               entryEncode, children, entryLayout)
  ];

  // include legend title if defined
  if (datum.title) {
    children.push(Object(_guides_legend_title__WEBPACK_IMPORTED_MODULE_5__["default"])(spec, config, encode.title, dataRef));
  }

  // build legend specification
  group = Object(_guides_guide_group__WEBPACK_IMPORTED_MODULE_6__["default"])(_marks_roles__WEBPACK_IMPORTED_MODULE_10__["LegendRole"], style, name, dataRef, interactive, legendEncode, children);
  if (spec.zindex) group.zindex = spec.zindex;

  // parse legend specification
  return Object(_mark__WEBPACK_IMPORTED_MODULE_9__["default"])(group, scope);
});

function legendType(spec, scaleType) {
  var type = spec.type || _guides_constants__WEBPACK_IMPORTED_MODULE_0__["Symbols"];

  if (!spec.type && scaleCount(spec) === 1 && (spec.fill || spec.stroke)) {
    type = Object(vega_scale__WEBPACK_IMPORTED_MODULE_14__["isContinuous"])(scaleType) ? _guides_constants__WEBPACK_IMPORTED_MODULE_0__["Gradient"]
      : Object(vega_scale__WEBPACK_IMPORTED_MODULE_14__["isDiscretizing"])(scaleType) ? _guides_constants__WEBPACK_IMPORTED_MODULE_0__["Discrete"]
      : _guides_constants__WEBPACK_IMPORTED_MODULE_0__["Symbols"];
  }

  return type !== _guides_constants__WEBPACK_IMPORTED_MODULE_0__["Gradient"] ? type
    : Object(vega_scale__WEBPACK_IMPORTED_MODULE_14__["isDiscretizing"])(scaleType) ? _guides_constants__WEBPACK_IMPORTED_MODULE_0__["Discrete"]
    : _guides_constants__WEBPACK_IMPORTED_MODULE_0__["Gradient"];
}

function scaleCount(spec) {
  return _guides_constants__WEBPACK_IMPORTED_MODULE_0__["LegendScales"].reduce(function(count, type) {
    return count + (spec[type] ? 1 : 0);
  }, 0);
}

function buildLegendEncode(_, config) {
  var encode = {enter: {}, update: {}};

  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_11__["addEncoders"])(encode, {
    orient:       _('orient'),
    offset:       _('offset'),
    padding:      _('padding'),
    titlePadding: _('titlePadding'),
    cornerRadius: _('cornerRadius'),
    fill:         _('fillColor'),
    stroke:       _('strokeColor'),
    strokeWidth:  config.strokeWidth,
    strokeDash:   config.strokeDash,
    x:            _('legendX'),
    y:            _('legendY'),
  });

  return encode;
}

function sizeExpression(spec, scope, marks) {
  var size = Object(_util__WEBPACK_IMPORTED_MODULE_12__["deref"])(getChannel('size', spec, marks)),
      strokeWidth = Object(_util__WEBPACK_IMPORTED_MODULE_12__["deref"])(getChannel('strokeWidth', spec, marks)),
      fontSize = Object(_util__WEBPACK_IMPORTED_MODULE_12__["deref"])(getFontSize(marks[1].encode, scope, _guides_constants__WEBPACK_IMPORTED_MODULE_0__["GuideLabelStyle"]));

  return Object(_expression__WEBPACK_IMPORTED_MODULE_8__["default"])(
    `max(ceil(sqrt(${size})+${strokeWidth}),${fontSize})`,
    scope
  );
}

function getChannel(name, spec, marks) {
  return spec[name]
    ? `scale("${spec[name]}",datum)`
    : Object(_guides_guide_util__WEBPACK_IMPORTED_MODULE_7__["getEncoding"])(name, marks[0].encode);
}

function getFontSize(encode, scope, style) {
  return Object(_guides_guide_util__WEBPACK_IMPORTED_MODULE_7__["getEncoding"])('fontSize', encode) || Object(_guides_guide_util__WEBPACK_IMPORTED_MODULE_7__["getStyle"])('fontSize', scope, style);
}


/***/ }),

/***/ "./node_modules/vega-parser/src/parsers/mark.js":
/*!******************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/mark.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _marks_clip__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./marks/clip */ "./node_modules/vega-parser/src/parsers/marks/clip.js");
/* harmony import */ var _marks_definition__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./marks/definition */ "./node_modules/vega-parser/src/parsers/marks/definition.js");
/* harmony import */ var _marks_interactive__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./marks/interactive */ "./node_modules/vega-parser/src/parsers/marks/interactive.js");
/* harmony import */ var _marks_data__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./marks/data */ "./node_modules/vega-parser/src/parsers/marks/data.js");
/* harmony import */ var _marks_facet__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./marks/facet */ "./node_modules/vega-parser/src/parsers/marks/facet.js");
/* harmony import */ var _marks_subflow__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./marks/subflow */ "./node_modules/vega-parser/src/parsers/marks/subflow.js");
/* harmony import */ var _marks_role__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./marks/role */ "./node_modules/vega-parser/src/parsers/marks/role.js");
/* harmony import */ var _marks_marktypes__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./marks/marktypes */ "./node_modules/vega-parser/src/parsers/marks/marktypes.js");
/* harmony import */ var _marks_roles__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./marks/roles */ "./node_modules/vega-parser/src/parsers/marks/roles.js");
/* harmony import */ var _encode_encode_util__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./encode/encode-util */ "./node_modules/vega-parser/src/parsers/encode/encode-util.js");
/* harmony import */ var _transform__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./transform */ "./node_modules/vega-parser/src/parsers/transform.js");
/* harmony import */ var _trigger__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./trigger */ "./node_modules/vega-parser/src/parsers/trigger.js");
/* harmony import */ var _spec__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./spec */ "./node_modules/vega-parser/src/parsers/spec.js");
/* harmony import */ var _DataScope__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../DataScope */ "./node_modules/vega-parser/src/DataScope.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../util */ "./node_modules/vega-parser/src/util.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var _transforms__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../transforms */ "./node_modules/vega-parser/src/transforms.js");


















/* harmony default export */ __webpack_exports__["default"] = (function(spec, scope) {
  var role = Object(_marks_role__WEBPACK_IMPORTED_MODULE_6__["default"])(spec),
      group = spec.type === _marks_marktypes__WEBPACK_IMPORTED_MODULE_7__["GroupMark"],
      facet = spec.from && spec.from.facet,
      layout = spec.layout || role === _marks_roles__WEBPACK_IMPORTED_MODULE_8__["ScopeRole"] || role === _marks_roles__WEBPACK_IMPORTED_MODULE_8__["FrameRole"],
      nested = role === _marks_roles__WEBPACK_IMPORTED_MODULE_8__["MarkRole"] || layout || facet,
      overlap = spec.overlap,
      ops, op, input, store, enc, bound, render, sieve, name,
      joinRef, markRef, encodeRef, layoutRef, boundRef;

  // resolve input data
  input = Object(_marks_data__WEBPACK_IMPORTED_MODULE_3__["default"])(spec.from, group, scope);

  // data join to map tuples to visual items
  op = scope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_16__["DataJoin"])({
    key:   input.key || (spec.key ? Object(_util__WEBPACK_IMPORTED_MODULE_14__["fieldRef"])(spec.key) : undefined),
    pulse: input.pulse,
    clean: !group
  }));
  joinRef = Object(_util__WEBPACK_IMPORTED_MODULE_14__["ref"])(op);

  // collect visual items
  op = store = scope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_16__["Collect"])({pulse: joinRef}));

  // connect visual items to scenegraph
  op = scope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_16__["Mark"])({
    markdef:     Object(_marks_definition__WEBPACK_IMPORTED_MODULE_1__["default"])(spec),
    interactive: Object(_marks_interactive__WEBPACK_IMPORTED_MODULE_2__["default"])(spec.interactive, scope),
    clip:        Object(_marks_clip__WEBPACK_IMPORTED_MODULE_0__["default"])(spec.clip, scope),
    context:     {$context: true},
    groups:      scope.lookup(),
    parent:      scope.signals.parent ? scope.signalRef('parent') : null,
    index:       scope.markpath(),
    pulse:       Object(_util__WEBPACK_IMPORTED_MODULE_14__["ref"])(op)
  }));
  markRef = Object(_util__WEBPACK_IMPORTED_MODULE_14__["ref"])(op);

  // add visual encoders
  op = enc = scope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_16__["Encode"])(Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_9__["encoders"])(
    spec.encode, spec.type, role, spec.style, scope,
    {mod: false, pulse: markRef}
  )));

  // monitor parent marks to propagate changes
  op.params.parent = scope.encode();

  // add post-encoding transforms, if defined
  if (spec.transform) {
    spec.transform.forEach(function(_) {
      const tx = Object(_transform__WEBPACK_IMPORTED_MODULE_10__["default"])(_, scope),
            md = tx.metadata;
      if (md.generates || md.changes) {
        Object(vega_util__WEBPACK_IMPORTED_MODULE_15__["error"])('Mark transforms should not generate new data.');
      }
      if (!md.nomod) enc.params.mod = true; // update encode mod handling
      tx.params.pulse = Object(_util__WEBPACK_IMPORTED_MODULE_14__["ref"])(op);
      scope.add(op = tx);
    });
  }

  // if item sort specified, perform post-encoding
  if (spec.sort) {
    op = scope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_16__["SortItems"])({
      sort:  scope.compareRef(spec.sort, true), // stable sort
      pulse: Object(_util__WEBPACK_IMPORTED_MODULE_14__["ref"])(op)
    }));
  }

  encodeRef = Object(_util__WEBPACK_IMPORTED_MODULE_14__["ref"])(op);

  // add view layout operator if needed
  if (facet || layout) {
    layout = scope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_16__["ViewLayout"])({
      layout:   scope.objectProperty(spec.layout),
      legends:  scope.legends,
      mark:     markRef,
      pulse:    encodeRef
    }));
    layoutRef = Object(_util__WEBPACK_IMPORTED_MODULE_14__["ref"])(layout);
  }

  // compute bounding boxes
  bound = scope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_16__["Bound"])({mark: markRef, pulse: layoutRef || encodeRef}));
  boundRef = Object(_util__WEBPACK_IMPORTED_MODULE_14__["ref"])(bound);

  // if group mark, recurse to parse nested content
  if (group) {
    // juggle layout & bounds to ensure they run *after* any faceting transforms
    if (nested) { ops = scope.operators; ops.pop(); if (layout) ops.pop(); }

    scope.pushState(encodeRef, layoutRef || boundRef, joinRef);
    facet ? Object(_marks_facet__WEBPACK_IMPORTED_MODULE_4__["default"])(spec, scope, input)          // explicit facet
        : nested ? Object(_marks_subflow__WEBPACK_IMPORTED_MODULE_5__["default"])(spec, scope, input) // standard mark group
        : Object(_spec__WEBPACK_IMPORTED_MODULE_12__["default"])(spec, scope); // guide group, we can avoid nested scopes
    scope.popState();

    if (nested) { if (layout) ops.push(layout); ops.push(bound); }
  }

  // if requested, add overlap removal transform
  if (overlap) {
    boundRef = parseOverlap(overlap, boundRef, scope);
  }

  // render / sieve items
  render = scope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_16__["Render"])({pulse: boundRef}));
  sieve = scope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_16__["Sieve"])({pulse: Object(_util__WEBPACK_IMPORTED_MODULE_14__["ref"])(render)}, undefined, scope.parent()));

  // if mark is named, make accessible as reactive geometry
  // add trigger updates if defined
  if (spec.name != null) {
    name = spec.name;
    scope.addData(name, new _DataScope__WEBPACK_IMPORTED_MODULE_13__["default"](scope, store, render, sieve));
    if (spec.on) spec.on.forEach(function(on) {
      if (on.insert || on.remove || on.toggle) {
        Object(vega_util__WEBPACK_IMPORTED_MODULE_15__["error"])('Marks only support modify triggers.');
      }
      Object(_trigger__WEBPACK_IMPORTED_MODULE_11__["default"])(on, scope, name);
    });
  }
});

function parseOverlap(overlap, source, scope) {
  var method = overlap.method,
      bound = overlap.bound,
      sep = overlap.separation, tol;

  var params = {
    separation: Object(_util__WEBPACK_IMPORTED_MODULE_14__["isSignal"])(sep) ? scope.signalRef(sep.signal) : sep,
    method: Object(_util__WEBPACK_IMPORTED_MODULE_14__["isSignal"])(method) ? scope.signalRef(method.signal) : method,
    pulse:  source
  };

  if (overlap.order) {
    params.sort = scope.compareRef({field: overlap.order});
  }

  if (bound) {
    tol = bound.tolerance;
    params.boundTolerance = Object(_util__WEBPACK_IMPORTED_MODULE_14__["isSignal"])(tol) ? scope.signalRef(tol.signal) : +tol;
    params.boundScale = scope.scaleRef(bound.scale);
    params.boundOrient = bound.orient;
  }

  return Object(_util__WEBPACK_IMPORTED_MODULE_14__["ref"])(scope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_16__["Overlap"])(params)));
}


/***/ }),

/***/ "./node_modules/vega-parser/src/parsers/marks/clip.js":
/*!************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/marks/clip.js ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");


/* harmony default export */ __webpack_exports__["default"] = (function(clip, scope) {
  var expr;

  if (Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isObject"])(clip)) {
    if (clip.signal) {
      expr = clip.signal;
    } else if (clip.path) {
      expr = 'pathShape(' + param(clip.path) + ')';
    } else if (clip.sphere) {
      expr = 'geoShape(' + param(clip.sphere) + ', {type: "Sphere"})';
    }
  }

  return expr
    ? scope.signalRef(expr)
    : !!clip;
});

function param(value) {
  return Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isObject"])(value) && value.signal
    ? value.signal
    : Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["stringValue"])(value);
}

/***/ }),

/***/ "./node_modules/vega-parser/src/parsers/marks/data.js":
/*!************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/marks/data.js ***!
  \************************************************************/
/*! exports provided: default, getDataRef */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getDataRef", function() { return getDataRef; });
/* harmony import */ var _transform__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../transform */ "./node_modules/vega-parser/src/parsers/transform.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../util */ "./node_modules/vega-parser/src/util.js");
/* harmony import */ var _transforms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../transforms */ "./node_modules/vega-parser/src/transforms.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");





/* harmony default export */ __webpack_exports__["default"] = (function(from, group, scope) {
  var facet, key, op, dataRef, parent;

  // if no source data, generate singleton datum
  if (!from) {
    dataRef = Object(_util__WEBPACK_IMPORTED_MODULE_1__["ref"])(scope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_2__["Collect"])(null, [{}])));
  }

  // if faceted, process facet specification
  else if (facet = from.facet) {
    if (!group) Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["error"])('Only group marks can be faceted.');

    // use pre-faceted source data, if available
    if (facet.field != null) {
      dataRef = parent = getDataRef(facet, scope);
    } else {
      // generate facet aggregates if no direct data specification
      if (!from.data) {
        op = Object(_transform__WEBPACK_IMPORTED_MODULE_0__["default"])(Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["extend"])({
          type:    'aggregate',
          groupby: Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["array"])(facet.groupby)
        }, facet.aggregate), scope);
        op.params.key = scope.keyRef(facet.groupby);
        op.params.pulse = getDataRef(facet, scope);
        dataRef = parent = Object(_util__WEBPACK_IMPORTED_MODULE_1__["ref"])(scope.add(op));
      } else {
        parent = Object(_util__WEBPACK_IMPORTED_MODULE_1__["ref"])(scope.getData(from.data).aggregate);
      }

      key = scope.keyRef(facet.groupby, true);
    }
  }

  // if not yet defined, get source data reference
  if (!dataRef) {
    dataRef = getDataRef(from, scope);
  }

  return {
    key: key,
    pulse: dataRef,
    parent: parent
  };
});

function getDataRef(from, scope) {
  return from.$ref ? from
    : from.data && from.data.$ref ? from.data
    : Object(_util__WEBPACK_IMPORTED_MODULE_1__["ref"])(scope.getData(from.data).output);
}

/***/ }),

/***/ "./node_modules/vega-parser/src/parsers/marks/definition.js":
/*!******************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/marks/definition.js ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _role__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./role */ "./node_modules/vega-parser/src/parsers/marks/role.js");


/* harmony default export */ __webpack_exports__["default"] = (function(spec) {
  return {
    marktype:    spec.type,
    name:        spec.name || undefined,
    role:        spec.role || Object(_role__WEBPACK_IMPORTED_MODULE_0__["default"])(spec),
    zindex:      +spec.zindex || undefined
  };
});


/***/ }),

/***/ "./node_modules/vega-parser/src/parsers/marks/facet.js":
/*!*************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/marks/facet.js ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./data */ "./node_modules/vega-parser/src/parsers/marks/data.js");
/* harmony import */ var _spec__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../spec */ "./node_modules/vega-parser/src/parsers/spec.js");
/* harmony import */ var _DataScope__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../DataScope */ "./node_modules/vega-parser/src/DataScope.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../util */ "./node_modules/vega-parser/src/util.js");
/* harmony import */ var _transforms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../transforms */ "./node_modules/vega-parser/src/transforms.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");







/* harmony default export */ __webpack_exports__["default"] = (function(spec, scope, group) {
  var facet = spec.from.facet,
      name = facet.name,
      data = Object(_data__WEBPACK_IMPORTED_MODULE_0__["getDataRef"])(facet, scope),
      subscope, source, values, op;

  if (!facet.name) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_5__["error"])('Facet must have a name: ' + Object(vega_util__WEBPACK_IMPORTED_MODULE_5__["stringValue"])(facet));
  }
  if (!facet.data) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_5__["error"])('Facet must reference a data set: ' + Object(vega_util__WEBPACK_IMPORTED_MODULE_5__["stringValue"])(facet));
  }

  if (facet.field) {
    op = scope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_4__["PreFacet"])({
      field: scope.fieldRef(facet.field),
      pulse: data
    }));
  } else if (facet.groupby) {
    op = scope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_4__["Facet"])({
      key:   scope.keyRef(facet.groupby),
      group: Object(_util__WEBPACK_IMPORTED_MODULE_3__["ref"])(scope.proxy(group.parent)),
      pulse: data
    }));
  } else {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_5__["error"])('Facet must specify groupby or field: ' + Object(vega_util__WEBPACK_IMPORTED_MODULE_5__["stringValue"])(facet));
  }

  // initialize facet subscope
  subscope = scope.fork();
  source = subscope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_4__["Collect"])());
  values = subscope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_4__["Sieve"])({pulse: Object(_util__WEBPACK_IMPORTED_MODULE_3__["ref"])(source)}));
  subscope.addData(name, new _DataScope__WEBPACK_IMPORTED_MODULE_2__["default"](subscope, source, source, values));
  subscope.addSignal('parent', null);

  // parse faceted subflow
  op.params.subflow = {
    $subflow: Object(_spec__WEBPACK_IMPORTED_MODULE_1__["default"])(spec, subscope).toRuntime()
  };
});


/***/ }),

/***/ "./node_modules/vega-parser/src/parsers/marks/interactive.js":
/*!*******************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/marks/interactive.js ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(spec, scope) {
  return spec && spec.signal ? scope.signalRef(spec.signal)
    : spec === false ? false
    : true;
});


/***/ }),

/***/ "./node_modules/vega-parser/src/parsers/marks/marktypes.js":
/*!*****************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/marks/marktypes.js ***!
  \*****************************************************************/
/*! exports provided: GroupMark, RectMark, RuleMark, SymbolMark, TextMark */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GroupMark", function() { return GroupMark; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RectMark", function() { return RectMark; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RuleMark", function() { return RuleMark; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SymbolMark", function() { return SymbolMark; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TextMark", function() { return TextMark; });
var GroupMark = 'group';
var RectMark = 'rect';
var RuleMark = 'rule';
var SymbolMark = 'symbol';
var TextMark = 'text';


/***/ }),

/***/ "./node_modules/vega-parser/src/parsers/marks/role.js":
/*!************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/marks/role.js ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _marktypes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./marktypes */ "./node_modules/vega-parser/src/parsers/marks/marktypes.js");
/* harmony import */ var _roles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./roles */ "./node_modules/vega-parser/src/parsers/marks/roles.js");



/* harmony default export */ __webpack_exports__["default"] = (function(spec) {
  var role = spec.role || '';
  return (!role.indexOf('axis') || !role.indexOf('legend'))
    ? role
    : spec.type === _marktypes__WEBPACK_IMPORTED_MODULE_0__["GroupMark"] ? _roles__WEBPACK_IMPORTED_MODULE_1__["ScopeRole"] : (role || _roles__WEBPACK_IMPORTED_MODULE_1__["MarkRole"]);
});


/***/ }),

/***/ "./node_modules/vega-parser/src/parsers/marks/roles.js":
/*!*************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/marks/roles.js ***!
  \*************************************************************/
/*! exports provided: MarkRole, FrameRole, ScopeRole, AxisRole, AxisDomainRole, AxisGridRole, AxisLabelRole, AxisTickRole, AxisTitleRole, LegendRole, LegendBandRole, LegendEntryRole, LegendGradientRole, LegendLabelRole, LegendSymbolRole, LegendTitleRole, TitleRole */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MarkRole", function() { return MarkRole; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FrameRole", function() { return FrameRole; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ScopeRole", function() { return ScopeRole; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AxisRole", function() { return AxisRole; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AxisDomainRole", function() { return AxisDomainRole; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AxisGridRole", function() { return AxisGridRole; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AxisLabelRole", function() { return AxisLabelRole; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AxisTickRole", function() { return AxisTickRole; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AxisTitleRole", function() { return AxisTitleRole; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LegendRole", function() { return LegendRole; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LegendBandRole", function() { return LegendBandRole; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LegendEntryRole", function() { return LegendEntryRole; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LegendGradientRole", function() { return LegendGradientRole; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LegendLabelRole", function() { return LegendLabelRole; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LegendSymbolRole", function() { return LegendSymbolRole; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LegendTitleRole", function() { return LegendTitleRole; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TitleRole", function() { return TitleRole; });
var MarkRole = 'mark';
var FrameRole = 'frame';
var ScopeRole = 'scope';

var AxisRole = 'axis';
var AxisDomainRole = 'axis-domain';
var AxisGridRole = 'axis-grid';
var AxisLabelRole = 'axis-label';
var AxisTickRole = 'axis-tick';
var AxisTitleRole = 'axis-title';

var LegendRole = 'legend';
var LegendBandRole = 'legend-band';
var LegendEntryRole = 'legend-entry';
var LegendGradientRole = 'legend-gradient';
var LegendLabelRole = 'legend-label';
var LegendSymbolRole = 'legend-symbol';
var LegendTitleRole = 'legend-title';

var TitleRole = 'title';


/***/ }),

/***/ "./node_modules/vega-parser/src/parsers/marks/subflow.js":
/*!***************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/marks/subflow.js ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _spec__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../spec */ "./node_modules/vega-parser/src/parsers/spec.js");
/* harmony import */ var _transforms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../transforms */ "./node_modules/vega-parser/src/transforms.js");



/* harmony default export */ __webpack_exports__["default"] = (function(spec, scope, input) {
  var op = scope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_1__["PreFacet"])({pulse: input.pulse})),
      subscope = scope.fork();

  subscope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_1__["Sieve"])());
  subscope.addSignal('parent', null);

  // parse group mark subflow
  op.params.subflow = {
    $subflow: Object(_spec__WEBPACK_IMPORTED_MODULE_0__["default"])(spec, subscope).toRuntime()
  };
});


/***/ }),

/***/ "./node_modules/vega-parser/src/parsers/padding.js":
/*!*********************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/padding.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");


/* harmony default export */ __webpack_exports__["default"] = (function(spec, config) {
  spec = spec || config.padding;
  return Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isObject"])(spec)
    ? {
        top:    number(spec.top),
        bottom: number(spec.bottom),
        left:   number(spec.left),
        right:  number(spec.right)
      }
    : paddingObject(number(spec));
});

function number(_) {
  return +_ || 0;
}

function paddingObject(_) {
  return {top: _, bottom: _, left: _, right: _};
}


/***/ }),

/***/ "./node_modules/vega-parser/src/parsers/projection.js":
/*!************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/projection.js ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");


/* harmony default export */ __webpack_exports__["default"] = (function(proj, scope) {
  var params = {};

  for (var name in proj) {
    if (name === 'name') continue;
    params[name] = parseParameter(proj[name], name, scope);
  }

  scope.addProjection(proj.name, params);
});

function parseParameter(_, name, scope) {
  return Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isArray"])(_) ? _.map(function(_) { return parseParameter(_, name, scope); })
    : !Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isObject"])(_) ? _
    : _.signal ? scope.signalRef(_.signal)
    : name === 'fit' ? _
    : Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["error"])('Unsupported parameter object: ' + Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["stringValue"])(_));
}


/***/ }),

/***/ "./node_modules/vega-parser/src/parsers/scale.js":
/*!*******************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/scale.js ***!
  \*******************************************************/
/*! exports provided: initScale, parseScale */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initScale", function() { return initScale; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseScale", function() { return parseScale; });
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ "./node_modules/vega-parser/src/util.js");
/* harmony import */ var _transforms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../transforms */ "./node_modules/vega-parser/src/transforms.js");
/* harmony import */ var vega_scale__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-scale */ "./node_modules/vega-scale/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");






var FIELD_REF_ID = 0;

function initScale(spec, scope) {
  var type = spec.type || 'linear';

  if (!Object(vega_scale__WEBPACK_IMPORTED_MODULE_2__["isValidScaleType"])(type)) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["error"])('Unrecognized scale type: ' + Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["stringValue"])(type));
  }

  scope.addScale(spec.name, {
    type:   type,
    domain: undefined
  });
}

function parseScale(spec, scope) {
  var params = scope.getScale(spec.name).params,
      key;

  params.domain = parseScaleDomain(spec.domain, spec, scope);

  if (spec.range != null) {
    params.range = parseScaleRange(spec, scope, params);
  }

  if (spec.interpolate != null) {
    parseScaleInterpolate(spec.interpolate, params);
  }

  if (spec.nice != null) {
    params.nice = parseScaleNice(spec.nice);
  }

  if (spec.bins != null) {
    params.bins = parseScaleBins(spec.bins, scope);
  }

  for (key in spec) {
    if (params.hasOwnProperty(key) || key === 'name') continue;
    params[key] = parseLiteral(spec[key], scope);
  }
}

function parseLiteral(v, scope) {
  return !Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["isObject"])(v) ? v
    : v.signal ? scope.signalRef(v.signal)
    : Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["error"])('Unsupported object: ' + Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["stringValue"])(v));
}

function parseArray(v, scope) {
  return v.signal
    ? scope.signalRef(v.signal)
    : v.map(v => parseLiteral(v, scope));
}

function dataLookupError(name) {
  Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["error"])('Can not find data set: ' + Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["stringValue"])(name));
}

// -- SCALE DOMAIN ----

function parseScaleDomain(domain, spec, scope) {
  if (!domain) {
    if (spec.domainMin != null || spec.domainMax != null) {
      Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["error"])('No scale domain defined for domainMin/domainMax to override.');
    }
    return; // default domain
  }

  return domain.signal ? scope.signalRef(domain.signal)
    : (Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["isArray"])(domain) ? explicitDomain
    : domain.fields ? multipleDomain
    : singularDomain)(domain, spec, scope);
}

function explicitDomain(domain, spec, scope) {
  return domain.map(function(v) {
    return parseLiteral(v, scope);
  });
}

function singularDomain(domain, spec, scope) {
  var data = scope.getData(domain.data);
  if (!data) dataLookupError(domain.data);

  return Object(vega_scale__WEBPACK_IMPORTED_MODULE_2__["isDiscrete"])(spec.type)
      ? data.valuesRef(scope, domain.field, parseSort(domain.sort, false))
      : Object(vega_scale__WEBPACK_IMPORTED_MODULE_2__["isQuantile"])(spec.type) ? data.domainRef(scope, domain.field)
      : data.extentRef(scope, domain.field);
}

function multipleDomain(domain, spec, scope) {
  var data = domain.data,
      fields = domain.fields.reduce(function(dom, d) {
        d = Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["isString"])(d) ? {data: data, field: d}
          : (Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["isArray"])(d) || d.signal) ? fieldRef(d, scope)
          : d;
        dom.push(d);
        return dom;
      }, []);

  return (Object(vega_scale__WEBPACK_IMPORTED_MODULE_2__["isDiscrete"])(spec.type) ? ordinalMultipleDomain
    : Object(vega_scale__WEBPACK_IMPORTED_MODULE_2__["isQuantile"])(spec.type) ? quantileMultipleDomain
    : numericMultipleDomain)(domain, scope, fields);
}

function fieldRef(data, scope) {
  var name = '_:vega:_' + (FIELD_REF_ID++),
      coll = Object(_transforms__WEBPACK_IMPORTED_MODULE_1__["Collect"])({});

  if (Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["isArray"])(data)) {
    coll.value = {$ingest: data};
  } else if (data.signal) {
    var code = 'setdata(' + Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["stringValue"])(name) + ',' + data.signal + ')';
    coll.params.input = scope.signalRef(code);
  }
  scope.addDataPipeline(name, [coll, Object(_transforms__WEBPACK_IMPORTED_MODULE_1__["Sieve"])({})]);
  return {data: name, field: 'data'};
}

function ordinalMultipleDomain(domain, scope, fields) {
  var counts, a, c, v;

  // get value counts for each domain field
  counts = fields.map(function(f) {
    var data = scope.getData(f.data);
    if (!data) dataLookupError(f.data);
    return data.countsRef(scope, f.field);
  });

  // sum counts from all fields
  a = scope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_1__["Aggregate"])({
    groupby: _util__WEBPACK_IMPORTED_MODULE_0__["keyFieldRef"],
    ops:['sum'], fields: [scope.fieldRef('count')], as:['count'],
    pulse: counts
  }));

  // collect aggregate output
  c = scope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_1__["Collect"])({pulse: Object(_util__WEBPACK_IMPORTED_MODULE_0__["ref"])(a)}));

  // extract values for combined domain
  v = scope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_1__["Values"])({
    field: _util__WEBPACK_IMPORTED_MODULE_0__["keyFieldRef"],
    sort:  scope.sortRef(parseSort(domain.sort, true)),
    pulse: Object(_util__WEBPACK_IMPORTED_MODULE_0__["ref"])(c)
  }));

  return Object(_util__WEBPACK_IMPORTED_MODULE_0__["ref"])(v);
}

function parseSort(sort, multidomain) {
  if (sort) {
    if (!sort.field && !sort.op) {
      if (Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["isObject"])(sort)) sort.field = 'key';
      else sort = {field: 'key'};
    } else if (!sort.field && sort.op !== 'count') {
      Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["error"])('No field provided for sort aggregate op: ' + sort.op);
    } else if (multidomain && sort.field) {
      Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["error"])('Multiple domain scales can not sort by field.');
    } else if (multidomain && sort.op && sort.op !== 'count') {
      Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["error"])('Multiple domain scales support op count only.');
    }
  }
  return sort;
}

function quantileMultipleDomain(domain, scope, fields) {
  // get value arrays for each domain field
  var values = fields.map(function(f) {
    var data = scope.getData(f.data);
    if (!data) dataLookupError(f.data);
    return data.domainRef(scope, f.field);
  });

  // combine value arrays
  return Object(_util__WEBPACK_IMPORTED_MODULE_0__["ref"])(scope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_1__["MultiValues"])({values: values})));
}

function numericMultipleDomain(domain, scope, fields) {
  // get extents for each domain field
  var extents = fields.map(function(f) {
    var data = scope.getData(f.data);
    if (!data) dataLookupError(f.data);
    return data.extentRef(scope, f.field);
  });

  // combine extents
  return Object(_util__WEBPACK_IMPORTED_MODULE_0__["ref"])(scope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_1__["MultiExtent"])({extents: extents})));
}

// -- SCALE BINS -----

function parseScaleBins(v, scope) {
  return v.signal || Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["isArray"])(v)
    ? parseArray(v, scope)
    : scope.objectProperty(v);
}

// -- SCALE NICE -----

function parseScaleNice(nice) {
  return Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["isObject"])(nice)
    ? {
        interval: parseLiteral(nice.interval),
        step: parseLiteral(nice.step)
      }
    : parseLiteral(nice);
}

// -- SCALE INTERPOLATION -----

function parseScaleInterpolate(interpolate, params) {
  params.interpolate = parseLiteral(interpolate.type || interpolate);
  if (interpolate.gamma != null) {
    params.interpolateGamma = parseLiteral(interpolate.gamma);
  }
}

// -- SCALE RANGE -----

function parseScaleRange(spec, scope, params) {
  var range = spec.range,
      config = scope.config.range;

  if (range.signal) {
    return scope.signalRef(range.signal);
  } else if (Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["isString"])(range)) {
    if (config && config.hasOwnProperty(range)) {
      spec = Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["extend"])({}, spec, {range: config[range]});
      return parseScaleRange(spec, scope, params);
    } else if (range === 'width') {
      range = [0, {signal: 'width'}]
    } else if (range === 'height') {
      range = Object(vega_scale__WEBPACK_IMPORTED_MODULE_2__["isDiscrete"])(spec.type)
        ? [0, {signal: 'height'}]
        : [{signal: 'height'}, 0]
    } else {
      Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["error"])('Unrecognized scale range value: ' + Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["stringValue"])(range));
    }
  } else if (range.scheme) {
    params.scheme = Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["isArray"])(range.scheme)
      ? parseArray(range.scheme, scope)
      : parseLiteral(range.scheme, scope);
    if (range.extent) params.schemeExtent = parseArray(range.extent, scope);
    if (range.count) params.schemeCount = parseLiteral(range.count, scope);
    return;
  } else if (range.step) {
    params.rangeStep = parseLiteral(range.step, scope);
    return;
  } else if (Object(vega_scale__WEBPACK_IMPORTED_MODULE_2__["isDiscrete"])(spec.type) && !Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["isArray"])(range)) {
    return parseScaleDomain(range, spec, scope);
  } else if (!Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["isArray"])(range)) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["error"])('Unsupported range type: ' + Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["stringValue"])(range));
  }

  return range.map(v => (Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["isArray"])(v) ? parseArray : parseLiteral)(v, scope));
}


/***/ }),

/***/ "./node_modules/vega-parser/src/parsers/signal-updates.js":
/*!****************************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/signal-updates.js ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _expression__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./expression */ "./node_modules/vega-parser/src/parsers/expression.js");
/* harmony import */ var _update__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./update */ "./node_modules/vega-parser/src/parsers/update.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");




/* harmony default export */ __webpack_exports__["default"] = (function(signal, scope) {
  var op = scope.getSignal(signal.name),
      expr = signal.update;

  if (signal.init) {
    if (expr) {
      Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["error"])('Signals can not include both init and update expressions.');
    } else {
      expr = signal.init;
      op.initonly = true;
    }
  }

  if (expr) {
    expr = Object(_expression__WEBPACK_IMPORTED_MODULE_0__["default"])(expr, scope);
    op.update = expr.$expr;
    op.params = expr.$params;
  }

  if (signal.on) {
    signal.on.forEach(function(_) {
      Object(_update__WEBPACK_IMPORTED_MODULE_1__["default"])(_, scope, op.id);
    });
  }
});


/***/ }),

/***/ "./node_modules/vega-parser/src/parsers/signal.js":
/*!********************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/signal.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");


var OUTER = 'outer',
    OUTER_INVALID = ['value', 'update', 'init', 'react', 'bind'];

function outerError(prefix, name) {
  Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["error"])(prefix + ' for "outer" push: ' + Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["stringValue"])(name));
}

/* harmony default export */ __webpack_exports__["default"] = (function(signal, scope) {
  var name = signal.name;

  if (signal.push === OUTER) {
    // signal must already be defined, raise error if not
    if (!scope.signals[name]) outerError('No prior signal definition', name);
    // signal push must not use properties reserved for standard definition
    OUTER_INVALID.forEach(function(prop) {
      if (signal[prop] !== undefined) outerError('Invalid property ', prop);
    });
  } else {
    // define a new signal in the current scope
    var op = scope.addSignal(name, signal.value);
    if (signal.react === false) op.react = false;
    if (signal.bind) scope.addBinding(name, signal.bind);
  }
});


/***/ }),

/***/ "./node_modules/vega-parser/src/parsers/spec.js":
/*!******************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/spec.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _signal_updates__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./signal-updates */ "./node_modules/vega-parser/src/parsers/signal-updates.js");
/* harmony import */ var _scale__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scale */ "./node_modules/vega-parser/src/parsers/scale.js");
/* harmony import */ var _projection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./projection */ "./node_modules/vega-parser/src/parsers/projection.js");
/* harmony import */ var _legend__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./legend */ "./node_modules/vega-parser/src/parsers/legend.js");
/* harmony import */ var _signal__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./signal */ "./node_modules/vega-parser/src/parsers/signal.js");
/* harmony import */ var _title__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./title */ "./node_modules/vega-parser/src/parsers/title.js");
/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./data */ "./node_modules/vega-parser/src/parsers/data.js");
/* harmony import */ var _mark__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./mark */ "./node_modules/vega-parser/src/parsers/mark.js");
/* harmony import */ var _axis__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./axis */ "./node_modules/vega-parser/src/parsers/axis.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");











/* harmony default export */ __webpack_exports__["default"] = (function(spec, scope, preprocessed) {
  var signals = Object(vega_util__WEBPACK_IMPORTED_MODULE_9__["array"])(spec.signals),
      scales = Object(vega_util__WEBPACK_IMPORTED_MODULE_9__["array"])(spec.scales);

  if (!preprocessed) signals.forEach(function(_) {
    Object(_signal__WEBPACK_IMPORTED_MODULE_4__["default"])(_, scope);
  });

  Object(vega_util__WEBPACK_IMPORTED_MODULE_9__["array"])(spec.projections).forEach(function(_) {
    Object(_projection__WEBPACK_IMPORTED_MODULE_2__["default"])(_, scope);
  });

  scales.forEach(function(_) {
    Object(_scale__WEBPACK_IMPORTED_MODULE_1__["initScale"])(_, scope);
  });

  Object(vega_util__WEBPACK_IMPORTED_MODULE_9__["array"])(spec.data).forEach(function(_) {
    Object(_data__WEBPACK_IMPORTED_MODULE_6__["default"])(_, scope);
  });

  scales.forEach(function(_) {
    Object(_scale__WEBPACK_IMPORTED_MODULE_1__["parseScale"])(_, scope);
  });

  signals.forEach(function(_) {
    Object(_signal_updates__WEBPACK_IMPORTED_MODULE_0__["default"])(_, scope);
  });

  Object(vega_util__WEBPACK_IMPORTED_MODULE_9__["array"])(spec.axes).forEach(function(_) {
    Object(_axis__WEBPACK_IMPORTED_MODULE_8__["default"])(_, scope);
  });

  Object(vega_util__WEBPACK_IMPORTED_MODULE_9__["array"])(spec.marks).forEach(function(_) {
    Object(_mark__WEBPACK_IMPORTED_MODULE_7__["default"])(_, scope);
  });

  Object(vega_util__WEBPACK_IMPORTED_MODULE_9__["array"])(spec.legends).forEach(function(_) {
    Object(_legend__WEBPACK_IMPORTED_MODULE_3__["default"])(_, scope);
  });

  if (spec.title) {
    Object(_title__WEBPACK_IMPORTED_MODULE_5__["default"])(spec.title, scope);
  }

  scope.parseLambdas();
  return scope;
});


/***/ }),

/***/ "./node_modules/vega-parser/src/parsers/stream.js":
/*!********************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/stream.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return parseStream; });
/* harmony import */ var _expression__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./expression */ "./node_modules/vega-parser/src/parsers/expression.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ "./node_modules/vega-parser/src/util.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");




var Timer = 'timer';

function parseStream(stream, scope) {
  var method = stream.merge ? mergeStream
    : stream.stream ? nestedStream
    : stream.type ? eventStream
    : Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["error"])('Invalid stream specification: ' + Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["stringValue"])(stream));

  return method(stream, scope);
}

function eventSource(source) {
   return source === _util__WEBPACK_IMPORTED_MODULE_1__["Scope"] ? _util__WEBPACK_IMPORTED_MODULE_1__["View"] : (source || _util__WEBPACK_IMPORTED_MODULE_1__["View"]);
}

function mergeStream(stream, scope) {
  var list = stream.merge.map(s => parseStream(s, scope)),
      entry = streamParameters({merge: list}, stream, scope);
  return scope.addStream(entry).id;
}

function nestedStream(stream, scope) {
  var id = parseStream(stream.stream, scope),
      entry = streamParameters({stream: id}, stream, scope);
  return scope.addStream(entry).id;
}

function eventStream(stream, scope) {
  var id, entry;

  if (stream.type === Timer) {
    id = scope.event(Timer, stream.throttle);
    stream = {between: stream.between, filter: stream.filter};
  } else {
    id = scope.event(eventSource(stream.source), stream.type);
  }

  entry = streamParameters({stream: id}, stream, scope);
  return Object.keys(entry).length === 1
    ? id
    : scope.addStream(entry).id;
}

function streamParameters(entry, stream, scope) {
  var param = stream.between;

  if (param) {
    if (param.length !== 2) {
      Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["error"])('Stream "between" parameter must have 2 entries: ' + Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["stringValue"])(stream));
    }
    entry.between = [
      parseStream(param[0], scope),
      parseStream(param[1], scope)
    ];
  }

  param = stream.filter ? [].concat(stream.filter) : [];
  if (stream.marktype || stream.markname || stream.markrole) {
    // add filter for mark type, name and/or role
    param.push(filterMark(stream.marktype, stream.markname, stream.markrole));
  }
  if (stream.source === _util__WEBPACK_IMPORTED_MODULE_1__["Scope"]) {
    // add filter to limit events from sub-scope only
    param.push('inScope(event.item)');
  }
  if (param.length) {
    entry.filter = Object(_expression__WEBPACK_IMPORTED_MODULE_0__["default"])('(' + param.join(')&&(') + ')').$expr;
  }

  if ((param = stream.throttle) != null) {
    entry.throttle = +param;
  }

  if ((param = stream.debounce) != null) {
    entry.debounce = +param;
  }

  if (stream.consume) {
    entry.consume = true;
  }

  return entry;
}

function filterMark(type, name, role) {
  var item = 'event.item';
  return item
    + (type && type !== '*' ? '&&' + item + '.mark.marktype===\'' + type + '\'' : '')
    + (role ? '&&' + item + '.mark.role===\'' + role + '\'' : '')
    + (name ? '&&' + item + '.mark.name===\'' + name + '\'' : '');
}


/***/ }),

/***/ "./node_modules/vega-parser/src/parsers/title.js":
/*!*******************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/title.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _guides_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./guides/constants */ "./node_modules/vega-parser/src/parsers/guides/constants.js");
/* harmony import */ var _guides_guide_mark__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./guides/guide-mark */ "./node_modules/vega-parser/src/parsers/guides/guide-mark.js");
/* harmony import */ var _guides_guide_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./guides/guide-util */ "./node_modules/vega-parser/src/parsers/guides/guide-util.js");
/* harmony import */ var _mark__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./mark */ "./node_modules/vega-parser/src/parsers/mark.js");
/* harmony import */ var _marks_marktypes__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./marks/marktypes */ "./node_modules/vega-parser/src/parsers/marks/marktypes.js");
/* harmony import */ var _marks_roles__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./marks/roles */ "./node_modules/vega-parser/src/parsers/marks/roles.js");
/* harmony import */ var _encode_encode_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./encode/encode-util */ "./node_modules/vega-parser/src/parsers/encode/encode-util.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../util */ "./node_modules/vega-parser/src/util.js");
/* harmony import */ var _transforms__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../transforms */ "./node_modules/vega-parser/src/transforms.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");











const angleExpr = `item.orient==="${_guides_constants__WEBPACK_IMPORTED_MODULE_0__["Left"]}"?-90:item.orient==="${_guides_constants__WEBPACK_IMPORTED_MODULE_0__["Right"]}"?90:0`,
      baselineExpr = `item.orient==="${_guides_constants__WEBPACK_IMPORTED_MODULE_0__["Bottom"]}"?"${_guides_constants__WEBPACK_IMPORTED_MODULE_0__["Top"]}":"${_guides_constants__WEBPACK_IMPORTED_MODULE_0__["Bottom"]}"`;

/* harmony default export */ __webpack_exports__["default"] = (function(spec, scope) {
  spec = Object(vega_util__WEBPACK_IMPORTED_MODULE_9__["isString"])(spec) ? {text: spec} : spec;

  var config = scope.config.title,
      encode = Object(vega_util__WEBPACK_IMPORTED_MODULE_9__["extend"])({}, spec.encode),
      dataRef, title;

  // single-element data source for group title
  dataRef = Object(_util__WEBPACK_IMPORTED_MODULE_7__["ref"])(scope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_8__["Collect"])(null, [{}])));

  // build title specification
  encode.name = spec.name;
  encode.interactive = spec.interactive;
  title = buildTitle(spec, config, encode, dataRef);
  if (spec.zindex) title.zindex = spec.zindex;

  // parse title specification
  return Object(_mark__WEBPACK_IMPORTED_MODULE_3__["default"])(title, scope);
});

function buildTitle(spec, config, userEncode, dataRef) {
  var _ = Object(_guides_guide_util__WEBPACK_IMPORTED_MODULE_2__["lookup"])(spec, config),
      zero = {value: 0},
      title = spec.text,
      encode;

  encode = {
    enter: {opacity: zero},
    update: {opacity: {value: 1}},
    exit: {opacity: zero}
  };

  Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_6__["addEncoders"])(encode, {
    text:       title,
    orient:     _('orient'),
    anchor:     _('anchor'),
    align:      {signal: _guides_guide_util__WEBPACK_IMPORTED_MODULE_2__["alignExpr"]},
    angle:      {signal: angleExpr},
    baseline:   {signal: baselineExpr},
    dx:         _('dx'),
    dy:         _('dy'),
    fill:       _('color'),
    font:       _('font'),
    fontSize:   _('fontSize'),
    fontStyle:  _('fontStyle'),
    fontWeight: _('fontWeight'),
    frame:      _('frame'),
    limit:      _('limit'),
    offset:     _('offset') || 0
  }, { // update
    align:      _('align'),
    angle:      _('angle'),
    baseline:   _('baseline')
  });

  return Object(_guides_guide_mark__WEBPACK_IMPORTED_MODULE_1__["default"])(_marks_marktypes__WEBPACK_IMPORTED_MODULE_4__["TextMark"], _marks_roles__WEBPACK_IMPORTED_MODULE_5__["TitleRole"], spec.style || _guides_constants__WEBPACK_IMPORTED_MODULE_0__["GroupTitleStyle"],
                   null, dataRef, encode, userEncode);
}


/***/ }),

/***/ "./node_modules/vega-parser/src/parsers/transform.js":
/*!***********************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/transform.js ***!
  \***********************************************************/
/*! exports provided: default, outerExpr, outerField, isData, isExpr, isField, isCompare */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "outerExpr", function() { return outerExpr; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "outerField", function() { return outerField; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isData", function() { return isData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isExpr", function() { return isExpr; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isField", function() { return isField; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isCompare", function() { return isCompare; });
/* harmony import */ var _expression__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./expression */ "./node_modules/vega-parser/src/parsers/expression.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ "./node_modules/vega-parser/src/util.js");
/* harmony import */ var _transforms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../transforms */ "./node_modules/vega-parser/src/transforms.js");
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");






/**
 * Parse a data transform specification.
 */
/* harmony default export */ __webpack_exports__["default"] = (function(spec, scope) {
  var def = Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_3__["definition"])(spec.type);
  if (!def) Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["error"])('Unrecognized transform type: ' + Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["stringValue"])(spec.type));

  var t = Object(_util__WEBPACK_IMPORTED_MODULE_1__["entry"])(def.type.toLowerCase(), null, parseParameters(def, spec, scope));
  if (spec.signal) scope.addSignal(spec.signal, scope.proxy(t));
  t.metadata = def.metadata || {};

  return t;
});

/**
 * Parse all parameters of a data transform.
 */
function parseParameters(def, spec, scope) {
  var params = {}, pdef, i, n;
  for (i=0, n=def.params.length; i<n; ++i) {
    pdef = def.params[i];
    params[pdef.name] = parseParameter(pdef, spec, scope);
  }
  return params;
}

/**
 * Parse a data transform parameter.
 */
function parseParameter(def, spec, scope) {
  var type = def.type,
      value = spec[def.name];

  if (type === 'index') {
    return parseIndexParameter(def, spec, scope);
  } else if (value === undefined) {
    if (def.required) {
      Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["error"])('Missing required ' + Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["stringValue"])(spec.type)
          + ' parameter: ' + Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["stringValue"])(def.name));
    }
    return;
  } else if (type === 'param') {
    return parseSubParameters(def, spec, scope);
  } else if (type === 'projection') {
    return scope.projectionRef(spec[def.name]);
  }

  return def.array && !Object(_util__WEBPACK_IMPORTED_MODULE_1__["isSignal"])(value)
    ? value.map(function(v) { return parameterValue(def, v, scope); })
    : parameterValue(def, value, scope);
}

/**
 * Parse a single parameter value.
 */
function parameterValue(def, value, scope) {
  var type = def.type;

  if (Object(_util__WEBPACK_IMPORTED_MODULE_1__["isSignal"])(value)) {
    return isExpr(type) ? Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["error"])('Expression references can not be signals.')
         : isField(type) ? scope.fieldRef(value)
         : isCompare(type) ? scope.compareRef(value)
         : scope.signalRef(value.signal);
  } else {
    var expr = def.expr || isField(type);
    return expr && outerExpr(value) ? scope.exprRef(value.expr, value.as)
         : expr && outerField(value) ? Object(_util__WEBPACK_IMPORTED_MODULE_1__["fieldRef"])(value.field, value.as)
         : isExpr(type) ? Object(_expression__WEBPACK_IMPORTED_MODULE_0__["default"])(value, scope)
         : isData(type) ? Object(_util__WEBPACK_IMPORTED_MODULE_1__["ref"])(scope.getData(value).values)
         : isField(type) ? Object(_util__WEBPACK_IMPORTED_MODULE_1__["fieldRef"])(value)
         : isCompare(type) ? scope.compareRef(value)
         : value;
  }
}

/**
 * Parse parameter for accessing an index of another data set.
 */
function parseIndexParameter(def, spec, scope) {
  if (!Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["isString"])(spec.from)) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["error"])('Lookup "from" parameter must be a string literal.');
  }
  return scope.getData(spec.from).lookupRef(scope, spec.key);
}

/**
 * Parse a parameter that contains one or more sub-parameter objects.
 */
function parseSubParameters(def, spec, scope) {
  var value = spec[def.name];

  if (def.array) {
    if (!Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["isArray"])(value)) { // signals not allowed!
      Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["error"])('Expected an array of sub-parameters. Instead: ' + Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["stringValue"])(value));
    }
    return value.map(function(v) {
      return parseSubParameter(def, v, scope);
    });
  } else {
    return parseSubParameter(def, value, scope);
  }
}

/**
 * Parse a sub-parameter object.
 */
function parseSubParameter(def, value, scope) {
  var params, pdef, k, i, n;

  // loop over defs to find matching key
  for (i=0, n=def.params.length; i<n; ++i) {
    pdef = def.params[i];
    for (k in pdef.key) {
      if (pdef.key[k] !== value[k]) { pdef = null; break; }
    }
    if (pdef) break;
  }
  // raise error if matching key not found
  if (!pdef) Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["error"])('Unsupported parameter: ' + Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["stringValue"])(value));

  // parse params, create Params transform, return ref
  params = Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["extend"])(parseParameters(pdef, value, scope), pdef.key);
  return Object(_util__WEBPACK_IMPORTED_MODULE_1__["ref"])(scope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_2__["Params"])(params)));
}

// -- Utilities -----

function outerExpr(_) {
  return _ && _.expr;
}

function outerField(_) {
  return _ && _.field;
}

function isData(_) {
  return _ === 'data';
}

function isExpr(_) {
  return _ === 'expr';
}

function isField(_) {
  return _ === 'field';
}

function isCompare(_) {
  return _ === 'compare'
}


/***/ }),

/***/ "./node_modules/vega-parser/src/parsers/trigger.js":
/*!*********************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/trigger.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _expression__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./expression */ "./node_modules/vega-parser/src/parsers/expression.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ "./node_modules/vega-parser/src/util.js");



/* harmony default export */ __webpack_exports__["default"] = (function(spec, scope, name) {
  var remove = spec.remove,
      insert = spec.insert,
      toggle = spec.toggle,
      modify = spec.modify,
      values = spec.values,
      op = scope.add(Object(_util__WEBPACK_IMPORTED_MODULE_1__["operator"])()),
      update, expr;

  update = 'if(' + spec.trigger + ',modify("'
    + name + '",'
    + [insert, remove, toggle, modify, values]
        .map(function(_) { return _ == null ? 'null' : _; })
        .join(',')
    + '),0)';

  expr = Object(_expression__WEBPACK_IMPORTED_MODULE_0__["default"])(update, scope);
  op.update = expr.$expr;
  op.params = expr.$params;
});


/***/ }),

/***/ "./node_modules/vega-parser/src/parsers/update.js":
/*!********************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/update.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _expression__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./expression */ "./node_modules/vega-parser/src/parsers/expression.js");
/* harmony import */ var _stream__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stream */ "./node_modules/vega-parser/src/parsers/stream.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ "./node_modules/vega-parser/src/util.js");
/* harmony import */ var vega_event_selector__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vega-event-selector */ "./node_modules/vega-event-selector/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");






var preamble = 'var datum=event.item&&event.item.datum;';

/* harmony default export */ __webpack_exports__["default"] = (function(spec, scope, target) {
  var events = spec.events,
      update = spec.update,
      encode = spec.encode,
      sources = [],
      entry = {target: target};

  if (!events) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["error"])('Signal update missing events specification.');
  }

  // interpret as an event selector string
  if (Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["isString"])(events)) {
    events = Object(vega_event_selector__WEBPACK_IMPORTED_MODULE_3__["selector"])(events, scope.isSubscope() ? _util__WEBPACK_IMPORTED_MODULE_2__["Scope"] : _util__WEBPACK_IMPORTED_MODULE_2__["View"]);
  }

  // separate event streams from signal updates
  events = Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["array"])(events)
    .filter(s => s.signal || s.scale ? (sources.push(s), 0) : 1);

  // merge internal operator listeners
  if (sources.length > 1) {
    sources = [mergeSources(sources)];
  }

  // merge event streams, include as source
  if (events.length) {
    sources.push(events.length > 1 ? {merge: events} : events[0]);
  }

  if (encode != null) {
    if (update) Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["error"])('Signal encode and update are mutually exclusive.');
    update = 'encode(item(),' + Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["stringValue"])(encode) + ')';
  }

  // resolve update value
  entry.update = Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["isString"])(update) ? Object(_expression__WEBPACK_IMPORTED_MODULE_0__["default"])(update, scope, preamble)
    : update.expr != null ? Object(_expression__WEBPACK_IMPORTED_MODULE_0__["default"])(update.expr, scope, preamble)
    : update.value != null ? update.value
    : update.signal != null ? {
        $expr:   '_.value',
        $params: {value: scope.signalRef(update.signal)}
      }
    : Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["error"])('Invalid signal update specification.');

  if (spec.force) {
    entry.options = {force: true};
  }

  sources.forEach(function(source) {
    scope.addUpdate(Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["extend"])(streamSource(source, scope), entry));
  });
});

function streamSource(stream, scope) {
  return {
    source: stream.signal ? scope.signalRef(stream.signal)
          : stream.scale ? scope.scaleRef(stream.scale)
          : Object(_stream__WEBPACK_IMPORTED_MODULE_1__["default"])(stream, scope)
  };
}

function mergeSources(sources) {
  return {
    signal: '['
      + sources.map(s => s.scale ? 'scale("' + s.scale + '")' : s.signal)
      + ']'
  };
}


/***/ }),

/***/ "./node_modules/vega-parser/src/parsers/view.js":
/*!******************************************************!*\
  !*** ./node_modules/vega-parser/src/parsers/view.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return parseView; });
/* harmony import */ var _autosize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./autosize */ "./node_modules/vega-parser/src/parsers/autosize.js");
/* harmony import */ var _padding__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./padding */ "./node_modules/vega-parser/src/parsers/padding.js");
/* harmony import */ var _signal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./signal */ "./node_modules/vega-parser/src/parsers/signal.js");
/* harmony import */ var _spec__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./spec */ "./node_modules/vega-parser/src/parsers/spec.js");
/* harmony import */ var _encode_encode_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./encode/encode-util */ "./node_modules/vega-parser/src/parsers/encode/encode-util.js");
/* harmony import */ var _marks_marktypes__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./marks/marktypes */ "./node_modules/vega-parser/src/parsers/marks/marktypes.js");
/* harmony import */ var _marks_roles__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./marks/roles */ "./node_modules/vega-parser/src/parsers/marks/roles.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../util */ "./node_modules/vega-parser/src/util.js");
/* harmony import */ var _DataScope__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../DataScope */ "./node_modules/vega-parser/src/DataScope.js");
/* harmony import */ var _transforms__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../transforms */ "./node_modules/vega-parser/src/transforms.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");












var defined = Object(vega_util__WEBPACK_IMPORTED_MODULE_10__["toSet"])(['width', 'height', 'padding', 'autosize']);

function parseView(spec, scope) {
  var config = scope.config,
      op, input, encode, parent, root;

  scope.background = spec.background || config.background;
  scope.eventConfig = config.events;
  root = Object(_util__WEBPACK_IMPORTED_MODULE_7__["ref"])(scope.root = scope.add(Object(_util__WEBPACK_IMPORTED_MODULE_7__["operator"])()));
  scope.addSignal('width', spec.width || 0);
  scope.addSignal('height', spec.height || 0);
  scope.addSignal('padding', Object(_padding__WEBPACK_IMPORTED_MODULE_1__["default"])(spec.padding, config));
  scope.addSignal('autosize', Object(_autosize__WEBPACK_IMPORTED_MODULE_0__["default"])(spec.autosize, config));
  scope.legends = scope.objectProperty(config.legend && config.legend.layout);

  Object(vega_util__WEBPACK_IMPORTED_MODULE_10__["array"])(spec.signals).forEach(function(_) {
    if (!defined[_.name]) Object(_signal__WEBPACK_IMPORTED_MODULE_2__["default"])(_, scope);
  });

  // Store root group item
  input = scope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_9__["Collect"])());

  // Encode root group item
  encode = Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_4__["extendEncode"])({
    enter: { x: {value: 0}, y: {value: 0} },
    update: { width: {signal: 'width'}, height: {signal: 'height'} }
  }, spec.encode);

  encode = scope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_9__["Encode"])(
    Object(_encode_encode_util__WEBPACK_IMPORTED_MODULE_4__["encoders"])(encode, _marks_marktypes__WEBPACK_IMPORTED_MODULE_5__["GroupMark"], _marks_roles__WEBPACK_IMPORTED_MODULE_6__["FrameRole"], spec.style, scope, {pulse: Object(_util__WEBPACK_IMPORTED_MODULE_7__["ref"])(input)}))
  );

  // Perform view layout
  parent = scope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_9__["ViewLayout"])({
    layout:       scope.objectProperty(spec.layout),
    legends:      scope.legends,
    autosize:     scope.signalRef('autosize'),
    mark:         root,
    pulse:        Object(_util__WEBPACK_IMPORTED_MODULE_7__["ref"])(encode)
  }));
  scope.operators.pop();

  // Parse remainder of specification
  scope.pushState(Object(_util__WEBPACK_IMPORTED_MODULE_7__["ref"])(encode), Object(_util__WEBPACK_IMPORTED_MODULE_7__["ref"])(parent), null);
  Object(_spec__WEBPACK_IMPORTED_MODULE_3__["default"])(spec, scope, true);
  scope.operators.push(parent);

  // Bound / render / sieve root item
  op = scope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_9__["Bound"])({mark: root, pulse: Object(_util__WEBPACK_IMPORTED_MODULE_7__["ref"])(parent)}));
  op = scope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_9__["Render"])({pulse: Object(_util__WEBPACK_IMPORTED_MODULE_7__["ref"])(op)}));
  op = scope.add(Object(_transforms__WEBPACK_IMPORTED_MODULE_9__["Sieve"])({pulse: Object(_util__WEBPACK_IMPORTED_MODULE_7__["ref"])(op)}));

  // Track metadata for root item
  scope.addData('root', new _DataScope__WEBPACK_IMPORTED_MODULE_8__["default"](scope, input, input, op));

  return scope;
}


/***/ }),

/***/ "./node_modules/vega-parser/src/transforms.js":
/*!****************************************************!*\
  !*** ./node_modules/vega-parser/src/transforms.js ***!
  \****************************************************/
/*! exports provided: Aggregate, AxisTicks, Bound, Collect, Compare, DataJoin, Encode, Expression, Extent, Facet, Field, Key, LegendEntries, Load, Mark, MultiExtent, MultiValues, Overlap, Params, PreFacet, Projection, Proxy, Relay, Render, Scale, Sieve, SortItems, ViewLayout, Values */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Aggregate", function() { return Aggregate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AxisTicks", function() { return AxisTicks; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Bound", function() { return Bound; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Collect", function() { return Collect; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Compare", function() { return Compare; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DataJoin", function() { return DataJoin; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Encode", function() { return Encode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Expression", function() { return Expression; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Extent", function() { return Extent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Facet", function() { return Facet; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Field", function() { return Field; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Key", function() { return Key; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LegendEntries", function() { return LegendEntries; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Load", function() { return Load; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Mark", function() { return Mark; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MultiExtent", function() { return MultiExtent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MultiValues", function() { return MultiValues; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Overlap", function() { return Overlap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Params", function() { return Params; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PreFacet", function() { return PreFacet; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Projection", function() { return Projection; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Proxy", function() { return Proxy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Relay", function() { return Relay; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Render", function() { return Render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Scale", function() { return Scale; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Sieve", function() { return Sieve; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SortItems", function() { return SortItems; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewLayout", function() { return ViewLayout; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Values", function() { return Values; });
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util */ "./node_modules/vega-parser/src/util.js");


function transform(name) {
  return function(params, value, parent) {
    return Object(_util__WEBPACK_IMPORTED_MODULE_0__["entry"])(name, value, params || undefined, parent);
  };
}

var Aggregate = transform('aggregate');
var AxisTicks = transform('axisticks');
var Bound = transform('bound');
var Collect = transform('collect');
var Compare = transform('compare');
var DataJoin = transform('datajoin');
var Encode = transform('encode');
var Expression = transform('expression');
var Extent = transform('extent');
var Facet = transform('facet');
var Field = transform('field');
var Key = transform('key');
var LegendEntries = transform('legendentries');
var Load = transform('load');
var Mark = transform('mark');
var MultiExtent = transform('multiextent');
var MultiValues = transform('multivalues');
var Overlap = transform('overlap');
var Params = transform('params');
var PreFacet = transform('prefacet');
var Projection = transform('projection');
var Proxy = transform('proxy');
var Relay = transform('relay');
var Render = transform('render');
var Scale = transform('scale');
var Sieve = transform('sieve');
var SortItems = transform('sortitems');
var ViewLayout = transform('viewlayout');
var Values = transform('values');


/***/ }),

/***/ "./node_modules/vega-parser/src/util.js":
/*!**********************************************!*\
  !*** ./node_modules/vega-parser/src/util.js ***!
  \**********************************************/
/*! exports provided: Entry, entry, operator, ref, tupleidRef, fieldRef, keyFieldRef, compareRef, keyRef, Ascending, Descending, sortKey, aggrField, Scope, View, isSignal, isExpr, hasSignal, value, deref */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Entry", function() { return Entry; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "entry", function() { return entry; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "operator", function() { return operator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ref", function() { return ref; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tupleidRef", function() { return tupleidRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fieldRef", function() { return fieldRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "keyFieldRef", function() { return keyFieldRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "compareRef", function() { return compareRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "keyRef", function() { return keyRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Ascending", function() { return Ascending; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Descending", function() { return Descending; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sortKey", function() { return sortKey; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "aggrField", function() { return aggrField; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Scope", function() { return Scope; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "View", function() { return View; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isSignal", function() { return isSignal; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isExpr", function() { return isExpr; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hasSignal", function() { return hasSignal; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "value", function() { return value; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "deref", function() { return deref; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");


function Entry(type, value, params, parent) {
  this.id = -1;
  this.type = type;
  this.value = value;
  this.params = params;
  if (parent) this.parent = parent;
}

function entry(type, value, params, parent) {
  return new Entry(type, value, params, parent);
}

function operator(value, params) {
  return entry('operator', value, params);
}

// -----

function ref(op) {
  var ref = {$ref: op.id};
  // if operator not yet registered, cache ref to resolve later
  if (op.id < 0) (op.refs = op.refs || []).push(ref);
  return ref;
}

var tupleidRef = {
  $tupleid: 1,
  toString: function() { return ':_tupleid_:'; }
};

function fieldRef(field, name) {
  return name ? {$field: field, $name: name} : {$field: field};
}

var keyFieldRef = fieldRef('key');

function compareRef(fields, orders) {
  return {$compare: fields, $order: orders};
}

function keyRef(fields, flat) {
  var ref = {$key: fields};
  if (flat) ref.$flat = true;
  return ref;
}

// -----

var Ascending  = 'ascending';

var Descending = 'descending';

function sortKey(sort) {
  return !Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isObject"])(sort) ? ''
    : (sort.order === Descending ? '-' : '+')
      + aggrField(sort.op, sort.field);
}

function aggrField(op, field) {
  return (op && op.signal ? '$' + op.signal : op || '')
    + (op && field ? '_' : '')
    + (field && field.signal ? '$' + field.signal : field || '');
}

// -----

var Scope = 'scope';

var View = 'view';

function isSignal(_) {
  return _ && _.signal;
}

function isExpr(_) {
  return _ && _.expr;
}

function hasSignal(_) {
  if (isSignal(_)) return true;
  if (Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isObject"])(_)) for (var key in _) {
    if (hasSignal(_[key])) return true;
  }
  return false;
}

function value(specValue, defaultValue) {
  return specValue != null ? specValue : defaultValue;
}

function deref(v) {
  return v && v.signal || v;
}


/***/ }),

/***/ "./node_modules/vega-projection/index.js":
/*!***********************************************!*\
  !*** ./node_modules/vega-projection/index.js ***!
  \***********************************************/
/*! exports provided: projection, projectionProperties, getProjectionPath */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _src_projections__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/projections */ "./node_modules/vega-projection/src/projections.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "projection", function() { return _src_projections__WEBPACK_IMPORTED_MODULE_0__["projection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "projectionProperties", function() { return _src_projections__WEBPACK_IMPORTED_MODULE_0__["projectionProperties"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getProjectionPath", function() { return _src_projections__WEBPACK_IMPORTED_MODULE_0__["getProjectionPath"]; });




/***/ }),

/***/ "./node_modules/vega-projection/src/projections.js":
/*!*********************************************************!*\
  !*** ./node_modules/vega-projection/src/projections.js ***!
  \*********************************************************/
/*! exports provided: projectionProperties, projection, getProjectionPath */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "projectionProperties", function() { return projectionProperties; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "projection", function() { return projection; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getProjectionPath", function() { return getProjectionPath; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");


var defaultPath = Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoPath"])();

var projectionProperties = [
  // standard properties in d3-geo
  'clipAngle',
  'clipExtent',
  'scale',
  'translate',
  'center',
  'rotate',
  'parallels',
  'precision',
  'reflectX',
  'reflectY',

  // extended properties in d3-geo-projections
  'coefficient',
  'distance',
  'fraction',
  'lobes',
  'parallel',
  'radius',
  'ratio',
  'spacing',
  'tilt'
];

/**
 * Augment projections with their type and a copy method.
 */
function create(type, constructor) {
  return function projection() {
    var p = constructor();

    p.type = type;

    p.path = Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoPath"])().projection(p);

    p.copy = p.copy || function() {
      var c = projection();
      projectionProperties.forEach(function(prop) {
        if (p.hasOwnProperty(prop)) c[prop](p[prop]());
      });
      c.path.pointRadius(p.path.pointRadius());
      return c;
    };

    return p;
  };
}

function projection(type, proj) {
  if (!type || typeof type !== 'string') {
    throw new Error('Projection type must be a name string.');
  }
  type = type.toLowerCase();
  if (arguments.length > 1) {
    projections[type] = create(type, proj);
    return this;
  } else {
    return projections.hasOwnProperty(type) ? projections[type] : null;
  }
}

function getProjectionPath(proj) {
  return (proj && proj.path) || defaultPath;
}

var projections = {
  // base d3-geo projection types
  albers:               d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoAlbers"],
  albersusa:            d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoAlbersUsa"],
  azimuthalequalarea:   d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoAzimuthalEqualArea"],
  azimuthalequidistant: d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoAzimuthalEquidistant"],
  conicconformal:       d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoConicConformal"],
  conicequalarea:       d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoConicEqualArea"],
  conicequidistant:     d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoConicEquidistant"],
  equirectangular:      d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoEquirectangular"],
  gnomonic:             d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoGnomonic"],
  identity:             d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoIdentity"],
  mercator:             d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoMercator"],
  naturalEarth1:        d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoNaturalEarth1"],
  orthographic:         d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoOrthographic"],
  stereographic:        d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoStereographic"],
  transversemercator:   d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoTransverseMercator"]
};

for (var key in projections) {
  projection(key, projections[key]);
}


/***/ }),

/***/ "./node_modules/vega-runtime/index.js":
/*!********************************************!*\
  !*** ./node_modules/vega-runtime/index.js ***!
  \********************************************/
/*! exports provided: parse, context, expression */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _src_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/dataflow */ "./node_modules/vega-runtime/src/dataflow.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "parse", function() { return _src_dataflow__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _src_context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/context */ "./node_modules/vega-runtime/src/context.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "context", function() { return _src_context__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _src_expression__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/expression */ "./node_modules/vega-runtime/src/expression.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "expression", function() { return _src_expression__WEBPACK_IMPORTED_MODULE_2__["default"]; });






/***/ }),

/***/ "./node_modules/vega-runtime/src/context.js":
/*!**************************************************!*\
  !*** ./node_modules/vega-runtime/src/context.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _state__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./state */ "./node_modules/vega-runtime/src/state.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util */ "./node_modules/vega-runtime/src/util.js");



/**
 * Context objects store the current parse state.
 * Enables lookup of parsed operators, event streams, accessors, etc.
 * Provides a 'fork' method for creating child contexts for subflows.
 */
/* harmony default export */ __webpack_exports__["default"] = (function(df, transforms, functions) {
  return new Context(df, transforms, functions);
});

function Context(df, transforms, functions) {
  this.dataflow = df;
  this.transforms = transforms;
  this.events = df.events.bind(df);
  this.signals = {};
  this.scales = {};
  this.nodes = {};
  this.data = {};
  this.fn = {};
  if (functions) {
    this.functions = Object.create(functions);
    this.functions.context = this;
  }
}

function ContextFork(ctx) {
  this.dataflow = ctx.dataflow;
  this.transforms = ctx.transforms;
  this.functions = ctx.functions;
  this.events = ctx.events;
  this.signals = Object.create(ctx.signals);
  this.scales = Object.create(ctx.scales);
  this.nodes = Object.create(ctx.nodes);
  this.data = Object.create(ctx.data);
  this.fn = Object.create(ctx.fn);
  if (ctx.functions) {
    this.functions = Object.create(ctx.functions);
    this.functions.context = this;
  }
}

Context.prototype = ContextFork.prototype = {
  fork: function() {
    var ctx = new ContextFork(this);
    (this.subcontext || (this.subcontext = [])).push(ctx);
    return ctx;
  },
  get: function(id) {
    return this.nodes[id];
  },
  set: function(id, node) {
    return this.nodes[id] = node;
  },
  add: function(spec, op) {
    var ctx = this,
        df = ctx.dataflow,
        data;

    ctx.set(spec.id, op);

    if (Object(_util__WEBPACK_IMPORTED_MODULE_1__["isCollect"])(spec.type) && (data = spec.value)) {
      if (data.$ingest) {
        df.ingest(op, data.$ingest, data.$format);
      } else if (data.$request) {
        df.preload(op, data.$request, data.$format);
      } else {
        df.pulse(op, df.changeset().insert(data));
      }
    }

    if (spec.root) {
      ctx.root = op;
    }

    if (spec.parent) {
      var p = ctx.get(spec.parent.$ref);
      if (p) {
        df.connect(p, [op]);
        op.targets().add(p);
      } else {
        (ctx.unresolved = ctx.unresolved || []).push(function() {
          p = ctx.get(spec.parent.$ref);
          df.connect(p, [op]);
          op.targets().add(p);
        });
      }
    }

    if (spec.signal) {
      ctx.signals[spec.signal] = op;
    }

    if (spec.scale) {
      ctx.scales[spec.scale] = op;
    }

    if (spec.data) {
      for (var name in spec.data) {
        data = ctx.data[name] || (ctx.data[name] = {});
        spec.data[name].forEach(function(role) { data[role] = op; });
      }
    }
  },
  resolve: function() {
    (this.unresolved || []).forEach(function(fn) { fn(); });
    delete this.unresolved;
    return this;
  },
  operator: function(spec, update) {
    this.add(spec, this.dataflow.add(spec.value, update));
  },
  transform: function(spec, type) {
    this.add(spec, this.dataflow.add(this.transforms[Object(_util__WEBPACK_IMPORTED_MODULE_1__["canonicalType"])(type)]));
  },
  stream: function(spec, stream) {
    this.set(spec.id, stream);
  },
  update: function(spec, stream, target, update, params) {
    this.dataflow.on(stream, target, update, params, spec.options);
  },
  getState: _state__WEBPACK_IMPORTED_MODULE_0__["getState"],
  setState: _state__WEBPACK_IMPORTED_MODULE_0__["setState"]
};


/***/ }),

/***/ "./node_modules/vega-runtime/src/dataflow.js":
/*!***************************************************!*\
  !*** ./node_modules/vega-runtime/src/dataflow.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _operator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./operator */ "./node_modules/vega-runtime/src/operator.js");
/* harmony import */ var _stream__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stream */ "./node_modules/vega-runtime/src/stream.js");
/* harmony import */ var _update__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./update */ "./node_modules/vega-runtime/src/update.js");




/**
 * Parse a serialized dataflow specification.
 */
/* harmony default export */ __webpack_exports__["default"] = (function(spec, ctx) {
  var operators = spec.operators || [];

  // parse background
  if (spec.background) {
    ctx.background = spec.background;
  }

  // parse event configuration
  if (spec.eventConfig) {
    ctx.eventConfig = spec.eventConfig;
  }

  // parse operators
  operators.forEach(function(entry) {
    Object(_operator__WEBPACK_IMPORTED_MODULE_0__["default"])(entry, ctx);
  });

  // parse operator parameters
  operators.forEach(function(entry) {
    Object(_operator__WEBPACK_IMPORTED_MODULE_0__["parseOperatorParameters"])(entry, ctx);
  });

  // parse streams
  (spec.streams || []).forEach(function(entry) {
    Object(_stream__WEBPACK_IMPORTED_MODULE_1__["default"])(entry, ctx);
  });

  // parse updates
  (spec.updates || []).forEach(function(entry) {
    Object(_update__WEBPACK_IMPORTED_MODULE_2__["default"])(entry, ctx);
  });

  return ctx.resolve();
});


/***/ }),

/***/ "./node_modules/vega-runtime/src/expression.js":
/*!*****************************************************!*\
  !*** ./node_modules/vega-runtime/src/expression.js ***!
  \*****************************************************/
/*! exports provided: default, operatorExpression, parameterExpression, eventExpression, handlerExpression, encodeExpression */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return expression; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "operatorExpression", function() { return operatorExpression; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parameterExpression", function() { return parameterExpression; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "eventExpression", function() { return eventExpression; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "handlerExpression", function() { return handlerExpression; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "encodeExpression", function() { return encodeExpression; });
/**
 * Parse an expression given the argument signature and body code.
 */
function expression(args, code, ctx) {
  // wrap code in return statement if expression does not terminate
  if (code[code.length-1] !== ';') {
    code = 'return(' + code + ');';
  }
  var fn = Function.apply(null, args.concat(code));
  return ctx && ctx.functions ? fn.bind(ctx.functions) : fn;
}

/**
 * Parse an expression used to update an operator value.
 */
function operatorExpression(code, ctx) {
  return expression(['_'], code, ctx);
}

/**
 * Parse an expression provided as an operator parameter value.
 */
function parameterExpression(code, ctx) {
  return expression(['datum', '_'], code, ctx);
}

/**
 * Parse an expression applied to an event stream.
 */
function eventExpression(code, ctx) {
  return expression(['event'], code, ctx);
}

/**
 * Parse an expression used to handle an event-driven operator update.
 */
function handlerExpression(code, ctx) {
  return expression(['_', 'event'], code, ctx);
}

/**
 * Parse an expression that performs visual encoding.
 */
function encodeExpression(code, ctx) {
  return expression(['item', '_'], code, ctx);
}


/***/ }),

/***/ "./node_modules/vega-runtime/src/operator.js":
/*!***************************************************!*\
  !*** ./node_modules/vega-runtime/src/operator.js ***!
  \***************************************************/
/*! exports provided: default, parseOperatorParameters */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseOperatorParameters", function() { return parseOperatorParameters; });
/* harmony import */ var _expression__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./expression */ "./node_modules/vega-runtime/src/expression.js");
/* harmony import */ var _parameters__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./parameters */ "./node_modules/vega-runtime/src/parameters.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util */ "./node_modules/vega-runtime/src/util.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");





/**
 * Parse a dataflow operator.
 */
/* harmony default export */ __webpack_exports__["default"] = (function(spec, ctx) {
  if (Object(_util__WEBPACK_IMPORTED_MODULE_2__["isOperator"])(spec.type) || !spec.type) {
    ctx.operator(spec,
      spec.update ? Object(_expression__WEBPACK_IMPORTED_MODULE_0__["operatorExpression"])(spec.update, ctx) : null);
  } else {
    ctx.transform(spec, spec.type);
  }
});

/**
 * Parse and assign operator parameters.
 */
function parseOperatorParameters(spec, ctx) {
  if (spec.params) {
    var op = ctx.get(spec.id);
    if (!op) Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["error"])('Invalid operator id: ' + spec.id);
    ctx.dataflow.connect(op, op.parameters(
      Object(_parameters__WEBPACK_IMPORTED_MODULE_1__["default"])(spec.params, ctx),
      spec.react,
      spec.initonly
    ));
  }
}


/***/ }),

/***/ "./node_modules/vega-runtime/src/parameters.js":
/*!*****************************************************!*\
  !*** ./node_modules/vega-runtime/src/parameters.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return parseParameters; });
/* harmony import */ var _dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dataflow */ "./node_modules/vega-runtime/src/dataflow.js");
/* harmony import */ var _expression__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./expression */ "./node_modules/vega-runtime/src/expression.js");
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");





/**
 * Parse a set of operator parameters.
 */
function parseParameters(spec, ctx, params) {
  params = params || {};
  var key, value;

  for (key in spec) {
    value = spec[key];

    params[key] = Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["isArray"])(value)
      ? value.map(function(v) { return parseParameter(v, ctx, params); })
      : parseParameter(value, ctx, params);
  }
  return params;
}

/**
 * Parse a single parameter.
 */
function parseParameter(spec, ctx, params) {
  if (!spec || !Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["isObject"])(spec)) return spec;

  for (var i=0, n=PARSERS.length, p; i<n; ++i) {
    p = PARSERS[i];
    if (spec.hasOwnProperty(p.key)) {
      return p.parse(spec, ctx, params);
    }
  }
  return spec;
}

/** Reference parsers. */
var PARSERS = [
  {key: '$ref',      parse: getOperator},
  {key: '$key',      parse: getKey},
  {key: '$expr',     parse: getExpression},
  {key: '$field',    parse: getField},
  {key: '$encode',   parse: getEncode},
  {key: '$compare',  parse: getCompare},
  {key: '$context',  parse: getContext},
  {key: '$subflow',  parse: getSubflow},
  {key: '$tupleid',  parse: getTupleId}
];

/**
 * Resolve an operator reference.
 */
function getOperator(_, ctx) {
  return ctx.get(_.$ref) || Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["error"])('Operator not defined: ' + _.$ref);
}

/**
 * Resolve an expression reference.
 */
function getExpression(_, ctx, params) {
  if (_.$params) { // parse expression parameters
    parseParameters(_.$params, ctx, params);
  }
  var k = 'e:' + _.$expr + '_' + _.$name;
  return ctx.fn[k]
    || (ctx.fn[k] = Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["accessor"])(Object(_expression__WEBPACK_IMPORTED_MODULE_1__["parameterExpression"])(_.$expr, ctx), _.$fields, _.$name));
}

/**
 * Resolve a key accessor reference.
 */
function getKey(_, ctx) {
  var k = 'k:' + _.$key + '_' + (!!_.$flat);
  return ctx.fn[k] || (ctx.fn[k] = Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["key"])(_.$key, _.$flat));
}

/**
 * Resolve a field accessor reference.
 */
function getField(_, ctx) {
  if (!_.$field) return null;
  var k = 'f:' + _.$field + '_' + _.$name;
  return ctx.fn[k] || (ctx.fn[k] = Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["field"])(_.$field, _.$name));
}

/**
 * Resolve a comparator function reference.
 */
function getCompare(_, ctx) {
  var k = 'c:' + _.$compare + '_' + _.$order,
      c = Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["array"])(_.$compare).map(function(_) {
        return (_ && _.$tupleid) ? vega_dataflow__WEBPACK_IMPORTED_MODULE_2__["tupleid"] : _;
      });
  return ctx.fn[k] || (ctx.fn[k] = Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["compare"])(c, _.$order));
}

/**
 * Resolve an encode operator reference.
 */
function getEncode(_, ctx) {
  var spec = _.$encode,
      encode = {}, name, enc;

  for (name in spec) {
    enc = spec[name];
    encode[name] = Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["accessor"])(Object(_expression__WEBPACK_IMPORTED_MODULE_1__["encodeExpression"])(enc.$expr, ctx), enc.$fields);
    encode[name].output = enc.$output;
  }
  return encode;
}

/**
 * Resolve a context reference.
 */
function getContext(_, ctx) {
  return ctx;
}

/**
 * Resolve a recursive subflow specification.
 */
function getSubflow(_, ctx) {
  var spec = _.$subflow;
  return function(dataflow, key, parent) {
    var subctx = Object(_dataflow__WEBPACK_IMPORTED_MODULE_0__["default"])(spec, ctx.fork()),
        op = subctx.get(spec.operators[0].id),
        p = subctx.signals.parent;
    if (p) p.set(parent);
    return op;
  };
}

/**
 * Resolve a tuple id reference.
 */
function getTupleId() {
  return vega_dataflow__WEBPACK_IMPORTED_MODULE_2__["tupleid"];
}


/***/ }),

/***/ "./node_modules/vega-runtime/src/state.js":
/*!************************************************!*\
  !*** ./node_modules/vega-runtime/src/state.js ***!
  \************************************************/
/*! exports provided: getState, setState */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getState", function() { return getState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setState", function() { return setState; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");


var SKIP = {skip: true};

function getState(options) {
  var ctx = this,
      state = {};

  if (options.signals) {
    var signals = (state.signals = {});
    Object.keys(ctx.signals).forEach(function(key) {
      var op = ctx.signals[key];
      if (options.signals(key, op)) {
        signals[key] = op.value;
      }
    });
  }

  if (options.data) {
    var data = (state.data = {});
    Object.keys(ctx.data).forEach(function(key) {
      var dataset = ctx.data[key];
      if (options.data(key, dataset)) {
        data[key] = dataset.input.value;
      }
    });
  }

  if (ctx.subcontext && options.recurse !== false) {
    state.subcontext = ctx.subcontext.map(function(ctx) {
      return ctx.getState(options);
    });
  }

  return state;
}

function setState(state) {
  var ctx = this,
      df = ctx.dataflow,
      data = state.data,
      signals = state.signals;

  Object.keys(signals || {}).forEach(function(key) {
    df.update(ctx.signals[key], signals[key], SKIP);
  });

  Object.keys(data || {}).forEach(function(key) {
    df.pulse(
      ctx.data[key].input,
      df.changeset().remove(vega_util__WEBPACK_IMPORTED_MODULE_0__["truthy"]).insert(data[key])
    );
  });

  (state.subcontext  || []).forEach(function(substate, i) {
    var subctx = ctx.subcontext[i];
    if (subctx) subctx.setState(substate);
  });
}


/***/ }),

/***/ "./node_modules/vega-runtime/src/stream.js":
/*!*************************************************!*\
  !*** ./node_modules/vega-runtime/src/stream.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _expression__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./expression */ "./node_modules/vega-runtime/src/expression.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");



/**
 * Parse an event stream specification.
 */
/* harmony default export */ __webpack_exports__["default"] = (function(spec, ctx) {
  var filter = spec.filter != null ? Object(_expression__WEBPACK_IMPORTED_MODULE_0__["eventExpression"])(spec.filter, ctx) : undefined,
      stream = spec.stream != null ? ctx.get(spec.stream) : undefined,
      args;

  if (spec.source) {
    stream = ctx.events(spec.source, spec.type, filter);
  }
  else if (spec.merge) {
    args = spec.merge.map(ctx.get.bind(ctx));
    stream = args[0].merge.apply(args[0], args.slice(1));
  }

  if (spec.between) {
    args = spec.between.map(ctx.get.bind(ctx));
    stream = stream.between(args[0], args[1]);
  }

  if (spec.filter) {
    stream = stream.filter(filter);
  }

  if (spec.throttle != null) {
    stream = stream.throttle(+spec.throttle);
  }

  if (spec.debounce != null) {
    stream = stream.debounce(+spec.debounce);
  }

  if (stream == null) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["error"])('Invalid stream definition: ' + JSON.stringify(spec));
  }

  if (spec.consume) stream.consume(true);

  ctx.stream(spec, stream);
});


/***/ }),

/***/ "./node_modules/vega-runtime/src/update.js":
/*!*************************************************!*\
  !*** ./node_modules/vega-runtime/src/update.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _expression__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./expression */ "./node_modules/vega-runtime/src/expression.js");
/* harmony import */ var _parameters__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./parameters */ "./node_modules/vega-runtime/src/parameters.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");




/**
 * Parse an event-driven operator update.
 */
/* harmony default export */ __webpack_exports__["default"] = (function(spec, ctx) {
  var srcid = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["isObject"])(srcid = spec.source) ? srcid.$ref : srcid,
      source = ctx.get(srcid),
      target = null,
      update = spec.update,
      params = undefined;

  if (!source) Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["error"])('Source not defined: ' + spec.source);

  if (spec.target && spec.target.$expr) {
    target = Object(_expression__WEBPACK_IMPORTED_MODULE_0__["eventExpression"])(spec.target.$expr, ctx);
  } else {
    target = ctx.get(spec.target);
  }

  if (update && update.$expr) {
    if (update.$params) {
      params = Object(_parameters__WEBPACK_IMPORTED_MODULE_1__["default"])(update.$params, ctx);
    }
    update = Object(_expression__WEBPACK_IMPORTED_MODULE_0__["handlerExpression"])(update.$expr, ctx);
  }

  ctx.update(spec, source, target, update, params);
});


/***/ }),

/***/ "./node_modules/vega-runtime/src/util.js":
/*!***********************************************!*\
  !*** ./node_modules/vega-runtime/src/util.js ***!
  \***********************************************/
/*! exports provided: canonicalType, isOperator, isCollect */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "canonicalType", function() { return canonicalType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isOperator", function() { return isOperator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isCollect", function() { return isCollect; });
function canonicalType(type) {
  return (type + '').toLowerCase();
}
function isOperator(type) {
   return canonicalType(type) === 'operator';
}

function isCollect(type) {
  return canonicalType(type) === 'collect';
}


/***/ }),

/***/ "./node_modules/vega-scale/index.js":
/*!******************************************!*\
  !*** ./node_modules/vega-scale/index.js ***!
  \******************************************/
/*! exports provided: bandSpace, timeInterval, Identity, Linear, Log, Pow, Sqrt, Symlog, Time, UTC, Sequential, Diverging, Quantile, Quantize, Threshold, BinOrdinal, Ordinal, Band, Point, isValidScaleType, isTemporal, isQuantile, isSequential, isDiverging, isInterpolating, isContinuous, isLogarithmic, isDiscrete, isDiscretizing, interpolate, interpolateColors, interpolateRange, scaleCopy, scaleFraction, quantizeInterpolator, scale, scheme, scaleImplicit, tickFormat */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _src_scales_bandSpace__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/scales/bandSpace */ "./node_modules/vega-scale/src/scales/bandSpace.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bandSpace", function() { return _src_scales_bandSpace__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _src_scales_timeInterval__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/scales/timeInterval */ "./node_modules/vega-scale/src/scales/timeInterval.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeInterval", function() { return _src_scales_timeInterval__WEBPACK_IMPORTED_MODULE_1__["timeInterval"]; });

/* harmony import */ var _src_scales_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/scales/types */ "./node_modules/vega-scale/src/scales/types.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Identity", function() { return _src_scales_types__WEBPACK_IMPORTED_MODULE_2__["Identity"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Linear", function() { return _src_scales_types__WEBPACK_IMPORTED_MODULE_2__["Linear"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Log", function() { return _src_scales_types__WEBPACK_IMPORTED_MODULE_2__["Log"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Pow", function() { return _src_scales_types__WEBPACK_IMPORTED_MODULE_2__["Pow"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Sqrt", function() { return _src_scales_types__WEBPACK_IMPORTED_MODULE_2__["Sqrt"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Symlog", function() { return _src_scales_types__WEBPACK_IMPORTED_MODULE_2__["Symlog"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Time", function() { return _src_scales_types__WEBPACK_IMPORTED_MODULE_2__["Time"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UTC", function() { return _src_scales_types__WEBPACK_IMPORTED_MODULE_2__["UTC"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Sequential", function() { return _src_scales_types__WEBPACK_IMPORTED_MODULE_2__["Sequential"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Diverging", function() { return _src_scales_types__WEBPACK_IMPORTED_MODULE_2__["Diverging"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Quantile", function() { return _src_scales_types__WEBPACK_IMPORTED_MODULE_2__["Quantile"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Quantize", function() { return _src_scales_types__WEBPACK_IMPORTED_MODULE_2__["Quantize"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Threshold", function() { return _src_scales_types__WEBPACK_IMPORTED_MODULE_2__["Threshold"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BinOrdinal", function() { return _src_scales_types__WEBPACK_IMPORTED_MODULE_2__["BinOrdinal"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Ordinal", function() { return _src_scales_types__WEBPACK_IMPORTED_MODULE_2__["Ordinal"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Band", function() { return _src_scales_types__WEBPACK_IMPORTED_MODULE_2__["Band"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Point", function() { return _src_scales_types__WEBPACK_IMPORTED_MODULE_2__["Point"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isValidScaleType", function() { return _src_scales_types__WEBPACK_IMPORTED_MODULE_2__["isValidScaleType"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isTemporal", function() { return _src_scales_types__WEBPACK_IMPORTED_MODULE_2__["isTemporal"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isQuantile", function() { return _src_scales_types__WEBPACK_IMPORTED_MODULE_2__["isQuantile"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isSequential", function() { return _src_scales_types__WEBPACK_IMPORTED_MODULE_2__["isSequential"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isDiverging", function() { return _src_scales_types__WEBPACK_IMPORTED_MODULE_2__["isDiverging"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isInterpolating", function() { return _src_scales_types__WEBPACK_IMPORTED_MODULE_2__["isInterpolating"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isContinuous", function() { return _src_scales_types__WEBPACK_IMPORTED_MODULE_2__["isContinuous"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isLogarithmic", function() { return _src_scales_types__WEBPACK_IMPORTED_MODULE_2__["isLogarithmic"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isDiscrete", function() { return _src_scales_types__WEBPACK_IMPORTED_MODULE_2__["isDiscrete"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isDiscretizing", function() { return _src_scales_types__WEBPACK_IMPORTED_MODULE_2__["isDiscretizing"]; });

/* harmony import */ var _src_interpolate__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/interpolate */ "./node_modules/vega-scale/src/interpolate.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolate", function() { return _src_interpolate__WEBPACK_IMPORTED_MODULE_3__["interpolate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateColors", function() { return _src_interpolate__WEBPACK_IMPORTED_MODULE_3__["interpolateColors"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateRange", function() { return _src_interpolate__WEBPACK_IMPORTED_MODULE_3__["interpolateRange"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleCopy", function() { return _src_interpolate__WEBPACK_IMPORTED_MODULE_3__["scaleCopy"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleFraction", function() { return _src_interpolate__WEBPACK_IMPORTED_MODULE_3__["scaleFraction"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "quantizeInterpolator", function() { return _src_interpolate__WEBPACK_IMPORTED_MODULE_3__["quantizeInterpolator"]; });

/* harmony import */ var _src_scales__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./src/scales */ "./node_modules/vega-scale/src/scales.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scale", function() { return _src_scales__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _src_schemes__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./src/schemes */ "./node_modules/vega-scale/src/schemes.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return _src_schemes__WEBPACK_IMPORTED_MODULE_5__["scheme"]; });

/* harmony import */ var d3_scale__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! d3-scale */ "./node_modules/d3-scale/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scaleImplicit", function() { return d3_scale__WEBPACK_IMPORTED_MODULE_6__["scaleImplicit"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tickFormat", function() { return d3_scale__WEBPACK_IMPORTED_MODULE_6__["tickFormat"]; });















/***/ }),

/***/ "./node_modules/vega-scale/src/interpolate.js":
/*!****************************************************!*\
  !*** ./node_modules/vega-scale/src/interpolate.js ***!
  \****************************************************/
/*! exports provided: interpolateRange, interpolateColors, quantizeInterpolator, scaleCopy, scaleFraction, interpolate */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "interpolateRange", function() { return interpolateRange; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "interpolateColors", function() { return interpolateColors; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "quantizeInterpolator", function() { return quantizeInterpolator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scaleCopy", function() { return scaleCopy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scaleFraction", function() { return scaleFraction; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "interpolate", function() { return interpolate; });
/* harmony import */ var _scales__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scales */ "./node_modules/vega-scale/src/scales.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-interpolate */ "./node_modules/d3-interpolate/src/index.js");




const scaleProps = ['clamp', 'base', 'constant', 'exponent'];

function interpolateRange(interpolator, range) {
  var start = range[0],
      span = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["peek"])(range) - start;
  return function(i) { return interpolator(start + i * span); };
}

function interpolateColors(colors, type, gamma) {
  return d3_interpolate__WEBPACK_IMPORTED_MODULE_2__["piecewise"](interpolate(type || 'rgb', gamma), colors);
}

function quantizeInterpolator(interpolator, count) {
  var samples = new Array(count),
      n = count + 1;
  for (var i = 0; i < count;) samples[i] = interpolator(++i / n);
  return samples;
}

function scaleCopy(scale) {
  const t = scale.type,
        s = scale.copy();
  s.type = t;
  return s;
}

function scaleFraction(scale, min, max) {
  var delta = max - min, i, t, s;

  if (!delta || !isFinite(delta)) {
    return Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["constant"])(0.5);
  } else {
    i = (t = scale.type).indexOf('-');
    t = i < 0 ? t : t.slice(i + 1);
    s = Object(_scales__WEBPACK_IMPORTED_MODULE_0__["default"])(t)().domain([min, max]).range([0, 1]);
    scaleProps.forEach(m => scale[m] ? s[m](scale[m]()) : 0);
    return s;
  }
}

function interpolate(type, gamma) {
  var interp = d3_interpolate__WEBPACK_IMPORTED_MODULE_2__[method(type)];
  return (gamma != null && interp && interp.gamma)
    ? interp.gamma(gamma)
    : interp;
}

function method(type) {
  return 'interpolate' + type.toLowerCase()
    .split('-')
    .map(function(s) { return s[0].toUpperCase() + s.slice(1); })
    .join('');
}


/***/ }),

/***/ "./node_modules/vega-scale/src/palettes.js":
/*!*************************************************!*\
  !*** ./node_modules/vega-scale/src/palettes.js ***!
  \*************************************************/
/*! exports provided: continuous, discrete */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "continuous", function() { return continuous; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "discrete", function() { return discrete; });
const continuous = {
  blues: 'cfe1f2bed8eca8cee58fc1de74b2d75ba3cf4592c63181bd206fb2125ca40a4a90',
  greens: 'd3eecdc0e6baabdda594d3917bc77d60ba6c46ab5e329a512089430e7735036429',
  greys: 'e2e2e2d4d4d4c4c4c4b1b1b19d9d9d8888887575756262624d4d4d3535351e1e1e',
  oranges: 'fdd8b3fdc998fdb87bfda55efc9244f87f2cf06b18e4580bd14904b93d029f3303',
  purples: 'e2e1efd4d4e8c4c5e0b4b3d6a3a0cc928ec3827cb97566ae684ea25c3696501f8c',
  reds: 'fdc9b4fcb49afc9e80fc8767fa7051f6573fec3f2fdc2a25c81b1db21218970b13',

  blueGreen: 'd5efedc1e8e0a7ddd18bd2be70c6a958ba9144ad77319c5d2089460e7736036429',
  bluePurple: 'ccddecbad0e4a8c2dd9ab0d4919cc98d85be8b6db28a55a6873c99822287730f71',
  greenBlue: 'd3eecec5e8c3b1e1bb9bd8bb82cec269c2ca51b2cd3c9fc7288abd1675b10b60a1',
  orangeRed: 'fddcaffdcf9bfdc18afdad77fb9562f67d53ee6545e24932d32d1ebf130da70403',
  purpleBlue: 'dbdaebc8cee4b1c3de97b7d87bacd15b9fc93a90c01e7fb70b70ab056199045281',
  purpleBlueGreen: 'dbd8eac8cee4b0c3de93b7d872acd1549fc83892bb1c88a3097f8702736b016353',
  purpleRed: 'dcc9e2d3b3d7ce9eccd186c0da6bb2e14da0e23189d91e6fc61159ab07498f023a',
  redPurple: 'fccfccfcbec0faa9b8f98faff571a5ec539ddb3695c41b8aa908808d0179700174',
  yellowGreen: 'e4f4acd1eca0b9e2949ed68880c97c62bb6e47aa5e3297502083440e723b036034',
  yellowOrangeBrown: 'feeaa1fedd84fecc63feb746fca031f68921eb7215db5e0bc54c05ab3d038f3204',
  yellowOrangeRed: 'fee087fed16ffebd59fea849fd903efc7335f9522bee3423de1b20ca0b22af0225',

  blueOrange: '134b852f78b35da2cb9dcae1d2e5eff2f0ebfce0bafbbf74e8932fc5690d994a07',
  brownBlueGreen: '704108a0651ac79548e3c78af3e6c6eef1eac9e9e48ed1c74da79e187a72025147',
  purpleGreen: '5b1667834792a67fb6c9aed3e6d6e8eff0efd9efd5aedda971bb75368e490e5e29',
  purpleOrange: '4114696647968f83b7b9b4d6dadbebf3eeeafce0bafbbf74e8932fc5690d994a07',
  redBlue: '8c0d25bf363adf745ef4ae91fbdbc9f2efeed2e5ef9dcae15da2cb2f78b3134b85',
  redGrey: '8c0d25bf363adf745ef4ae91fcdccbfaf4f1e2e2e2c0c0c0969696646464343434',
  yellowGreenBlue: 'eff9bddbf1b4bde5b594d5b969c5be45b4c22c9ec02182b82163aa23479c1c3185',
  redYellowBlue: 'a50026d4322cf16e43fcac64fedd90faf8c1dcf1ecabd6e875abd04a74b4313695',
  redYellowGreen: 'a50026d4322cf16e43fcac63fedd8df9f7aed7ee8ea4d86e64bc6122964f006837',
  pinkYellowGreen: '8e0152c0267edd72adf0b3d6faddedf5f3efe1f2cab6de8780bb474f9125276419',
  spectral: '9e0142d13c4bf0704afcac63fedd8dfbf8b0e0f3a1a9dda269bda94288b55e4fa2',

  viridis: '440154470e61481a6c482575472f7d443a834144873d4e8a39568c35608d31688e2d708e2a788e27818e23888e21918d1f988b1fa08822a8842ab07f35b77943bf7154c56866cc5d7ad1518fd744a5db36bcdf27d2e21be9e51afde725',
  magma: '0000040404130b0924150e3720114b2c11603b0f704a107957157e651a80721f817f24828c29819a2e80a8327db6377ac43c75d1426fde4968e95462f1605df76f5cfa7f5efc8f65fe9f6dfeaf78febf84fece91fddea0fcedaffcfdbf',
  inferno: '0000040403130c0826170c3b240c4f330a5f420a68500d6c5d126e6b176e781c6d86216b932667a12b62ae305cbb3755c73e4cd24644dd513ae65c30ed6925f3771af8850ffb9506fca50afcb519fac62df6d645f2e661f3f484fcffa4',
  plasma: '0d088723069033059742039d5002a25d01a66a00a87801a88405a7900da49c179ea72198b12a90ba3488c33d80cb4779d35171da5a69e16462e76e5bed7953f2834cf68f44fa9a3dfca636fdb32ffec029fcce25f9dc24f5ea27f0f921',

  rainbow: '6e40aa883eb1a43db3bf3cafd83fa4ee4395fe4b83ff576eff6659ff7847ff8c38f3a130e2b72fcfcc36bee044aff05b8ff4576ff65b52f6673af27828ea8d1ddfa319d0b81cbecb23abd82f96e03d82e14c6edb5a5dd0664dbf6e40aa',
  sinebow: 'ff4040fc582af47218e78d0bd5a703bfbf00a7d5038de70b72f41858fc2a40ff402afc5818f4720be78d03d5a700bfbf03a7d50b8de71872f42a58fc4040ff582afc7218f48d0be7a703d5bf00bfd503a7e70b8df41872fc2a58ff4040',

  browns: 'eedbbdecca96e9b97ae4a865dc9856d18954c7784cc0673fb85536ad44339f3632',
  tealBlues: 'bce4d89dd3d181c3cb65b3c245a2b9368fae347da0306a932c5985',
  teals: 'bbdfdfa2d4d58ac9c975bcbb61b0af4da5a43799982b8b8c1e7f7f127273006667',
  warmGreys: 'dcd4d0cec5c1c0b8b4b3aaa7a59c9998908c8b827f7e7673726866665c5a59504e',

  goldGreen: 'f4d166d5ca60b6c35c98bb597cb25760a6564b9c533f8f4f33834a257740146c36',
  goldOrange: 'f4d166f8be5cf8aa4cf5983bf3852aef701be2621fd65322c54923b142239e3a26',
  goldRed: 'f4d166f6be59f9aa51fc964ef6834bee734ae56249db5247cf4244c43141b71d3e',

  lightGreyRed: 'efe9e6e1dad7d5cbc8c8bdb9bbaea9cd967ddc7b43e15f19df4011dc000b',
  lightGreyTeal: 'e4eaead6dcddc8ced2b7c2c7a6b4bc64b0bf22a6c32295c11f85be1876bc',
  lightMulti: 'e0f1f2c4e9d0b0de9fd0e181f6e072f6c053f3993ef77440ef4a3c',
  lightOrange: 'f2e7daf7d5baf9c499fab184fa9c73f68967ef7860e8645bde515bd43d5b',
  lightTealBlue: 'e3e9e0c0dccf9aceca7abfc859afc0389fb9328dad2f7ca0276b95255988',

  darkBlue: '3232322d46681a5c930074af008cbf05a7ce25c0dd38daed50f3faffffff',
  darkGold: '3c3c3c584b37725e348c7631ae8b2bcfa424ecc31ef9de30fff184ffffff',
  darkGreen: '3a3a3a215748006f4d048942489e4276b340a6c63dd2d836ffeb2cffffaa',
  darkMulti: '3737371f5287197d8c29a86995ce3fffe800ffffff',
  darkRed: '3434347036339e3c38cc4037e75d1eec8620eeab29f0ce32ffeb2c'
};

const discrete = {
  category10: '1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf',
  category20: '1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5',
  category20b: '393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6',
  category20c: '3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9',
  tableau10: '4c78a8f58518e4575672b7b254a24beeca3bb279a2ff9da69d755dbab0ac',
  tableau20: '4c78a89ecae9f58518ffbf7954a24b88d27ab79a20f2cf5b43989483bcb6e45756ff9d9879706ebab0acd67195fcbfd2b279a2d6a5c99e765fd8b5a5',
  accent: '7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666',
  dark2: '1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666',
  paired: 'a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928',
  pastel1: 'fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2',
  pastel2: 'b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc',
  set1: 'e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999',
  set2: '66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3',
  set3: '8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f'
};


/***/ }),

/***/ "./node_modules/vega-scale/src/scales.js":
/*!***********************************************!*\
  !*** ./node_modules/vega-scale/src/scales.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return scale; });
/* harmony import */ var _scales_invertRange__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scales/invertRange */ "./node_modules/vega-scale/src/scales/invertRange.js");
/* harmony import */ var _scales_invertRangeExtent__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scales/invertRangeExtent */ "./node_modules/vega-scale/src/scales/invertRangeExtent.js");
/* harmony import */ var _scales_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scales/types */ "./node_modules/vega-scale/src/scales/types.js");
/* harmony import */ var _scales_scaleBand__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./scales/scaleBand */ "./node_modules/vega-scale/src/scales/scaleBand.js");
/* harmony import */ var _scales_scaleBinOrdinal__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./scales/scaleBinOrdinal */ "./node_modules/vega-scale/src/scales/scaleBinOrdinal.js");
/* harmony import */ var d3_scale__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! d3-scale */ "./node_modules/d3-scale/src/index.js");











/**
 * Augment scales with their type and needed inverse methods.
 */
function create(type, constructor) {
  return function scale() {
    var s = constructor();

    if (!s.invertRange) {
      s.invertRange = s.invert ? Object(_scales_invertRange__WEBPACK_IMPORTED_MODULE_0__["default"])(s)
        : s.invertExtent ? Object(_scales_invertRangeExtent__WEBPACK_IMPORTED_MODULE_1__["default"])(s)
        : undefined;
    }

    s.type = type;
    return s;
  };
}

function scale(type, scale) {
  if (arguments.length > 1) {
    scales[type] = create(type, scale);
    return this;
  } else {
    return scales.hasOwnProperty(type) ? scales[type] : undefined;
  }
}

var scales = {
  // identity scale
  [_scales_types__WEBPACK_IMPORTED_MODULE_2__["Identity"]]:      d3_scale__WEBPACK_IMPORTED_MODULE_5__["scaleIdentity"],

  // continuous scales
  [_scales_types__WEBPACK_IMPORTED_MODULE_2__["Linear"]]:        d3_scale__WEBPACK_IMPORTED_MODULE_5__["scaleLinear"],
  [_scales_types__WEBPACK_IMPORTED_MODULE_2__["Log"]]:           d3_scale__WEBPACK_IMPORTED_MODULE_5__["scaleLog"],
  [_scales_types__WEBPACK_IMPORTED_MODULE_2__["Pow"]]:           d3_scale__WEBPACK_IMPORTED_MODULE_5__["scalePow"],
  [_scales_types__WEBPACK_IMPORTED_MODULE_2__["Sqrt"]]:          d3_scale__WEBPACK_IMPORTED_MODULE_5__["scaleSqrt"],
  [_scales_types__WEBPACK_IMPORTED_MODULE_2__["Symlog"]]:        d3_scale__WEBPACK_IMPORTED_MODULE_5__["scaleSymlog"],
  [_scales_types__WEBPACK_IMPORTED_MODULE_2__["Time"]]:          d3_scale__WEBPACK_IMPORTED_MODULE_5__["scaleTime"],
  [_scales_types__WEBPACK_IMPORTED_MODULE_2__["UTC"]]:           d3_scale__WEBPACK_IMPORTED_MODULE_5__["scaleUtc"],

  // sequential scales
  [_scales_types__WEBPACK_IMPORTED_MODULE_2__["Sequential"]]:             d3_scale__WEBPACK_IMPORTED_MODULE_5__["scaleSequential"], // backwards compat
  [_scales_types__WEBPACK_IMPORTED_MODULE_2__["Sequential"]+'-'+_scales_types__WEBPACK_IMPORTED_MODULE_2__["Linear"]]:  d3_scale__WEBPACK_IMPORTED_MODULE_5__["scaleSequential"],
  [_scales_types__WEBPACK_IMPORTED_MODULE_2__["Sequential"]+'-'+_scales_types__WEBPACK_IMPORTED_MODULE_2__["Log"]]:     d3_scale__WEBPACK_IMPORTED_MODULE_5__["scaleSequentialLog"],
  [_scales_types__WEBPACK_IMPORTED_MODULE_2__["Sequential"]+'-'+_scales_types__WEBPACK_IMPORTED_MODULE_2__["Pow"]]:     d3_scale__WEBPACK_IMPORTED_MODULE_5__["scaleSequentialPow"],
  [_scales_types__WEBPACK_IMPORTED_MODULE_2__["Sequential"]+'-'+_scales_types__WEBPACK_IMPORTED_MODULE_2__["Sqrt"]]:    d3_scale__WEBPACK_IMPORTED_MODULE_5__["scaleSequentialSqrt"],
  [_scales_types__WEBPACK_IMPORTED_MODULE_2__["Sequential"]+'-'+_scales_types__WEBPACK_IMPORTED_MODULE_2__["Symlog"]]:  d3_scale__WEBPACK_IMPORTED_MODULE_5__["scaleSequentialSymlog"],

  // diverging scales
  [_scales_types__WEBPACK_IMPORTED_MODULE_2__["Diverging"]+'-'+_scales_types__WEBPACK_IMPORTED_MODULE_2__["Linear"]]:   d3_scale__WEBPACK_IMPORTED_MODULE_5__["scaleDiverging"],
  [_scales_types__WEBPACK_IMPORTED_MODULE_2__["Diverging"]+'-'+_scales_types__WEBPACK_IMPORTED_MODULE_2__["Log"]]:      d3_scale__WEBPACK_IMPORTED_MODULE_5__["scaleDivergingLog"],
  [_scales_types__WEBPACK_IMPORTED_MODULE_2__["Diverging"]+'-'+_scales_types__WEBPACK_IMPORTED_MODULE_2__["Pow"]]:      d3_scale__WEBPACK_IMPORTED_MODULE_5__["scaleDivergingPow"],
  [_scales_types__WEBPACK_IMPORTED_MODULE_2__["Diverging"]+'-'+_scales_types__WEBPACK_IMPORTED_MODULE_2__["Sqrt"]]:     d3_scale__WEBPACK_IMPORTED_MODULE_5__["scaleDivergingSqrt"],
  [_scales_types__WEBPACK_IMPORTED_MODULE_2__["Diverging"]+'-'+_scales_types__WEBPACK_IMPORTED_MODULE_2__["Symlog"]]:   d3_scale__WEBPACK_IMPORTED_MODULE_5__["scaleDivergingSymlog"],

  // discretizing scales
  [_scales_types__WEBPACK_IMPORTED_MODULE_2__["Quantile"]]:      d3_scale__WEBPACK_IMPORTED_MODULE_5__["scaleQuantile"],
  [_scales_types__WEBPACK_IMPORTED_MODULE_2__["Quantize"]]:      d3_scale__WEBPACK_IMPORTED_MODULE_5__["scaleQuantize"],
  [_scales_types__WEBPACK_IMPORTED_MODULE_2__["Threshold"]]:     d3_scale__WEBPACK_IMPORTED_MODULE_5__["scaleThreshold"],

  // discrete scales
  [_scales_types__WEBPACK_IMPORTED_MODULE_2__["BinOrdinal"]]:    _scales_scaleBinOrdinal__WEBPACK_IMPORTED_MODULE_4__["scaleBinOrdinal"],
  [_scales_types__WEBPACK_IMPORTED_MODULE_2__["Ordinal"]]:       d3_scale__WEBPACK_IMPORTED_MODULE_5__["scaleOrdinal"],
  [_scales_types__WEBPACK_IMPORTED_MODULE_2__["Band"]]:          _scales_scaleBand__WEBPACK_IMPORTED_MODULE_3__["band"],
  [_scales_types__WEBPACK_IMPORTED_MODULE_2__["Point"]]:         _scales_scaleBand__WEBPACK_IMPORTED_MODULE_3__["point"]
};

for (var key in scales) {
  scale(key, scales[key]);
}


/***/ }),

/***/ "./node_modules/vega-scale/src/scales/bandSpace.js":
/*!*********************************************************!*\
  !*** ./node_modules/vega-scale/src/scales/bandSpace.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(count, paddingInner, paddingOuter) {
  var space = count - paddingInner + paddingOuter * 2;
  return count ? (space > 0 ? space : 1) : 0;
});


/***/ }),

/***/ "./node_modules/vega-scale/src/scales/invertRange.js":
/*!***********************************************************!*\
  !*** ./node_modules/vega-scale/src/scales/invertRange.js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(scale) {
  return function(_) {
    var lo = _[0],
        hi = _[1],
        t;

    if (hi < lo) {
      t = lo;
      lo = hi;
      hi = t;
    }

    return [
      scale.invert(lo),
      scale.invert(hi)
    ];
  }
});


/***/ }),

/***/ "./node_modules/vega-scale/src/scales/invertRangeExtent.js":
/*!*****************************************************************!*\
  !*** ./node_modules/vega-scale/src/scales/invertRangeExtent.js ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(scale) {
  return function(_) {
    var range = scale.range(),
        lo = _[0],
        hi = _[1],
        min = -1, max, t, i, n;

    if (hi < lo) {
      t = lo;
      lo = hi;
      hi = t;
    }

    for (i=0, n=range.length; i<n; ++i) {
      if (range[i] >= lo && range[i] <= hi) {
        if (min < 0) min = i;
        max = i;
      }
    }

    if (min < 0) return undefined;

    lo = scale.invertExtent(range[min]);
    hi = scale.invertExtent(range[max]);

    return [
      lo[0] === undefined ? lo[1] : lo[0],
      hi[1] === undefined ? hi[0] : hi[1]
    ];
  }
});


/***/ }),

/***/ "./node_modules/vega-scale/src/scales/numbers.js":
/*!*******************************************************!*\
  !*** ./node_modules/vega-scale/src/scales/numbers.js ***!
  \*******************************************************/
/*! exports provided: numbers */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "numbers", function() { return numbers; });
var map = Array.prototype.map;

function numbers(_) {
  return map.call(_, function(x) { return +x; });
}


/***/ }),

/***/ "./node_modules/vega-scale/src/scales/scaleBand.js":
/*!*********************************************************!*\
  !*** ./node_modules/vega-scale/src/scales/scaleBand.js ***!
  \*********************************************************/
/*! exports provided: band, point */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "band", function() { return band; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "point", function() { return point; });
/* harmony import */ var _bandSpace__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bandSpace */ "./node_modules/vega-scale/src/scales/bandSpace.js");
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");
/* harmony import */ var d3_scale__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-scale */ "./node_modules/d3-scale/src/index.js");




function band() {
  var scale = Object(d3_scale__WEBPACK_IMPORTED_MODULE_2__["scaleOrdinal"])().unknown(undefined),
      domain = scale.domain,
      ordinalRange = scale.range,
      range = [0, 1],
      step,
      bandwidth,
      round = false,
      paddingInner = 0,
      paddingOuter = 0,
      align = 0.5;

  delete scale.unknown;

  function rescale() {
    var n = domain().length,
        reverse = range[1] < range[0],
        start = range[reverse - 0],
        stop = range[1 - reverse],
        space = Object(_bandSpace__WEBPACK_IMPORTED_MODULE_0__["default"])(n, paddingInner, paddingOuter);

    step = (stop - start) / (space || 1);
    if (round) {
      step = Math.floor(step);
    }
    start += (stop - start - step * (n - paddingInner)) * align;
    bandwidth = step * (1 - paddingInner);
    if (round) {
      start = Math.round(start);
      bandwidth = Math.round(bandwidth);
    }
    var values = Object(d3_array__WEBPACK_IMPORTED_MODULE_1__["range"])(n).map(function(i) { return start + step * i; });
    return ordinalRange(reverse ? values.reverse() : values);
  }

  scale.domain = function(_) {
    if (arguments.length) {
      domain(_);
      return rescale();
    } else {
      return domain();
    }
  };

  scale.range = function(_) {
    if (arguments.length) {
      range = [+_[0], +_[1]];
      return rescale();
    } else {
      return range.slice();
    }
  };

  scale.rangeRound = function(_) {
    range = [+_[0], +_[1]];
    round = true;
    return rescale();
  };

  scale.bandwidth = function() {
    return bandwidth;
  };

  scale.step = function() {
    return step;
  };

  scale.round = function(_) {
    if (arguments.length) {
      round = !!_;
      return rescale();
    } else {
      return round;
    }
  };

  scale.padding = function(_) {
    if (arguments.length) {
      paddingOuter = Math.max(0, Math.min(1, _));
      paddingInner = paddingOuter;
      return rescale();
    } else {
      return paddingInner;
    }
  };

  scale.paddingInner = function(_) {
    if (arguments.length) {
      paddingInner = Math.max(0, Math.min(1, _));
      return rescale();
    } else {
      return paddingInner;
    }
  };

  scale.paddingOuter = function(_) {
    if (arguments.length) {
      paddingOuter = Math.max(0, Math.min(1, _));
      return rescale();
    } else {
      return paddingOuter;
    }
  };

  scale.align = function(_) {
    if (arguments.length) {
      align = Math.max(0, Math.min(1, _));
      return rescale();
    } else {
      return align;
    }
  };

  scale.invertRange = function(_) {
    // bail if range has null or undefined values
    if (_[0] == null || _[1] == null) return;

    var lo = +_[0],
        hi = +_[1],
        reverse = range[1] < range[0],
        values = reverse ? ordinalRange().reverse() : ordinalRange(),
        n = values.length - 1, a, b, t;

    // bail if either range endpoint is invalid
    if (lo !== lo || hi !== hi) return;

    // order range inputs, bail if outside of scale range
    if (hi < lo) {
      t = lo;
      lo = hi;
      hi = t;
    }
    if (hi < values[0] || lo > range[1-reverse]) return;

    // binary search to index into scale range
    a = Math.max(0, Object(d3_array__WEBPACK_IMPORTED_MODULE_1__["bisectRight"])(values, lo) - 1);
    b = lo===hi ? a : Object(d3_array__WEBPACK_IMPORTED_MODULE_1__["bisectRight"])(values, hi) - 1;

    // increment index a if lo is within padding gap
    if (lo - values[a] > bandwidth + 1e-10) ++a;

    if (reverse) {
      // map + swap
      t = a;
      a = n - b;
      b = n - t;
    }
    return (a > b) ? undefined : domain().slice(a, b+1);
  };

  scale.invert = function(_) {
    var value = scale.invertRange([_, _]);
    return value ? value[0] : value;
  };

  scale.copy = function() {
    return band()
        .domain(domain())
        .range(range)
        .round(round)
        .paddingInner(paddingInner)
        .paddingOuter(paddingOuter)
        .align(align);
  };

  return rescale();
}

function pointish(scale) {
  var copy = scale.copy;

  scale.padding = scale.paddingOuter;
  delete scale.paddingInner;

  scale.copy = function() {
    return pointish(copy());
  };

  return scale;
}

function point() {
  return pointish(band().paddingInner(1));
}


/***/ }),

/***/ "./node_modules/vega-scale/src/scales/scaleBinOrdinal.js":
/*!***************************************************************!*\
  !*** ./node_modules/vega-scale/src/scales/scaleBinOrdinal.js ***!
  \***************************************************************/
/*! exports provided: scaleBinOrdinal */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scaleBinOrdinal", function() { return scaleBinOrdinal; });
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");
/* harmony import */ var d3_scale__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-scale */ "./node_modules/d3-scale/src/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var _numbers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./numbers */ "./node_modules/vega-scale/src/scales/numbers.js");
/* harmony import */ var _slice__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./slice */ "./node_modules/vega-scale/src/scales/slice.js");






function scaleBinOrdinal() {
  var domain = [],
      range = [];

  function scale(x) {
    return x == null || x !== x
      ? undefined
      : range[(Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["bisect"])(domain, x) - 1) % range.length];
  }

  scale.domain = function(_) {
    if (arguments.length) {
      domain = Object(_numbers__WEBPACK_IMPORTED_MODULE_3__["numbers"])(_);
      return scale;
    } else {
      return domain.slice();
    }
  };

  scale.range = function(_) {
    if (arguments.length) {
      range = _slice__WEBPACK_IMPORTED_MODULE_4__["slice"].call(_);
      return scale;
    } else {
      return range.slice();
    }
  };

  scale.tickFormat = function(count, specifier) {
    return Object(d3_scale__WEBPACK_IMPORTED_MODULE_1__["tickFormat"])(domain[0], Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["peek"])(domain), count == null ? 10 : count, specifier);
  };

  scale.copy = function() {
    return scaleBinOrdinal().domain(scale.domain()).range(scale.range());
  };

  return scale;
}

/***/ }),

/***/ "./node_modules/vega-scale/src/scales/slice.js":
/*!*****************************************************!*\
  !*** ./node_modules/vega-scale/src/scales/slice.js ***!
  \*****************************************************/
/*! exports provided: slice */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "slice", function() { return slice; });
var slice = Array.prototype.slice;


/***/ }),

/***/ "./node_modules/vega-scale/src/scales/timeInterval.js":
/*!************************************************************!*\
  !*** ./node_modules/vega-scale/src/scales/timeInterval.js ***!
  \************************************************************/
/*! exports provided: timeInterval */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "timeInterval", function() { return timeInterval; });
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./types */ "./node_modules/vega-scale/src/scales/types.js");
/* harmony import */ var d3_time__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-time */ "./node_modules/d3-time/src/index.js");




var time = {
  millisecond: d3_time__WEBPACK_IMPORTED_MODULE_1__["timeMillisecond"],
  second:      d3_time__WEBPACK_IMPORTED_MODULE_1__["timeSecond"],
  minute:      d3_time__WEBPACK_IMPORTED_MODULE_1__["timeMinute"],
  hour:        d3_time__WEBPACK_IMPORTED_MODULE_1__["timeHour"],
  day:         d3_time__WEBPACK_IMPORTED_MODULE_1__["timeDay"],
  week:        d3_time__WEBPACK_IMPORTED_MODULE_1__["timeWeek"],
  month:       d3_time__WEBPACK_IMPORTED_MODULE_1__["timeMonth"],
  year:        d3_time__WEBPACK_IMPORTED_MODULE_1__["timeYear"]
};

var utc = {
  millisecond: d3_time__WEBPACK_IMPORTED_MODULE_1__["utcMillisecond"],
  second:      d3_time__WEBPACK_IMPORTED_MODULE_1__["utcSecond"],
  minute:      d3_time__WEBPACK_IMPORTED_MODULE_1__["utcMinute"],
  hour:        d3_time__WEBPACK_IMPORTED_MODULE_1__["utcHour"],
  day:         d3_time__WEBPACK_IMPORTED_MODULE_1__["utcDay"],
  week:        d3_time__WEBPACK_IMPORTED_MODULE_1__["utcWeek"],
  month:       d3_time__WEBPACK_IMPORTED_MODULE_1__["utcMonth"],
  year:        d3_time__WEBPACK_IMPORTED_MODULE_1__["utcYear"]
}

function timeInterval(unit, type) {
  const t = (type === _types__WEBPACK_IMPORTED_MODULE_0__["UTC"] ? utc : time);
  return t.hasOwnProperty(unit) && t[unit];
}


/***/ }),

/***/ "./node_modules/vega-scale/src/scales/types.js":
/*!*****************************************************!*\
  !*** ./node_modules/vega-scale/src/scales/types.js ***!
  \*****************************************************/
/*! exports provided: Identity, Linear, Log, Pow, Sqrt, Symlog, Time, UTC, Sequential, Diverging, Quantile, Quantize, Threshold, Ordinal, Point, Band, BinOrdinal, isValidScaleType, isTemporal, isBinned, isQuantile, isSequential, isDiverging, isInterpolating, isLogarithmic, isContinuous, isDiscrete, isDiscretizing */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Identity", function() { return Identity; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Linear", function() { return Linear; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Log", function() { return Log; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Pow", function() { return Pow; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Sqrt", function() { return Sqrt; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Symlog", function() { return Symlog; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Time", function() { return Time; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UTC", function() { return UTC; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Sequential", function() { return Sequential; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Diverging", function() { return Diverging; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Quantile", function() { return Quantile; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Quantize", function() { return Quantize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Threshold", function() { return Threshold; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Ordinal", function() { return Ordinal; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Point", function() { return Point; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Band", function() { return Band; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BinOrdinal", function() { return BinOrdinal; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isValidScaleType", function() { return isValidScaleType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isTemporal", function() { return isTemporal; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isBinned", function() { return isBinned; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isQuantile", function() { return isQuantile; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isSequential", function() { return isSequential; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isDiverging", function() { return isDiverging; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isInterpolating", function() { return isInterpolating; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isLogarithmic", function() { return isLogarithmic; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isContinuous", function() { return isContinuous; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isDiscrete", function() { return isDiscrete; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isDiscretizing", function() { return isDiscretizing; });
const Identity = 'identity';

const Linear = 'linear';
const Log = 'log';
const Pow = 'pow';
const Sqrt = 'sqrt';
const Symlog = 'symlog';

const Time = 'time';
const UTC = 'utc';

const Sequential = 'sequential';
const Diverging = 'diverging';

const Quantile = 'quantile';
const Quantize = 'quantize';
const Threshold = 'threshold';

const Ordinal = 'ordinal';
const Point = 'point';
const Band = 'band';
const BinOrdinal = 'bin-ordinal';

function isValidScaleType(type) {
  switch (type) {
    case Identity:
    case Linear:
    case Log:
    case Pow:
    case Sqrt:
    case Symlog:
    case Time:
    case UTC:
    case Sequential:
    case Quantile:
    case Quantize:
    case Threshold:
    case Ordinal:
    case Point:
    case Band:
    case BinOrdinal:
      return true;
  }
  return false;
}

function isTemporal(key) {
  return key === Time || key === UTC;
}

function isBinned(key) {
  return key === BinOrdinal;
}

function isQuantile(key) {
  return key === Quantile;
}

function isSequential(key) {
  return key && key.startsWith(Sequential);
}

function isDiverging(key) {
  return key && key.startsWith(Diverging);
}

function isInterpolating(key) {
  return isSequential(key) || isDiverging(key);
}

function isLogarithmic(key) {
  return key === Log || key.endsWith('-log');
}

function isContinuous(key) {
  switch (key) {
    case Linear:
    case Log:
    case Pow:
    case Sqrt:
    case Symlog:
    case Time:
    case UTC:
    case Sequential:
      return true;
  }
  return false;
}

function isDiscrete(key) {
  return key === BinOrdinal
    || key === Ordinal
    || key === Band
    || key === Point;
}

function isDiscretizing(key) {
  return key === BinOrdinal
    || key === Quantile
    || key === Quantize
    || key === Threshold;
}


/***/ }),

/***/ "./node_modules/vega-scale/src/schemes.js":
/*!************************************************!*\
  !*** ./node_modules/vega-scale/src/schemes.js ***!
  \************************************************/
/*! exports provided: scheme */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _palettes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./palettes */ "./node_modules/vega-scale/src/palettes.js");
/* harmony import */ var _interpolate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./interpolate */ "./node_modules/vega-scale/src/interpolate.js");



function colors(palette) {
  var n = palette.length / 6 | 0, c = new Array(n), i = 0;
  while (i < n) c[i] = '#' + palette.slice(i * 6, ++i * 6);
  return c;
}

function apply(_, f) {
  for (let k in _) scheme(k, f(_[k]));
}

const schemes = {};
apply(_palettes__WEBPACK_IMPORTED_MODULE_0__["discrete"], colors);
apply(_palettes__WEBPACK_IMPORTED_MODULE_0__["continuous"], _ => Object(_interpolate__WEBPACK_IMPORTED_MODULE_1__["interpolateColors"])(colors(_)));

function scheme(name, scheme) {
  name = name && name.toLowerCase();
  if (arguments.length > 1) {
    schemes[name] = scheme;
    return this;
  } else {
    return schemes[name];
  }
}


/***/ }),

/***/ "./node_modules/vega-scenegraph/index.js":
/*!***********************************************!*\
  !*** ./node_modules/vega-scenegraph/index.js ***!
  \***********************************************/
/*! exports provided: Bounds, Gradient, GroupItem, ResourceLoader, Item, Scenegraph, Handler, Renderer, CanvasHandler, CanvasRenderer, SVGHandler, SVGRenderer, SVGStringRenderer, RenderType, renderModule, intersect, Marks, boundClip, boundContext, boundStroke, boundItem, boundMark, pathCurves, pathSymbols, pathRectangle, pathTrail, pathParse, pathRender, point, domCreate, domFind, domChild, domClear, openTag, closeTag, font, fontFamily, fontSize, textMetrics, resetSVGClipId, sceneEqual, pathEqual, sceneToJSON, sceneFromJSON, intersectPath, intersectPoint, intersectRule, intersectBoxLine, sceneZOrder, sceneVisit, scenePickVisit */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _src_Bounds__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/Bounds */ "./node_modules/vega-scenegraph/src/Bounds.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Bounds", function() { return _src_Bounds__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _src_Gradient__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/Gradient */ "./node_modules/vega-scenegraph/src/Gradient.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Gradient", function() { return _src_Gradient__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _src_GroupItem__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/GroupItem */ "./node_modules/vega-scenegraph/src/GroupItem.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GroupItem", function() { return _src_GroupItem__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _src_ResourceLoader__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/ResourceLoader */ "./node_modules/vega-scenegraph/src/ResourceLoader.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ResourceLoader", function() { return _src_ResourceLoader__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _src_Item__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./src/Item */ "./node_modules/vega-scenegraph/src/Item.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Item", function() { return _src_Item__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _src_Scenegraph__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./src/Scenegraph */ "./node_modules/vega-scenegraph/src/Scenegraph.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Scenegraph", function() { return _src_Scenegraph__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _src_Handler__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./src/Handler */ "./node_modules/vega-scenegraph/src/Handler.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Handler", function() { return _src_Handler__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony import */ var _src_Renderer__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./src/Renderer */ "./node_modules/vega-scenegraph/src/Renderer.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Renderer", function() { return _src_Renderer__WEBPACK_IMPORTED_MODULE_7__["default"]; });

/* harmony import */ var _src_CanvasHandler__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./src/CanvasHandler */ "./node_modules/vega-scenegraph/src/CanvasHandler.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CanvasHandler", function() { return _src_CanvasHandler__WEBPACK_IMPORTED_MODULE_8__["default"]; });

/* harmony import */ var _src_CanvasRenderer__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./src/CanvasRenderer */ "./node_modules/vega-scenegraph/src/CanvasRenderer.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CanvasRenderer", function() { return _src_CanvasRenderer__WEBPACK_IMPORTED_MODULE_9__["default"]; });

/* harmony import */ var _src_SVGHandler__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./src/SVGHandler */ "./node_modules/vega-scenegraph/src/SVGHandler.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SVGHandler", function() { return _src_SVGHandler__WEBPACK_IMPORTED_MODULE_10__["default"]; });

/* harmony import */ var _src_SVGRenderer__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./src/SVGRenderer */ "./node_modules/vega-scenegraph/src/SVGRenderer.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SVGRenderer", function() { return _src_SVGRenderer__WEBPACK_IMPORTED_MODULE_11__["default"]; });

/* harmony import */ var _src_SVGStringRenderer__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./src/SVGStringRenderer */ "./node_modules/vega-scenegraph/src/SVGStringRenderer.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SVGStringRenderer", function() { return _src_SVGStringRenderer__WEBPACK_IMPORTED_MODULE_12__["default"]; });

/* harmony import */ var _src_modules__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./src/modules */ "./node_modules/vega-scenegraph/src/modules.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RenderType", function() { return _src_modules__WEBPACK_IMPORTED_MODULE_13__["RenderType"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "renderModule", function() { return _src_modules__WEBPACK_IMPORTED_MODULE_13__["renderModule"]; });

/* harmony import */ var _src_intersect__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./src/intersect */ "./node_modules/vega-scenegraph/src/intersect.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "intersect", function() { return _src_intersect__WEBPACK_IMPORTED_MODULE_14__["intersect"]; });

/* harmony import */ var _src_marks_index__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./src/marks/index */ "./node_modules/vega-scenegraph/src/marks/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Marks", function() { return _src_marks_index__WEBPACK_IMPORTED_MODULE_15__["default"]; });

/* harmony import */ var _src_bound_boundClip__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./src/bound/boundClip */ "./node_modules/vega-scenegraph/src/bound/boundClip.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "boundClip", function() { return _src_bound_boundClip__WEBPACK_IMPORTED_MODULE_16__["default"]; });

/* harmony import */ var _src_bound_boundContext__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./src/bound/boundContext */ "./node_modules/vega-scenegraph/src/bound/boundContext.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "boundContext", function() { return _src_bound_boundContext__WEBPACK_IMPORTED_MODULE_17__["default"]; });

/* harmony import */ var _src_bound_boundStroke__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./src/bound/boundStroke */ "./node_modules/vega-scenegraph/src/bound/boundStroke.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "boundStroke", function() { return _src_bound_boundStroke__WEBPACK_IMPORTED_MODULE_18__["default"]; });

/* harmony import */ var _src_bound_boundItem__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./src/bound/boundItem */ "./node_modules/vega-scenegraph/src/bound/boundItem.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "boundItem", function() { return _src_bound_boundItem__WEBPACK_IMPORTED_MODULE_19__["default"]; });

/* harmony import */ var _src_bound_boundMark__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./src/bound/boundMark */ "./node_modules/vega-scenegraph/src/bound/boundMark.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "boundMark", function() { return _src_bound_boundMark__WEBPACK_IMPORTED_MODULE_20__["default"]; });

/* harmony import */ var _src_path_curves__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./src/path/curves */ "./node_modules/vega-scenegraph/src/path/curves.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pathCurves", function() { return _src_path_curves__WEBPACK_IMPORTED_MODULE_21__["default"]; });

/* harmony import */ var _src_path_symbols__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./src/path/symbols */ "./node_modules/vega-scenegraph/src/path/symbols.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pathSymbols", function() { return _src_path_symbols__WEBPACK_IMPORTED_MODULE_22__["default"]; });

/* harmony import */ var _src_path_rectangle__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./src/path/rectangle */ "./node_modules/vega-scenegraph/src/path/rectangle.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pathRectangle", function() { return _src_path_rectangle__WEBPACK_IMPORTED_MODULE_23__["default"]; });

/* harmony import */ var _src_path_trail__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./src/path/trail */ "./node_modules/vega-scenegraph/src/path/trail.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pathTrail", function() { return _src_path_trail__WEBPACK_IMPORTED_MODULE_24__["default"]; });

/* harmony import */ var _src_path_parse__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./src/path/parse */ "./node_modules/vega-scenegraph/src/path/parse.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pathParse", function() { return _src_path_parse__WEBPACK_IMPORTED_MODULE_25__["default"]; });

/* harmony import */ var _src_path_render__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./src/path/render */ "./node_modules/vega-scenegraph/src/path/render.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pathRender", function() { return _src_path_render__WEBPACK_IMPORTED_MODULE_26__["default"]; });

/* harmony import */ var _src_util_point__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./src/util/point */ "./node_modules/vega-scenegraph/src/util/point.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "point", function() { return _src_util_point__WEBPACK_IMPORTED_MODULE_27__["default"]; });

/* harmony import */ var _src_util_dom__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./src/util/dom */ "./node_modules/vega-scenegraph/src/util/dom.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "domCreate", function() { return _src_util_dom__WEBPACK_IMPORTED_MODULE_28__["domCreate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "domFind", function() { return _src_util_dom__WEBPACK_IMPORTED_MODULE_28__["domFind"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "domChild", function() { return _src_util_dom__WEBPACK_IMPORTED_MODULE_28__["domChild"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "domClear", function() { return _src_util_dom__WEBPACK_IMPORTED_MODULE_28__["domClear"]; });

/* harmony import */ var _src_util_tags__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./src/util/tags */ "./node_modules/vega-scenegraph/src/util/tags.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "openTag", function() { return _src_util_tags__WEBPACK_IMPORTED_MODULE_29__["openTag"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "closeTag", function() { return _src_util_tags__WEBPACK_IMPORTED_MODULE_29__["closeTag"]; });

/* harmony import */ var _src_util_text__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./src/util/text */ "./node_modules/vega-scenegraph/src/util/text.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "font", function() { return _src_util_text__WEBPACK_IMPORTED_MODULE_30__["font"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "fontFamily", function() { return _src_util_text__WEBPACK_IMPORTED_MODULE_30__["fontFamily"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "fontSize", function() { return _src_util_text__WEBPACK_IMPORTED_MODULE_30__["fontSize"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "textMetrics", function() { return _src_util_text__WEBPACK_IMPORTED_MODULE_30__["textMetrics"]; });

/* harmony import */ var _src_util_svg_clip__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./src/util/svg/clip */ "./node_modules/vega-scenegraph/src/util/svg/clip.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "resetSVGClipId", function() { return _src_util_svg_clip__WEBPACK_IMPORTED_MODULE_31__["resetSVGClipId"]; });

/* harmony import */ var _src_util_equal__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./src/util/equal */ "./node_modules/vega-scenegraph/src/util/equal.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sceneEqual", function() { return _src_util_equal__WEBPACK_IMPORTED_MODULE_32__["sceneEqual"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pathEqual", function() { return _src_util_equal__WEBPACK_IMPORTED_MODULE_32__["pathEqual"]; });

/* harmony import */ var _src_util_serialize__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./src/util/serialize */ "./node_modules/vega-scenegraph/src/util/serialize.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sceneToJSON", function() { return _src_util_serialize__WEBPACK_IMPORTED_MODULE_33__["sceneToJSON"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sceneFromJSON", function() { return _src_util_serialize__WEBPACK_IMPORTED_MODULE_33__["sceneFromJSON"]; });

/* harmony import */ var _src_util_intersect__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./src/util/intersect */ "./node_modules/vega-scenegraph/src/util/intersect.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "intersectPath", function() { return _src_util_intersect__WEBPACK_IMPORTED_MODULE_34__["intersectPath"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "intersectPoint", function() { return _src_util_intersect__WEBPACK_IMPORTED_MODULE_34__["intersectPoint"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "intersectRule", function() { return _src_util_intersect__WEBPACK_IMPORTED_MODULE_34__["intersectRule"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "intersectBoxLine", function() { return _src_util_intersect__WEBPACK_IMPORTED_MODULE_34__["intersectBoxLine"]; });

/* harmony import */ var _src_util_visit__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./src/util/visit */ "./node_modules/vega-scenegraph/src/util/visit.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sceneZOrder", function() { return _src_util_visit__WEBPACK_IMPORTED_MODULE_35__["zorder"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sceneVisit", function() { return _src_util_visit__WEBPACK_IMPORTED_MODULE_35__["visit"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scenePickVisit", function() { return _src_util_visit__WEBPACK_IMPORTED_MODULE_35__["pickVisit"]; });













































/***/ }),

/***/ "./node_modules/vega-scenegraph/src/Bounds.js":
/*!****************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/Bounds.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Bounds; });
function Bounds(b) {
  this.clear();
  if (b) this.union(b);
}

var prototype = Bounds.prototype;

prototype.clone = function() {
  return new Bounds(this);
};

prototype.clear = function() {
  this.x1 = +Number.MAX_VALUE;
  this.y1 = +Number.MAX_VALUE;
  this.x2 = -Number.MAX_VALUE;
  this.y2 = -Number.MAX_VALUE;
  return this;
};

prototype.empty = function() {
  return (
    this.x1 === +Number.MAX_VALUE &&
    this.y1 === +Number.MAX_VALUE &&
    this.x2 === -Number.MAX_VALUE &&
    this.y2 === -Number.MAX_VALUE
  );
};

prototype.equals = function(b) {
  return (
    this.x1 === b.x1 &&
    this.y1 === b.y1 &&
    this.x2 === b.x2 &&
    this.y2 === b.y2
  );
};

prototype.set = function(x1, y1, x2, y2) {
  if (x2 < x1) {
    this.x2 = x1;
    this.x1 = x2;
  } else {
    this.x1 = x1;
    this.x2 = x2;
  }
  if (y2 < y1) {
    this.y2 = y1;
    this.y1 = y2;
  } else {
    this.y1 = y1;
    this.y2 = y2;
  }
  return this;
};

prototype.add = function(x, y) {
  if (x < this.x1) this.x1 = x;
  if (y < this.y1) this.y1 = y;
  if (x > this.x2) this.x2 = x;
  if (y > this.y2) this.y2 = y;
  return this;
};

prototype.expand = function(d) {
  this.x1 -= d;
  this.y1 -= d;
  this.x2 += d;
  this.y2 += d;
  return this;
};

prototype.round = function() {
  this.x1 = Math.floor(this.x1);
  this.y1 = Math.floor(this.y1);
  this.x2 = Math.ceil(this.x2);
  this.y2 = Math.ceil(this.y2);
  return this;
};

prototype.translate = function(dx, dy) {
  this.x1 += dx;
  this.x2 += dx;
  this.y1 += dy;
  this.y2 += dy;
  return this;
};

prototype.rotate = function(angle, x, y) {
  const p = this.rotatedPoints(angle, x, y);
  return this.clear()
    .add(p[0], p[1])
    .add(p[2], p[3])
    .add(p[4], p[5])
    .add(p[6], p[7]);
};

prototype.rotatedPoints = function(angle, x, y) {
  var {x1, y1, x2, y2} = this,
      cos = Math.cos(angle),
      sin = Math.sin(angle),
      cx = x - x*cos + y*sin,
      cy = y - x*sin - y*cos;

  return [
    cos*x1 - sin*y1 + cx, sin*x1 + cos*y1 + cy,
    cos*x1 - sin*y2 + cx, sin*x1 + cos*y2 + cy,
    cos*x2 - sin*y1 + cx, sin*x2 + cos*y1 + cy,
    cos*x2 - sin*y2 + cx, sin*x2 + cos*y2 + cy
  ];
};

prototype.union = function(b) {
  if (b.x1 < this.x1) this.x1 = b.x1;
  if (b.y1 < this.y1) this.y1 = b.y1;
  if (b.x2 > this.x2) this.x2 = b.x2;
  if (b.y2 > this.y2) this.y2 = b.y2;
  return this;
};

prototype.intersect = function(b) {
  if (b.x1 > this.x1) this.x1 = b.x1;
  if (b.y1 > this.y1) this.y1 = b.y1;
  if (b.x2 < this.x2) this.x2 = b.x2;
  if (b.y2 < this.y2) this.y2 = b.y2;
  return this;
};

prototype.encloses = function(b) {
  return b && (
    this.x1 <= b.x1 &&
    this.x2 >= b.x2 &&
    this.y1 <= b.y1 &&
    this.y2 >= b.y2
  );
};

prototype.alignsWith = function(b) {
  return b && (
    this.x1 == b.x1 ||
    this.x2 == b.x2 ||
    this.y1 == b.y1 ||
    this.y2 == b.y2
  );
};

prototype.intersects = function(b) {
  return b && !(
    this.x2 < b.x1 ||
    this.x1 > b.x2 ||
    this.y2 < b.y1 ||
    this.y1 > b.y2
  );
};

prototype.contains = function(x, y) {
  return !(
    x < this.x1 ||
    x > this.x2 ||
    y < this.y1 ||
    y > this.y2
  );
};

prototype.width = function() {
  return this.x2 - this.x1;
};

prototype.height = function() {
  return this.y2 - this.y1;
};


/***/ }),

/***/ "./node_modules/vega-scenegraph/src/CanvasHandler.js":
/*!***********************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/CanvasHandler.js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return CanvasHandler; });
/* harmony import */ var _Handler__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Handler */ "./node_modules/vega-scenegraph/src/Handler.js");
/* harmony import */ var _marks_index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./marks/index */ "./node_modules/vega-scenegraph/src/marks/index.js");
/* harmony import */ var _util_events__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util/events */ "./node_modules/vega-scenegraph/src/util/events.js");
/* harmony import */ var _util_point__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./util/point */ "./node_modules/vega-scenegraph/src/util/point.js");
/* harmony import */ var _util_dom__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./util/dom */ "./node_modules/vega-scenegraph/src/util/dom.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");







function CanvasHandler(loader, tooltip) {
  _Handler__WEBPACK_IMPORTED_MODULE_0__["default"].call(this, loader, tooltip);
  this._down = null;
  this._touch = null;
  this._first = true;
}

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_5__["inherits"])(CanvasHandler, _Handler__WEBPACK_IMPORTED_MODULE_0__["default"]);

prototype.initialize = function(el, origin, obj) {
  // add event listeners
  var canvas = this._canvas = el && Object(_util_dom__WEBPACK_IMPORTED_MODULE_4__["domFind"])(el, 'canvas');
  if (canvas) {
    var that = this;
    this.events.forEach(function(type) {
      canvas.addEventListener(type, function(evt) {
        if (prototype[type]) {
          prototype[type].call(that, evt);
        } else {
          that.fire(type, evt);
        }
      });
    });
  }

  return _Handler__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.initialize.call(this, el, origin, obj);
};

// return the backing canvas instance
prototype.canvas = function() {
  return this._canvas;
};

// retrieve the current canvas context
prototype.context = function() {
  return this._canvas.getContext('2d');
};

// supported events
prototype.events = _util_events__WEBPACK_IMPORTED_MODULE_2__["Events"];

// to keep old versions of firefox happy
prototype.DOMMouseScroll = function(evt) {
  this.fire('mousewheel', evt);
};

function move(moveEvent, overEvent, outEvent) {
  return function(evt) {
    var a = this._active,
        p = this.pickEvent(evt);

    if (p === a) {
      // active item and picked item are the same
      this.fire(moveEvent, evt); // fire move
    } else {
      // active item and picked item are different
      if (!a || !a.exit) {
        // fire out for prior active item
        // suppress if active item was removed from scene
        this.fire(outEvent, evt);
      }
      this._active = p;          // set new active item
      this.fire(overEvent, evt); // fire over for new active item
      this.fire(moveEvent, evt); // fire move for new active item
    }
  };
}

function inactive(type) {
  return function(evt) {
    this.fire(type, evt);
    this._active = null;
  };
}

prototype.mousemove = move('mousemove', 'mouseover', 'mouseout');
prototype.dragover  = move('dragover', 'dragenter', 'dragleave');

prototype.mouseout  = inactive('mouseout');
prototype.dragleave = inactive('dragleave');

prototype.mousedown = function(evt) {
  this._down = this._active;
  this.fire('mousedown', evt);
};

prototype.click = function(evt) {
  if (this._down === this._active) {
    this.fire('click', evt);
    this._down = null;
  }
};

prototype.touchstart = function(evt) {
  this._touch = this.pickEvent(evt.changedTouches[0]);

  if (this._first) {
    this._active = this._touch;
    this._first = false;
  }

  this.fire('touchstart', evt, true);
};

prototype.touchmove = function(evt) {
  this.fire('touchmove', evt, true);
};

prototype.touchend = function(evt) {
  this.fire('touchend', evt, true);
  this._touch = null;
};

// fire an event
prototype.fire = function(type, evt, touch) {
  var a = touch ? this._touch : this._active,
      h = this._handlers[type], i, len;

  // set event type relative to scenegraph items
  evt.vegaType = type;

  // handle hyperlinks and tooltips first
  if (type === _util_events__WEBPACK_IMPORTED_MODULE_2__["HrefEvent"] && a && a.href) {
    this.handleHref(evt, a, a.href);
  } else if (type === _util_events__WEBPACK_IMPORTED_MODULE_2__["TooltipShowEvent"] || type === _util_events__WEBPACK_IMPORTED_MODULE_2__["TooltipHideEvent"]) {
    this.handleTooltip(evt, a, type !== _util_events__WEBPACK_IMPORTED_MODULE_2__["TooltipHideEvent"]);
  }

  // invoke all registered handlers
  if (h) {
    for (i=0, len=h.length; i<len; ++i) {
      h[i].handler.call(this._obj, evt, a);
    }
  }
};

// add an event handler
prototype.on = function(type, handler) {
  var name = this.eventName(type),
      h = this._handlers,
      i = this._handlerIndex(h[name], type, handler);

  if (i < 0) {
    (h[name] || (h[name] = [])).push({
      type:    type,
      handler: handler
    });
  }

  return this;
};

// remove an event handler
prototype.off = function(type, handler) {
  var name = this.eventName(type),
      h = this._handlers[name],
      i = this._handlerIndex(h, type, handler);

  if (i >= 0) {
    h.splice(i, 1);
  }

  return this;
};

prototype.pickEvent = function(evt) {
  var p = Object(_util_point__WEBPACK_IMPORTED_MODULE_3__["default"])(evt, this._canvas),
      o = this._origin;
  return this.pick(this._scene, p[0], p[1], p[0] - o[0], p[1] - o[1]);
};

// find the scenegraph item at the current mouse position
// x, y -- the absolute x, y mouse coordinates on the canvas element
// gx, gy -- the relative coordinates within the current group
prototype.pick = function(scene, x, y, gx, gy) {
  var g = this.context(),
      mark = _marks_index__WEBPACK_IMPORTED_MODULE_1__["default"][scene.marktype];
  return mark.pick.call(this, g, scene, x, y, gx, gy);
};


/***/ }),

/***/ "./node_modules/vega-scenegraph/src/CanvasRenderer.js":
/*!************************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/CanvasRenderer.js ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return CanvasRenderer; });
/* harmony import */ var _Renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Renderer */ "./node_modules/vega-scenegraph/src/Renderer.js");
/* harmony import */ var _Bounds__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Bounds */ "./node_modules/vega-scenegraph/src/Bounds.js");
/* harmony import */ var _marks_index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./marks/index */ "./node_modules/vega-scenegraph/src/marks/index.js");
/* harmony import */ var _util_dom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./util/dom */ "./node_modules/vega-scenegraph/src/util/dom.js");
/* harmony import */ var _util_canvas_clip__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./util/canvas/clip */ "./node_modules/vega-scenegraph/src/util/canvas/clip.js");
/* harmony import */ var _util_canvas_resize__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./util/canvas/resize */ "./node_modules/vega-scenegraph/src/util/canvas/resize.js");
/* harmony import */ var vega_canvas__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! vega-canvas */ "./node_modules/vega-canvas/index.browser.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");










function CanvasRenderer(loader) {
  _Renderer__WEBPACK_IMPORTED_MODULE_0__["default"].call(this, loader);
  this._redraw = false;
  this._dirty = new _Bounds__WEBPACK_IMPORTED_MODULE_1__["default"]();
}

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_7__["inherits"])(CanvasRenderer, _Renderer__WEBPACK_IMPORTED_MODULE_0__["default"]),
    base = _Renderer__WEBPACK_IMPORTED_MODULE_0__["default"].prototype,
    tempBounds = new _Bounds__WEBPACK_IMPORTED_MODULE_1__["default"]();

prototype.initialize = function(el, width, height, origin, scaleFactor, options) {
  this._options = options;
  this._canvas = Object(vega_canvas__WEBPACK_IMPORTED_MODULE_6__["canvas"])(1, 1, options && options.type); // instantiate a small canvas

  if (el) {
    Object(_util_dom__WEBPACK_IMPORTED_MODULE_3__["domClear"])(el, 0).appendChild(this._canvas);
    this._canvas.setAttribute('class', 'marks');
  }
  // this method will invoke resize to size the canvas appropriately
  return base.initialize.call(this, el, width, height, origin, scaleFactor);
};

prototype.resize = function(width, height, origin, scaleFactor) {
  base.resize.call(this, width, height, origin, scaleFactor);
  Object(_util_canvas_resize__WEBPACK_IMPORTED_MODULE_5__["default"])(this._canvas, this._width, this._height,
    this._origin, this._scale, this._options && this._options.context);
  this._redraw = true;
  return this;
};

prototype.canvas = function() {
  return this._canvas;
};

prototype.context = function() {
  return this._canvas ? this._canvas.getContext('2d') : null;
};

prototype.dirty = function(item) {
  var b = translate(item.bounds, item.mark.group);
  this._dirty.union(b);
};

function clipToBounds(g, b, origin) {
  // expand bounds by 1 pixel, then round to pixel boundaries
  b.expand(1).round();

  // to avoid artifacts translate if origin has fractional pixels
  b.translate(-(origin[0] % 1), -(origin[1] % 1));

  // set clipping path
  g.beginPath();
  g.rect(b.x1, b.y1, b.width(), b.height());
  g.clip();

  return b;
}

function translate(bounds, group) {
  if (group == null) return bounds;
  var b = tempBounds.clear().union(bounds);
  for (; group != null; group = group.mark.group) {
    b.translate(group.x || 0, group.y || 0);
  }
  return b;
}

prototype._render = function(scene) {
  var g = this.context(),
      o = this._origin,
      w = this._width,
      h = this._height,
      b = this._dirty;

  // setup
  g.save();
  if (this._redraw || b.empty()) {
    this._redraw = false;
    b = null;
  } else {
    b = clipToBounds(g, b, o);
  }

  this.clear(-o[0], -o[1], w, h);

  // render
  this.draw(g, scene, b);

  // takedown
  g.restore();

  this._dirty.clear();
  return this;
};

prototype.draw = function(ctx, scene, bounds) {
  var mark = _marks_index__WEBPACK_IMPORTED_MODULE_2__["default"][scene.marktype];
  if (scene.clip) Object(_util_canvas_clip__WEBPACK_IMPORTED_MODULE_4__["default"])(ctx, scene);
  mark.draw.call(this, ctx, scene, bounds);
  if (scene.clip) ctx.restore();
};

prototype.clear = function(x, y, w, h) {
  var g = this.context();
  g.clearRect(x, y, w, h);
  if (this._bgcolor != null) {
    g.fillStyle = this._bgcolor;
    g.fillRect(x, y, w, h);
  }
};


/***/ }),

/***/ "./node_modules/vega-scenegraph/src/Gradient.js":
/*!******************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/Gradient.js ***!
  \******************************************************/
/*! exports provided: patternPrefix, isGradient, gradientRef, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "patternPrefix", function() { return patternPrefix; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isGradient", function() { return isGradient; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "gradientRef", function() { return gradientRef; });
var gradient_id = 0;

const patternPrefix = 'p_';

function isGradient(value) {
  return value && value.gradient;
}

function gradientRef(g, defs, base) {
  let id = g.id,
      type = g.gradient,
      prefix = type === 'radial' ? patternPrefix : '';

  // check id, assign default values as needed
  if (!id) {
    id = g.id = 'gradient_' + (gradient_id++);
    if (type === 'radial') {
      g.x1 = get(g.x1, 0.5);
      g.y1 = get(g.y1, 0.5);
      g.r1 = get(g.r1, 0);
      g.x2 = get(g.x2, 0.5);
      g.y2 = get(g.y2, 0.5);
      g.r2 = get(g.r2, 0.5);
      prefix = patternPrefix;
    } else {
      g.x1 = get(g.x1, 0);
      g.y1 = get(g.y1, 0);
      g.x2 = get(g.x2, 1);
      g.y2 = get(g.y2, 0);
    }
  }

  // register definition
  defs[id] = g;

  // return url reference
  return 'url(' + (base || '') + '#' + prefix + id + ')';
}

function get(val, def) {
  return val != null ? val : def;
}

/* harmony default export */ __webpack_exports__["default"] = (function(p0, p1) {
  var stops = [], gradient;
  return gradient = {
    gradient: 'linear',
    x1: p0 ? p0[0] : 0,
    y1: p0 ? p0[1] : 0,
    x2: p1 ? p1[0] : 1,
    y2: p1 ? p1[1] : 0,
    stops: stops,
    stop: function(offset, color) {
      stops.push({offset: offset, color: color});
      return gradient;
    }
  };
});


/***/ }),

/***/ "./node_modules/vega-scenegraph/src/GroupItem.js":
/*!*******************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/GroupItem.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return GroupItem; });
/* harmony import */ var _Item__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Item */ "./node_modules/vega-scenegraph/src/Item.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");



function GroupItem(mark) {
  _Item__WEBPACK_IMPORTED_MODULE_0__["default"].call(this, mark);
  this.items = (this.items || []);
}

Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(GroupItem, _Item__WEBPACK_IMPORTED_MODULE_0__["default"]);


/***/ }),

/***/ "./node_modules/vega-scenegraph/src/Handler.js":
/*!*****************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/Handler.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Handler; });
/* harmony import */ var _util_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/dom */ "./node_modules/vega-scenegraph/src/util/dom.js");
/* harmony import */ var _util_resolveItem__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/resolveItem */ "./node_modules/vega-scenegraph/src/util/resolveItem.js");
/* harmony import */ var vega_loader__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-loader */ "./node_modules/vega-loader/index.browser.js");




/**
 * Create a new Handler instance.
 * @param {object} [customLoader] - Optional loader instance for
 *   href URL sanitization. If not specified, a standard loader
 *   instance will be generated.
 * @param {function} [customTooltip] - Optional tooltip handler
 *   function for custom tooltip display.
 * @constructor
 */
function Handler(customLoader, customTooltip) {
  this._active = null;
  this._handlers = {};
  this._loader = customLoader || Object(vega_loader__WEBPACK_IMPORTED_MODULE_2__["loader"])();
  this._tooltip = customTooltip || defaultTooltip;
}

// The default tooltip display handler.
// Sets the HTML title attribute on the visualization container.
function defaultTooltip(handler, event, item, value) {
  handler.element().setAttribute('title', value || '');
}

var prototype = Handler.prototype;

/**
 * Initialize a new Handler instance.
 * @param {DOMElement} el - The containing DOM element for the display.
 * @param {Array<number>} origin - The origin of the display, in pixels.
 *   The coordinate system will be translated to this point.
 * @param {object} [obj] - Optional context object that should serve as
 *   the "this" context for event callbacks.
 * @return {Handler} - This handler instance.
 */
prototype.initialize = function(el, origin, obj) {
  this._el = el;
  this._obj = obj || null;
  return this.origin(origin);
};

/**
 * Returns the parent container element for a visualization.
 * @return {DOMElement} - The containing DOM element.
 */
prototype.element = function() {
  return this._el;
};

/**
 * Returns the scene element (e.g., canvas or SVG) of the visualization
 * Subclasses must override if the first child is not the scene element.
 * @return {DOMElement} - The scene (e.g., canvas or SVG) element.
 */
prototype.canvas = function() {
  return this._el && this._el.firstChild;
};

/**
 * Get / set the origin coordinates of the visualization.
 */
prototype.origin = function(origin) {
  if (arguments.length) {
    this._origin = origin || [0, 0];
    return this;
  } else {
    return this._origin.slice();
  }
};

/**
 * Get / set the scenegraph root.
 */
prototype.scene = function(scene) {
  if (!arguments.length) return this._scene;
  this._scene = scene;
  return this;
};

/**
 * Add an event handler. Subclasses should override this method.
 */
prototype.on = function(/*type, handler*/) {};

/**
 * Remove an event handler. Subclasses should override this method.
 */
prototype.off = function(/*type, handler*/) {};

/**
 * Utility method for finding the array index of an event handler.
 * @param {Array} h - An array of registered event handlers.
 * @param {string} type - The event type.
 * @param {function} handler - The event handler instance to find.
 * @return {number} - The handler's array index or -1 if not registered.
 */
prototype._handlerIndex = function(h, type, handler) {
  for (var i = h ? h.length : 0; --i>=0;) {
    if (h[i].type === type && (!handler || h[i].handler === handler)) {
      return i;
    }
  }
  return -1;
};

/**
 * Returns an array with registered event handlers.
 * @param {string} [type] - The event type to query. Any annotations
 *   are ignored; for example, for the argument "click.foo", ".foo" will
 *   be ignored and the method returns all "click" handlers. If type is
 *   null or unspecified, this method returns handlers for all types.
 * @return {Array} - A new array containing all registered event handlers.
 */
prototype.handlers = function(type) {
  var h = this._handlers, a = [], k;
  if (type) {
    a.push.apply(a, h[this.eventName(type)]);
  } else {
    for (k in h) { a.push.apply(a, h[k]); }
  }
  return a;
};

/**
 * Parses an event name string to return the specific event type.
 * For example, given "click.foo" returns "click"
 * @param {string} name - The input event type string.
 * @return {string} - A string with the event type only.
 */
prototype.eventName = function(name) {
  var i = name.indexOf('.');
  return i < 0 ? name : name.slice(0,i);
};

/**
 * Handle hyperlink navigation in response to an item.href value.
 * @param {Event} event - The event triggering hyperlink navigation.
 * @param {Item} item - The scenegraph item.
 * @param {string} href - The URL to navigate to.
 */
prototype.handleHref = function(event, item, href) {
  this._loader
    .sanitize(href, {context:'href'})
    .then(function(opt) {
      var e = new MouseEvent(event.type, event),
          a = Object(_util_dom__WEBPACK_IMPORTED_MODULE_0__["domCreate"])(null, 'a');
      for (var name in opt) a.setAttribute(name, opt[name]);
      a.dispatchEvent(e);
    })
    .catch(function() { /* do nothing */ });
};

/**
 * Handle tooltip display in response to an item.tooltip value.
 * @param {Event} event - The event triggering tooltip display.
 * @param {Item} item - The scenegraph item.
 * @param {boolean} show - A boolean flag indicating whether
 *   to show or hide a tooltip for the given item.
 */
prototype.handleTooltip = function(event, item, show) {
  if (item && item.tooltip != null) {
    item = Object(_util_resolveItem__WEBPACK_IMPORTED_MODULE_1__["default"])(item, event, this.canvas(), this._origin);
    var value = (show && item && item.tooltip) || null;
    this._tooltip.call(this._obj, this, event, item, value);
  }
};

/**
 * Returns the size of a scenegraph item and its position relative
 * to the viewport.
 * @param {Item} item - The scenegraph item.
 * @return {object} - A bounding box object (compatible with the
 *   DOMRect type) consisting of x, y, width, heigh, top, left,
 *   right, and bottom properties.
 */
prototype.getItemBoundingClientRect = function(item) {
  if (!(el = this.canvas())) return;

  var el, rect = el.getBoundingClientRect(),
      origin = this._origin,
      itemBounds = item.bounds,
      x = itemBounds.x1 + origin[0] + rect.left,
      y = itemBounds.y1 + origin[1] + rect.top,
      w = itemBounds.width(),
      h = itemBounds.height();

  // translate coordinate for each parent group
  while (item.mark && (item = item.mark.group)) {
    x += item.x || 0;
    y += item.y || 0;
  }

  // return DOMRect-compatible bounding box
  return {
    x:      x,
    y:      y,
    width:  w,
    height: h,
    left:   x,
    top:    y,
    right:  x + w,
    bottom: y + h
  };
};


/***/ }),

/***/ "./node_modules/vega-scenegraph/src/Item.js":
/*!**************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/Item.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Item; });
/* harmony import */ var _Bounds__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Bounds */ "./node_modules/vega-scenegraph/src/Bounds.js");


function Item(mark) {
  this.mark = mark;
  this.bounds = (this.bounds || new _Bounds__WEBPACK_IMPORTED_MODULE_0__["default"]());
}


/***/ }),

/***/ "./node_modules/vega-scenegraph/src/Renderer.js":
/*!******************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/Renderer.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Renderer; });
/* harmony import */ var _ResourceLoader__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ResourceLoader */ "./node_modules/vega-scenegraph/src/ResourceLoader.js");


/**
 * Create a new Renderer instance.
 * @param {object} [loader] - Optional loader instance for
 *   image and href URL sanitization. If not specified, a
 *   standard loader instance will be generated.
 * @constructor
 */
function Renderer(loader) {
  this._el = null;
  this._bgcolor = null;
  this._loader = new _ResourceLoader__WEBPACK_IMPORTED_MODULE_0__["default"](loader);
}

var prototype = Renderer.prototype;

/**
 * Initialize a new Renderer instance.
 * @param {DOMElement} el - The containing DOM element for the display.
 * @param {number} width - The coordinate width of the display, in pixels.
 * @param {number} height - The coordinate height of the display, in pixels.
 * @param {Array<number>} origin - The origin of the display, in pixels.
 *   The coordinate system will be translated to this point.
 * @param {number} [scaleFactor=1] - Optional scaleFactor by which to multiply
 *   the width and height to determine the final pixel size.
 * @return {Renderer} - This renderer instance.
 */
prototype.initialize = function(el, width, height, origin, scaleFactor) {
  this._el = el;
  return this.resize(width, height, origin, scaleFactor);
};

/**
 * Returns the parent container element for a visualization.
 * @return {DOMElement} - The containing DOM element.
 */
prototype.element = function() {
  return this._el;
};

/**
 * Returns the scene element (e.g., canvas or SVG) of the visualization
 * Subclasses must override if the first child is not the scene element.
 * @return {DOMElement} - The scene (e.g., canvas or SVG) element.
 */
prototype.canvas = function() {
  return this._el && this._el.firstChild;
};

/**
 * Get / set the background color.
 */
prototype.background = function(bgcolor) {
  if (arguments.length === 0) return this._bgcolor;
  this._bgcolor = bgcolor;
  return this;
};

/**
 * Resize the display.
 * @param {number} width - The new coordinate width of the display, in pixels.
 * @param {number} height - The new coordinate height of the display, in pixels.
 * @param {Array<number>} origin - The new origin of the display, in pixels.
 *   The coordinate system will be translated to this point.
 * @param {number} [scaleFactor=1] - Optional scaleFactor by which to multiply
 *   the width and height to determine the final pixel size.
 * @return {Renderer} - This renderer instance;
 */
prototype.resize = function(width, height, origin, scaleFactor) {
  this._width = width;
  this._height = height;
  this._origin = origin || [0, 0];
  this._scale = scaleFactor || 1;
  return this;
};

/**
 * Report a dirty item whose bounds should be redrawn.
 * This base class method does nothing. Subclasses that perform
 * incremental should implement this method.
 * @param {Item} item - The dirty item whose bounds should be redrawn.
 */
prototype.dirty = function(/*item*/) {
};

/**
 * Render an input scenegraph, potentially with a set of dirty items.
 * This method will perform an immediate rendering with available resources.
 * The renderer may also need to perform image loading to perform a complete
 * render. This process can lead to asynchronous re-rendering of the scene
 * after this method returns. To receive notification when rendering is
 * complete, use the renderAsync method instead.
 * @param {object} scene - The root mark of a scenegraph to render.
 * @return {Renderer} - This renderer instance.
 */
prototype.render = function(scene) {
  var r = this;

  // bind arguments into a render call, and cache it
  // this function may be subsequently called for async redraw
  r._call = function() { r._render(scene); };

  // invoke the renderer
  r._call();

  // clear the cached call for garbage collection
  // async redraws will stash their own copy
  r._call = null;

  return r;
};

/**
 * Internal rendering method. Renderer subclasses should override this
 * method to actually perform rendering.
 * @param {object} scene - The root mark of a scenegraph to render.
 */
prototype._render = function(/*scene*/) {
  // subclasses to override
};

/**
 * Asynchronous rendering method. Similar to render, but returns a Promise
 * that resolves when all rendering is completed. Sometimes a renderer must
 * perform image loading to get a complete rendering. The returned
 * Promise will not resolve until this process completes.
 * @param {object} scene - The root mark of a scenegraph to render.
 * @return {Promise} - A Promise that resolves when rendering is complete.
 */
prototype.renderAsync = function(scene) {
  var r = this.render(scene);
  return this._ready
    ? this._ready.then(function() { return r; })
    : Promise.resolve(r);
};

/**
 * Internal method for asynchronous resource loading.
 * Proxies method calls to the ImageLoader, and tracks loading
 * progress to invoke a re-render once complete.
 * @param {string} method - The method name to invoke on the ImageLoader.
 * @param {string} uri - The URI for the requested resource.
 * @return {Promise} - A Promise that resolves to the requested resource.
 */
prototype._load = function(method, uri) {
  var r = this,
      p = r._loader[method](uri);

  if (!r._ready) {
    // re-render the scene when loading completes
    var call = r._call;
    r._ready = r._loader.ready()
      .then(function(redraw) {
        if (redraw) call();
        r._ready = null;
      });
  }

  return p;
};

/**
 * Sanitize a URL to include as a hyperlink in the rendered scene.
 * This method proxies a call to ImageLoader.sanitizeURL, but also tracks
 * image loading progress and invokes a re-render once complete.
 * @param {string} uri - The URI string to sanitize.
 * @return {Promise} - A Promise that resolves to the sanitized URL.
 */
prototype.sanitizeURL = function(uri) {
  return this._load('sanitizeURL', uri);
};

/**
 * Requests an image to include in the rendered scene.
 * This method proxies a call to ImageLoader.loadImage, but also tracks
 * image loading progress and invokes a re-render once complete.
 * @param {string} uri - The URI string of the image.
 * @return {Promise} - A Promise that resolves to the loaded Image.
 */
prototype.loadImage = function(uri) {
  return this._load('loadImage', uri);
};


/***/ }),

/***/ "./node_modules/vega-scenegraph/src/ResourceLoader.js":
/*!************************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/ResourceLoader.js ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return ResourceLoader; });
/* harmony import */ var vega_canvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-canvas */ "./node_modules/vega-canvas/index.browser.js");
/* harmony import */ var vega_loader__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-loader */ "./node_modules/vega-loader/index.browser.js");



function ResourceLoader(customLoader) {
  this._pending = 0;
  this._loader = customLoader || Object(vega_loader__WEBPACK_IMPORTED_MODULE_1__["loader"])();
}

var prototype = ResourceLoader.prototype;

prototype.pending = function() {
  return this._pending;
};

function increment(loader) {
  loader._pending += 1;
}

function decrement(loader) {
  loader._pending -= 1;
}

prototype.sanitizeURL = function(uri) {
  var loader = this;
  increment(loader);

  return loader._loader.sanitize(uri, {context:'href'})
    .then(function(opt) {
      decrement(loader);
      return opt;
    })
    .catch(function() {
      decrement(loader);
      return null;
    });
};

prototype.loadImage = function(uri) {
  var loader = this,
      Image = Object(vega_canvas__WEBPACK_IMPORTED_MODULE_0__["image"])();
  increment(loader);

  return loader._loader
    .sanitize(uri, {context: 'image'})
    .then(function(opt) {
      var url = opt.href;
      if (!url || !Image) throw {url: url};

      var img = new Image();

      img.onload = function() {
        decrement(loader);
        img.loaded = true;
      };

      img.onerror = function() {
        decrement(loader);
        img.loaded = false;
      }

      img.src = url;
      return img;
    })
    .catch(function(e) {
      decrement(loader);
      return {loaded: false, width: 0, height: 0, src: e && e.url || ''};
    });
};

prototype.ready = function() {
  var loader = this;
  return new Promise(function(accept) {
    function poll(value) {
      if (!loader.pending()) accept(value);
      else setTimeout(function() { poll(true); }, 10);
    }
    poll(false);
  });
};


/***/ }),

/***/ "./node_modules/vega-scenegraph/src/SVGHandler.js":
/*!********************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/SVGHandler.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return SVGHandler; });
/* harmony import */ var _Handler__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Handler */ "./node_modules/vega-scenegraph/src/Handler.js");
/* harmony import */ var _util_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/dom */ "./node_modules/vega-scenegraph/src/util/dom.js");
/* harmony import */ var _util_events__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util/events */ "./node_modules/vega-scenegraph/src/util/events.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");





function SVGHandler(loader, tooltip) {
  _Handler__WEBPACK_IMPORTED_MODULE_0__["default"].call(this, loader, tooltip);
  var h = this;
  h._hrefHandler = listener(h, function(evt, item) {
    if (item && item.href) h.handleHref(evt, item, item.href);
  });
  h._tooltipHandler = listener(h, function(evt, item) {
    h.handleTooltip(evt, item, evt.type !== _util_events__WEBPACK_IMPORTED_MODULE_2__["TooltipHideEvent"]);
  });
}

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["inherits"])(SVGHandler, _Handler__WEBPACK_IMPORTED_MODULE_0__["default"]);

prototype.initialize = function(el, origin, obj) {
  var svg = this._svg;
  if (svg) {
    svg.removeEventListener(_util_events__WEBPACK_IMPORTED_MODULE_2__["HrefEvent"], this._hrefHandler);
    svg.removeEventListener(_util_events__WEBPACK_IMPORTED_MODULE_2__["TooltipShowEvent"], this._tooltipHandler);
    svg.removeEventListener(_util_events__WEBPACK_IMPORTED_MODULE_2__["TooltipHideEvent"], this._tooltipHandler);
  }
  this._svg = svg = el && Object(_util_dom__WEBPACK_IMPORTED_MODULE_1__["domFind"])(el, 'svg');
  if (svg) {
    svg.addEventListener(_util_events__WEBPACK_IMPORTED_MODULE_2__["HrefEvent"], this._hrefHandler);
    svg.addEventListener(_util_events__WEBPACK_IMPORTED_MODULE_2__["TooltipShowEvent"], this._tooltipHandler);
    svg.addEventListener(_util_events__WEBPACK_IMPORTED_MODULE_2__["TooltipHideEvent"], this._tooltipHandler);
  }
  return _Handler__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.initialize.call(this, el, origin, obj);
};

prototype.canvas = function() {
  return this._svg;
};

// wrap an event listener for the SVG DOM
function listener(context, handler) {
  return function(evt) {
    var target = evt.target,
        item = target.__data__;
    evt.vegaType = evt.type;
    item = Array.isArray(item) ? item[0] : item;
    handler.call(context._obj, evt, item);
  };
}

// add an event handler
prototype.on = function(type, handler) {
  var name = this.eventName(type),
      h = this._handlers,
      i = this._handlerIndex(h[name], type, handler);

  if (i < 0) {
    var x = {
      type:     type,
      handler:  handler,
      listener: listener(this, handler)
    };

    (h[name] || (h[name] = [])).push(x);
    if (this._svg) {
      this._svg.addEventListener(name, x.listener);
    }
  }

  return this;
};

// remove an event handler
prototype.off = function(type, handler) {
  var name = this.eventName(type),
      h = this._handlers[name],
      i = this._handlerIndex(h, type, handler);

  if (i >= 0) {
    if (this._svg) {
      this._svg.removeEventListener(name, h[i].listener);
    }
    h.splice(i, 1);
  }

  return this;
};


/***/ }),

/***/ "./node_modules/vega-scenegraph/src/SVGRenderer.js":
/*!*********************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/SVGRenderer.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return SVGRenderer; });
/* harmony import */ var _Renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Renderer */ "./node_modules/vega-scenegraph/src/Renderer.js");
/* harmony import */ var _Gradient__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Gradient */ "./node_modules/vega-scenegraph/src/Gradient.js");
/* harmony import */ var _marks_index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./marks/index */ "./node_modules/vega-scenegraph/src/marks/index.js");
/* harmony import */ var _util_dom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./util/dom */ "./node_modules/vega-scenegraph/src/util/dom.js");
/* harmony import */ var _util_tags__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./util/tags */ "./node_modules/vega-scenegraph/src/util/tags.js");
/* harmony import */ var _util_text__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./util/text */ "./node_modules/vega-scenegraph/src/util/text.js");
/* harmony import */ var _util_visit__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./util/visit */ "./node_modules/vega-scenegraph/src/util/visit.js");
/* harmony import */ var _util_svg_clip__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./util/svg/clip */ "./node_modules/vega-scenegraph/src/util/svg/clip.js");
/* harmony import */ var _util_svg_metadata__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./util/svg/metadata */ "./node_modules/vega-scenegraph/src/util/svg/metadata.js");
/* harmony import */ var _util_svg_styles__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./util/svg/styles */ "./node_modules/vega-scenegraph/src/util/svg/styles.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");












var ns = _util_svg_metadata__WEBPACK_IMPORTED_MODULE_8__["default"].xmlns;

function SVGRenderer(loader) {
  _Renderer__WEBPACK_IMPORTED_MODULE_0__["default"].call(this, loader);
  this._dirtyID = 1;
  this._dirty = [];
  this._svg = null;
  this._root = null;
  this._defs = null;
}

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_10__["inherits"])(SVGRenderer, _Renderer__WEBPACK_IMPORTED_MODULE_0__["default"]);
var base = _Renderer__WEBPACK_IMPORTED_MODULE_0__["default"].prototype;

prototype.initialize = function(el, width, height, padding) {
  if (el) {
    this._svg = Object(_util_dom__WEBPACK_IMPORTED_MODULE_3__["domChild"])(el, 0, 'svg', ns);
    this._svg.setAttribute('class', 'marks');
    Object(_util_dom__WEBPACK_IMPORTED_MODULE_3__["domClear"])(el, 1);
    // set the svg root group
    this._root = Object(_util_dom__WEBPACK_IMPORTED_MODULE_3__["domChild"])(this._svg, 0, 'g', ns);
    Object(_util_dom__WEBPACK_IMPORTED_MODULE_3__["domClear"])(this._svg, 1);
  }

  // create the svg definitions cache
  this._defs = {
    gradient: {},
    clipping: {}
  };

  // set background color if defined
  this.background(this._bgcolor);

  return base.initialize.call(this, el, width, height, padding);
};

prototype.background = function(bgcolor) {
  if (arguments.length && this._svg) {
    this._svg.style.setProperty('background-color', bgcolor);
  }
  return base.background.apply(this, arguments);
};

prototype.resize = function(width, height, origin, scaleFactor) {
  base.resize.call(this, width, height, origin, scaleFactor);

  if (this._svg) {
    this._svg.setAttribute('width', this._width * this._scale);
    this._svg.setAttribute('height', this._height * this._scale);
    this._svg.setAttribute('viewBox', '0 0 ' + this._width + ' ' + this._height);
    this._root.setAttribute('transform', 'translate(' + this._origin + ')');
  }

  this._dirty = [];

  return this;
};

prototype.canvas = function() {
  return this._svg;
};

prototype.svg = function() {
  if (!this._svg) return null;

  var attr = {
    class:   'marks',
    width:   this._width * this._scale,
    height:  this._height * this._scale,
    viewBox: '0 0 ' + this._width + ' ' + this._height
  };
  for (var key in _util_svg_metadata__WEBPACK_IMPORTED_MODULE_8__["default"]) {
    attr[key] = _util_svg_metadata__WEBPACK_IMPORTED_MODULE_8__["default"][key];
  }

  var bg = !this._bgcolor ? ''
    : (Object(_util_tags__WEBPACK_IMPORTED_MODULE_4__["openTag"])('rect', {
        width:  this._width,
        height: this._height,
        style:  'fill: ' + this._bgcolor + ';'
      }) + Object(_util_tags__WEBPACK_IMPORTED_MODULE_4__["closeTag"])('rect'));

  return Object(_util_tags__WEBPACK_IMPORTED_MODULE_4__["openTag"])('svg', attr) + bg + this._svg.innerHTML + Object(_util_tags__WEBPACK_IMPORTED_MODULE_4__["closeTag"])('svg');
};


// -- Render entry point --

prototype._render = function(scene) {
  // perform spot updates and re-render markup
  if (this._dirtyCheck()) {
    if (this._dirtyAll) this._resetDefs();
    this.draw(this._root, scene);
    Object(_util_dom__WEBPACK_IMPORTED_MODULE_3__["domClear"])(this._root, 1);
  }

  this.updateDefs();

  this._dirty = [];
  ++this._dirtyID;

  return this;
};

// -- Manage SVG definitions ('defs') block --

prototype.updateDefs = function() {
  var svg = this._svg,
      defs = this._defs,
      el = defs.el,
      index = 0, id;

  for (id in defs.gradient) {
    if (!el) defs.el = (el = Object(_util_dom__WEBPACK_IMPORTED_MODULE_3__["domChild"])(svg, 0, 'defs', ns));
    index = updateGradient(el, defs.gradient[id], index);
  }

  for (id in defs.clipping) {
    if (!el) defs.el = (el = Object(_util_dom__WEBPACK_IMPORTED_MODULE_3__["domChild"])(svg, 0, 'defs', ns));
    index = updateClipping(el, defs.clipping[id], index);
  }

  // clean-up
  if (el) {
    if (index === 0) {
      svg.removeChild(el);
      defs.el = null;
    } else {
      Object(_util_dom__WEBPACK_IMPORTED_MODULE_3__["domClear"])(el, index);
    }
  }
};

function updateGradient(el, grad, index) {
  var i, n, stop;

  if (grad.gradient === 'radial') {
    // SVG radial gradients automatically transform to normalized bbox
    // coordinates, in a way that is cumbersome to replicate in canvas.
    // So we wrap the radial gradient in a pattern element, allowing us
    // to mantain a circular gradient that matches what canvas provides.
    var pt = Object(_util_dom__WEBPACK_IMPORTED_MODULE_3__["domChild"])(el, index++, 'pattern', ns);
    pt.setAttribute('id', _Gradient__WEBPACK_IMPORTED_MODULE_1__["patternPrefix"] + grad.id);
    pt.setAttribute('viewBox', '0,0,1,1');
    pt.setAttribute('width', '100%');
    pt.setAttribute('height', '100%');
    pt.setAttribute('preserveAspectRatio', 'xMidYMid slice');

    pt = Object(_util_dom__WEBPACK_IMPORTED_MODULE_3__["domChild"])(pt, 0, 'rect', ns);
    pt.setAttribute('width', '1');
    pt.setAttribute('height', '1');
    pt.setAttribute('fill', 'url(' + href() + '#' + grad.id + ')');

    el = Object(_util_dom__WEBPACK_IMPORTED_MODULE_3__["domChild"])(el, index++, 'radialGradient', ns);
    el.setAttribute('id', grad.id);
    el.setAttribute('fx', grad.x1);
    el.setAttribute('fy', grad.y1);
    el.setAttribute('fr', grad.r1);
    el.setAttribute('cx', grad.x2);
    el.setAttribute('cy', grad.y2);
    el.setAttribute( 'r', grad.r2);
  } else {
    el = Object(_util_dom__WEBPACK_IMPORTED_MODULE_3__["domChild"])(el, index++, 'linearGradient', ns);
    el.setAttribute('id', grad.id);
    el.setAttribute('x1', grad.x1);
    el.setAttribute('x2', grad.x2);
    el.setAttribute('y1', grad.y1);
    el.setAttribute('y2', grad.y2);
  }

  for (i=0, n=grad.stops.length; i<n; ++i) {
    stop = Object(_util_dom__WEBPACK_IMPORTED_MODULE_3__["domChild"])(el, i, 'stop', ns);
    stop.setAttribute('offset', grad.stops[i].offset);
    stop.setAttribute('stop-color', grad.stops[i].color);
  }
  Object(_util_dom__WEBPACK_IMPORTED_MODULE_3__["domClear"])(el, i);

  return index;
}

function updateClipping(el, clip, index) {
  var mask;

  el = Object(_util_dom__WEBPACK_IMPORTED_MODULE_3__["domChild"])(el, index, 'clipPath', ns);
  el.setAttribute('id', clip.id);

  if (clip.path) {
    mask = Object(_util_dom__WEBPACK_IMPORTED_MODULE_3__["domChild"])(el, 0, 'path', ns);
    mask.setAttribute('d', clip.path);
  } else {
    mask = Object(_util_dom__WEBPACK_IMPORTED_MODULE_3__["domChild"])(el, 0, 'rect', ns);
    mask.setAttribute('x', 0);
    mask.setAttribute('y', 0);
    mask.setAttribute('width', clip.width);
    mask.setAttribute('height', clip.height);
  }

  return index + 1;
}

prototype._resetDefs = function() {
  var def = this._defs;
  def.gradient = {};
  def.clipping = {};
};


// -- Manage rendering of items marked as dirty --

prototype.dirty = function(item) {
  if (item.dirty !== this._dirtyID) {
    item.dirty = this._dirtyID;
    this._dirty.push(item);
  }
};

prototype.isDirty = function(item) {
  return this._dirtyAll
    || !item._svg
    || item.dirty === this._dirtyID;
};

prototype._dirtyCheck = function() {
  this._dirtyAll = true;
  var items = this._dirty;
  if (!items.length) return true;

  var id = ++this._dirtyID,
      item, mark, type, mdef, i, n, o;

  for (i=0, n=items.length; i<n; ++i) {
    item = items[i];
    mark = item.mark;

    if (mark.marktype !== type) {
      // memoize mark instance lookup
      type = mark.marktype;
      mdef = _marks_index__WEBPACK_IMPORTED_MODULE_2__["default"][type];
    }

    if (mark.zdirty && mark.dirty !== id) {
      this._dirtyAll = false;
      dirtyParents(item, id);
      mark.items.forEach(function(i) { i.dirty = id; });
    }
    if (mark.zdirty) continue; // handle in standard drawing pass

    if (item.exit) { // EXIT
      if (mdef.nested && mark.items.length) {
        // if nested mark with remaining points, update instead
        o = mark.items[0];
        if (o._svg) this._update(mdef, o._svg, o);
      } else if (item._svg) {
        // otherwise remove from DOM
        o = item._svg.parentNode;
        if (o) o.removeChild(item._svg);
      }
      item._svg = null;
      continue;
    }

    item = (mdef.nested ? mark.items[0] : item);
    if (item._update === id) continue; // already visited

    if (!item._svg || !item._svg.ownerSVGElement) {
      // ENTER
      this._dirtyAll = false;
      dirtyParents(item, id);
    } else {
      // IN-PLACE UPDATE
      this._update(mdef, item._svg, item);
    }
    item._update = id;
  }
  return !this._dirtyAll;
};

function dirtyParents(item, id) {
  for (; item && item.dirty !== id; item=item.mark.group) {
    item.dirty = id;
    if (item.mark && item.mark.dirty !== id) {
      item.mark.dirty = id;
    } else return;
  }
}


// -- Construct & maintain scenegraph to SVG mapping ---

// Draw a mark container.
prototype.draw = function(el, scene, prev) {
  if (!this.isDirty(scene)) return scene._svg;

  var renderer = this,
      svg = this._svg,
      mdef = _marks_index__WEBPACK_IMPORTED_MODULE_2__["default"][scene.marktype],
      events = scene.interactive === false ? 'none' : null,
      isGroup = mdef.tag === 'g',
      sibling = null,
      i = 0,
      parent;

  parent = bind(scene, el, prev, 'g', svg);
  parent.setAttribute('class', Object(_util_dom__WEBPACK_IMPORTED_MODULE_3__["cssClass"])(scene));
  if (!isGroup) {
    parent.style.setProperty('pointer-events', events);
  }
  if (scene.clip) {
    parent.setAttribute('clip-path', Object(_util_svg_clip__WEBPACK_IMPORTED_MODULE_7__["default"])(renderer, scene, scene.group));
  } else {
    parent.removeAttribute('clip-path');
  }

  function process(item) {
    var dirty = renderer.isDirty(item),
        node = bind(item, parent, sibling, mdef.tag, svg);

    if (dirty) {
      renderer._update(mdef, node, item);
      if (isGroup) recurse(renderer, node, item);
    }

    sibling = node;
    ++i;
  }

  if (mdef.nested) {
    if (scene.items.length) process(scene.items[0]);
  } else {
    Object(_util_visit__WEBPACK_IMPORTED_MODULE_6__["visit"])(scene, process);
  }

  Object(_util_dom__WEBPACK_IMPORTED_MODULE_3__["domClear"])(parent, i);
  return parent;
};

// Recursively process group contents.
function recurse(renderer, el, group) {
  el = el.lastChild;
  var prev, idx = 0;

  Object(_util_visit__WEBPACK_IMPORTED_MODULE_6__["visit"])(group, function(item) {
    prev = renderer.draw(el, item, prev);
    ++idx;
  });

  // remove any extraneous DOM elements
  Object(_util_dom__WEBPACK_IMPORTED_MODULE_3__["domClear"])(el, 1 + idx);
}

// Bind a scenegraph item to an SVG DOM element.
// Create new SVG elements as needed.
function bind(item, el, sibling, tag, svg) {
  var node = item._svg, doc;

  // create a new dom node if needed
  if (!node) {
    doc = el.ownerDocument;
    node = Object(_util_dom__WEBPACK_IMPORTED_MODULE_3__["domCreate"])(doc, tag, ns);
    item._svg = node;

    if (item.mark) {
      node.__data__ = item;
      node.__values__ = {fill: 'default'};

      // if group, create background and foreground elements
      if (tag === 'g') {
        var bg = Object(_util_dom__WEBPACK_IMPORTED_MODULE_3__["domCreate"])(doc, 'path', ns);
        bg.setAttribute('class', 'background');
        node.appendChild(bg);
        bg.__data__ = item;

        var fg = Object(_util_dom__WEBPACK_IMPORTED_MODULE_3__["domCreate"])(doc, 'g', ns);
        node.appendChild(fg);
        fg.__data__ = item;
      }
    }
  }

  // (re-)insert if (a) not contained in SVG or (b) sibling order has changed
  if (node.ownerSVGElement !== svg || hasSiblings(item) && node.previousSibling !== sibling) {
    el.insertBefore(node, sibling ? sibling.nextSibling : el.firstChild);
  }

  return node;
}

function hasSiblings(item) {
  var parent = item.mark || item.group;
  return parent && parent.items.length > 1;
}


// -- Set attributes & styles on SVG elements ---

var element = null, // temp var for current SVG element
    values = null;  // temp var for current values hash

// Extra configuration for certain mark types
var mark_extras = {
  group: function(mdef, el, item) {
    values = el.__values__; // use parent's values hash

    element = el.childNodes[1];
    mdef.foreground(emit, item, this);

    element = el.childNodes[0];
    mdef.background(emit, item, this);

    var value = item.mark.interactive === false ? 'none' : null;
    if (value !== values.events) {
      element.style.setProperty('pointer-events', value);
      values.events = value;
    }
  },
  text: function(mdef, el, item) {
    var value;

    value = Object(_util_text__WEBPACK_IMPORTED_MODULE_5__["textValue"])(item);
    if (value !== values.text) {
      el.textContent = value;
      values.text = value;
    }

    setStyle(el, 'font-family', Object(_util_text__WEBPACK_IMPORTED_MODULE_5__["fontFamily"])(item));
    setStyle(el, 'font-size', Object(_util_text__WEBPACK_IMPORTED_MODULE_5__["fontSize"])(item) + 'px');
    setStyle(el, 'font-style', item.fontStyle);
    setStyle(el, 'font-variant', item.fontVariant);
    setStyle(el, 'font-weight', item.fontWeight);
  }
};

function setStyle(el, name, value) {
  if (value !== values[name]) {
    if (value == null) {
      el.style.removeProperty(name);
    } else {
      el.style.setProperty(name, value + '');
    }
    values[name] = value;
  }
}

prototype._update = function(mdef, el, item) {
  // set dom element and values cache
  // provides access to emit method
  element = el;
  values = el.__values__;

  // apply svg attributes
  mdef.attr(emit, item, this);

  // some marks need special treatment
  var extra = mark_extras[mdef.type];
  if (extra) extra.call(this, mdef, el, item);

  // apply svg css styles
  // note: element may be modified by 'extra' method
  this.style(element, item);
};

function emit(name, value, ns) {
  // early exit if value is unchanged
  if (value === values[name]) return;

  if (value != null) {
    // if value is provided, update DOM attribute
    if (ns) {
      element.setAttributeNS(ns, name, value);
    } else {
      element.setAttribute(name, value);
    }
  } else {
    // else remove DOM attribute
    if (ns) {
      element.removeAttributeNS(ns, name);
    } else {
      element.removeAttribute(name);
    }
  }

  // note current value for future comparison
  values[name] = value;
}

prototype.style = function(el, o) {
  if (o == null) return;
  var i, n, prop, name, value;

  for (i=0, n=_util_svg_styles__WEBPACK_IMPORTED_MODULE_9__["styleProperties"].length; i<n; ++i) {
    prop = _util_svg_styles__WEBPACK_IMPORTED_MODULE_9__["styleProperties"][i];
    value = o[prop];

    if (prop === 'font') {
      value = Object(_util_text__WEBPACK_IMPORTED_MODULE_5__["fontFamily"])(o);
    }

    if (value === values[prop]) continue;

    name = _util_svg_styles__WEBPACK_IMPORTED_MODULE_9__["styles"][prop];
    if (value == null) {
      if (name === 'fill') {
        el.style.setProperty(name, 'none');
      } else {
        el.style.removeProperty(name);
      }
    } else {
      if (Object(_Gradient__WEBPACK_IMPORTED_MODULE_1__["isGradient"])(value)) {
        value = Object(_Gradient__WEBPACK_IMPORTED_MODULE_1__["gradientRef"])(value, this._defs.gradient, href());
      }
      el.style.setProperty(name, value + '');
    }

    values[prop] = value;
  }
};

function href() {
  var loc;
  return typeof window === 'undefined' ? ''
    : (loc = window.location).hash ? loc.href.slice(0, -loc.hash.length)
    : loc.href;
}


/***/ }),

/***/ "./node_modules/vega-scenegraph/src/SVGStringRenderer.js":
/*!***************************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/SVGStringRenderer.js ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return SVGStringRenderer; });
/* harmony import */ var _Renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Renderer */ "./node_modules/vega-scenegraph/src/Renderer.js");
/* harmony import */ var _Gradient__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Gradient */ "./node_modules/vega-scenegraph/src/Gradient.js");
/* harmony import */ var _marks_index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./marks/index */ "./node_modules/vega-scenegraph/src/marks/index.js");
/* harmony import */ var _util_dom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./util/dom */ "./node_modules/vega-scenegraph/src/util/dom.js");
/* harmony import */ var _util_tags__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./util/tags */ "./node_modules/vega-scenegraph/src/util/tags.js");
/* harmony import */ var _util_text__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./util/text */ "./node_modules/vega-scenegraph/src/util/text.js");
/* harmony import */ var _util_visit__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./util/visit */ "./node_modules/vega-scenegraph/src/util/visit.js");
/* harmony import */ var _util_svg_clip__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./util/svg/clip */ "./node_modules/vega-scenegraph/src/util/svg/clip.js");
/* harmony import */ var _util_svg_metadata__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./util/svg/metadata */ "./node_modules/vega-scenegraph/src/util/svg/metadata.js");
/* harmony import */ var _util_svg_styles__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./util/svg/styles */ "./node_modules/vega-scenegraph/src/util/svg/styles.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");












function SVGStringRenderer(loader) {
  _Renderer__WEBPACK_IMPORTED_MODULE_0__["default"].call(this, loader);

  this._text = {
    head: '',
    bg:   '',
    root: '',
    foot: '',
    defs: '',
    body: ''
  };

  this._defs = {
    gradient: {},
    clipping: {}
  };
}

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_10__["inherits"])(SVGStringRenderer, _Renderer__WEBPACK_IMPORTED_MODULE_0__["default"]);
var base = _Renderer__WEBPACK_IMPORTED_MODULE_0__["default"].prototype;

prototype.resize = function(width, height, origin, scaleFactor) {
  base.resize.call(this, width, height, origin, scaleFactor);
  var o = this._origin,
      t = this._text;

  var attr = {
    class:   'marks',
    width:   this._width * this._scale,
    height:  this._height * this._scale,
    viewBox: '0 0 ' + this._width + ' ' + this._height
  };
  for (var key in _util_svg_metadata__WEBPACK_IMPORTED_MODULE_8__["default"]) {
    attr[key] = _util_svg_metadata__WEBPACK_IMPORTED_MODULE_8__["default"][key];
  }

  t.head = Object(_util_tags__WEBPACK_IMPORTED_MODULE_4__["openTag"])('svg', attr);

  var bg = this._bgcolor;
  if (bg === 'transparent' || bg === 'none') bg = null;

  if (bg) {
    t.bg = Object(_util_tags__WEBPACK_IMPORTED_MODULE_4__["openTag"])('rect', {
      width:  this._width,
      height: this._height,
      style:  'fill: ' + bg + ';'
    }) + Object(_util_tags__WEBPACK_IMPORTED_MODULE_4__["closeTag"])('rect');
  } else {
    t.bg = '';
  }

  t.root = Object(_util_tags__WEBPACK_IMPORTED_MODULE_4__["openTag"])('g', {
    transform: 'translate(' + o + ')'
  });

  t.foot = Object(_util_tags__WEBPACK_IMPORTED_MODULE_4__["closeTag"])('g') + Object(_util_tags__WEBPACK_IMPORTED_MODULE_4__["closeTag"])('svg');

  return this;
};

prototype.background = function() {
  var rv = base.background.apply(this, arguments);
  if (arguments.length && this._text.head) {
    this.resize(this._width, this._height, this._origin, this._scale);
  }
  return rv;
};

prototype.svg = function() {
  var t = this._text;
  return t.head + t.bg + t.defs + t.root + t.body + t.foot;
};

prototype._render = function(scene) {
  this._text.body = this.mark(scene);
  this._text.defs = this.buildDefs();
  return this;
};

prototype.buildDefs = function() {
  var all = this._defs,
      defs = '',
      i, id, def, tag, stops;

  for (id in all.gradient) {
    def = all.gradient[id];
    stops = def.stops;

    if (def.gradient === 'radial') {
      // SVG radial gradients automatically transform to normalized bbox
      // coordinates, in a way that is cumbersome to replicate in canvas.
      // So we wrap the radial gradient in a pattern element, allowing us
      // to mantain a circular gradient that matches what canvas provides.

      defs += Object(_util_tags__WEBPACK_IMPORTED_MODULE_4__["openTag"])(tag = 'pattern', {
        id: _Gradient__WEBPACK_IMPORTED_MODULE_1__["patternPrefix"] + id,
        viewBox: '0,0,1,1',
        width: '100%',
        height: '100%',
        preserveAspectRatio: 'xMidYMid slice'
      });

      defs += Object(_util_tags__WEBPACK_IMPORTED_MODULE_4__["openTag"])('rect', {
        width: '1',
        height: '1',
        fill: 'url(#' + id + ')'
      }) + Object(_util_tags__WEBPACK_IMPORTED_MODULE_4__["closeTag"])('rect');

      defs += Object(_util_tags__WEBPACK_IMPORTED_MODULE_4__["closeTag"])(tag);

      defs += Object(_util_tags__WEBPACK_IMPORTED_MODULE_4__["openTag"])(tag = 'radialGradient', {
        id: id,
        fx: def.x1,
        fy: def.y1,
        fr: def.r1,
        cx: def.x2,
        cy: def.y2,
         r: def.r2
      });
    } else {
      defs += Object(_util_tags__WEBPACK_IMPORTED_MODULE_4__["openTag"])(tag = 'linearGradient', {
        id: id,
        x1: def.x1,
        x2: def.x2,
        y1: def.y1,
        y2: def.y2
      });
    }

    for (i=0; i<stops.length; ++i) {
      defs += Object(_util_tags__WEBPACK_IMPORTED_MODULE_4__["openTag"])('stop', {
        offset: stops[i].offset,
        'stop-color': stops[i].color
      }) + Object(_util_tags__WEBPACK_IMPORTED_MODULE_4__["closeTag"])('stop');
    }

    defs += Object(_util_tags__WEBPACK_IMPORTED_MODULE_4__["closeTag"])(tag);
  }

  for (id in all.clipping) {
    def = all.clipping[id];

    defs += Object(_util_tags__WEBPACK_IMPORTED_MODULE_4__["openTag"])('clipPath', {id: id});

    if (def.path) {
      defs += Object(_util_tags__WEBPACK_IMPORTED_MODULE_4__["openTag"])('path', {
        d: def.path
      }) + Object(_util_tags__WEBPACK_IMPORTED_MODULE_4__["closeTag"])('path');
    } else {
      defs += Object(_util_tags__WEBPACK_IMPORTED_MODULE_4__["openTag"])('rect', {
        x: 0,
        y: 0,
        width: def.width,
        height: def.height
      }) + Object(_util_tags__WEBPACK_IMPORTED_MODULE_4__["closeTag"])('rect');
    }

    defs += Object(_util_tags__WEBPACK_IMPORTED_MODULE_4__["closeTag"])('clipPath');
  }

  return (defs.length > 0) ? Object(_util_tags__WEBPACK_IMPORTED_MODULE_4__["openTag"])('defs') + defs + Object(_util_tags__WEBPACK_IMPORTED_MODULE_4__["closeTag"])('defs') : '';
};

var object;

function emit(name, value, ns, prefixed) {
  object[prefixed || name] = value;
}

prototype.attributes = function(attr, item) {
  object = {};
  attr(emit, item, this);
  return object;
};

prototype.href = function(item) {
  var that = this,
      href = item.href,
      attr;

  if (href) {
    if (attr = that._hrefs && that._hrefs[href]) {
      return attr;
    } else {
      that.sanitizeURL(href).then(function(attr) {
        // rewrite to use xlink namespace
        // note that this will be deprecated in SVG 2.0
        attr['xlink:href'] = attr.href;
        attr.href = null;
        (that._hrefs || (that._hrefs = {}))[href] = attr;
      });
    }
  }
  return null;
};

prototype.mark = function(scene) {
  var renderer = this,
      mdef = _marks_index__WEBPACK_IMPORTED_MODULE_2__["default"][scene.marktype],
      tag  = mdef.tag,
      defs = this._defs,
      str = '',
      style;

  if (tag !== 'g' && scene.interactive === false) {
    style = 'style="pointer-events: none;"';
  }

  // render opening group tag
  str += Object(_util_tags__WEBPACK_IMPORTED_MODULE_4__["openTag"])('g', {
    'class': Object(_util_dom__WEBPACK_IMPORTED_MODULE_3__["cssClass"])(scene),
    'clip-path': scene.clip ? Object(_util_svg_clip__WEBPACK_IMPORTED_MODULE_7__["default"])(renderer, scene, scene.group) : null
  }, style);

  // render contained elements
  function process(item) {
    var href = renderer.href(item);
    if (href) str += Object(_util_tags__WEBPACK_IMPORTED_MODULE_4__["openTag"])('a', href);

    style = (tag !== 'g') ? applyStyles(item, scene, tag, defs) : null;
    str += Object(_util_tags__WEBPACK_IMPORTED_MODULE_4__["openTag"])(tag, renderer.attributes(mdef.attr, item), style);

    if (tag === 'text') {
      str += escape_text(Object(_util_text__WEBPACK_IMPORTED_MODULE_5__["textValue"])(item));
    } else if (tag === 'g') {
      str += Object(_util_tags__WEBPACK_IMPORTED_MODULE_4__["openTag"])('path', renderer.attributes(mdef.background, item),
        applyStyles(item, scene, 'bgrect', defs)) + Object(_util_tags__WEBPACK_IMPORTED_MODULE_4__["closeTag"])('path');

      str += Object(_util_tags__WEBPACK_IMPORTED_MODULE_4__["openTag"])('g', renderer.attributes(mdef.foreground, item))
        + renderer.markGroup(item)
        + Object(_util_tags__WEBPACK_IMPORTED_MODULE_4__["closeTag"])('g');
    }

    str += Object(_util_tags__WEBPACK_IMPORTED_MODULE_4__["closeTag"])(tag);
    if (href) str += Object(_util_tags__WEBPACK_IMPORTED_MODULE_4__["closeTag"])('a');
  }

  if (mdef.nested) {
    if (scene.items && scene.items.length) process(scene.items[0]);
  } else {
    Object(_util_visit__WEBPACK_IMPORTED_MODULE_6__["visit"])(scene, process);
  }

  // render closing group tag
  return str + Object(_util_tags__WEBPACK_IMPORTED_MODULE_4__["closeTag"])('g');
};

prototype.markGroup = function(scene) {
  var renderer = this,
      str = '';

  Object(_util_visit__WEBPACK_IMPORTED_MODULE_6__["visit"])(scene, function(item) {
    str += renderer.mark(item);
  });

  return str;
};

function applyStyles(o, mark, tag, defs) {
  if (o == null) return '';
  var i, n, prop, name, value, s = '';

  if (tag === 'bgrect' && mark.interactive === false) {
    s += 'pointer-events: none; ';
  }

  if (tag === 'text') {
    s += 'font-family: ' + Object(_util_text__WEBPACK_IMPORTED_MODULE_5__["fontFamily"])(o) + '; ';
    s += 'font-size: ' + Object(_util_text__WEBPACK_IMPORTED_MODULE_5__["fontSize"])(o) + 'px; ';
    if (o.fontStyle) s += 'font-style: ' + o.fontStyle + '; ';
    if (o.fontVariant) s += 'font-variant: ' + o.fontVariant + '; ';
    if (o.fontWeight) s += 'font-weight: ' + o.fontWeight + '; ';
  }

  for (i=0, n=_util_svg_styles__WEBPACK_IMPORTED_MODULE_9__["styleProperties"].length; i<n; ++i) {
    prop = _util_svg_styles__WEBPACK_IMPORTED_MODULE_9__["styleProperties"][i];
    name = _util_svg_styles__WEBPACK_IMPORTED_MODULE_9__["styles"][prop];
    value = o[prop];

    if (value == null) {
      if (name === 'fill') {
        s += 'fill: none; ';
      }
    } else if (value === 'transparent' && (name === 'fill' || name === 'stroke')) {
      // transparent is not a legal SVG value, so map to none instead
      s += name + ': none; ';
    } else {
      if (Object(_Gradient__WEBPACK_IMPORTED_MODULE_1__["isGradient"])(value)) {
        value = Object(_Gradient__WEBPACK_IMPORTED_MODULE_1__["gradientRef"])(value, defs.gradient, '');
      }
      s += name + ': ' + value + '; ';
    }
  }

  return s ? 'style="' + s.trim() + '"' : null;
}

function escape_text(s) {
  return s.replace(/&/g, '&amp;')
          .replace(/</g, '&lt;')
          .replace(/>/g, '&gt;');
}


/***/ }),

/***/ "./node_modules/vega-scenegraph/src/Scenegraph.js":
/*!********************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/Scenegraph.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Scenegraph; });
/* harmony import */ var _Bounds__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Bounds */ "./node_modules/vega-scenegraph/src/Bounds.js");
/* harmony import */ var _GroupItem__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./GroupItem */ "./node_modules/vega-scenegraph/src/GroupItem.js");
/* harmony import */ var _util_serialize__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util/serialize */ "./node_modules/vega-scenegraph/src/util/serialize.js");




function Scenegraph(scene) {
  if (arguments.length) {
    this.root = Object(_util_serialize__WEBPACK_IMPORTED_MODULE_2__["sceneFromJSON"])(scene);
  } else {
    this.root = createMark({
      marktype: 'group',
      name: 'root',
      role: 'frame'
    });
    this.root.items = [new _GroupItem__WEBPACK_IMPORTED_MODULE_1__["default"](this.root)];
  }
}

var prototype = Scenegraph.prototype;

prototype.toJSON = function(indent) {
  return Object(_util_serialize__WEBPACK_IMPORTED_MODULE_2__["sceneToJSON"])(this.root, indent || 0);
};

prototype.mark = function(markdef, group, index) {
  group = group || this.root.items[0];
  var mark = createMark(markdef, group);
  group.items[index] = mark;
  if (mark.zindex) mark.group.zdirty = true;
  return mark;
};

function createMark(def, group) {
  return {
    bounds:      new _Bounds__WEBPACK_IMPORTED_MODULE_0__["default"](),
    clip:        !!def.clip,
    group:       group,
    interactive: def.interactive === false ? false : true,
    items:       [],
    marktype:    def.marktype,
    name:        def.name || undefined,
    role:        def.role || undefined,
    zindex:      def.zindex || 0
  };
}


/***/ }),

/***/ "./node_modules/vega-scenegraph/src/bound/boundClip.js":
/*!*************************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/bound/boundClip.js ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Bounds__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Bounds */ "./node_modules/vega-scenegraph/src/Bounds.js");
/* harmony import */ var _boundContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./boundContext */ "./node_modules/vega-scenegraph/src/bound/boundContext.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");




var clipBounds = new _Bounds__WEBPACK_IMPORTED_MODULE_0__["default"]();

/* harmony default export */ __webpack_exports__["default"] = (function(mark) {
  var clip = mark.clip;

  if (Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["isFunction"])(clip)) {
    clip(Object(_boundContext__WEBPACK_IMPORTED_MODULE_1__["default"])(clipBounds.clear()));
  } else if (clip) {
    clipBounds.set(0, 0, mark.group.width, mark.group.height);
  } else return;

  mark.bounds.intersect(clipBounds);
});


/***/ }),

/***/ "./node_modules/vega-scenegraph/src/bound/boundContext.js":
/*!****************************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/bound/boundContext.js ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return context; });
/* harmony import */ var _util_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/constants */ "./node_modules/vega-scenegraph/src/util/constants.js");


var bounds,
    circleThreshold = _util_constants__WEBPACK_IMPORTED_MODULE_0__["Tau"] - 1e-8;

function context(_) {
  bounds = _;
  return context;
}

function noop() {}

function add(x, y) { bounds.add(x, y); }

context.beginPath = noop;

context.closePath = noop;

context.moveTo = add;

context.lineTo = add;

context.rect = function(x, y, w, h) {
  add(x, y);
  add(x + w, y + h);
};

context.quadraticCurveTo = function(x1, y1, x2, y2) {
  add(x1, y1);
  add(x2, y2);
};

context.bezierCurveTo = function(x1, y1, x2, y2, x3, y3) {
  add(x1, y1);
  add(x2, y2);
  add(x3, y3);
};

context.arc = function(cx, cy, r, sa, ea, ccw) {
  if (Math.abs(ea - sa) > circleThreshold) {
    add(cx - r, cy - r);
    add(cx + r, cy + r);
    return;
  }

  var xmin = Infinity, xmax = -Infinity,
      ymin = Infinity, ymax = -Infinity,
      s, i, x, y;

  function update(a) {
    x = r * Math.cos(a);
    y = r * Math.sin(a);
    if (x < xmin) xmin = x;
    if (x > xmax) xmax = x;
    if (y < ymin) ymin = y;
    if (y > ymax) ymax = y;
  }

  // Sample end points and interior points aligned with 90 degrees
  update(sa);
  update(ea);

  if (ea !== sa) {
    sa = sa % _util_constants__WEBPACK_IMPORTED_MODULE_0__["Tau"]; if (sa < 0) sa += _util_constants__WEBPACK_IMPORTED_MODULE_0__["Tau"];
    ea = ea % _util_constants__WEBPACK_IMPORTED_MODULE_0__["Tau"]; if (ea < 0) ea += _util_constants__WEBPACK_IMPORTED_MODULE_0__["Tau"];

    if (ea < sa) {
      ccw = !ccw; // flip direction
      s = sa; sa = ea; ea = s; // swap end-points
    }

    if (ccw) {
      ea -= _util_constants__WEBPACK_IMPORTED_MODULE_0__["Tau"];
      s = sa - (sa % _util_constants__WEBPACK_IMPORTED_MODULE_0__["HalfPi"]);
      for (i=0; i<4 && s>ea; ++i, s-=_util_constants__WEBPACK_IMPORTED_MODULE_0__["HalfPi"]) update(s);
    } else {
      s = sa - (sa % _util_constants__WEBPACK_IMPORTED_MODULE_0__["HalfPi"]) + _util_constants__WEBPACK_IMPORTED_MODULE_0__["HalfPi"];
      for (i=0; i<4 && s<ea; ++i, s=s+_util_constants__WEBPACK_IMPORTED_MODULE_0__["HalfPi"]) update(s);
    }
  }

  add(cx + xmin, cy + ymin);
  add(cx + xmax, cy + ymax);
};


/***/ }),

/***/ "./node_modules/vega-scenegraph/src/bound/boundItem.js":
/*!*************************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/bound/boundItem.js ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Bounds__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Bounds */ "./node_modules/vega-scenegraph/src/Bounds.js");
/* harmony import */ var _marks_index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../marks/index */ "./node_modules/vega-scenegraph/src/marks/index.js");



/* harmony default export */ __webpack_exports__["default"] = (function(item, func, opt) {
  var type = _marks_index__WEBPACK_IMPORTED_MODULE_1__["default"][item.mark.marktype],
      bound = func || type.bound;
  if (type.nested) item = item.mark;

  return bound(item.bounds || (item.bounds = new _Bounds__WEBPACK_IMPORTED_MODULE_0__["default"]()), item, opt);
});


/***/ }),

/***/ "./node_modules/vega-scenegraph/src/bound/boundMark.js":
/*!*************************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/bound/boundMark.js ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Bounds__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Bounds */ "./node_modules/vega-scenegraph/src/Bounds.js");
/* harmony import */ var _boundItem__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./boundItem */ "./node_modules/vega-scenegraph/src/bound/boundItem.js");
/* harmony import */ var _marks_index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../marks/index */ "./node_modules/vega-scenegraph/src/marks/index.js");




var DUMMY = {mark: null};

/* harmony default export */ __webpack_exports__["default"] = (function(mark, bounds, opt) {
  var type  = _marks_index__WEBPACK_IMPORTED_MODULE_2__["default"][mark.marktype],
      bound = type.bound,
      items = mark.items,
      hasItems = items && items.length,
      i, n, item, b;

  if (type.nested) {
    if (hasItems) {
      item = items[0];
    } else {
      // no items, fake it
      DUMMY.mark = mark;
      item = DUMMY;
    }
    b = Object(_boundItem__WEBPACK_IMPORTED_MODULE_1__["default"])(item, bound, opt);
    bounds = bounds && bounds.union(b) || b;
    return bounds;
  }

  bounds = bounds
    || mark.bounds && mark.bounds.clear()
    || new _Bounds__WEBPACK_IMPORTED_MODULE_0__["default"]();

  if (hasItems) {
    for (i=0, n=items.length; i<n; ++i) {
      bounds.union(Object(_boundItem__WEBPACK_IMPORTED_MODULE_1__["default"])(items[i], bound, opt));
    }
  }

  return mark.bounds = bounds;
});


/***/ }),

/***/ "./node_modules/vega-scenegraph/src/bound/boundStroke.js":
/*!***************************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/bound/boundStroke.js ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(bounds, item) {
  if (item.stroke && item.opacity !== 0 && item.strokeOpacity !== 0) {
    bounds.expand(item.strokeWidth != null ? +item.strokeWidth : 1);
  }
  return bounds;
});


/***/ }),

/***/ "./node_modules/vega-scenegraph/src/intersect.js":
/*!*******************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/intersect.js ***!
  \*******************************************************/
/*! exports provided: intersect */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "intersect", function() { return intersect; });
/* harmony import */ var _marks_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./marks/index */ "./node_modules/vega-scenegraph/src/marks/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var _Bounds__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Bounds */ "./node_modules/vega-scenegraph/src/Bounds.js");




function intersect(scene, bounds, filter) {
  const hits = [], // intersection results
        box = new _Bounds__WEBPACK_IMPORTED_MODULE_2__["default"]().union(bounds), // defensive copy
        type = scene.marktype;

  return type ? intersectMark(scene, box, filter, hits)
    : type === 'group' ? intersectGroup(scene, box, filter, hits)
    : Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["error"])('Intersect scene must be mark node or group item.');
}

function intersectMark(mark, box, filter, hits) {
  if (visitMark(mark, box, filter)) {
    const items = mark.items,
          type = mark.marktype,
          n = items.length;

    let i = 0;

    if (type === 'group') {
      for (; i<n; ++i) {
        intersectGroup(items[i], box, filter, hits);
      }
    } else {
      for (const test = _marks_index__WEBPACK_IMPORTED_MODULE_0__["default"][type].isect; i<n; ++i) {
        let item = items[i];
        if (intersectItem(item, box, test)) hits.push(item);
      }
    }
  }
  return hits;
}

function visitMark(mark, box, filter) {
  // process if bounds intersect and if
  // (1) mark is a group mark (so we must recurse), or
  // (2) mark is interactive and passes filter
  return mark.bounds && box.intersects(mark.bounds) && (
    mark.marktype === 'group' ||
    mark.interactive !== false && (!filter || filter(mark))
  );
}

function intersectGroup(group, box, filter, hits) {
  // test intersect against group
  // skip groups by default unless filter says otherwise
  if ((filter && filter(group.mark)) &&
      intersectItem(group, box, _marks_index__WEBPACK_IMPORTED_MODULE_0__["default"].group.isect)) {
    hits.push(group);
  }

  // recursively test children marks
  // translate box to group coordinate space
  const marks = group.items,
        n = marks && marks.length;

  if (n) {
    const x = group.x || 0,
          y = group.y || 0;
    box.translate(-x, -y);
    for (let i=0; i<n; ++i) {
      intersectMark(marks[i], box, filter, hits);
    }
    box.translate(x, y);
  }

  return hits;
}

function intersectItem(item, box, test) {
  // test bounds enclosure, bounds intersection, then detailed test
  const bounds = item.bounds;
  return box.encloses(bounds) || (box.intersects(bounds) && test(item, box));
}



/***/ }),

/***/ "./node_modules/vega-scenegraph/src/marks/arc.js":
/*!*******************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/marks/arc.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _path_shapes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../path/shapes */ "./node_modules/vega-scenegraph/src/path/shapes.js");
/* harmony import */ var _markItemPath__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./markItemPath */ "./node_modules/vega-scenegraph/src/marks/markItemPath.js");



/* harmony default export */ __webpack_exports__["default"] = (Object(_markItemPath__WEBPACK_IMPORTED_MODULE_1__["default"])('arc', _path_shapes__WEBPACK_IMPORTED_MODULE_0__["arc"]));


/***/ }),

/***/ "./node_modules/vega-scenegraph/src/marks/area.js":
/*!********************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/marks/area.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _path_shapes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../path/shapes */ "./node_modules/vega-scenegraph/src/path/shapes.js");
/* harmony import */ var _util_pickPath__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/pickPath */ "./node_modules/vega-scenegraph/src/util/pickPath.js");
/* harmony import */ var _markMultiItemPath__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./markMultiItemPath */ "./node_modules/vega-scenegraph/src/marks/markMultiItemPath.js");




/* harmony default export */ __webpack_exports__["default"] = (Object(_markMultiItemPath__WEBPACK_IMPORTED_MODULE_2__["default"])('area', _path_shapes__WEBPACK_IMPORTED_MODULE_0__["area"], _util_pickPath__WEBPACK_IMPORTED_MODULE_1__["pickArea"]));


/***/ }),

/***/ "./node_modules/vega-scenegraph/src/marks/group.js":
/*!*********************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/marks/group.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _path_shapes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../path/shapes */ "./node_modules/vega-scenegraph/src/path/shapes.js");
/* harmony import */ var _bound_boundStroke__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../bound/boundStroke */ "./node_modules/vega-scenegraph/src/bound/boundStroke.js");
/* harmony import */ var _util_intersect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/intersect */ "./node_modules/vega-scenegraph/src/util/intersect.js");
/* harmony import */ var _util_visit__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/visit */ "./node_modules/vega-scenegraph/src/util/visit.js");
/* harmony import */ var _util_canvas_stroke__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/canvas/stroke */ "./node_modules/vega-scenegraph/src/util/canvas/stroke.js");
/* harmony import */ var _util_canvas_fill__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/canvas/fill */ "./node_modules/vega-scenegraph/src/util/canvas/fill.js");
/* harmony import */ var _util_canvas_pick__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util/canvas/pick */ "./node_modules/vega-scenegraph/src/util/canvas/pick.js");
/* harmony import */ var _util_svg_clip__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../util/svg/clip */ "./node_modules/vega-scenegraph/src/util/svg/clip.js");
/* harmony import */ var _util_svg_transform__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../util/svg/transform */ "./node_modules/vega-scenegraph/src/util/svg/transform.js");










var StrokeOffset = 0.5;

function attr(emit, item) {
  emit('transform', Object(_util_svg_transform__WEBPACK_IMPORTED_MODULE_8__["translateItem"])(item));
}

function background(emit, item) {
  var offset = item.stroke ? StrokeOffset : 0;
  emit('class', 'background');
  emit('d', Object(_path_shapes__WEBPACK_IMPORTED_MODULE_0__["rectangle"])(null, item, offset, offset));
}

function foreground(emit, item, renderer) {
  var url = item.clip ? Object(_util_svg_clip__WEBPACK_IMPORTED_MODULE_7__["default"])(renderer, item, item) : null;
  emit('clip-path', url);
}

function bound(bounds, group) {
  if (!group.clip && group.items) {
    var items = group.items;
    for (var j=0, m=items.length; j<m; ++j) {
      bounds.union(items[j].bounds);
    }
  }

  if ((group.clip || group.width || group.height) && !group.noBound) {
    bounds.add(0, 0).add(group.width || 0, group.height || 0);
  }

  Object(_bound_boundStroke__WEBPACK_IMPORTED_MODULE_1__["default"])(bounds, group);

  return bounds.translate(group.x || 0, group.y || 0);
}

function backgroundPath(context, group) {
  var offset = group.stroke ? StrokeOffset : 0;
  context.beginPath();
  Object(_path_shapes__WEBPACK_IMPORTED_MODULE_0__["rectangle"])(context, group, offset, offset);
}

var hitBackground = Object(_util_canvas_pick__WEBPACK_IMPORTED_MODULE_6__["hitPath"])(backgroundPath);

function draw(context, scene, bounds) {
  var renderer = this;

  Object(_util_visit__WEBPACK_IMPORTED_MODULE_3__["visit"])(scene, function(group) {
    var gx = group.x || 0,
        gy = group.y || 0,
        w = group.width || 0,
        h = group.height || 0,
        opacity;

    // setup graphics context
    context.save();
    context.translate(gx, gy);

    // draw group background
    if (group.stroke || group.fill) {
      opacity = group.opacity == null ? 1 : group.opacity;
      if (opacity > 0) {
        backgroundPath(context, group);
        if (group.fill && Object(_util_canvas_fill__WEBPACK_IMPORTED_MODULE_5__["default"])(context, group, opacity)) {
          context.fill();
        }
        if (group.stroke && Object(_util_canvas_stroke__WEBPACK_IMPORTED_MODULE_4__["default"])(context, group, opacity)) {
          context.stroke();
        }
      }
    }

    // set clip and bounds
    if (group.clip) {
      context.beginPath();
      context.rect(0, 0, w, h);
      context.clip();
    }
    if (bounds) bounds.translate(-gx, -gy);

    // draw group contents
    Object(_util_visit__WEBPACK_IMPORTED_MODULE_3__["visit"])(group, function(item) {
      renderer.draw(context, item, bounds);
    });

    // restore graphics context
    if (bounds) bounds.translate(gx, gy);
    context.restore();
  });
}

function pick(context, scene, x, y, gx, gy) {
  if (scene.bounds && !scene.bounds.contains(gx, gy) || !scene.items) {
    return null;
  }

  var handler = this,
      cx = x * context.pixelRatio,
      cy = y * context.pixelRatio;

  return Object(_util_visit__WEBPACK_IMPORTED_MODULE_3__["pickVisit"])(scene, function(group) {
    var hit, dx, dy, b;

    // first hit test against bounding box
    // if a group is clipped, that should be handled by the bounds check.
    b = group.bounds;
    if (b && !b.contains(gx, gy)) return;

    // passed bounds check, so test sub-groups
    dx = (group.x || 0);
    dy = (group.y || 0);

    context.save();
    context.translate(dx, dy);

    dx = gx - dx;
    dy = gy - dy;

    // hit test against contained marks
    hit = Object(_util_visit__WEBPACK_IMPORTED_MODULE_3__["pickVisit"])(group, function(mark) {
      return pickMark(mark, dx, dy)
        ? handler.pick(mark, x, y, dx, dy)
        : null;
    });

    // hit test against group background
    if (!hit && scene.interactive !== false
        && (group.fill || group.stroke)
        && hitBackground(context, group, cx, cy)) {
      hit = group;
    }

    context.restore();
    return hit || null;
  });
}

function pickMark(mark, x, y) {
  return (mark.interactive !== false || mark.marktype === 'group')
    && mark.bounds && mark.bounds.contains(x, y);
}

/* harmony default export */ __webpack_exports__["default"] = ({
  type:       'group',
  tag:        'g',
  nested:     false,
  attr:       attr,
  bound:      bound,
  draw:       draw,
  pick:       pick,
  isect:      _util_intersect__WEBPACK_IMPORTED_MODULE_2__["intersectRect"],
  background: background,
  foreground: foreground
});


/***/ }),

/***/ "./node_modules/vega-scenegraph/src/marks/image.js":
/*!*********************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/marks/image.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _util_visit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/visit */ "./node_modules/vega-scenegraph/src/util/visit.js");
/* harmony import */ var _util_canvas_pick__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/canvas/pick */ "./node_modules/vega-scenegraph/src/util/canvas/pick.js");
/* harmony import */ var _util_svg_transform__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/svg/transform */ "./node_modules/vega-scenegraph/src/util/svg/transform.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");





function getImage(item, renderer) {
  var image = item.image;
  if (!image || image.url !== item.url) {
    image = {loaded: false, width: 0, height: 0};
    renderer.loadImage(item.url).then(function(image) {
      item.image = image;
      item.image.url = item.url;
    });
  }
  return image;
}

function imageXOffset(align, w) {
  return align === 'center' ? w / 2 : align === 'right' ? w : 0;
}

function imageYOffset(baseline, h) {
  return baseline === 'middle' ? h / 2 : baseline === 'bottom' ? h : 0;
}

function attr(emit, item, renderer) {
  var image = getImage(item, renderer),
      x = item.x || 0,
      y = item.y || 0,
      w = (item.width != null ? item.width : image.width) || 0,
      h = (item.height != null ? item.height : image.height) || 0,
      a = item.aspect === false ? 'none' : 'xMidYMid';

  x -= imageXOffset(item.align, w);
  y -= imageYOffset(item.baseline, h);

  emit('href', image.src || '', 'http://www.w3.org/1999/xlink', 'xlink:href');
  emit('transform', Object(_util_svg_transform__WEBPACK_IMPORTED_MODULE_2__["translate"])(x, y));
  emit('width', w);
  emit('height', h);
  emit('preserveAspectRatio', a);
}

function bound(bounds, item) {
  var image = item.image,
      x = item.x || 0,
      y = item.y || 0,
      w = (item.width != null ? item.width : (image && image.width)) || 0,
      h = (item.height != null ? item.height : (image && image.height)) || 0;

  x -= imageXOffset(item.align, w);
  y -= imageYOffset(item.baseline, h);

  return bounds.set(x, y, x + w, y + h);
}

function draw(context, scene, bounds) {
  var renderer = this;

  Object(_util_visit__WEBPACK_IMPORTED_MODULE_0__["visit"])(scene, function(item) {
    if (bounds && !bounds.intersects(item.bounds)) return; // bounds check

    var image = getImage(item, renderer),
        x = item.x || 0,
        y = item.y || 0,
        w = (item.width != null ? item.width : image.width) || 0,
        h = (item.height != null ? item.height : image.height) || 0,
        opacity, ar0, ar1, t;

    x -= imageXOffset(item.align, w);
    y -= imageYOffset(item.baseline, h);

    if (item.aspect !== false) {
      ar0 = image.width / image.height;
      ar1 = item.width / item.height;
      if (ar0 === ar0 && ar1 === ar1 && ar0 !== ar1) {
        if (ar1 < ar0) {
          t = w / ar0;
          y += (h - t) / 2;
          h = t;
        } else {
          t = h * ar0;
          x += (w - t) / 2;
          w = t;
        }
      }
    }

    if (image.loaded) {
      context.globalAlpha = (opacity = item.opacity) != null ? opacity : 1;
      context.drawImage(image, x, y, w, h);
    }
  });
}

/* harmony default export */ __webpack_exports__["default"] = ({
  type:     'image',
  tag:      'image',
  nested:   false,
  attr:     attr,
  bound:    bound,
  draw:     draw,
  pick:     Object(_util_canvas_pick__WEBPACK_IMPORTED_MODULE_1__["pick"])(),
  isect:    vega_util__WEBPACK_IMPORTED_MODULE_3__["truthy"], // bounds check is sufficient
  get:      getImage,
  xOffset:  imageXOffset,
  yOffset:  imageYOffset
});


/***/ }),

/***/ "./node_modules/vega-scenegraph/src/marks/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/marks/index.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _arc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./arc */ "./node_modules/vega-scenegraph/src/marks/arc.js");
/* harmony import */ var _area__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./area */ "./node_modules/vega-scenegraph/src/marks/area.js");
/* harmony import */ var _group__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./group */ "./node_modules/vega-scenegraph/src/marks/group.js");
/* harmony import */ var _image__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./image */ "./node_modules/vega-scenegraph/src/marks/image.js");
/* harmony import */ var _line__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./line */ "./node_modules/vega-scenegraph/src/marks/line.js");
/* harmony import */ var _path__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./path */ "./node_modules/vega-scenegraph/src/marks/path.js");
/* harmony import */ var _rect__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./rect */ "./node_modules/vega-scenegraph/src/marks/rect.js");
/* harmony import */ var _rule__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./rule */ "./node_modules/vega-scenegraph/src/marks/rule.js");
/* harmony import */ var _shape__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./shape */ "./node_modules/vega-scenegraph/src/marks/shape.js");
/* harmony import */ var _symbol__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./symbol */ "./node_modules/vega-scenegraph/src/marks/symbol.js");
/* harmony import */ var _text__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./text */ "./node_modules/vega-scenegraph/src/marks/text.js");
/* harmony import */ var _trail__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./trail */ "./node_modules/vega-scenegraph/src/marks/trail.js");













/* harmony default export */ __webpack_exports__["default"] = ({
  arc:     _arc__WEBPACK_IMPORTED_MODULE_0__["default"],
  area:    _area__WEBPACK_IMPORTED_MODULE_1__["default"],
  group:   _group__WEBPACK_IMPORTED_MODULE_2__["default"],
  image:   _image__WEBPACK_IMPORTED_MODULE_3__["default"],
  line:    _line__WEBPACK_IMPORTED_MODULE_4__["default"],
  path:    _path__WEBPACK_IMPORTED_MODULE_5__["default"],
  rect:    _rect__WEBPACK_IMPORTED_MODULE_6__["default"],
  rule:    _rule__WEBPACK_IMPORTED_MODULE_7__["default"],
  shape:   _shape__WEBPACK_IMPORTED_MODULE_8__["default"],
  symbol:  _symbol__WEBPACK_IMPORTED_MODULE_9__["default"],
  text:    _text__WEBPACK_IMPORTED_MODULE_10__["default"],
  trail:   _trail__WEBPACK_IMPORTED_MODULE_11__["default"]
});


/***/ }),

/***/ "./node_modules/vega-scenegraph/src/marks/line.js":
/*!********************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/marks/line.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _path_shapes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../path/shapes */ "./node_modules/vega-scenegraph/src/path/shapes.js");
/* harmony import */ var _util_pickPath__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/pickPath */ "./node_modules/vega-scenegraph/src/util/pickPath.js");
/* harmony import */ var _markMultiItemPath__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./markMultiItemPath */ "./node_modules/vega-scenegraph/src/marks/markMultiItemPath.js");




/* harmony default export */ __webpack_exports__["default"] = (Object(_markMultiItemPath__WEBPACK_IMPORTED_MODULE_2__["default"])('line', _path_shapes__WEBPACK_IMPORTED_MODULE_0__["line"], _util_pickPath__WEBPACK_IMPORTED_MODULE_1__["pickLine"]));


/***/ }),

/***/ "./node_modules/vega-scenegraph/src/marks/markItemPath.js":
/*!****************************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/marks/markItemPath.js ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _bound_boundStroke__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bound/boundStroke */ "./node_modules/vega-scenegraph/src/bound/boundStroke.js");
/* harmony import */ var _bound_boundContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../bound/boundContext */ "./node_modules/vega-scenegraph/src/bound/boundContext.js");
/* harmony import */ var _util_intersect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/intersect */ "./node_modules/vega-scenegraph/src/util/intersect.js");
/* harmony import */ var _util_canvas_draw__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/canvas/draw */ "./node_modules/vega-scenegraph/src/util/canvas/draw.js");
/* harmony import */ var _util_canvas_pick__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/canvas/pick */ "./node_modules/vega-scenegraph/src/util/canvas/pick.js");
/* harmony import */ var _util_svg_transform__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/svg/transform */ "./node_modules/vega-scenegraph/src/util/svg/transform.js");
/* harmony import */ var _util_constants__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util/constants */ "./node_modules/vega-scenegraph/src/util/constants.js");








/* harmony default export */ __webpack_exports__["default"] = (function(type, shape, isect) {

  function attr(emit, item) {
    emit('transform', Object(_util_svg_transform__WEBPACK_IMPORTED_MODULE_5__["transformItem"])(item));
    emit('d', shape(null, item));
  }

  function bound(bounds, item) {
    var x = item.x || 0,
        y = item.y || 0;

    shape(Object(_bound_boundContext__WEBPACK_IMPORTED_MODULE_1__["default"])(bounds), item);
    Object(_bound_boundStroke__WEBPACK_IMPORTED_MODULE_0__["default"])(bounds, item).translate(x, y);
    if (item.angle) {
      bounds.rotate(item.angle * _util_constants__WEBPACK_IMPORTED_MODULE_6__["DegToRad"], x, y);
    }

    return bounds;
  }

  function draw(context, item) {
    var x = item.x || 0,
        y = item.y || 0,
        a = item.angle || 0;

    context.translate(x, y);
    if (a) context.rotate(a *= _util_constants__WEBPACK_IMPORTED_MODULE_6__["DegToRad"]);
    context.beginPath();
    shape(context, item);
    if (a) context.rotate(-a);
    context.translate(-x, -y);
  }

  return {
    type:   type,
    tag:    'path',
    nested: false,
    attr:   attr,
    bound:  bound,
    draw:   Object(_util_canvas_draw__WEBPACK_IMPORTED_MODULE_3__["drawAll"])(draw),
    pick:   Object(_util_canvas_pick__WEBPACK_IMPORTED_MODULE_4__["pickPath"])(draw),
    isect:  isect || Object(_util_intersect__WEBPACK_IMPORTED_MODULE_2__["intersectPath"])(draw)
  };

});


/***/ }),

/***/ "./node_modules/vega-scenegraph/src/marks/markMultiItemPath.js":
/*!*********************************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/marks/markMultiItemPath.js ***!
  \*********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _bound_boundStroke__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bound/boundStroke */ "./node_modules/vega-scenegraph/src/bound/boundStroke.js");
/* harmony import */ var _bound_boundContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../bound/boundContext */ "./node_modules/vega-scenegraph/src/bound/boundContext.js");
/* harmony import */ var _util_intersect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/intersect */ "./node_modules/vega-scenegraph/src/util/intersect.js");
/* harmony import */ var _util_canvas_draw__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/canvas/draw */ "./node_modules/vega-scenegraph/src/util/canvas/draw.js");
/* harmony import */ var _util_canvas_pick__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/canvas/pick */ "./node_modules/vega-scenegraph/src/util/canvas/pick.js");






/* harmony default export */ __webpack_exports__["default"] = (function(type, shape, tip) {

  function attr(emit, item) {
    var items = item.mark.items;
    if (items.length) emit('d', shape(null, items));
  }

  function bound(bounds, mark) {
    var items = mark.items;
    if (items.length === 0) {
      return bounds;
    } else {
      shape(Object(_bound_boundContext__WEBPACK_IMPORTED_MODULE_1__["default"])(bounds), items);
      return Object(_bound_boundStroke__WEBPACK_IMPORTED_MODULE_0__["default"])(bounds, items[0]);
    }
  }

  function draw(context, items) {
    context.beginPath();
    shape(context, items);
  }

  var hit = Object(_util_canvas_pick__WEBPACK_IMPORTED_MODULE_4__["hitPath"])(draw);

  function pick(context, scene, x, y, gx, gy) {
    var items = scene.items,
        b = scene.bounds;

    if (!items || !items.length || b && !b.contains(gx, gy)) {
      return null;
    }

    x *= context.pixelRatio;
    y *= context.pixelRatio;
    return hit(context, items, x, y) ? items[0] : null;
  }

  return {
    type:   type,
    tag:    'path',
    nested: true,
    attr:   attr,
    bound:  bound,
    draw:   Object(_util_canvas_draw__WEBPACK_IMPORTED_MODULE_3__["drawOne"])(draw),
    pick:   pick,
    isect:  _util_intersect__WEBPACK_IMPORTED_MODULE_2__["intersectPoint"],
    tip:    tip
  };

});




/***/ }),

/***/ "./node_modules/vega-scenegraph/src/marks/path.js":
/*!********************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/marks/path.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _bound_boundStroke__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bound/boundStroke */ "./node_modules/vega-scenegraph/src/bound/boundStroke.js");
/* harmony import */ var _bound_boundContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../bound/boundContext */ "./node_modules/vega-scenegraph/src/bound/boundContext.js");
/* harmony import */ var _path_parse__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../path/parse */ "./node_modules/vega-scenegraph/src/path/parse.js");
/* harmony import */ var _path_render__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../path/render */ "./node_modules/vega-scenegraph/src/path/render.js");
/* harmony import */ var _util_intersect__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/intersect */ "./node_modules/vega-scenegraph/src/util/intersect.js");
/* harmony import */ var _util_canvas_draw__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/canvas/draw */ "./node_modules/vega-scenegraph/src/util/canvas/draw.js");
/* harmony import */ var _util_canvas_pick__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util/canvas/pick */ "./node_modules/vega-scenegraph/src/util/canvas/pick.js");
/* harmony import */ var _util_svg_transform__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../util/svg/transform */ "./node_modules/vega-scenegraph/src/util/svg/transform.js");









function attr(emit, item) {
  emit('transform', Object(_util_svg_transform__WEBPACK_IMPORTED_MODULE_7__["translateItem"])(item));
  emit('d', item.path);
}

function path(context, item) {
  var path = item.path;
  if (path == null) return true;

  var cache = item.pathCache;
  if (!cache || cache.path !== path) {
    (item.pathCache = cache = Object(_path_parse__WEBPACK_IMPORTED_MODULE_2__["default"])(path)).path = path;
  }
  Object(_path_render__WEBPACK_IMPORTED_MODULE_3__["default"])(context, cache, item.x, item.y);
}

function bound(bounds, item) {
  return path(Object(_bound_boundContext__WEBPACK_IMPORTED_MODULE_1__["default"])(bounds), item)
    ? bounds.set(0, 0, 0, 0)
    : Object(_bound_boundStroke__WEBPACK_IMPORTED_MODULE_0__["default"])(bounds, item);
}

/* harmony default export */ __webpack_exports__["default"] = ({
  type:   'path',
  tag:    'path',
  nested: false,
  attr:   attr,
  bound:  bound,
  draw:   Object(_util_canvas_draw__WEBPACK_IMPORTED_MODULE_5__["drawAll"])(path),
  pick:   Object(_util_canvas_pick__WEBPACK_IMPORTED_MODULE_6__["pickPath"])(path),
  isect:  Object(_util_intersect__WEBPACK_IMPORTED_MODULE_4__["intersectPath"])(path)
});


/***/ }),

/***/ "./node_modules/vega-scenegraph/src/marks/rect.js":
/*!********************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/marks/rect.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _bound_boundStroke__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bound/boundStroke */ "./node_modules/vega-scenegraph/src/bound/boundStroke.js");
/* harmony import */ var _path_shapes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../path/shapes */ "./node_modules/vega-scenegraph/src/path/shapes.js");
/* harmony import */ var _util_intersect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/intersect */ "./node_modules/vega-scenegraph/src/util/intersect.js");
/* harmony import */ var _util_canvas_draw__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/canvas/draw */ "./node_modules/vega-scenegraph/src/util/canvas/draw.js");
/* harmony import */ var _util_canvas_pick__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/canvas/pick */ "./node_modules/vega-scenegraph/src/util/canvas/pick.js");






function attr(emit, item) {
  emit('d', Object(_path_shapes__WEBPACK_IMPORTED_MODULE_1__["rectangle"])(null, item));
}

function bound(bounds, item) {
  var x, y;
  return Object(_bound_boundStroke__WEBPACK_IMPORTED_MODULE_0__["default"])(bounds.set(
    x = item.x || 0,
    y = item.y || 0,
    (x + item.width) || 0,
    (y + item.height) || 0
  ), item);
}

function draw(context, item) {
  context.beginPath();
  Object(_path_shapes__WEBPACK_IMPORTED_MODULE_1__["rectangle"])(context, item);
}

/* harmony default export */ __webpack_exports__["default"] = ({
  type:   'rect',
  tag:    'path',
  nested: false,
  attr:   attr,
  bound:  bound,
  draw:   Object(_util_canvas_draw__WEBPACK_IMPORTED_MODULE_3__["drawAll"])(draw),
  pick:   Object(_util_canvas_pick__WEBPACK_IMPORTED_MODULE_4__["pickPath"])(draw),
  isect:  _util_intersect__WEBPACK_IMPORTED_MODULE_2__["intersectRect"]
});


/***/ }),

/***/ "./node_modules/vega-scenegraph/src/marks/rule.js":
/*!********************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/marks/rule.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _bound_boundStroke__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bound/boundStroke */ "./node_modules/vega-scenegraph/src/bound/boundStroke.js");
/* harmony import */ var _util_intersect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/intersect */ "./node_modules/vega-scenegraph/src/util/intersect.js");
/* harmony import */ var _util_visit__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/visit */ "./node_modules/vega-scenegraph/src/util/visit.js");
/* harmony import */ var _util_canvas_pick__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/canvas/pick */ "./node_modules/vega-scenegraph/src/util/canvas/pick.js");
/* harmony import */ var _util_canvas_stroke__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/canvas/stroke */ "./node_modules/vega-scenegraph/src/util/canvas/stroke.js");
/* harmony import */ var _util_svg_transform__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/svg/transform */ "./node_modules/vega-scenegraph/src/util/svg/transform.js");







function attr(emit, item) {
  emit('transform', Object(_util_svg_transform__WEBPACK_IMPORTED_MODULE_5__["translateItem"])(item));
  emit('x2', item.x2 != null ? item.x2 - (item.x || 0) : 0);
  emit('y2', item.y2 != null ? item.y2 - (item.y || 0) : 0);
}

function bound(bounds, item) {
  var x1, y1;
  return Object(_bound_boundStroke__WEBPACK_IMPORTED_MODULE_0__["default"])(bounds.set(
    x1 = item.x || 0,
    y1 = item.y || 0,
    item.x2 != null ? item.x2 : x1,
    item.y2 != null ? item.y2 : y1
  ), item);
}

function path(context, item, opacity) {
  var x1, y1, x2, y2;

  if (item.stroke && Object(_util_canvas_stroke__WEBPACK_IMPORTED_MODULE_4__["default"])(context, item, opacity)) {
    x1 = item.x || 0;
    y1 = item.y || 0;
    x2 = item.x2 != null ? item.x2 : x1;
    y2 = item.y2 != null ? item.y2 : y1;
    context.beginPath();
    context.moveTo(x1, y1);
    context.lineTo(x2, y2);
    return true;
  }
  return false;
}

function draw(context, scene, bounds) {
  Object(_util_visit__WEBPACK_IMPORTED_MODULE_2__["visit"])(scene, function(item) {
    if (bounds && !bounds.intersects(item.bounds)) return; // bounds check
    var opacity = item.opacity == null ? 1 : item.opacity;
    if (opacity && path(context, item, opacity)) {
      context.stroke();
    }
  });
}

function hit(context, item, x, y) {
  if (!context.isPointInStroke) return false;
  return path(context, item, 1) && context.isPointInStroke(x, y);
}

/* harmony default export */ __webpack_exports__["default"] = ({
  type:   'rule',
  tag:    'line',
  nested: false,
  attr:   attr,
  bound:  bound,
  draw:   draw,
  pick:   Object(_util_canvas_pick__WEBPACK_IMPORTED_MODULE_3__["pick"])(hit),
  isect:  _util_intersect__WEBPACK_IMPORTED_MODULE_1__["intersectRule"]
});


/***/ }),

/***/ "./node_modules/vega-scenegraph/src/marks/shape.js":
/*!*********************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/marks/shape.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _path_shapes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../path/shapes */ "./node_modules/vega-scenegraph/src/path/shapes.js");
/* harmony import */ var _markItemPath__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./markItemPath */ "./node_modules/vega-scenegraph/src/marks/markItemPath.js");



/* harmony default export */ __webpack_exports__["default"] = (Object(_markItemPath__WEBPACK_IMPORTED_MODULE_1__["default"])('shape', _path_shapes__WEBPACK_IMPORTED_MODULE_0__["shape"]));


/***/ }),

/***/ "./node_modules/vega-scenegraph/src/marks/symbol.js":
/*!**********************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/marks/symbol.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _path_shapes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../path/shapes */ "./node_modules/vega-scenegraph/src/path/shapes.js");
/* harmony import */ var _util_intersect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/intersect */ "./node_modules/vega-scenegraph/src/util/intersect.js");
/* harmony import */ var _markItemPath__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./markItemPath */ "./node_modules/vega-scenegraph/src/marks/markItemPath.js");




/* harmony default export */ __webpack_exports__["default"] = (Object(_markItemPath__WEBPACK_IMPORTED_MODULE_2__["default"])('symbol', _path_shapes__WEBPACK_IMPORTED_MODULE_0__["symbol"], _util_intersect__WEBPACK_IMPORTED_MODULE_1__["intersectPoint"]));


/***/ }),

/***/ "./node_modules/vega-scenegraph/src/marks/text.js":
/*!********************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/marks/text.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Bounds__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Bounds */ "./node_modules/vega-scenegraph/src/Bounds.js");
/* harmony import */ var _util_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/constants */ "./node_modules/vega-scenegraph/src/util/constants.js");
/* harmony import */ var _util_text__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/text */ "./node_modules/vega-scenegraph/src/util/text.js");
/* harmony import */ var _util_intersect__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/intersect */ "./node_modules/vega-scenegraph/src/util/intersect.js");
/* harmony import */ var _util_visit__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/visit */ "./node_modules/vega-scenegraph/src/util/visit.js");
/* harmony import */ var _util_canvas_fill__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/canvas/fill */ "./node_modules/vega-scenegraph/src/util/canvas/fill.js");
/* harmony import */ var _util_canvas_pick__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util/canvas/pick */ "./node_modules/vega-scenegraph/src/util/canvas/pick.js");
/* harmony import */ var _util_canvas_stroke__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../util/canvas/stroke */ "./node_modules/vega-scenegraph/src/util/canvas/stroke.js");
/* harmony import */ var _util_svg_transform__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../util/svg/transform */ "./node_modules/vega-scenegraph/src/util/svg/transform.js");










var textAlign = {
  'left':   'start',
  'center': 'middle',
  'right':  'end'
};

var tempBounds = new _Bounds__WEBPACK_IMPORTED_MODULE_0__["default"]();

function anchorPoint(item) {
  var x = item.x || 0,
      y = item.y || 0,
      r = item.radius || 0, t;

  if (r) {
    t = (item.theta || 0) - _util_constants__WEBPACK_IMPORTED_MODULE_1__["HalfPi"];
    x += r * Math.cos(t);
    y += r * Math.sin(t);
  }

  tempBounds.x1 = x;
  tempBounds.y1 = y;
  return tempBounds;
}

function attr(emit, item) {
  var dx = item.dx || 0,
      dy = (item.dy || 0) + Object(_util_text__WEBPACK_IMPORTED_MODULE_2__["offset"])(item),
      p = anchorPoint(item),
      x = p.x1,
      y = p.y1,
      a = item.angle || 0, t;

  emit('text-anchor', textAlign[item.align] || 'start');

  if (a) {
    t = Object(_util_svg_transform__WEBPACK_IMPORTED_MODULE_8__["translate"])(x, y) + ' ' + Object(_util_svg_transform__WEBPACK_IMPORTED_MODULE_8__["rotate"])(a);
    if (dx || dy) t += ' ' + Object(_util_svg_transform__WEBPACK_IMPORTED_MODULE_8__["translate"])(dx, dy);
  } else {
    t = Object(_util_svg_transform__WEBPACK_IMPORTED_MODULE_8__["translate"])(x + dx, y + dy);
  }
  emit('transform', t);
}

function bound(bounds, item, mode) {
  var h = _util_text__WEBPACK_IMPORTED_MODULE_2__["textMetrics"].height(item),
      a = item.align,
      p = anchorPoint(item),
      x = p.x1,
      y = p.y1,
      dx = item.dx || 0,
      dy = (item.dy || 0) + Object(_util_text__WEBPACK_IMPORTED_MODULE_2__["offset"])(item) - Math.round(0.8*h), // use 4/5 offset
      w;

  // horizontal alignment
  w = _util_text__WEBPACK_IMPORTED_MODULE_2__["textMetrics"].width(item);
  if (a === 'center') {
    dx -= (w / 2);
  } else if (a === 'right') {
    dx -= w;
  } else {
    // left by default, do nothing
  }

  bounds.set(dx+=x, dy+=y, dx+w, dy+h);
  if (item.angle && !mode) {
    bounds.rotate(item.angle * _util_constants__WEBPACK_IMPORTED_MODULE_1__["DegToRad"], x, y);
  } else if (mode === 2) {
    return bounds.rotatedPoints(item.angle * _util_constants__WEBPACK_IMPORTED_MODULE_1__["DegToRad"], x, y);
  }
  return bounds;
}

function draw(context, scene, bounds) {
  Object(_util_visit__WEBPACK_IMPORTED_MODULE_4__["visit"])(scene, function(item) {
    var opacity, p, x, y, str;
    if (bounds && !bounds.intersects(item.bounds)) return; // bounds check
    if (!(str = Object(_util_text__WEBPACK_IMPORTED_MODULE_2__["textValue"])(item))) return; // get text string

    opacity = item.opacity == null ? 1 : item.opacity;
    if (opacity === 0 || item.fontSize <= 0) return;

    context.font = Object(_util_text__WEBPACK_IMPORTED_MODULE_2__["font"])(item);
    context.textAlign = item.align || 'left';

    p = anchorPoint(item);
    x = p.x1,
    y = p.y1;

    if (item.angle) {
      context.save();
      context.translate(x, y);
      context.rotate(item.angle * _util_constants__WEBPACK_IMPORTED_MODULE_1__["DegToRad"]);
      x = y = 0; // reset x, y
    }
    x += (item.dx || 0);
    y += (item.dy || 0) + Object(_util_text__WEBPACK_IMPORTED_MODULE_2__["offset"])(item);

    if (item.fill && Object(_util_canvas_fill__WEBPACK_IMPORTED_MODULE_5__["default"])(context, item, opacity)) {
      context.fillText(str, x, y);
    }
    if (item.stroke && Object(_util_canvas_stroke__WEBPACK_IMPORTED_MODULE_7__["default"])(context, item, opacity)) {
      context.strokeText(str, x, y);
    }
    if (item.angle) context.restore();
  });
}

function hit(context, item, x, y, gx, gy) {
  if (item.fontSize <= 0) return false;
  if (!item.angle) return true; // bounds sufficient if no rotation

  // project point into space of unrotated bounds
  var p = anchorPoint(item),
      ax = p.x1,
      ay = p.y1,
      b = bound(tempBounds, item, 1),
      a = -item.angle * _util_constants__WEBPACK_IMPORTED_MODULE_1__["DegToRad"],
      cos = Math.cos(a),
      sin = Math.sin(a),
      px = cos * gx - sin * gy + (ax - cos * ax + sin * ay),
      py = sin * gx + cos * gy + (ay - sin * ax - cos * ay);

  return b.contains(px, py);
}

function intersectText(item, box) {
  var p = bound(tempBounds, item, 2);
  return Object(_util_intersect__WEBPACK_IMPORTED_MODULE_3__["intersectBoxLine"])(box, p[0], p[1], p[2], p[3])
      || Object(_util_intersect__WEBPACK_IMPORTED_MODULE_3__["intersectBoxLine"])(box, p[0], p[1], p[4], p[5])
      || Object(_util_intersect__WEBPACK_IMPORTED_MODULE_3__["intersectBoxLine"])(box, p[4], p[5], p[6], p[7])
      || Object(_util_intersect__WEBPACK_IMPORTED_MODULE_3__["intersectBoxLine"])(box, p[2], p[3], p[6], p[7]);
}

/* harmony default export */ __webpack_exports__["default"] = ({
  type:   'text',
  tag:    'text',
  nested: false,
  attr:   attr,
  bound:  bound,
  draw:   draw,
  pick:   Object(_util_canvas_pick__WEBPACK_IMPORTED_MODULE_6__["pick"])(hit),
  isect:  intersectText
});


/***/ }),

/***/ "./node_modules/vega-scenegraph/src/marks/trail.js":
/*!*********************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/marks/trail.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _path_shapes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../path/shapes */ "./node_modules/vega-scenegraph/src/path/shapes.js");
/* harmony import */ var _util_pickPath__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/pickPath */ "./node_modules/vega-scenegraph/src/util/pickPath.js");
/* harmony import */ var _markMultiItemPath__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./markMultiItemPath */ "./node_modules/vega-scenegraph/src/marks/markMultiItemPath.js");




/* harmony default export */ __webpack_exports__["default"] = (Object(_markMultiItemPath__WEBPACK_IMPORTED_MODULE_2__["default"])('trail', _path_shapes__WEBPACK_IMPORTED_MODULE_0__["trail"], _util_pickPath__WEBPACK_IMPORTED_MODULE_1__["pickTrail"]));


/***/ }),

/***/ "./node_modules/vega-scenegraph/src/modules.js":
/*!*****************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/modules.js ***!
  \*****************************************************/
/*! exports provided: RenderType, renderModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RenderType", function() { return RenderType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "renderModule", function() { return renderModule; });
/* harmony import */ var _CanvasHandler__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CanvasHandler */ "./node_modules/vega-scenegraph/src/CanvasHandler.js");
/* harmony import */ var _CanvasRenderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./CanvasRenderer */ "./node_modules/vega-scenegraph/src/CanvasRenderer.js");
/* harmony import */ var _SVGHandler__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./SVGHandler */ "./node_modules/vega-scenegraph/src/SVGHandler.js");
/* harmony import */ var _SVGRenderer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./SVGRenderer */ "./node_modules/vega-scenegraph/src/SVGRenderer.js");
/* harmony import */ var _SVGStringRenderer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./SVGStringRenderer */ "./node_modules/vega-scenegraph/src/SVGStringRenderer.js");






var Canvas = 'canvas';
var PNG = 'png';
var SVG = 'svg';
var None = 'none';

var RenderType = {
  Canvas: Canvas,
  PNG:    PNG,
  SVG:    SVG,
  None:   None
};

var modules = {};

modules[Canvas] = modules[PNG] = {
  renderer: _CanvasRenderer__WEBPACK_IMPORTED_MODULE_1__["default"],
  headless: _CanvasRenderer__WEBPACK_IMPORTED_MODULE_1__["default"],
  handler:  _CanvasHandler__WEBPACK_IMPORTED_MODULE_0__["default"]
};

modules[SVG] = {
  renderer: _SVGRenderer__WEBPACK_IMPORTED_MODULE_3__["default"],
  headless: _SVGStringRenderer__WEBPACK_IMPORTED_MODULE_4__["default"],
  handler:  _SVGHandler__WEBPACK_IMPORTED_MODULE_2__["default"]
};

modules[None] = {};

function renderModule(name, _) {
  name = String(name || '').toLowerCase();
  if (arguments.length > 1) {
    modules[name] = _;
    return this;
  } else {
    return modules[name];
  }
}


/***/ }),

/***/ "./node_modules/vega-scenegraph/src/path/arc.js":
/*!******************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/path/arc.js ***!
  \******************************************************/
/*! exports provided: segmentCache, bezierCache, segments, bezier */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "segmentCache", function() { return segmentCache; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bezierCache", function() { return bezierCache; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "segments", function() { return segments; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bezier", function() { return bezier; });
/* harmony import */ var _util_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/constants */ "./node_modules/vega-scenegraph/src/util/constants.js");


var segmentCache = {};
var bezierCache = {};

var join = [].join;

// Copied from Inkscape svgtopdf, thanks!
function segments(x, y, rx, ry, large, sweep, rotateX, ox, oy) {
  var key = join.call(arguments);
  if (segmentCache[key]) {
    return segmentCache[key];
  }

  var th = rotateX * _util_constants__WEBPACK_IMPORTED_MODULE_0__["DegToRad"];
  var sin_th = Math.sin(th);
  var cos_th = Math.cos(th);
  rx = Math.abs(rx);
  ry = Math.abs(ry);
  var px = cos_th * (ox - x) * 0.5 + sin_th * (oy - y) * 0.5;
  var py = cos_th * (oy - y) * 0.5 - sin_th * (ox - x) * 0.5;
  var pl = (px*px) / (rx*rx) + (py*py) / (ry*ry);
  if (pl > 1) {
    pl = Math.sqrt(pl);
    rx *= pl;
    ry *= pl;
  }

  var a00 = cos_th / rx;
  var a01 = sin_th / rx;
  var a10 = (-sin_th) / ry;
  var a11 = (cos_th) / ry;
  var x0 = a00 * ox + a01 * oy;
  var y0 = a10 * ox + a11 * oy;
  var x1 = a00 * x + a01 * y;
  var y1 = a10 * x + a11 * y;

  var d = (x1-x0) * (x1-x0) + (y1-y0) * (y1-y0);
  var sfactor_sq = 1 / d - 0.25;
  if (sfactor_sq < 0) sfactor_sq = 0;
  var sfactor = Math.sqrt(sfactor_sq);
  if (sweep == large) sfactor = -sfactor;
  var xc = 0.5 * (x0 + x1) - sfactor * (y1-y0);
  var yc = 0.5 * (y0 + y1) + sfactor * (x1-x0);

  var th0 = Math.atan2(y0-yc, x0-xc);
  var th1 = Math.atan2(y1-yc, x1-xc);

  var th_arc = th1-th0;
  if (th_arc < 0 && sweep === 1) {
    th_arc += _util_constants__WEBPACK_IMPORTED_MODULE_0__["Tau"];
  } else if (th_arc > 0 && sweep === 0) {
    th_arc -= _util_constants__WEBPACK_IMPORTED_MODULE_0__["Tau"];
  }

  var segs = Math.ceil(Math.abs(th_arc / (_util_constants__WEBPACK_IMPORTED_MODULE_0__["HalfPi"] + 0.001)));
  var result = [];
  for (var i=0; i<segs; ++i) {
    var th2 = th0 + i * th_arc / segs;
    var th3 = th0 + (i+1) * th_arc / segs;
    result[i] = [xc, yc, th2, th3, rx, ry, sin_th, cos_th];
  }

  return (segmentCache[key] = result);
}

function bezier(params) {
  var key = join.call(params);
  if (bezierCache[key]) {
    return bezierCache[key];
  }

  var cx = params[0],
      cy = params[1],
      th0 = params[2],
      th1 = params[3],
      rx = params[4],
      ry = params[5],
      sin_th = params[6],
      cos_th = params[7];

  var a00 = cos_th * rx;
  var a01 = -sin_th * ry;
  var a10 = sin_th * rx;
  var a11 = cos_th * ry;

  var cos_th0 = Math.cos(th0);
  var sin_th0 = Math.sin(th0);
  var cos_th1 = Math.cos(th1);
  var sin_th1 = Math.sin(th1);

  var th_half = 0.5 * (th1 - th0);
  var sin_th_h2 = Math.sin(th_half * 0.5);
  var t = (8/3) * sin_th_h2 * sin_th_h2 / Math.sin(th_half);
  var x1 = cx + cos_th0 - t * sin_th0;
  var y1 = cy + sin_th0 + t * cos_th0;
  var x3 = cx + cos_th1;
  var y3 = cy + sin_th1;
  var x2 = x3 + t * sin_th1;
  var y2 = y3 - t * cos_th1;

  return (bezierCache[key] = [
    a00 * x1 + a01 * y1,  a10 * x1 + a11 * y1,
    a00 * x2 + a01 * y2,  a10 * x2 + a11 * y2,
    a00 * x3 + a01 * y3,  a10 * x3 + a11 * y3
  ]);
}


/***/ }),

/***/ "./node_modules/vega-scenegraph/src/path/curves.js":
/*!*********************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/path/curves.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return curves; });
/* harmony import */ var d3_shape__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-shape */ "./node_modules/d3-shape/src/index.js");


var lookup = {
  'basis': {
    curve: d3_shape__WEBPACK_IMPORTED_MODULE_0__["curveBasis"]
  },
  'basis-closed': {
    curve: d3_shape__WEBPACK_IMPORTED_MODULE_0__["curveBasisClosed"]
  },
  'basis-open': {
    curve: d3_shape__WEBPACK_IMPORTED_MODULE_0__["curveBasisOpen"]
  },
  'bundle': {
    curve: d3_shape__WEBPACK_IMPORTED_MODULE_0__["curveBundle"],
    tension: 'beta',
    value: 0.85
  },
  'cardinal': {
    curve: d3_shape__WEBPACK_IMPORTED_MODULE_0__["curveCardinal"],
    tension: 'tension',
    value: 0
  },
  'cardinal-open': {
    curve: d3_shape__WEBPACK_IMPORTED_MODULE_0__["curveCardinalOpen"],
    tension: 'tension',
    value: 0
  },
  'cardinal-closed': {
    curve: d3_shape__WEBPACK_IMPORTED_MODULE_0__["curveCardinalClosed"],
    tension: 'tension',
    value: 0
  },
  'catmull-rom': {
    curve: d3_shape__WEBPACK_IMPORTED_MODULE_0__["curveCatmullRom"],
    tension: 'alpha',
    value: 0.5
  },
  'catmull-rom-closed': {
    curve: d3_shape__WEBPACK_IMPORTED_MODULE_0__["curveCatmullRomClosed"],
    tension: 'alpha',
    value: 0.5
  },
  'catmull-rom-open': {
    curve: d3_shape__WEBPACK_IMPORTED_MODULE_0__["curveCatmullRomOpen"],
    tension: 'alpha',
    value: 0.5
  },
  'linear': {
    curve: d3_shape__WEBPACK_IMPORTED_MODULE_0__["curveLinear"]
  },
  'linear-closed': {
    curve: d3_shape__WEBPACK_IMPORTED_MODULE_0__["curveLinearClosed"]
  },
  'monotone': {
    horizontal: d3_shape__WEBPACK_IMPORTED_MODULE_0__["curveMonotoneY"],
    vertical:   d3_shape__WEBPACK_IMPORTED_MODULE_0__["curveMonotoneX"]
  },
  'natural': {
    curve: d3_shape__WEBPACK_IMPORTED_MODULE_0__["curveNatural"]
  },
  'step': {
    curve: d3_shape__WEBPACK_IMPORTED_MODULE_0__["curveStep"]
  },
  'step-after': {
    curve: d3_shape__WEBPACK_IMPORTED_MODULE_0__["curveStepAfter"]
  },
  'step-before': {
    curve: d3_shape__WEBPACK_IMPORTED_MODULE_0__["curveStepBefore"]
  }
};

function curves(type, orientation, tension) {
  var entry = lookup.hasOwnProperty(type) && lookup[type],
      curve = null;

  if (entry) {
    curve = entry.curve || entry[orientation || 'vertical'];
    if (entry.tension && tension != null) {
      curve = curve[entry.tension](tension);
    }
  }

  return curve;
}


/***/ }),

/***/ "./node_modules/vega-scenegraph/src/path/parse.js":
/*!********************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/path/parse.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// Path parsing and rendering code adapted from fabric.js -- Thanks!
var cmdlen = { m:2, l:2, h:1, v:1, c:6, s:4, q:4, t:2, a:7 },
    regexp = [/([MLHVCSQTAZmlhvcsqtaz])/g, /###/, /(\d)([-+])/g, /\s|,|###/];

/* harmony default export */ __webpack_exports__["default"] = (function(pathstr) {
  var result = [],
      path,
      curr,
      chunks,
      parsed, param,
      cmd, len, i, j, n, m;

  // First, break path into command sequence
  path = pathstr
    .slice()
    .replace(regexp[0], '###$1')
    .split(regexp[1])
    .slice(1);

  // Next, parse each command in turn
  for (i=0, n=path.length; i<n; ++i) {
    curr = path[i];
    chunks = curr
      .slice(1)
      .trim()
      .replace(regexp[2],'$1###$2')
      .split(regexp[3]);
    cmd = curr.charAt(0);

    parsed = [cmd];
    for (j=0, m=chunks.length; j<m; ++j) {
      if ((param = +chunks[j]) === param) { // not NaN
        parsed.push(param);
      }
    }

    len = cmdlen[cmd.toLowerCase()];
    if (parsed.length-1 > len) {
      for (j=1, m=parsed.length; j<m; j+=len) {
        result.push([cmd].concat(parsed.slice(j, j+len)));
      }
    }
    else {
      result.push(parsed);
    }
  }

  return result;
});


/***/ }),

/***/ "./node_modules/vega-scenegraph/src/path/rectangle.js":
/*!************************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/path/rectangle.js ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-path */ "./node_modules/d3-path/src/index.js");


function rectangleX(d) {
  return d.x;
}

function rectangleY(d) {
  return d.y;
}

function rectangleWidth(d) {
  return d.width;
}

function rectangleHeight(d) {
  return d.height;
}

function constant(_) {
  return function() { return _; };
}

/* harmony default export */ __webpack_exports__["default"] = (function() {
  var x = rectangleX,
      y = rectangleY,
      width = rectangleWidth,
      height = rectangleHeight,
      cornerRadius = constant(0),
      context = null;

  function rectangle(_, x0, y0) {
    var buffer,
        x1 = x0 != null ? x0 : +x.call(this, _),
        y1 = y0 != null ? y0 : +y.call(this, _),
        w  = +width.call(this, _),
        h  = +height.call(this, _),
        cr = +cornerRadius.call(this, _);

    if (!context) context = buffer = Object(d3_path__WEBPACK_IMPORTED_MODULE_0__["path"])();

    if (cr <= 0) {
      context.rect(x1, y1, w, h);
    } else {
      var x2 = x1 + w,
          y2 = y1 + h;
      context.moveTo(x1 + cr, y1);
      context.lineTo(x2 - cr, y1);
      context.quadraticCurveTo(x2, y1, x2, y1 + cr);
      context.lineTo(x2, y2 - cr);
      context.quadraticCurveTo(x2, y2, x2 - cr, y2);
      context.lineTo(x1 + cr, y2);
      context.quadraticCurveTo(x1, y2, x1, y2 - cr);
      context.lineTo(x1, y1 + cr);
      context.quadraticCurveTo(x1, y1, x1 + cr, y1);
      context.closePath();
    }

    if (buffer) {
      context = null;
      return buffer + '' || null;
    }
  }

  rectangle.x = function(_) {
    if (arguments.length) {
      x = typeof _ === 'function' ? _ : constant(+_);
      return rectangle;
    } else {
      return x;
    }
  };

  rectangle.y = function(_) {
    if (arguments.length) {
      y = typeof _ === 'function' ? _ : constant(+_);
      return rectangle;
    } else {
      return y;
    }
  };

  rectangle.width = function(_) {
    if (arguments.length) {
      width = typeof _ === 'function' ? _ : constant(+_);
      return rectangle;
    } else {
      return width;
    }
  };

  rectangle.height = function(_) {
    if (arguments.length) {
      height = typeof _ === 'function' ? _ : constant(+_);
      return rectangle;
    } else {
      return height;
    }
  };

  rectangle.cornerRadius = function(_) {
    if (arguments.length) {
      cornerRadius = typeof _ === 'function' ? _ : constant(+_);
      return rectangle;
    } else {
      return cornerRadius;
    }
  };

  rectangle.context = function(_) {
    if (arguments.length) {
      context = _ == null ? null : _;
      return rectangle;
    } else {
      return context;
    }
  };

  return rectangle;
});


/***/ }),

/***/ "./node_modules/vega-scenegraph/src/path/render.js":
/*!*********************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/path/render.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _arc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./arc */ "./node_modules/vega-scenegraph/src/path/arc.js");


var temp = ['l', 0, 0, 0, 0, 0, 0, 0];

function scale(current, s) {
  var c = (temp[0] = current[0]);
  if (c === 'a' || c === 'A') {
    temp[1] = s * current[1];
    temp[2] = s * current[2];
    temp[3] = current[3];
    temp[4] = current[4];
    temp[5] = current[5];
    temp[6] = s * current[6];
    temp[7] = s * current[7];
  } else {
    for (var i=1, n=current.length; i<n; ++i) {
      temp[i] = s * current[i];
    }
  }
  return temp;
}

/* harmony default export */ __webpack_exports__["default"] = (function(context, path, l, t, s) {
  var current, // current instruction
      previous = null,
      x = 0, // current x
      y = 0, // current y
      controlX = 0, // current control point x
      controlY = 0, // current control point y
      tempX,
      tempY,
      tempControlX,
      tempControlY;

  if (l == null) l = 0;
  if (t == null) t = 0;
  if (s == null) s = 1;

  if (context.beginPath) context.beginPath();

  for (var i=0, len=path.length; i<len; ++i) {
    current = path[i];
    if (s !== 1) current = scale(current, s);

    switch (current[0]) { // first letter

      case 'l': // lineto, relative
        x += current[1];
        y += current[2];
        context.lineTo(x + l, y + t);
        break;

      case 'L': // lineto, absolute
        x = current[1];
        y = current[2];
        context.lineTo(x + l, y + t);
        break;

      case 'h': // horizontal lineto, relative
        x += current[1];
        context.lineTo(x + l, y + t);
        break;

      case 'H': // horizontal lineto, absolute
        x = current[1];
        context.lineTo(x + l, y + t);
        break;

      case 'v': // vertical lineto, relative
        y += current[1];
        context.lineTo(x + l, y + t);
        break;

      case 'V': // verical lineto, absolute
        y = current[1];
        context.lineTo(x + l, y + t);
        break;

      case 'm': // moveTo, relative
        x += current[1];
        y += current[2];
        context.moveTo(x + l, y + t);
        break;

      case 'M': // moveTo, absolute
        x = current[1];
        y = current[2];
        context.moveTo(x + l, y + t);
        break;

      case 'c': // bezierCurveTo, relative
        tempX = x + current[5];
        tempY = y + current[6];
        controlX = x + current[3];
        controlY = y + current[4];
        context.bezierCurveTo(
          x + current[1] + l, // x1
          y + current[2] + t, // y1
          controlX + l, // x2
          controlY + t, // y2
          tempX + l,
          tempY + t
        );
        x = tempX;
        y = tempY;
        break;

      case 'C': // bezierCurveTo, absolute
        x = current[5];
        y = current[6];
        controlX = current[3];
        controlY = current[4];
        context.bezierCurveTo(
          current[1] + l,
          current[2] + t,
          controlX + l,
          controlY + t,
          x + l,
          y + t
        );
        break;

      case 's': // shorthand cubic bezierCurveTo, relative
        // transform to absolute x,y
        tempX = x + current[3];
        tempY = y + current[4];
        // calculate reflection of previous control points
        controlX = 2 * x - controlX;
        controlY = 2 * y - controlY;
        context.bezierCurveTo(
          controlX + l,
          controlY + t,
          x + current[1] + l,
          y + current[2] + t,
          tempX + l,
          tempY + t
        );

        // set control point to 2nd one of this command
        // the first control point is assumed to be the reflection of
        // the second control point on the previous command relative
        // to the current point.
        controlX = x + current[1];
        controlY = y + current[2];

        x = tempX;
        y = tempY;
        break;

      case 'S': // shorthand cubic bezierCurveTo, absolute
        tempX = current[3];
        tempY = current[4];
        // calculate reflection of previous control points
        controlX = 2*x - controlX;
        controlY = 2*y - controlY;
        context.bezierCurveTo(
          controlX + l,
          controlY + t,
          current[1] + l,
          current[2] + t,
          tempX + l,
          tempY + t
        );
        x = tempX;
        y = tempY;
        // set control point to 2nd one of this command
        // the first control point is assumed to be the reflection of
        // the second control point on the previous command relative
        // to the current point.
        controlX = current[1];
        controlY = current[2];

        break;

      case 'q': // quadraticCurveTo, relative
        // transform to absolute x,y
        tempX = x + current[3];
        tempY = y + current[4];

        controlX = x + current[1];
        controlY = y + current[2];

        context.quadraticCurveTo(
          controlX + l,
          controlY + t,
          tempX + l,
          tempY + t
        );
        x = tempX;
        y = tempY;
        break;

      case 'Q': // quadraticCurveTo, absolute
        tempX = current[3];
        tempY = current[4];

        context.quadraticCurveTo(
          current[1] + l,
          current[2] + t,
          tempX + l,
          tempY + t
        );
        x = tempX;
        y = tempY;
        controlX = current[1];
        controlY = current[2];
        break;

      case 't': // shorthand quadraticCurveTo, relative

        // transform to absolute x,y
        tempX = x + current[1];
        tempY = y + current[2];

        if (previous[0].match(/[QqTt]/) === null) {
          // If there is no previous command or if the previous command was not a Q, q, T or t,
          // assume the control point is coincident with the current point
          controlX = x;
          controlY = y;
        }
        else if (previous[0] === 't') {
          // calculate reflection of previous control points for t
          controlX = 2 * x - tempControlX;
          controlY = 2 * y - tempControlY;
        }
        else if (previous[0] === 'q') {
          // calculate reflection of previous control points for q
          controlX = 2 * x - controlX;
          controlY = 2 * y - controlY;
        }

        tempControlX = controlX;
        tempControlY = controlY;

        context.quadraticCurveTo(
          controlX + l,
          controlY + t,
          tempX + l,
          tempY + t
        );
        x = tempX;
        y = tempY;
        controlX = x + current[1];
        controlY = y + current[2];
        break;

      case 'T':
        tempX = current[1];
        tempY = current[2];

        // calculate reflection of previous control points
        controlX = 2 * x - controlX;
        controlY = 2 * y - controlY;
        context.quadraticCurveTo(
          controlX + l,
          controlY + t,
          tempX + l,
          tempY + t
        );
        x = tempX;
        y = tempY;
        break;

      case 'a':
        drawArc(context, x + l, y + t, [
          current[1],
          current[2],
          current[3],
          current[4],
          current[5],
          current[6] + x + l,
          current[7] + y + t
        ]);
        x += current[6];
        y += current[7];
        break;

      case 'A':
        drawArc(context, x + l, y + t, [
          current[1],
          current[2],
          current[3],
          current[4],
          current[5],
          current[6] + l,
          current[7] + t
        ]);
        x = current[6];
        y = current[7];
        break;

      case 'z':
      case 'Z':
        context.closePath();
        break;
    }
    previous = current;
  }
});

function drawArc(context, x, y, coords) {
  var seg = Object(_arc__WEBPACK_IMPORTED_MODULE_0__["segments"])(
    coords[5], // end x
    coords[6], // end y
    coords[0], // radius x
    coords[1], // radius y
    coords[3], // large flag
    coords[4], // sweep flag
    coords[2], // rotation
    x, y
  );
  for (var i=0; i<seg.length; ++i) {
    var bez = Object(_arc__WEBPACK_IMPORTED_MODULE_0__["bezier"])(seg[i]);
    context.bezierCurveTo(bez[0], bez[1], bez[2], bez[3], bez[4], bez[5]);
  }
}


/***/ }),

/***/ "./node_modules/vega-scenegraph/src/path/shapes.js":
/*!*********************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/path/shapes.js ***!
  \*********************************************************/
/*! exports provided: arc, area, line, rectangle, shape, symbol, trail */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "arc", function() { return arc; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "area", function() { return area; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "line", function() { return line; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rectangle", function() { return rectangle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shape", function() { return shape; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "symbol", function() { return symbol; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "trail", function() { return trail; });
/* harmony import */ var _curves__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./curves */ "./node_modules/vega-scenegraph/src/path/curves.js");
/* harmony import */ var _symbols__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./symbols */ "./node_modules/vega-scenegraph/src/path/symbols.js");
/* harmony import */ var _rectangle__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./rectangle */ "./node_modules/vega-scenegraph/src/path/rectangle.js");
/* harmony import */ var _trail__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./trail */ "./node_modules/vega-scenegraph/src/path/trail.js");
/* harmony import */ var d3_shape__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! d3-shape */ "./node_modules/d3-shape/src/index.js");








function x(item)    { return item.x || 0; }
function y(item)    { return item.y || 0; }
function w(item)    { return item.width || 0; }
function ts(item)   { return item.size || 1; }
function h(item)    { return item.height || 0; }
function xw(item)   { return (item.x || 0) + (item.width || 0); }
function yh(item)   { return (item.y || 0) + (item.height || 0); }
function sa(item)   { return item.startAngle || 0; }
function ea(item)   { return item.endAngle || 0; }
function pa(item)   { return item.padAngle || 0; }
function ir(item)   { return item.innerRadius || 0; }
function or(item)   { return item.outerRadius || 0; }
function cr(item)   { return item.cornerRadius || 0; }
function def(item)  { return !(item.defined === false); }
function size(item) { return item.size == null ? 64 : item.size; }
function type(item) { return Object(_symbols__WEBPACK_IMPORTED_MODULE_1__["default"])(item.shape || 'circle'); }

var arcShape    = Object(d3_shape__WEBPACK_IMPORTED_MODULE_4__["arc"])().startAngle(sa).endAngle(ea).padAngle(pa)
                          .innerRadius(ir).outerRadius(or).cornerRadius(cr),
    areavShape  = Object(d3_shape__WEBPACK_IMPORTED_MODULE_4__["area"])().x(x).y1(y).y0(yh).defined(def),
    areahShape  = Object(d3_shape__WEBPACK_IMPORTED_MODULE_4__["area"])().y(y).x1(x).x0(xw).defined(def),
    lineShape   = Object(d3_shape__WEBPACK_IMPORTED_MODULE_4__["line"])().x(x).y(y).defined(def),
    rectShape   = Object(_rectangle__WEBPACK_IMPORTED_MODULE_2__["default"])().x(x).y(y).width(w).height(h).cornerRadius(cr),
    symbolShape = Object(d3_shape__WEBPACK_IMPORTED_MODULE_4__["symbol"])().type(type).size(size),
    trailShape  = Object(_trail__WEBPACK_IMPORTED_MODULE_3__["default"])().x(x).y(y).defined(def).size(ts);

function arc(context, item) {
  return arcShape.context(context)(item);
}

function area(context, items) {
  var item = items[0],
      interp = item.interpolate || 'linear';
  return (item.orient === 'horizontal' ? areahShape : areavShape)
    .curve(Object(_curves__WEBPACK_IMPORTED_MODULE_0__["default"])(interp, item.orient, item.tension))
    .context(context)(items);
}

function line(context, items) {
  var item = items[0],
      interp = item.interpolate || 'linear';
  return lineShape.curve(Object(_curves__WEBPACK_IMPORTED_MODULE_0__["default"])(interp, item.orient, item.tension))
    .context(context)(items);
}

function rectangle(context, item, x, y) {
  return rectShape.context(context)(item, x, y);
}

function shape(context, item) {
  return (item.mark.shape || item.shape)
    .context(context)(item);
}

function symbol(context, item) {
  return symbolShape.context(context)(item);
}

function trail(context, items) {
  return trailShape.context(context)(items);
}


/***/ }),

/***/ "./node_modules/vega-scenegraph/src/path/symbols.js":
/*!**********************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/path/symbols.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return symbols; });
/* harmony import */ var _parse__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parse */ "./node_modules/vega-scenegraph/src/path/parse.js");
/* harmony import */ var _render__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./render */ "./node_modules/vega-scenegraph/src/path/render.js");
/* harmony import */ var _util_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/constants */ "./node_modules/vega-scenegraph/src/util/constants.js");




var Tan30 = 0.5773502691896257;

var builtins = {
  'circle': {
    draw: function(context, size) {
      var r = Math.sqrt(size) / 2;
      context.moveTo(r, 0);
      context.arc(0, 0, r, 0, _util_constants__WEBPACK_IMPORTED_MODULE_2__["Tau"]);
    }
  },
  'cross': {
    draw: function(context, size) {
      var r = Math.sqrt(size) / 2,
          s = r / 2.5;
      context.moveTo(-r, -s);
      context.lineTo(-r, s);
      context.lineTo(-s, s);
      context.lineTo(-s, r);
      context.lineTo(s, r);
      context.lineTo(s, s);
      context.lineTo(r, s);
      context.lineTo(r, -s);
      context.lineTo(s, -s);
      context.lineTo(s, -r);
      context.lineTo(-s, -r);
      context.lineTo(-s, -s);
      context.closePath();
    }
  },
  'diamond': {
    draw: function(context, size) {
      var r = Math.sqrt(size) / 2;
      context.moveTo(-r, 0);
      context.lineTo(0, -r);
      context.lineTo(r, 0);
      context.lineTo(0, r);
      context.closePath();
    }
  },
  'square': {
    draw: function(context, size) {
      var w = Math.sqrt(size),
          x = -w / 2;
      context.rect(x, x, w, w);
    }
  },
  'arrow': {
    draw: function(context, size) {
      var r = Math.sqrt(size) / 2,
          s = r / 7,
          t = r / 2.5,
          v = r / 8;
      context.moveTo(-s, r);
      context.lineTo(s, r);
      context.lineTo(s, -v);
      context.lineTo(t, -v);
      context.lineTo(0, -r);
      context.lineTo(-t, -v);
      context.lineTo(-s, -v);
      context.closePath();
    }
  },
  'wedge': {
    draw: function(context, size) {
      var r = Math.sqrt(size) / 2,
          h = _util_constants__WEBPACK_IMPORTED_MODULE_2__["HalfSqrt3"] * r,
          o = (h - r * Tan30),
          b = r / 4;
      context.moveTo(0, -h - o);
      context.lineTo(-b, h - o);
      context.lineTo(b, h - o);
      context.closePath();
    }
  },
  'triangle': {
    draw: function(context, size) {
      var r = Math.sqrt(size) / 2,
          h = _util_constants__WEBPACK_IMPORTED_MODULE_2__["HalfSqrt3"] * r,
          o = (h - r * Tan30);
      context.moveTo(0, -h - o);
      context.lineTo(-r, h - o);
      context.lineTo(r, h - o);
      context.closePath();
    }
  },
  'triangle-up': {
    draw: function(context, size) {
      var r = Math.sqrt(size) / 2,
          h = _util_constants__WEBPACK_IMPORTED_MODULE_2__["HalfSqrt3"] * r;
      context.moveTo(0, -h);
      context.lineTo(-r, h);
      context.lineTo(r, h);
      context.closePath();
    }
  },
  'triangle-down': {
    draw: function(context, size) {
      var r = Math.sqrt(size) / 2,
          h = _util_constants__WEBPACK_IMPORTED_MODULE_2__["HalfSqrt3"] * r;
      context.moveTo(0, h);
      context.lineTo(-r, -h);
      context.lineTo(r, -h);
      context.closePath();
    }
  },
  'triangle-right': {
    draw: function(context, size) {
      var r = Math.sqrt(size) / 2,
          h = _util_constants__WEBPACK_IMPORTED_MODULE_2__["HalfSqrt3"] * r;
      context.moveTo(h, 0);
      context.lineTo(-h, -r);
      context.lineTo(-h, r);
      context.closePath();
    }
  },
  'triangle-left': {
    draw: function(context, size) {
      var r = Math.sqrt(size) / 2,
          h = _util_constants__WEBPACK_IMPORTED_MODULE_2__["HalfSqrt3"] * r;
      context.moveTo(-h, 0);
      context.lineTo(h, -r);
      context.lineTo(h, r);
      context.closePath();
    }
  },
  'stroke': {
    draw: function(context, size) {
      var r = Math.sqrt(size) / 2;
      context.moveTo(-r, 0);
      context.lineTo(r, 0);
    }
  }
};

function symbols(_) {
  return builtins.hasOwnProperty(_) ? builtins[_] : customSymbol(_);
}

var custom = {};

function customSymbol(path) {
  if (!custom.hasOwnProperty(path)) {
    var parsed = Object(_parse__WEBPACK_IMPORTED_MODULE_0__["default"])(path);
    custom[path] = {
      draw: function(context, size) {
        Object(_render__WEBPACK_IMPORTED_MODULE_1__["default"])(context, parsed, 0, 0, Math.sqrt(size) / 2);
      }
    };
  }
  return custom[path];
}


/***/ }),

/***/ "./node_modules/vega-scenegraph/src/path/trail.js":
/*!********************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/path/trail.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _util_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/constants */ "./node_modules/vega-scenegraph/src/util/constants.js");
/* harmony import */ var d3_path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-path */ "./node_modules/d3-path/src/index.js");



/* harmony default export */ __webpack_exports__["default"] = (function() {
  var x,
      y,
      size,
      defined,
      context = null,
      ready, x1, y1, r1;

  function point(x2, y2, w2) {
    var r2 = w2 / 2;

    if (ready) {
      var ux = y1 - y2,
          uy = x2 - x1;

      if (ux || uy) {
        // get normal vector
        var ud = Math.sqrt(ux * ux + uy * uy),
            rx = (ux /= ud) * r1,
            ry = (uy /= ud) * r1,
            t = Math.atan2(uy, ux);

        // draw segment
        context.moveTo(x1 - rx, y1 - ry);
        context.lineTo(x2 - ux * r2, y2 - uy * r2);
        context.arc(x2, y2, r2, t - Math.PI, t);
        context.lineTo(x1 + rx, y1 + ry);
        context.arc(x1, y1, r1, t, t + Math.PI);
      } else {
        context.arc(x2, y2, r2, 0, _util_constants__WEBPACK_IMPORTED_MODULE_0__["Tau"]);
      }
      context.closePath();
    } else {
      ready = 1;
    }
    x1 = x2;
    y1 = y2;
    r1 = r2;
  }

  function trail(data) {
    var i,
        n = data.length,
        d,
        defined0 = false,
        buffer;

    if (context == null) context = buffer = Object(d3_path__WEBPACK_IMPORTED_MODULE_1__["path"])();

    for (i = 0; i <= n; ++i) {
      if (!(i < n && defined(d = data[i], i, data)) === defined0) {
        if (defined0 = !defined0) ready = 0;
      }
      if (defined0) point(+x(d, i, data), +y(d, i, data), +size(d, i, data));
    }

    if (buffer) {
      context = null;
      return buffer + '' || null;
    }
  }

  trail.x = function(_) {
    if (arguments.length) {
      x = _;
      return trail;
    } else {
      return x;
    }
  };

  trail.y = function(_) {
    if (arguments.length) {
      y = _;
      return trail;
    } else {
      return y;
    }
  };

  trail.size = function(_) {
    if (arguments.length) {
      size = _;
      return trail;
    } else {
      return size;
    }
  };

  trail.defined = function(_) {
    if (arguments.length) {
      defined = _;
      return trail;
    } else {
      return defined;
    }
  };

  trail.context = function(_) {
    if (arguments.length) {
      if (_ == null) {
        context = null;
      } else {
        context = _;
      }
      return trail;
    } else {
      return context;
    }
  };

  return trail;
});


/***/ }),

/***/ "./node_modules/vega-scenegraph/src/util/canvas/clip.js":
/*!**************************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/util/canvas/clip.js ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");


/* harmony default export */ __webpack_exports__["default"] = (function(context, scene) {
  var clip = scene.clip;

  context.save();
  context.beginPath();

  if (Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isFunction"])(clip)) {
    clip(context);
  } else {
    var group = scene.group;
    context.rect(0, 0, group.width || 0, group.height || 0);
  }

  context.clip();
});


/***/ }),

/***/ "./node_modules/vega-scenegraph/src/util/canvas/color.js":
/*!***************************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/util/canvas/color.js ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Gradient__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../Gradient */ "./node_modules/vega-scenegraph/src/Gradient.js");
/* harmony import */ var _gradient__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./gradient */ "./node_modules/vega-scenegraph/src/util/canvas/gradient.js");



/* harmony default export */ __webpack_exports__["default"] = (function(context, item, value) {
  return Object(_Gradient__WEBPACK_IMPORTED_MODULE_0__["isGradient"])(value) ?
    Object(_gradient__WEBPACK_IMPORTED_MODULE_1__["default"])(context, value, item.bounds) :
    value;
});


/***/ }),

/***/ "./node_modules/vega-scenegraph/src/util/canvas/context.js":
/*!*****************************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/util/canvas/context.js ***!
  \*****************************************************************/
/*! exports provided: context */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "context", function() { return context; });
/* harmony import */ var vega_canvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-canvas */ "./node_modules/vega-canvas/index.browser.js");


var context = (context = Object(vega_canvas__WEBPACK_IMPORTED_MODULE_0__["canvas"])(1,1))
  ? context.getContext('2d')
  : null;


/***/ }),

/***/ "./node_modules/vega-scenegraph/src/util/canvas/draw.js":
/*!**************************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/util/canvas/draw.js ***!
  \**************************************************************/
/*! exports provided: drawAll, drawOne */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "drawAll", function() { return drawAll; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "drawOne", function() { return drawOne; });
/* harmony import */ var _fill__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./fill */ "./node_modules/vega-scenegraph/src/util/canvas/fill.js");
/* harmony import */ var _stroke__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stroke */ "./node_modules/vega-scenegraph/src/util/canvas/stroke.js");
/* harmony import */ var _visit__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../visit */ "./node_modules/vega-scenegraph/src/util/visit.js");




function drawAll(path) {
  return function(context, scene, bounds) {
    Object(_visit__WEBPACK_IMPORTED_MODULE_2__["visit"])(scene, function(item) {
      if (!bounds || bounds.intersects(item.bounds)) {
        drawPath(path, context, item, item);
      }
    });
  };
}

function drawOne(path) {
  return function(context, scene, bounds) {
    if (scene.items.length && (!bounds || bounds.intersects(scene.bounds))) {
      drawPath(path, context, scene.items[0], scene.items);
    }
  };
}

function drawPath(path, context, item, items) {
  var opacity = item.opacity == null ? 1 : item.opacity;
  if (opacity === 0) return;

  if (path(context, items)) return;

  if (item.fill && Object(_fill__WEBPACK_IMPORTED_MODULE_0__["default"])(context, item, opacity)) {
    context.fill();
  }

  if (item.stroke && Object(_stroke__WEBPACK_IMPORTED_MODULE_1__["default"])(context, item, opacity)) {
    context.stroke();
  }
}


/***/ }),

/***/ "./node_modules/vega-scenegraph/src/util/canvas/fill.js":
/*!**************************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/util/canvas/fill.js ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./color */ "./node_modules/vega-scenegraph/src/util/canvas/color.js");


/* harmony default export */ __webpack_exports__["default"] = (function(context, item, opacity) {
  opacity *= (item.fillOpacity==null ? 1 : item.fillOpacity);
  if (opacity > 0) {
    context.globalAlpha = opacity;
    context.fillStyle = Object(_color__WEBPACK_IMPORTED_MODULE_0__["default"])(context, item, item.fill);
    return true;
  } else {
    return false;
  }
});


/***/ }),

/***/ "./node_modules/vega-scenegraph/src/util/canvas/gradient.js":
/*!******************************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/util/canvas/gradient.js ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(context, gradient, bounds) {
  const w = bounds.width(),
        h = bounds.height(),
        stop = gradient.stops,
        n = stop.length;

  const canvasGradient = gradient.gradient === 'radial'
    ? context.createRadialGradient(
        bounds.x1 + (gradient.x1 || 0.5) * w,
        bounds.y1 + (gradient.y1 || 0.5) * h,
        Math.max(w, h) * (gradient.r1 || 0),
        bounds.x1 + (gradient.x2 || 0.5) * w,
        bounds.y1 + (gradient.y2 || 0.5) * h,
        Math.max(w, h) * (gradient.r2 || 0.5)
      )
    : context.createLinearGradient(
        bounds.x1 + (gradient.x1 || 0) * w,
        bounds.y1 + (gradient.y1 || 0) * h,
        bounds.x1 + (gradient.x2 || 1) * w,
        bounds.y1 + (gradient.y2 || 0) * h
      );

  for (let i=0; i<n; ++i) {
    canvasGradient.addColorStop(stop[i].offset, stop[i].color);
  }

  return canvasGradient;
});


/***/ }),

/***/ "./node_modules/vega-scenegraph/src/util/canvas/pick.js":
/*!**************************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/util/canvas/pick.js ***!
  \**************************************************************/
/*! exports provided: pick, hitPath, pickPath */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pick", function() { return pick; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hitPath", function() { return hitPath; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pickPath", function() { return pickPath; });
/* harmony import */ var _visit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../visit */ "./node_modules/vega-scenegraph/src/util/visit.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");



function pick(test) {
  test = test || vega_util__WEBPACK_IMPORTED_MODULE_1__["truthy"];

  return function(context, scene, x, y, gx, gy) {
    x *= context.pixelRatio;
    y *= context.pixelRatio;

    return Object(_visit__WEBPACK_IMPORTED_MODULE_0__["pickVisit"])(scene, function(item) {
      var b = item.bounds;
      // first hit test against bounding box
      if ((b && !b.contains(gx, gy)) || !b) return;
      // if in bounding box, perform more careful test
      if (test(context, item, x, y, gx, gy)) return item;
    });
  };
}

function hitPath(path, filled) {
  return function(context, o, x, y) {
    var item = Array.isArray(o) ? o[0] : o,
        fill = (filled == null) ? item.fill : filled,
        stroke = item.stroke && context.isPointInStroke, lw, lc;

    if (stroke) {
      lw = item.strokeWidth;
      lc = item.strokeCap;
      context.lineWidth = lw != null ? lw : 1;
      context.lineCap   = lc != null ? lc : 'butt';
    }

    return path(context, o) ? false :
      (fill && context.isPointInPath(x, y)) ||
      (stroke && context.isPointInStroke(x, y));
  };
}

function pickPath(path) {
  return pick(hitPath(path));
}


/***/ }),

/***/ "./node_modules/vega-scenegraph/src/util/canvas/resize.js":
/*!****************************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/util/canvas/resize.js ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function devicePixelRatio() {
  return typeof window !== 'undefined' ? window.devicePixelRatio || 1 : 1;
}

var pixelRatio = devicePixelRatio();

/* harmony default export */ __webpack_exports__["default"] = (function(canvas, width, height, origin, scaleFactor, opt) {
  var inDOM = typeof HTMLElement !== 'undefined'
    && canvas instanceof HTMLElement
    && canvas.parentNode != null;

  var context = canvas.getContext('2d'),
      ratio = inDOM ? pixelRatio : scaleFactor,
      key;

  canvas.width = width * ratio;
  canvas.height = height * ratio;

  for (key in opt) {
    context[key] = opt[key];
  }

  if (inDOM && ratio !== 1) {
    canvas.style.width = width + 'px';
    canvas.style.height = height + 'px';
  }

  context.pixelRatio = ratio;
  context.setTransform(
    ratio, 0, 0, ratio,
    ratio * origin[0],
    ratio * origin[1]
  );

  return canvas;
});


/***/ }),

/***/ "./node_modules/vega-scenegraph/src/util/canvas/stroke.js":
/*!****************************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/util/canvas/stroke.js ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./color */ "./node_modules/vega-scenegraph/src/util/canvas/color.js");


var Empty = [];

/* harmony default export */ __webpack_exports__["default"] = (function(context, item, opacity) {
  var lw = (lw = item.strokeWidth) != null ? lw : 1;

  if (lw <= 0) return false;

  opacity *= (item.strokeOpacity==null ? 1 : item.strokeOpacity);
  if (opacity > 0) {
    context.globalAlpha = opacity;
    context.strokeStyle = Object(_color__WEBPACK_IMPORTED_MODULE_0__["default"])(context, item, item.stroke);

    context.lineWidth = lw;
    context.lineCap = item.strokeCap || 'butt';
    context.lineJoin = item.strokeJoin || 'miter';
    context.miterLimit = item.strokeMiterLimit || 10;

    if (context.setLineDash) {
      context.setLineDash(item.strokeDash || Empty);
      context.lineDashOffset = item.strokeDashOffset || 0;
    }
    return true;
  } else {
    return false;
  }
});


/***/ }),

/***/ "./node_modules/vega-scenegraph/src/util/constants.js":
/*!************************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/util/constants.js ***!
  \************************************************************/
/*! exports provided: DegToRad, HalfPi, Tau, HalfSqrt3 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DegToRad", function() { return DegToRad; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HalfPi", function() { return HalfPi; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tau", function() { return Tau; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HalfSqrt3", function() { return HalfSqrt3; });
var DegToRad = Math.PI / 180;
var HalfPi = Math.PI / 2;
var Tau = Math.PI * 2;
var HalfSqrt3 = Math.sqrt(3) / 2;


/***/ }),

/***/ "./node_modules/vega-scenegraph/src/util/dom.js":
/*!******************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/util/dom.js ***!
  \******************************************************/
/*! exports provided: domCreate, domFind, domChild, domClear, cssClass */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "domCreate", function() { return domCreate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "domFind", function() { return domFind; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "domChild", function() { return domChild; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "domClear", function() { return domClear; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cssClass", function() { return cssClass; });
// create a new DOM element
function domCreate(doc, tag, ns) {
  if (!doc && typeof document !== 'undefined' && document.createElement) {
    doc = document;
  }
  return doc
    ? (ns ? doc.createElementNS(ns, tag) : doc.createElement(tag))
    : null;
}

// find first child element with matching tag
function domFind(el, tag) {
  tag = tag.toLowerCase();
  var nodes = el.childNodes, i = 0, n = nodes.length;
  for (; i<n; ++i) if (nodes[i].tagName.toLowerCase() === tag) {
    return nodes[i];
  }
}

// retrieve child element at given index
// create & insert if doesn't exist or if tags do not match
function domChild(el, index, tag, ns) {
  var a = el.childNodes[index], b;
  if (!a || a.tagName.toLowerCase() !== tag.toLowerCase()) {
    b = a || null;
    a = domCreate(el.ownerDocument, tag, ns);
    el.insertBefore(a, b);
  }
  return a;
}

// remove all child elements at or above the given index
function domClear(el, index) {
  var nodes = el.childNodes,
      curr = nodes.length;
  while (curr > index) el.removeChild(nodes[--curr]);
  return el;
}

// generate css class name for mark
function cssClass(mark) {
  return 'mark-' + mark.marktype
    + (mark.role ? ' role-' + mark.role : '')
    + (mark.name ? ' ' + mark.name : '');
}


/***/ }),

/***/ "./node_modules/vega-scenegraph/src/util/equal.js":
/*!********************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/util/equal.js ***!
  \********************************************************/
/*! exports provided: sceneEqual, pathEqual */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sceneEqual", function() { return sceneEqual; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pathEqual", function() { return pathEqual; });
/* harmony import */ var _path_parse__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../path/parse */ "./node_modules/vega-scenegraph/src/path/parse.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");



var TOLERANCE = 1e-9;

function sceneEqual(a, b, key) {
  return (a === b) ? true
    : (key === 'path') ? pathEqual(a, b)
    : (a instanceof Date && b instanceof Date) ? +a === +b
    : (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isNumber"])(a) && Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isNumber"])(b)) ? Math.abs(a - b) <= TOLERANCE
    : (!a || !b || !Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isObject"])(a) && !Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isObject"])(b)) ? a == b
    : (a == null || b == null) ? false
    : objectEqual(a, b);
}

function pathEqual(a, b) {
  return sceneEqual(Object(_path_parse__WEBPACK_IMPORTED_MODULE_0__["default"])(a), Object(_path_parse__WEBPACK_IMPORTED_MODULE_0__["default"])(b));
}

function objectEqual(a, b) {
  var ka = Object.keys(a),
      kb = Object.keys(b),
      key, i;

  if (ka.length !== kb.length) return false;

  ka.sort();
  kb.sort();

  for (i = ka.length - 1; i >= 0; i--) {
    if (ka[i] != kb[i]) return false;
  }

  for (i = ka.length - 1; i >= 0; i--) {
    key = ka[i];
    if (!sceneEqual(a[key], b[key], key)) return false;
  }

  return typeof a === typeof b;
}


/***/ }),

/***/ "./node_modules/vega-scenegraph/src/util/events.js":
/*!*********************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/util/events.js ***!
  \*********************************************************/
/*! exports provided: Events, TooltipShowEvent, TooltipHideEvent, HrefEvent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Events", function() { return Events; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TooltipShowEvent", function() { return TooltipShowEvent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TooltipHideEvent", function() { return TooltipHideEvent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HrefEvent", function() { return HrefEvent; });
var Events = [
  'keydown',
  'keypress',
  'keyup',
  'dragenter',
  'dragleave',
  'dragover',
  'mousedown',
  'mouseup',
  'mousemove',
  'mouseout',
  'mouseover',
  'click',
  'dblclick',
  'wheel',
  'mousewheel',
  'touchstart',
  'touchmove',
  'touchend'
];

var TooltipShowEvent = 'mousemove';

var TooltipHideEvent = 'mouseout';

var HrefEvent = 'click';


/***/ }),

/***/ "./node_modules/vega-scenegraph/src/util/intersect.js":
/*!************************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/util/intersect.js ***!
  \************************************************************/
/*! exports provided: intersectPath, intersectPoint, intersectRect, intersectRule, intersectBoxLine */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "intersectPath", function() { return intersectPath; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "intersectPoint", function() { return intersectPoint; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "intersectRect", function() { return intersectRect; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "intersectRule", function() { return intersectRule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "intersectBoxLine", function() { return intersectBoxLine; });
/* harmony import */ var _canvas_context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./canvas/context */ "./node_modules/vega-scenegraph/src/util/canvas/context.js");
/* harmony import */ var _Bounds__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Bounds */ "./node_modules/vega-scenegraph/src/Bounds.js");



const b = new _Bounds__WEBPACK_IMPORTED_MODULE_1__["default"]();

function intersectPath(draw) {
  return function(item, brush) {
    // rely on (inaccurate) bounds intersection if no context
    if (!_canvas_context__WEBPACK_IMPORTED_MODULE_0__["context"]) return true;

    // add path to offscreen graphics context
    draw(_canvas_context__WEBPACK_IMPORTED_MODULE_0__["context"], item);

    // get bounds intersection region
    b.clear().union(item.bounds).intersect(brush).round();
    const {x1, y1, x2, y2} = b;

    // iterate over intersection region
    // perform fine grained inclusion test
    for (let y = y1; y <= y2; ++y) {
      for (let x = x1; x <= x2; ++x) {
        if (_canvas_context__WEBPACK_IMPORTED_MODULE_0__["context"].isPointInPath(x, y)) {
          return true;
        }
      }
    }

    // false if no hits in intersection region
    return false;
  }
}

function intersectPoint(item, box) {
  return box.contains(item.x || 0, item.y || 0);
}

function intersectRect(item, box) {
  const x = item.x || 0,
        y = item.y || 0,
        w = item.width || 0,
        h = item.height || 0;
  return box.intersects(b.set(x, y, x + w, y + h));
}

function intersectRule(item, box) {
  const x = item.x || 0,
        y = item.y || 0,
        x2 = item.x2 != null ? item.x2 : x,
        y2 = item.y2 != null ? item.y2 : y;
  return intersectBoxLine(box, x, y, x2, y2);
}

function intersectBoxLine(box, x, y, u, v) {
  const {x1, y1, x2, y2} = box,
        dx = u - x,
        dy = v - y;

  let t0 = 0, t1 = 1, p, q, r, e;

  for (e=0; e<4; ++e) {
    if (e === 0) { p = -dx; q = -(x1 - x); }
    if (e === 1) { p =  dx; q =  (x2 - x); }
    if (e === 2) { p = -dy; q = -(y1 - y); }
    if (e === 3) { p =  dy; q =  (y2 - y); }

    if (Math.abs(p) < 1e-10 && q < 0) return false;

    r = q / p;

    if (p < 0) {
      if (r > t1) return false;
      else if (r > t0) t0 = r;
    } else if (p > 0) {
      if (r < t0) return false;
      else if (r < t1) t1 = r;
    }
  }

  return true;
}


/***/ }),

/***/ "./node_modules/vega-scenegraph/src/util/pickPath.js":
/*!***********************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/util/pickPath.js ***!
  \***********************************************************/
/*! exports provided: pickArea, pickLine, pickTrail */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pickArea", function() { return pickArea; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pickLine", function() { return pickLine; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pickTrail", function() { return pickTrail; });
function pickArea(a, p) {
  var v = a[0].orient === 'horizontal' ? p[1] : p[0],
      z = a[0].orient === 'horizontal' ? 'y' : 'x',
      i = a.length,
      min = +Infinity, hit, d;

  while (--i >= 0) {
    if (a[i].defined === false) continue;
    d = Math.abs(a[i][z] - v);
    if (d < min) {
      min = d;
      hit = a[i];
    }
  }

  return hit;
}

function pickLine(a, p) {
  var t = Math.pow(a[0].strokeWidth || 1, 2),
      i = a.length, dx, dy, dd;

  while (--i >= 0) {
    if (a[i].defined === false) continue;
    dx = a[i].x - p[0];
    dy = a[i].y - p[1];
    dd = dx * dx + dy * dy;
    if (dd < t) return a[i];
  }

  return null;
}

function pickTrail(a, p) {
  var i = a.length, dx, dy, dd;

  while (--i >= 0) {
    if (a[i].defined === false) continue;
    dx = a[i].x - p[0];
    dy = a[i].y - p[1];
    dd = dx * dx + dy * dy;
    dx = a[i].size || 1;
    if (dd < dx*dx) return a[i];
  }

  return null;
}


/***/ }),

/***/ "./node_modules/vega-scenegraph/src/util/point.js":
/*!********************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/util/point.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(event, el) {
  var rect = el.getBoundingClientRect();
  return [
    event.clientX - rect.left - (el.clientLeft || 0),
    event.clientY - rect.top - (el.clientTop || 0)
  ];
});


/***/ }),

/***/ "./node_modules/vega-scenegraph/src/util/resolveItem.js":
/*!**************************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/util/resolveItem.js ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _marks_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../marks/index */ "./node_modules/vega-scenegraph/src/marks/index.js");
/* harmony import */ var _point__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./point */ "./node_modules/vega-scenegraph/src/util/point.js");



/* harmony default export */ __webpack_exports__["default"] = (function(item, event, el, origin) {
  var mark = item && item.mark,
      mdef, p;

  if (mark && (mdef = _marks_index__WEBPACK_IMPORTED_MODULE_0__["default"][mark.marktype]).tip) {
    p = Object(_point__WEBPACK_IMPORTED_MODULE_1__["default"])(event, el);
    p[0] -= origin[0];
    p[1] -= origin[1];
    while (item = item.mark.group) {
      p[0] -= item.x || 0;
      p[1] -= item.y || 0;
    }
    item = mdef.tip(mark.items, p);
  }

  return item;
});


/***/ }),

/***/ "./node_modules/vega-scenegraph/src/util/serialize.js":
/*!************************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/util/serialize.js ***!
  \************************************************************/
/*! exports provided: sceneToJSON, sceneFromJSON */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sceneToJSON", function() { return sceneToJSON; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sceneFromJSON", function() { return sceneFromJSON; });
/* harmony import */ var _bound_boundMark__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bound/boundMark */ "./node_modules/vega-scenegraph/src/bound/boundMark.js");


var keys = [
  'marktype', 'name', 'role', 'interactive', 'clip', 'items', 'zindex',
  'x', 'y', 'width', 'height', 'align', 'baseline',             // layout
  'fill', 'fillOpacity', 'opacity',                             // fill
  'stroke', 'strokeOpacity', 'strokeWidth', 'strokeCap',        // stroke
  'strokeDash', 'strokeDashOffset',                             // stroke dash
  'startAngle', 'endAngle', 'innerRadius', 'outerRadius',       // arc
  'cornerRadius', 'padAngle',                                   // arc, rect
  'interpolate', 'tension', 'orient', 'defined',                // area, line
  'url',                                                        // image
  'path',                                                       // path
  'x2', 'y2',                                                   // rule
  'size', 'shape',                                              // symbol
  'text', 'angle', 'theta', 'radius', 'dx', 'dy',               // text
  'font', 'fontSize', 'fontWeight', 'fontStyle', 'fontVariant'  // font
];

function sceneToJSON(scene, indent) {
  return JSON.stringify(scene, keys, indent);
}

function sceneFromJSON(json) {
  var scene = (typeof json === 'string' ? JSON.parse(json) : json);
  return initialize(scene);
}

function initialize(scene) {
  var type = scene.marktype,
      items = scene.items,
      parent, i, n;

  if (items) {
    for (i=0, n=items.length; i<n; ++i) {
      parent = type ? 'mark' : 'group';
      items[i][parent] = scene;
      if (items[i].zindex) items[i][parent].zdirty = true;
      if ('group' === (type || parent)) initialize(items[i]);
    }
  }

  if (type) Object(_bound_boundMark__WEBPACK_IMPORTED_MODULE_0__["default"])(scene);
  return scene;
}


/***/ }),

/***/ "./node_modules/vega-scenegraph/src/util/svg/clip.js":
/*!***********************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/util/svg/clip.js ***!
  \***********************************************************/
/*! exports provided: resetSVGClipId, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "resetSVGClipId", function() { return resetSVGClipId; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");


var clip_id = 1;

function resetSVGClipId() {
  clip_id = 1;
}

/* harmony default export */ __webpack_exports__["default"] = (function(renderer, item, size) {
  var clip = item.clip,
      defs = renderer._defs,
      id = item.clip_id || (item.clip_id = 'clip' + clip_id++),
      c = defs.clipping[id] || (defs.clipping[id] = {id: id});

  if (Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isFunction"])(clip)) {
    c.path = clip(null);
  } else {
    c.width = size.width || 0;
    c.height = size.height || 0;
  }

  return 'url(#' + id + ')';
});


/***/ }),

/***/ "./node_modules/vega-scenegraph/src/util/svg/metadata.js":
/*!***************************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/util/svg/metadata.js ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ({
  'version': '1.1',
  'xmlns': 'http://www.w3.org/2000/svg',
  'xmlns:xlink': 'http://www.w3.org/1999/xlink'
});

/***/ }),

/***/ "./node_modules/vega-scenegraph/src/util/svg/styles.js":
/*!*************************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/util/svg/styles.js ***!
  \*************************************************************/
/*! exports provided: styles, styleProperties */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "styles", function() { return styles; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "styleProperties", function() { return styleProperties; });
var styles = {
  'fill':             'fill',
  'fillOpacity':      'fill-opacity',
  'stroke':           'stroke',
  'strokeOpacity':    'stroke-opacity',
  'strokeWidth':      'stroke-width',
  'strokeCap':        'stroke-linecap',
  'strokeJoin':       'stroke-linejoin',
  'strokeDash':       'stroke-dasharray',
  'strokeDashOffset': 'stroke-dashoffset',
  'strokeMiterLimit': 'stroke-miterlimit',
  'opacity':          'opacity'
};

var styleProperties = Object.keys(styles);


/***/ }),

/***/ "./node_modules/vega-scenegraph/src/util/svg/transform.js":
/*!****************************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/util/svg/transform.js ***!
  \****************************************************************/
/*! exports provided: translate, rotate, translateItem, transformItem */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "translate", function() { return translate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rotate", function() { return rotate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "translateItem", function() { return translateItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transformItem", function() { return transformItem; });
function translate(x, y) {
  return 'translate(' + x + ',' + y + ')';
}

function rotate(a) {
  return 'rotate(' + a + ')';
}

function translateItem(item) {
  return translate(item.x || 0, item.y || 0);
}

function transformItem(item) {
  return translate(item.x || 0, item.y || 0)
    + (item.angle ? ' ' + rotate(item.angle) : '');
}


/***/ }),

/***/ "./node_modules/vega-scenegraph/src/util/tags.js":
/*!*******************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/util/tags.js ***!
  \*******************************************************/
/*! exports provided: openTag, closeTag */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "openTag", function() { return openTag; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "closeTag", function() { return closeTag; });
// generate string for an opening xml tag
// tag: the name of the xml tag
// attr: hash of attribute name-value pairs to include
// raw: additional raw string to include in tag markup
function openTag(tag, attr, raw) {
  var s = '<' + tag, key, val;
  if (attr) {
    for (key in attr) {
      val = attr[key];
      if (val != null) {
        s += ' ' + key + '="' + val + '"';
      }
    }
  }
  if (raw) s += ' ' + raw;
  return s + '>';
}

// generate string for closing xml tag
// tag: the name of the xml tag
function closeTag(tag) {
  return '</' + tag + '>';
}


/***/ }),

/***/ "./node_modules/vega-scenegraph/src/util/text.js":
/*!*******************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/util/text.js ***!
  \*******************************************************/
/*! exports provided: textMetrics, fontSize, textValue, truncate, fontFamily, font, offset */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "textMetrics", function() { return textMetrics; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fontSize", function() { return fontSize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "textValue", function() { return textValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "truncate", function() { return truncate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fontFamily", function() { return fontFamily; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "font", function() { return font; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "offset", function() { return offset; });
/* harmony import */ var _canvas_context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./canvas/context */ "./node_modules/vega-scenegraph/src/util/canvas/context.js");


var currFontHeight;

var textMetrics = {
  height: fontSize,
  measureWidth: measureWidth,
  estimateWidth: estimateWidth,
  width: estimateWidth,
  canvas: useCanvas
};

useCanvas(true);

// make dumb, simple estimate if no canvas is available
function estimateWidth(item) {
  currFontHeight = fontSize(item);
  return estimate(textValue(item));
}

function estimate(text) {
  return ~~(0.8 * text.length * currFontHeight);
}

// measure text width if canvas is available
function measureWidth(item) {
  return fontSize(item) <= 0 ? 0
    : (_canvas_context__WEBPACK_IMPORTED_MODULE_0__["context"].font = font(item), measure(textValue(item)));
}

function measure(text) {
  return _canvas_context__WEBPACK_IMPORTED_MODULE_0__["context"].measureText(text).width;
}

function fontSize(item) {
  return item.fontSize != null ? item.fontSize : 11;
}

function useCanvas(use) {
  textMetrics.width = (use && _canvas_context__WEBPACK_IMPORTED_MODULE_0__["context"]) ? measureWidth : estimateWidth;
}

function textValue(item) {
  var s = item.text;
  if (s == null) {
    return '';
  } else {
    return item.limit > 0 ? truncate(item) : s + '';
  }
}

function truncate(item) {
  var limit = +item.limit,
      text = item.text + '',
      width;

  if (textMetrics.width === measureWidth) {
    // we are using canvas
    _canvas_context__WEBPACK_IMPORTED_MODULE_0__["context"].font = font(item);
    width = measure;
  } else {
    // we are relying on estimates
    currFontHeight = fontSize(item);
    width = estimate;
  }

  if (width(text) < limit) return text;

  var ellipsis = item.ellipsis || '\u2026',
      rtl = item.dir === 'rtl',
      lo = 0,
      hi = text.length, mid;

  limit -= width(ellipsis);

  if (rtl) {
    while (lo < hi) {
      mid = (lo + hi >>> 1);
      if (width(text.slice(mid)) > limit) lo = mid + 1;
      else hi = mid;
    }
    return ellipsis + text.slice(lo);
  } else {
    while (lo < hi) {
      mid = 1 + (lo + hi >>> 1);
      if (width(text.slice(0, mid)) < limit) lo = mid;
      else hi = mid - 1;
    }
    return text.slice(0, lo) + ellipsis;
  }
}

function fontFamily(item, quote) {
  var font = item.font;
  return (quote && font
    ? String(font).replace(/"/g, '\'')
    : font) || 'sans-serif';
}

function font(item, quote) {
  return '' +
    (item.fontStyle ? item.fontStyle + ' ' : '') +
    (item.fontVariant ? item.fontVariant + ' ' : '') +
    (item.fontWeight ? item.fontWeight + ' ' : '') +
    fontSize(item) + 'px ' +
    fontFamily(item, quote);
}

function offset(item) {
  // perform our own font baseline calculation
  // why? not all browsers support SVG 1.1 'alignment-baseline' :(
  var baseline = item.baseline,
      h = fontSize(item);
  return Math.round(
    baseline === 'top'    ?  0.79*h :
    baseline === 'middle' ?  0.30*h :
    baseline === 'bottom' ? -0.21*h : 0
  );
}


/***/ }),

/***/ "./node_modules/vega-scenegraph/src/util/visit.js":
/*!********************************************************!*\
  !*** ./node_modules/vega-scenegraph/src/util/visit.js ***!
  \********************************************************/
/*! exports provided: zorder, visit, pickVisit */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "zorder", function() { return zorder; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "visit", function() { return visit; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pickVisit", function() { return pickVisit; });
function compare(a, b) {
  return a.zindex - b.zindex || a.index - b.index;
}

function zorder(scene) {
  if (!scene.zdirty) return scene.zitems;

  var items = scene.items,
      output = [], item, i, n;

  for (i=0, n=items.length; i<n; ++i) {
    item = items[i];
    item.index = i;
    if (item.zindex) output.push(item);
  }

  scene.zdirty = false;
  return scene.zitems = output.sort(compare);
}

function visit(scene, visitor) {
  var items = scene.items, i, n;
  if (!items || !items.length) return;

  var zitems = zorder(scene);

  if (zitems && zitems.length) {
    for (i=0, n=items.length; i<n; ++i) {
      if (!items[i].zindex) visitor(items[i]);
    }
    items = zitems;
  }

  for (i=0, n=items.length; i<n; ++i) {
    visitor(items[i]);
  }
}

function pickVisit(scene, visitor) {
  var items = scene.items, hit, i;
  if (!items || !items.length) return null;

  var zitems = zorder(scene);
  if (zitems && zitems.length) items = zitems;

  for (i=items.length; --i >= 0;) {
    if (hit = visitor(items[i])) return hit;
  }

  if (items === zitems) {
    for (items=scene.items, i=items.length; --i >= 0;) {
      if (!items[i].zindex) {
        if (hit = visitor(items[i])) return hit;
      }
    }
  }

  return null;
}


/***/ }),

/***/ "./node_modules/vega-schema-url-parser/index.js":
/*!******************************************************!*\
  !*** ./node_modules/vega-schema-url-parser/index.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Parse a vega schema url into library and version.
 */
function default_1(url) {
    var regex = /\/schema\/([\w-]+)\/([\w\.\-]+)\.json$/g;
    var _a = regex.exec(url).slice(1, 3), library = _a[0], version = _a[1];
    return { library: library, version: version };
}
exports.default = default_1;
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/vega-selections/index.js":
/*!***********************************************!*\
  !*** ./node_modules/vega-selections/index.js ***!
  \***********************************************/
/*! exports provided: selectionTest, selectionResolve, selectionVisitor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _src_selectionTest__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/selectionTest */ "./node_modules/vega-selections/src/selectionTest.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "selectionTest", function() { return _src_selectionTest__WEBPACK_IMPORTED_MODULE_0__["selectionTest"]; });

/* harmony import */ var _src_selectionResolve__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/selectionResolve */ "./node_modules/vega-selections/src/selectionResolve.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "selectionResolve", function() { return _src_selectionResolve__WEBPACK_IMPORTED_MODULE_1__["selectionResolve"]; });

/* harmony import */ var _src_selectionVisitor__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/selectionVisitor */ "./node_modules/vega-selections/src/selectionVisitor.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "selectionVisitor", function() { return _src_selectionVisitor__WEBPACK_IMPORTED_MODULE_2__["selectionVisitor"]; });






/***/ }),

/***/ "./node_modules/vega-selections/src/constants.js":
/*!*******************************************************!*\
  !*** ./node_modules/vega-selections/src/constants.js ***!
  \*******************************************************/
/*! exports provided: Intersect, Union */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Intersect", function() { return Intersect; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Union", function() { return Union; });
const Intersect = 'intersect';
const Union = 'union';


/***/ }),

/***/ "./node_modules/vega-selections/src/selectionResolve.js":
/*!**************************************************************!*\
  !*** ./node_modules/vega-selections/src/selectionResolve.js ***!
  \**************************************************************/
/*! exports provided: selectionResolve */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectionResolve", function() { return selectionResolve; });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ "./node_modules/vega-selections/src/constants.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");



/**
 * Resolves selection for use as a scale domain or reads via the API.
 * @param {string} name - The name of the dataset representing the selection
 * @param {string} [op='union'] - The set operation for combining selections.
 *                 One of 'intersect' or 'union' (default).
 * @returns {object} An object of selected fields and values.
 */
function selectionResolve(name, op) {
  var data = this.context.data[name],
    entries = data ? data.values.value : [],
    resolved = {}, types = {},
    entry, fields, values, unit, field, res, resUnit, type, union,
    n = entries.length, i = 0, j, m;

  // First union all entries within the same unit.
  for (; i < n; ++i) {
    entry = entries[i];
    unit = entry.unit;
    fields = entry.fields;
    values = entry.values;

    for (j = 0, m = fields.length; j < m; ++j) {
      field = fields[j];
      res = resolved[field.field] || (resolved[field.field] = {});
      resUnit = res[unit] || (res[unit] = []);
      types[field.field] = type = field.type.charAt(0);
      union = ops[type + '_union'];
      res[unit] = union(resUnit, Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["array"])(values[j]));
    }
  }

  // Then resolve fields across units as per the op.
  op = op || _constants__WEBPACK_IMPORTED_MODULE_0__["Union"];
  Object.keys(resolved).forEach(function (field) {
    resolved[field] = Object.keys(resolved[field])
      .map(function (unit) { return resolved[field][unit]; })
      .reduce(function (acc, curr) {
        return acc === undefined ? curr :
          ops[types[field] + '_' + op](acc, curr);
      });
  });

  return resolved;
}

var ops = {
  E_union: function(base, value) {
    if (!base.length) return value;

    var i = 0, n = value.length;
    for (; i<n; ++i) if (base.indexOf(value[i]) < 0) base.push(value[i]);
    return base;
  },

  E_intersect: function(base, value) {
    return !base.length ? value :
      base.filter(function (v) { return value.indexOf(v) >= 0; });
  },

  R_union: function(base, value) {
    var lo = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["toNumber"])(value[0]), hi = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["toNumber"])(value[1]);
    if (lo > hi) {
      lo = value[1];
      hi = value[0];
    }

    if (!base.length) return [lo, hi];
    if (base[0] > lo) base[0] = lo;
    if (base[1] < hi) base[1] = hi;
    return base;
  },

  R_intersect: function(base, value) {
    var lo = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["toNumber"])(value[0]), hi = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["toNumber"])(value[1]);
    if (lo > hi) {
      lo = value[1];
      hi = value[0];
    }

    if (!base.length) return [lo, hi];
    if (hi < base[0] || base[1] < lo) {
      return [];
    } else {
      if (base[0] < lo) base[0] = lo;
      if (base[1] > hi) base[1] = hi;
    }
    return base;
  }
};


/***/ }),

/***/ "./node_modules/vega-selections/src/selectionTest.js":
/*!***********************************************************!*\
  !*** ./node_modules/vega-selections/src/selectionTest.js ***!
  \***********************************************************/
/*! exports provided: selectionTest */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectionTest", function() { return selectionTest; });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ "./node_modules/vega-selections/src/constants.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");



var TYPE_ENUM = 'E',
    TYPE_RANGE_INC = 'R',
    TYPE_RANGE_EXC = 'R-E',
    TYPE_RANGE_LE = 'R-LE',
    TYPE_RANGE_RE = 'R-RE',
    UNIT_INDEX = 'index:unit';

// TODO: revisit date coercion?
function testPoint(datum, entry) {
  var fields = entry.fields,
      values = entry.values,
      n = fields.length,
      i = 0, dval, f;

  for (; i<n; ++i) {
    f = fields[i];
    f.getter = vega_util__WEBPACK_IMPORTED_MODULE_1__["field"].getter || Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["field"])(f.field);
    dval = f.getter(datum);

    if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isDate"])(dval)) dval = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["toNumber"])(dval);
    if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isDate"])(values[i])) values[i] = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["toNumber"])(values[i]);
    if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isDate"])(values[i][0])) values[i] = values[i].map(vega_util__WEBPACK_IMPORTED_MODULE_1__["toNumber"]);

    if (f.type === TYPE_ENUM) {
      // Enumerated fields can either specify individual values (single/multi selections)
      // or an array of values (interval selections).
      if(Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(values[i]) ? values[i].indexOf(dval) < 0 : dval !== values[i]) {
        return false;
      }
    } else {
      if (f.type === TYPE_RANGE_INC) {
        if (!Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inrange"])(dval, values[i])) return false;
      } else if (f.type === TYPE_RANGE_RE) {
        // Discrete selection of bins test within the range [bin_start, bin_end).
        if (!Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inrange"])(dval, values[i], true, false)) return false;
      } else if (f.type === TYPE_RANGE_EXC) { // 'R-E'/'R-LE' included for completeness.
        if (!Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inrange"])(dval, values[i], false, false)) return false;
      } else if (f.type === TYPE_RANGE_LE) {
        if (!Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inrange"])(dval, values[i], false, true)) return false;
      }
    }
  }

  return true;
}

/**
 * Tests if a tuple is contained within an interactive selection.
 * @param {string} name - The name of the data set representing the selection.
 *  Tuples in the dataset are of the form
 *  {unit: string, fields: array<fielddef>, values: array<*>}.
 *  Fielddef is of the form
 *  {field: string, channel: string, type: 'E' | 'R'} where
 *  'type' identifies whether tuples in the dataset enumerate
 *  values for the field, or specify a continuous range.
 * @param {object} datum - The tuple to test for inclusion.
 * @param {string} op - The set operation for combining selections.
 *   One of 'intersect' or 'union' (default).
 * @return {boolean} - True if the datum is in the selection, false otherwise.
 */
function selectionTest(name, datum, op) {
  var data = this.context.data[name],
      entries = data ? data.values.value : [],
      unitIdx = data ? data[UNIT_INDEX] && data[UNIT_INDEX].value : undefined,
      intersect = op === _constants__WEBPACK_IMPORTED_MODULE_0__["Intersect"],
      n = entries.length,
      i = 0,
      entry, miss, count, unit, b;

  for (; i<n; ++i) {
    entry = entries[i];

    if (unitIdx && intersect) {
      // multi selections union within the same unit and intersect across units.
      miss = miss || {};
      count = miss[unit=entry.unit] || 0;

      // if we've already matched this unit, skip.
      if (count === -1) continue;

      b = testPoint(datum, entry);
      miss[unit] = b ? -1 : ++count;

      // if we match and there are no other units return true
      // if we've missed against all tuples in this unit return false
      if (b && unitIdx.size === 1) return true;
      if (!b && count === unitIdx.get(unit).count) return false;
    } else {
      b = testPoint(datum, entry);

      // if we find a miss and we do require intersection return false
      // if we find a match and we don't require intersection return true
      if (intersect ^ b) return b;
    }
  }

  // if intersecting and we made it here, then we saw no misses
  // if not intersecting, then we saw no matches
  // if no active selections, return false
  return n && intersect;
}

/***/ }),

/***/ "./node_modules/vega-selections/src/selectionVisitor.js":
/*!**************************************************************!*\
  !*** ./node_modules/vega-selections/src/selectionVisitor.js ***!
  \**************************************************************/
/*! exports provided: selectionVisitor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectionVisitor", function() { return selectionVisitor; });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ "./node_modules/vega-selections/src/constants.js");
/* harmony import */ var vega_expression__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-expression */ "./node_modules/vega-expression/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");




const DataPrefix = ':',
      IndexPrefix = '@';

function selectionVisitor(name, args, scope, params) {
  if (args[0].type !== vega_expression__WEBPACK_IMPORTED_MODULE_1__["Literal"]) Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["error"])('First argument to selection functions must be a string literal.');

  const data = args[0].value,
        op = args.length >= 2 && Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["peek"])(args).value,
        field = 'unit',
        indexName = IndexPrefix + field,
        dataName = DataPrefix + data;

  if (op === _constants__WEBPACK_IMPORTED_MODULE_0__["Intersect"] && !params.hasOwnProperty(indexName)) {
    params[indexName] = scope.getData(data).indataRef(scope, field);
  }

  if (!params.hasOwnProperty(dataName)) {
    params[dataName] = scope.getData(data).tuplesRef();
  }
}

/***/ }),

/***/ "./node_modules/vega-statistics/index.js":
/*!***********************************************!*\
  !*** ./node_modules/vega-statistics/index.js ***!
  \***********************************************/
/*! exports provided: bin, bootstrapCI, quartiles, random, setRandom, randomLCG, randomInteger, randomKDE, randomMixture, randomNormal, randomUniform, regressionLinear, regressionLog, regressionExp, regressionPow, regressionQuad, regressionPoly, regressionLoess, sampleCurve */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _src_bin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/bin */ "./node_modules/vega-statistics/src/bin.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bin", function() { return _src_bin__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _src_bootstrapCI__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/bootstrapCI */ "./node_modules/vega-statistics/src/bootstrapCI.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bootstrapCI", function() { return _src_bootstrapCI__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _src_quartiles__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/quartiles */ "./node_modules/vega-statistics/src/quartiles.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "quartiles", function() { return _src_quartiles__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _src_random__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/random */ "./node_modules/vega-statistics/src/random.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "random", function() { return _src_random__WEBPACK_IMPORTED_MODULE_3__["random"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setRandom", function() { return _src_random__WEBPACK_IMPORTED_MODULE_3__["setRandom"]; });

/* harmony import */ var _src_lcg__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./src/lcg */ "./node_modules/vega-statistics/src/lcg.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "randomLCG", function() { return _src_lcg__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _src_integer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./src/integer */ "./node_modules/vega-statistics/src/integer.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "randomInteger", function() { return _src_integer__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _src_kde__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./src/kde */ "./node_modules/vega-statistics/src/kde.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "randomKDE", function() { return _src_kde__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony import */ var _src_mixture__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./src/mixture */ "./node_modules/vega-statistics/src/mixture.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "randomMixture", function() { return _src_mixture__WEBPACK_IMPORTED_MODULE_7__["default"]; });

/* harmony import */ var _src_normal__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./src/normal */ "./node_modules/vega-statistics/src/normal.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "randomNormal", function() { return _src_normal__WEBPACK_IMPORTED_MODULE_8__["default"]; });

/* harmony import */ var _src_uniform__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./src/uniform */ "./node_modules/vega-statistics/src/uniform.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "randomUniform", function() { return _src_uniform__WEBPACK_IMPORTED_MODULE_9__["default"]; });

/* harmony import */ var _src_regression_linear__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./src/regression/linear */ "./node_modules/vega-statistics/src/regression/linear.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "regressionLinear", function() { return _src_regression_linear__WEBPACK_IMPORTED_MODULE_10__["default"]; });

/* harmony import */ var _src_regression_log__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./src/regression/log */ "./node_modules/vega-statistics/src/regression/log.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "regressionLog", function() { return _src_regression_log__WEBPACK_IMPORTED_MODULE_11__["default"]; });

/* harmony import */ var _src_regression_exp__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./src/regression/exp */ "./node_modules/vega-statistics/src/regression/exp.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "regressionExp", function() { return _src_regression_exp__WEBPACK_IMPORTED_MODULE_12__["default"]; });

/* harmony import */ var _src_regression_pow__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./src/regression/pow */ "./node_modules/vega-statistics/src/regression/pow.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "regressionPow", function() { return _src_regression_pow__WEBPACK_IMPORTED_MODULE_13__["default"]; });

/* harmony import */ var _src_regression_quad__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./src/regression/quad */ "./node_modules/vega-statistics/src/regression/quad.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "regressionQuad", function() { return _src_regression_quad__WEBPACK_IMPORTED_MODULE_14__["default"]; });

/* harmony import */ var _src_regression_poly__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./src/regression/poly */ "./node_modules/vega-statistics/src/regression/poly.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "regressionPoly", function() { return _src_regression_poly__WEBPACK_IMPORTED_MODULE_15__["default"]; });

/* harmony import */ var _src_regression_loess__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./src/regression/loess */ "./node_modules/vega-statistics/src/regression/loess.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "regressionLoess", function() { return _src_regression_loess__WEBPACK_IMPORTED_MODULE_16__["default"]; });

/* harmony import */ var _src_sampleCurve__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./src/sampleCurve */ "./node_modules/vega-statistics/src/sampleCurve.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sampleCurve", function() { return _src_sampleCurve__WEBPACK_IMPORTED_MODULE_17__["default"]; });





















/***/ }),

/***/ "./node_modules/vega-statistics/src/bin.js":
/*!*************************************************!*\
  !*** ./node_modules/vega-statistics/src/bin.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(_) {
  // determine range
  var maxb = _.maxbins || 20,
      base = _.base || 10,
      logb = Math.log(base),
      div  = _.divide || [5, 2],
      min  = _.extent[0],
      max  = _.extent[1],
      span = (max - min) || Math.abs(min) || 1,
      step, level, minstep, precision, v, i, n, eps;

  if (_.step) {
    // if step size is explicitly given, use that
    step = _.step;
  } else if (_.steps) {
    // if provided, limit choice to acceptable step sizes
    v = span / maxb;
    for (i=0, n=_.steps.length; i < n && _.steps[i] < v; ++i);
    step = _.steps[Math.max(0, i-1)];
  } else {
    // else use span to determine step size
    level = Math.ceil(Math.log(maxb) / logb);
    minstep = _.minstep || 0;
    step = Math.max(
      minstep,
      Math.pow(base, Math.round(Math.log(span) / logb) - level)
    );

    // increase step size if too many bins
    while (Math.ceil(span/step) > maxb) { step *= base; }

    // decrease step size if allowed
    for (i=0, n=div.length; i<n; ++i) {
      v = step / div[i];
      if (v >= minstep && span / v <= maxb) step = v;
    }
  }

  // update precision, min and max
  v = Math.log(step);
  precision = v >= 0 ? 0 : ~~(-v / logb) + 1;
  eps = Math.pow(base, -precision - 1);
  if (_.nice || _.nice === undefined) {
    v = Math.floor(min / step + eps) * step;
    min = min < v ? v - step : v;
    max = Math.ceil(max / step) * step;
  }

  return {
    start: min,
    stop:  max === min ? min + step : max,
    step:  step
  };
});


/***/ }),

/***/ "./node_modules/vega-statistics/src/bootstrapCI.js":
/*!*********************************************************!*\
  !*** ./node_modules/vega-statistics/src/bootstrapCI.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _numbers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./numbers */ "./node_modules/vega-statistics/src/numbers.js");
/* harmony import */ var _random__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./random */ "./node_modules/vega-statistics/src/random.js");
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");




/* harmony default export */ __webpack_exports__["default"] = (function(array, samples, alpha, f) {
  if (!array.length) return [undefined, undefined];

  var values = Float64Array.from(Object(_numbers__WEBPACK_IMPORTED_MODULE_0__["default"])(array, f)),
      n = values.length,
      m = samples,
      a, i, j, mu;

  for (j=0, mu=Array(m); j<m; ++j) {
    for (a=0, i=0; i<n; ++i) {
      a += values[~~(Object(_random__WEBPACK_IMPORTED_MODULE_1__["random"])() * n)];
    }
    mu[j] = a / n;
  }

  return [
    Object(d3_array__WEBPACK_IMPORTED_MODULE_2__["quantile"])(mu.sort(d3_array__WEBPACK_IMPORTED_MODULE_2__["ascending"]), alpha/2),
    Object(d3_array__WEBPACK_IMPORTED_MODULE_2__["quantile"])(mu, 1-(alpha/2))
  ];
});


/***/ }),

/***/ "./node_modules/vega-statistics/src/integer.js":
/*!*****************************************************!*\
  !*** ./node_modules/vega-statistics/src/integer.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _random__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./random */ "./node_modules/vega-statistics/src/random.js");


/* harmony default export */ __webpack_exports__["default"] = (function(min, max) {
  if (max == null) {
    max = min;
    min = 0;
  }

  var dist = {},
      a, b, d;

  dist.min = function(_) {
    if (arguments.length) {
      a = _ || 0;
      d = b - a;
      return dist;
    } else {
      return a;
    }
  };

  dist.max = function(_) {
    if (arguments.length) {
      b = _ || 0;
      d = b - a;
      return dist;
    } else {
      return b;
    }
  };

  dist.sample = function() {
    return a + Math.floor(d * Object(_random__WEBPACK_IMPORTED_MODULE_0__["random"])());
  };

  dist.pdf = function(x) {
    return (x === Math.floor(x) && x >= a && x < b) ? 1 / d : 0;
  };

  dist.cdf = function(x) {
    var v = Math.floor(x);
    return v < a ? 0 : v >= b ? 1 : (v - a + 1) / d;
  };

  dist.icdf = function(p) {
    return (p >= 0 && p <= 1) ? a - 1 + Math.floor(p * d) : NaN;
  };

  return dist.min(min).max(max);
});


/***/ }),

/***/ "./node_modules/vega-statistics/src/kde.js":
/*!*************************************************!*\
  !*** ./node_modules/vega-statistics/src/kde.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _normal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./normal */ "./node_modules/vega-statistics/src/normal.js");
/* harmony import */ var _quartiles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./quartiles */ "./node_modules/vega-statistics/src/quartiles.js");
/* harmony import */ var _random__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./random */ "./node_modules/vega-statistics/src/random.js");
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");





// TODO: support for additional kernels?
/* harmony default export */ __webpack_exports__["default"] = (function(support, bandwidth) {
  var kernel = Object(_normal__WEBPACK_IMPORTED_MODULE_0__["default"])(),
      dist = {},
      n = 0;

  dist.data = function(_) {
    if (arguments.length) {
      support = _;
      n = _ ? _.length : 0;
      return dist.bandwidth(bandwidth);
    } else {
      return support;
    }
  };

  dist.bandwidth = function(_) {
    if (!arguments.length) return bandwidth;
    bandwidth = _;
    if (!bandwidth && support) bandwidth = estimateBandwidth(support);
    return dist;
  };

  dist.sample = function() {
    return support[~~(Object(_random__WEBPACK_IMPORTED_MODULE_2__["random"])() * n)] + bandwidth * kernel.sample();
  };

  dist.pdf = function(x) {
    for (var y=0, i=0; i<n; ++i) {
      y += kernel.pdf((x - support[i]) / bandwidth);
    }
    return y / bandwidth / n;
  };

  dist.cdf = function(x) {
    for (var y=0, i=0; i<n; ++i) {
      y += kernel.cdf((x - support[i]) / bandwidth);
    }
    return y / n;
  };

  dist.icdf = function() {
    throw Error('KDE icdf not supported.');
  };

  return dist.data(support);
});

// Scott, D. W. (1992) Multivariate Density Estimation:
// Theory, Practice, and Visualization. Wiley.
function estimateBandwidth(array) {
  var n = array.length,
      q = Object(_quartiles__WEBPACK_IMPORTED_MODULE_1__["default"])(array),
      h = (q[2] - q[0]) / 1.34;
  return 1.06 * Math.min(Math.sqrt(Object(d3_array__WEBPACK_IMPORTED_MODULE_3__["variance"])(array)), h) * Math.pow(n, -0.2);
}


/***/ }),

/***/ "./node_modules/vega-statistics/src/lcg.js":
/*!*************************************************!*\
  !*** ./node_modules/vega-statistics/src/lcg.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(seed) {
  // Random numbers using a Linear Congruential Generator with seed value
  // Uses glibc values from https://en.wikipedia.org/wiki/Linear_congruential_generator
  return function() {
    seed = (1103515245 * seed + 12345) % 2147483647;
    return seed / 2147483647;
  };
});


/***/ }),

/***/ "./node_modules/vega-statistics/src/mixture.js":
/*!*****************************************************!*\
  !*** ./node_modules/vega-statistics/src/mixture.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _random__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./random */ "./node_modules/vega-statistics/src/random.js");


/* harmony default export */ __webpack_exports__["default"] = (function(dists, weights) {
  var dist = {}, m = 0, w;

  function normalize(x) {
    var w = [], sum = 0, i;
    for (i=0; i<m; ++i) { sum += (w[i] = (x[i]==null ? 1 : +x[i])); }
    for (i=0; i<m; ++i) { w[i] /= sum; }
    return w;
  }

  dist.weights = function(_) {
    if (arguments.length) {
      w = normalize(weights = (_ || []));
      return dist;
    }
    return weights;
  };

  dist.distributions = function(_) {
    if (arguments.length) {
      if (_) {
        m = _.length;
        dists = _;
      } else {
        m = 0;
        dists = [];
      }
      return dist.weights(weights);
    }
    return dists;
  };

  dist.sample = function() {
    var r = Object(_random__WEBPACK_IMPORTED_MODULE_0__["random"])(),
        d = dists[m-1],
        v = w[0],
        i = 0;

    // first select distribution
    for (; i<m-1; v += w[++i]) {
      if (r < v) { d = dists[i]; break; }
    }
    // then sample from it
    return d.sample();
  };

  dist.pdf = function(x) {
    for (var p=0, i=0; i<m; ++i) {
      p += w[i] * dists[i].pdf(x);
    }
    return p;
  };

  dist.cdf = function(x) {
    for (var p=0, i=0; i<m; ++i) {
      p += w[i] * dists[i].cdf(x);
    }
    return p;
  };

  dist.icdf = function() {
    throw Error('Mixture icdf not supported.');
  };

  return dist.distributions(dists).weights(weights);
});


/***/ }),

/***/ "./node_modules/vega-statistics/src/normal.js":
/*!****************************************************!*\
  !*** ./node_modules/vega-statistics/src/normal.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _random__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./random */ "./node_modules/vega-statistics/src/random.js");


/* harmony default export */ __webpack_exports__["default"] = (function(mean, stdev) {
  var mu,
      sigma,
      next = NaN,
      dist = {};

  dist.mean = function(_) {
    if (arguments.length) {
      mu = _ || 0;
      next = NaN;
      return dist;
    } else {
      return mu;
    }
  };

  dist.stdev = function(_) {
    if (arguments.length) {
      sigma = _ == null ? 1 : _;
      next = NaN;
      return dist;
    } else {
      return sigma;
    }
  };

  dist.sample = function() {
    var x = 0, y = 0, rds, c;
    if (next === next) {
      x = next;
      next = NaN;
      return x;
    }
    do {
      x = Object(_random__WEBPACK_IMPORTED_MODULE_0__["random"])() * 2 - 1;
      y = Object(_random__WEBPACK_IMPORTED_MODULE_0__["random"])() * 2 - 1;
      rds = x * x + y * y;
    } while (rds === 0 || rds > 1);
    c = Math.sqrt(-2 * Math.log(rds) / rds); // Box-Muller transform
    next = mu + y * c * sigma;
    return mu + x * c * sigma;
  };

  dist.pdf = function(x) {
    var exp = Math.exp(Math.pow(x-mu, 2) / (-2 * Math.pow(sigma, 2)));
    return (1 / (sigma * Math.sqrt(2*Math.PI))) * exp;
  };

  // Approximation from West (2009)
  // Better Approximations to Cumulative Normal Functions
  dist.cdf = function(x) {
    var cd,
        z = (x - mu) / sigma,
        Z = Math.abs(z);
    if (Z > 37) {
      cd = 0;
    } else {
      var sum, exp = Math.exp(-Z*Z/2);
      if (Z < 7.07106781186547) {
        sum = 3.52624965998911e-02 * Z + 0.700383064443688;
        sum = sum * Z + 6.37396220353165;
        sum = sum * Z + 33.912866078383;
        sum = sum * Z + 112.079291497871;
        sum = sum * Z + 221.213596169931;
        sum = sum * Z + 220.206867912376;
        cd = exp * sum;
        sum = 8.83883476483184e-02 * Z + 1.75566716318264;
        sum = sum * Z + 16.064177579207;
        sum = sum * Z + 86.7807322029461;
        sum = sum * Z + 296.564248779674;
        sum = sum * Z + 637.333633378831;
        sum = sum * Z + 793.826512519948;
        sum = sum * Z + 440.413735824752;
        cd = cd / sum;
      } else {
        sum = Z + 0.65;
        sum = Z + 4 / sum;
        sum = Z + 3 / sum;
        sum = Z + 2 / sum;
        sum = Z + 1 / sum;
        cd = exp / sum / 2.506628274631;
      }
    }
    return z > 0 ? 1 - cd : cd;
  };

  // Approximation of Probit function using inverse error function.
  dist.icdf = function(p) {
    if (p <= 0 || p >= 1) return NaN;
    var x = 2*p - 1,
        v = (8 * (Math.PI - 3)) / (3 * Math.PI * (4-Math.PI)),
        a = (2 / (Math.PI*v)) + (Math.log(1 - Math.pow(x,2)) / 2),
        b = Math.log(1 - (x*x)) / v,
        s = (x > 0 ? 1 : -1) * Math.sqrt(Math.sqrt((a*a) - b) - a);
    return mu + sigma * Math.SQRT2 * s;
  };

  return dist.mean(mean).stdev(stdev);
});


/***/ }),

/***/ "./node_modules/vega-statistics/src/numbers.js":
/*!*****************************************************!*\
  !*** ./node_modules/vega-statistics/src/numbers.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function*(values, valueof) {
  if (valueof === undefined) {
    for (let value of values) {
      if (value != null && (value = +value) >= value) {
        yield value;
      }
    }
  } else {
    let index = -1;
    for (let value of values) {
      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {
        yield value;
      }
    }
  }
});


/***/ }),

/***/ "./node_modules/vega-statistics/src/quartiles.js":
/*!*******************************************************!*\
  !*** ./node_modules/vega-statistics/src/quartiles.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _numbers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./numbers */ "./node_modules/vega-statistics/src/numbers.js");
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");



/* harmony default export */ __webpack_exports__["default"] = (function(array, f) {
  var values = Float64Array.from(Object(_numbers__WEBPACK_IMPORTED_MODULE_0__["default"])(array, f));

  return [
    Object(d3_array__WEBPACK_IMPORTED_MODULE_1__["quantile"])(values.sort(d3_array__WEBPACK_IMPORTED_MODULE_1__["ascending"]), 0.25),
    Object(d3_array__WEBPACK_IMPORTED_MODULE_1__["quantile"])(values, 0.50),
    Object(d3_array__WEBPACK_IMPORTED_MODULE_1__["quantile"])(values, 0.75)
  ];
});


/***/ }),

/***/ "./node_modules/vega-statistics/src/random.js":
/*!****************************************************!*\
  !*** ./node_modules/vega-statistics/src/random.js ***!
  \****************************************************/
/*! exports provided: random, setRandom */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "random", function() { return random; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setRandom", function() { return setRandom; });
var random = Math.random;

function setRandom(r) {
  random = r;
}


/***/ }),

/***/ "./node_modules/vega-statistics/src/regression/exp.js":
/*!************************************************************!*\
  !*** ./node_modules/vega-statistics/src/regression/exp.js ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ols__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ols */ "./node_modules/vega-statistics/src/regression/ols.js");
/* harmony import */ var _points__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./points */ "./node_modules/vega-statistics/src/regression/points.js");
/* harmony import */ var _r_squared__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./r-squared */ "./node_modules/vega-statistics/src/regression/r-squared.js");




/* harmony default export */ __webpack_exports__["default"] = (function(data, x, y) {
  let Y = 0, YL = 0, XY = 0, XYL = 0, X2Y = 0, n = 0;

  Object(_points__WEBPACK_IMPORTED_MODULE_1__["visitPoints"])(data, x, y, (dx, dy) => {
    const ly = Math.log(dy),
          xy = dx * dy;
    Y += dy;
    XY += xy;
    X2Y += dx * xy;
    YL += dy * ly;
    XYL += xy * ly;
    ++n;
  });

  const coef = Object(_ols__WEBPACK_IMPORTED_MODULE_0__["default"])(XY / Y, YL / Y, XYL / Y, X2Y / Y),
        predict = x => coef[0] * Math.exp(coef[1] * x);

  coef[0] = Math.exp(coef[0]);

  return {
    coef: coef,
    predict: predict,
    rSquared: Object(_r_squared__WEBPACK_IMPORTED_MODULE_2__["default"])(data, x, y, Y / n, predict)
  };
});


/***/ }),

/***/ "./node_modules/vega-statistics/src/regression/linear.js":
/*!***************************************************************!*\
  !*** ./node_modules/vega-statistics/src/regression/linear.js ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ols__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ols */ "./node_modules/vega-statistics/src/regression/ols.js");
/* harmony import */ var _points__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./points */ "./node_modules/vega-statistics/src/regression/points.js");
/* harmony import */ var _r_squared__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./r-squared */ "./node_modules/vega-statistics/src/regression/r-squared.js");




// Adapted from d3-regression by Harry Stevens
// License: https://github.com/HarryStevens/d3-regression/blob/master/LICENSE
/* harmony default export */ __webpack_exports__["default"] = (function(data, x, y) {
  let X = 0, Y = 0, XY = 0, X2 = 0, n = 0;

  Object(_points__WEBPACK_IMPORTED_MODULE_1__["visitPoints"])(data, x, y, (dx, dy) => {
    X += dx;
    Y += dy;
    XY += dx * dy;
    X2 += dx * dx;
    ++n;
  });

  const coef = Object(_ols__WEBPACK_IMPORTED_MODULE_0__["default"])(X / n, Y / n, XY / n, X2 / n),
        predict = x => coef[0] + coef[1] * x;

  return {
    coef: coef,
    predict: predict,
    rSquared: Object(_r_squared__WEBPACK_IMPORTED_MODULE_2__["default"])(data, x, y, Y / n, predict)
  };
});


/***/ }),

/***/ "./node_modules/vega-statistics/src/regression/loess.js":
/*!**************************************************************!*\
  !*** ./node_modules/vega-statistics/src/regression/loess.js ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ols__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ols */ "./node_modules/vega-statistics/src/regression/ols.js");
/* harmony import */ var _points__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./points */ "./node_modules/vega-statistics/src/regression/points.js");
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");




const maxiters = 2,
      epsilon = 1e-12;

// Adapted from science.js by Jason Davies
// Source: https://github.com/jasondavies/science.js/blob/master/src/stats/loess.js
// License: https://github.com/jasondavies/science.js/blob/master/LICENSE
/* harmony default export */ __webpack_exports__["default"] = (function(data, x, y, bandwidth) {
  const [xv, yv] = Object(_points__WEBPACK_IMPORTED_MODULE_1__["points"])(data, x, y, true),
        n = xv.length,
        bw = Math.max(2, ~~(bandwidth * n)), // # nearest neighbors
        yhat = new Float64Array(n),
        residuals = new Float64Array(n),
        robustWeights = new Float64Array(n).fill(1);

  for (let iter = -1; ++iter <= maxiters; ) {
    const interval = [0, bw - 1];

    for (let i = 0; i < n; ++i) {
      const dx = xv[i],
            i0 = interval[0],
            i1 = interval[1],
            edge = (dx - xv[i0]) > (xv[i1] - dx) ? i0 : i1;

      let W = 0, X = 0, Y = 0, XY = 0, X2 = 0,
          denom = 1 / Math.abs(xv[edge] - dx || 1); // avoid singularity!

      for (let k = i0; k <= i1; ++k) {
        const xk = xv[k],
              yk = yv[k],
              w = tricube(Math.abs(dx - xk) * denom) * robustWeights[k],
              xkw = xk * w;

        W += w;
        X += xkw;
        Y += yk * w;
        XY += yk * xkw;
        X2 += xk * xkw;
      }

      // linear regression fit
      const [a, b] = Object(_ols__WEBPACK_IMPORTED_MODULE_0__["default"])(X / W, Y / W, XY / W, X2 / W);
      yhat[i] = a + b * dx;
      residuals[i] = Math.abs(yv[i] - yhat[i]);

      updateInterval(xv, i + 1, interval);
    }

    if (iter === maxiters) {
      break;
    }

    const medianResidual = Object(d3_array__WEBPACK_IMPORTED_MODULE_2__["median"])(residuals);
    if (Math.abs(medianResidual) < epsilon) break;

    for (let i = 0, arg, w; i < n; ++i){
      arg = residuals[i] / (6 * medianResidual);
      // default to epsilon (rather than zero) for large deviations
      // keeping weights tiny but non-zero prevents singularites
      robustWeights[i] = (arg >= 1) ? epsilon : ((w = 1 - arg * arg) * w);
    }
  }

  return output(xv, yhat);
});

// weighting kernel for local regression
function tricube(x) {
  return (x = 1 - x * x * x) * x * x;
}

// advance sliding window interval of nearest neighbors
function updateInterval(xv, i, interval) {
  let val = xv[i],
      left = interval[0],
      right = interval[1] + 1;

  if (right >= xv.length) return;

  // step right if distance to new right edge is <= distance to old left edge
  // step when distance is equal to ensure movement over duplicate x values
  while (i > left && (xv[right] - val) <= (val - xv[left])) {
    interval[0] = ++left;
    interval[1] = right;
    ++right;
  }
}

// generate smoothed output points
// average points with repeated x values
function output(xv, yhat) {
  const n = xv.length,
        out = [];

  for (let i=0, cnt=0, prev=[], v; i<n; ++i) {
    v = xv[i];
    if (prev[0] === v) {
      // average output values via online update
      prev[1] += (yhat[i] - prev[1]) / (++cnt);
    } else {
      // add new output point
      cnt = 0;
      prev = [v, yhat[i]];
      out.push(prev);
    }
  }
  return out;
}


/***/ }),

/***/ "./node_modules/vega-statistics/src/regression/log.js":
/*!************************************************************!*\
  !*** ./node_modules/vega-statistics/src/regression/log.js ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ols__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ols */ "./node_modules/vega-statistics/src/regression/ols.js");
/* harmony import */ var _points__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./points */ "./node_modules/vega-statistics/src/regression/points.js");
/* harmony import */ var _r_squared__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./r-squared */ "./node_modules/vega-statistics/src/regression/r-squared.js");




// Adapted from d3-regression by Harry Stevens
// License: https://github.com/HarryStevens/d3-regression/blob/master/LICENSE
/* harmony default export */ __webpack_exports__["default"] = (function(data, x, y) {
  let X = 0, Y = 0, XY = 0, X2 = 0, n = 0;

  Object(_points__WEBPACK_IMPORTED_MODULE_1__["visitPoints"])(data, x, y, (dx, dy) => {
    dx = Math.log(dx);
    X += dx;
    Y += dy;
    XY += dx * dy;
    X2 += dx * dx;
    ++n;
  });

  const coef = Object(_ols__WEBPACK_IMPORTED_MODULE_0__["default"])(X / n, Y / n, XY / n, X2 / n),
        predict = x => coef[0] + coef[1] * Math.log(x);

  return {
    coef: coef,
    predict: predict,
    rSquared: Object(_r_squared__WEBPACK_IMPORTED_MODULE_2__["default"])(data, x, y, Y / n, predict)
  };
});


/***/ }),

/***/ "./node_modules/vega-statistics/src/regression/ols.js":
/*!************************************************************!*\
  !*** ./node_modules/vega-statistics/src/regression/ols.js ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// Ordinary Least Squares
/* harmony default export */ __webpack_exports__["default"] = (function(uX, uY, uXY, uX2) {
  const delta = uX2 - uX * uX,
        slope = Math.abs(delta) < 1e-24 ? 0 : (uXY - uX * uY) / delta,
        intercept = uY - slope * uX;

  return [intercept, slope];
});


/***/ }),

/***/ "./node_modules/vega-statistics/src/regression/points.js":
/*!***************************************************************!*\
  !*** ./node_modules/vega-statistics/src/regression/points.js ***!
  \***************************************************************/
/*! exports provided: points, visitPoints */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "points", function() { return points; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "visitPoints", function() { return visitPoints; });
function points(data, x, y, sort) {
  data = data.filter(d => {
    let u = x(d), v = y(d);
    return u != null && (u = +u) >= u && v != null && (v = +v) >= v;
  });

  if (sort) {
    data.sort((a, b) => x(a) - x(b));
  }

  const X = new Float64Array(data.length),
        Y = new Float64Array(data.length);

  let i = 0;
  for (let d of data) {
    X[i] = x(d);
    Y[i] = y(d);
    ++i;
  }

  return [X, Y];
}

function visitPoints(data, x, y, callback) {
  let index = -1, i = -1, u, v;

  for (let d of data) {
    u = x(d, ++index, data);
    v = y(d, index, data);
    if (u != null && (u = +u) >= u && v != null && (v = +v) >= v) {
      callback(u, v, ++i);
    }
  }
}


/***/ }),

/***/ "./node_modules/vega-statistics/src/regression/poly.js":
/*!*************************************************************!*\
  !*** ./node_modules/vega-statistics/src/regression/poly.js ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _linear__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./linear */ "./node_modules/vega-statistics/src/regression/linear.js");
/* harmony import */ var _points__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./points */ "./node_modules/vega-statistics/src/regression/points.js");
/* harmony import */ var _quad__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./quad */ "./node_modules/vega-statistics/src/regression/quad.js");
/* harmony import */ var _r_squared__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./r-squared */ "./node_modules/vega-statistics/src/regression/r-squared.js");





// Adapted from d3-regression by Harry Stevens
// License: https://github.com/HarryStevens/d3-regression/blob/master/LICENSE
// ... which was adapted from regression-js by Tom Alexander
// Source: https://github.com/Tom-Alexander/regression-js/blob/master/src/regression.js#L246
// License: https://github.com/Tom-Alexander/regression-js/blob/master/LICENSE
/* harmony default export */ __webpack_exports__["default"] = (function(data, x, y, order) {
  // use more efficient methods for lower orders
  if (order === 1) return Object(_linear__WEBPACK_IMPORTED_MODULE_0__["default"])(data, x, y);
  if (order === 2) return Object(_quad__WEBPACK_IMPORTED_MODULE_2__["default"])(data, x, y);

  const [xv, yv] = Object(_points__WEBPACK_IMPORTED_MODULE_1__["points"])(data, x, y),
        n = xv.length,
        lhs = [],
        rhs = [],
        k = order + 1;

  let Y = 0, i, j, l, v, c;

  for (i = 0; i < n; ++i) {
    Y += yv[i];
  }

  for (i = 0; i < k; ++i) {
    for (l = 0, v = 0; l < n; ++l) {
      v += Math.pow(xv[l], i) * yv[l];
    }
    lhs.push(v);

    c = new Float64Array(k);
    for (j = 0; j < k; ++j) {
      for (l = 0, v = 0; l < n; ++l) {
        v += Math.pow(xv[l], i + j);
      }
      c[j] = v;
    }
    rhs.push(c);
  }
  rhs.push(lhs);

  const coef = gaussianElimination(rhs),
        predict = x => {
          let y = 0, i = 0, n = coef.length;
          for (; i < n; ++i) y += coef[i] * Math.pow(x, i);
          return y;
        };

  return {
    coef: coef,
    predict: predict,
    rSquared: Object(_r_squared__WEBPACK_IMPORTED_MODULE_3__["default"])(data, x, y, Y / n, predict)
  };
});

// Given an array for a two-dimensional matrix and the polynomial order,
// solve A * x = b using Gaussian elimination.
function gaussianElimination(matrix) {
  const n = matrix.length - 1,
        coef = [];

  let i, j, k, r, t;

  for (i = 0; i < n; ++i) {
    r = i; // max row
    for (j = i + 1; j < n; ++j) {
      if (Math.abs(matrix[i][j]) > Math.abs(matrix[i][r])) {
        r = j;
      }
    }

    for (k = i; k < n + 1; ++k) {
      t = matrix[k][i];
      matrix[k][i] = matrix[k][r];
      matrix[k][r] = t;
    }

    for (j = i + 1; j < n; ++j) {
      for (k = n; k >= i; k--) {
        matrix[k][j] -= (matrix[k][i] * matrix[i][j]) / matrix[i][i];
      }
    }
  }

  for (j = n - 1; j >= 0; --j) {
    t = 0;
    for (k = j + 1; k < n; ++k) {
      t += matrix[k][j] * coef[k];
    }
    coef[j] = (matrix[n][j] - t) / matrix[j][j];
  }

  return coef;
}

/***/ }),

/***/ "./node_modules/vega-statistics/src/regression/pow.js":
/*!************************************************************!*\
  !*** ./node_modules/vega-statistics/src/regression/pow.js ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ols__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ols */ "./node_modules/vega-statistics/src/regression/ols.js");
/* harmony import */ var _points__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./points */ "./node_modules/vega-statistics/src/regression/points.js");
/* harmony import */ var _r_squared__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./r-squared */ "./node_modules/vega-statistics/src/regression/r-squared.js");




// Adapted from d3-regression by Harry Stevens
// License: https://github.com/HarryStevens/d3-regression/blob/master/LICENSE
/* harmony default export */ __webpack_exports__["default"] = (function(data, x, y) {
  let X = 0, Y = 0, XY = 0, X2 = 0, YS = 0, n = 0;

  Object(_points__WEBPACK_IMPORTED_MODULE_1__["visitPoints"])(data, x, y, (dx, dy) => {
    const lx = Math.log(dx),
          ly = Math.log(dy);
    X += lx;
    Y += ly;
    XY += lx * ly;
    X2 += lx * lx;
    YS += dy;
    ++n;
  });

  const coef = Object(_ols__WEBPACK_IMPORTED_MODULE_0__["default"])(X / n, Y / n, XY / n, X2 / n),
        predict = x => coef[0] * Math.pow(x, coef[1]);

  coef[0] = Math.exp(coef[0]);

  return {
    coef: coef,
    predict: predict,
    rSquared: Object(_r_squared__WEBPACK_IMPORTED_MODULE_2__["default"])(data, x, y, YS / n, predict)
  };
});

/***/ }),

/***/ "./node_modules/vega-statistics/src/regression/quad.js":
/*!*************************************************************!*\
  !*** ./node_modules/vega-statistics/src/regression/quad.js ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _points__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./points */ "./node_modules/vega-statistics/src/regression/points.js");
/* harmony import */ var _r_squared__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./r-squared */ "./node_modules/vega-statistics/src/regression/r-squared.js");



/* harmony default export */ __webpack_exports__["default"] = (function(data, x, y) {
  let X = 0, Y = 0, X2 = 0, X3 = 0, X4 = 0, XY = 0, X2Y = 0, n = 0;

  Object(_points__WEBPACK_IMPORTED_MODULE_0__["visitPoints"])(data, x, y, (dx, dy) => {
    const x2 = dx * dx;
    X += dx;
    Y += dy;
    X2 += x2;
    X3 += x2 * dx;
    X4 += x2 * x2;
    XY += dx * dy;
    X2Y += x2 * dy;
    ++n;
  });

  Y = Y / n;
  XY = XY - X * Y;
  X2Y = X2Y - X2 * Y;

  const XX = X2 - X * X / n,
        XX2 = X3 - (X2 * X / n),
        X2X2 = X4 - (X2 * X2 / n),
        d = (XX * X2X2 - XX2 * XX2),
        a = (X2Y * XX - XY * XX2) / d,
        b = (XY * X2X2 - X2Y * XX2) / d,
        c = Y - (b * (X / n)) - (a * (X2 / n)),
        predict = x => a * x * x + b * x + c;

  return {
    coef: [c, b, a],
    predict: predict,
    rSquared: Object(_r_squared__WEBPACK_IMPORTED_MODULE_1__["default"])(data, x, y, Y, predict)
  };
});


/***/ }),

/***/ "./node_modules/vega-statistics/src/regression/r-squared.js":
/*!******************************************************************!*\
  !*** ./node_modules/vega-statistics/src/regression/r-squared.js ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _points__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./points */ "./node_modules/vega-statistics/src/regression/points.js");


// Adapted from d3-regression by Harry Stevens
// License: https://github.com/HarryStevens/d3-regression/blob/master/LICENSE
/* harmony default export */ __webpack_exports__["default"] = (function(data, x, y, uY, predict) {
  let SSE = 0, SST = 0;

  Object(_points__WEBPACK_IMPORTED_MODULE_0__["visitPoints"])(data, x, y, (dx, dy) => {
    const sse = dy - predict(dx),
          sst = dy - uY;

    SSE += sse * sse;
    SST += sst * sst;
  });

  return 1 - SSE / SST;
});


/***/ }),

/***/ "./node_modules/vega-statistics/src/sampleCurve.js":
/*!*********************************************************!*\
  !*** ./node_modules/vega-statistics/src/sampleCurve.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// subdivide up to accuracy of 0.1 degrees
const MIN_RADIANS = 0.1 * Math.PI / 180;

// Adaptively sample an interpolated function over a domain extent
/* harmony default export */ __webpack_exports__["default"] = (function(f, extent, minSteps, maxSteps) {
  minSteps = minSteps || 25;
  maxSteps = Math.max(minSteps, maxSteps || 200);

  const point = x => [x, f(x)],
        minX = extent[0],
        maxX = extent[1],
        span = maxX - minX,
        stop = span / maxSteps,
        prev = [point(minX)],
        next = [];

  if (minSteps === maxSteps) {
    // no adaptation, sample uniform grid directly and return
    for (let i = 1; i < maxSteps; ++i) {
      prev.push(point(minX + (i / minSteps) * span));
    }
    prev.push(point(maxX));
    return prev;
  } else {
    // sample minimum points on uniform grid
    // then move on to perform adaptive refinement
    next.push(point(maxX));
    for (let i = minSteps; --i > 0;) {
      next.push(point(minX + (i / minSteps) * span));
    }
  }

  let p0 = prev[0],
      p1 = next[next.length - 1];

  while (p1) {
    const pm = point((p0[0] + p1[0]) / 2);

    if (pm[0] - p0[0] >= stop && angleDelta(p0, pm, p1) > MIN_RADIANS) {
      next.push(pm);
    } else {
      p0 = p1;
      prev.push(p1);
      next.pop();
    }
    p1 = next[next.length - 1];
  }

  return prev;
});

function angleDelta(p, q, r) {
  const a0 = Math.atan2(r[1] - p[1], r[0] - p[0]),
        a1 = Math.atan2(q[1] - p[1], q[0] - p[0]);
  return Math.abs(a0 - a1);
}


/***/ }),

/***/ "./node_modules/vega-statistics/src/uniform.js":
/*!*****************************************************!*\
  !*** ./node_modules/vega-statistics/src/uniform.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _random__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./random */ "./node_modules/vega-statistics/src/random.js");


/* harmony default export */ __webpack_exports__["default"] = (function(min, max) {
  if (max == null) {
    max = (min == null ? 1 : min);
    min = 0;
  }

  var dist = {},
      a, b, d;

  dist.min = function(_) {
    if (arguments.length) {
      a = _ || 0;
      d = b - a;
      return dist;
    } else {
      return a;
    }
  };

  dist.max = function(_) {
    if (arguments.length) {
      b = _ || 0;
      d = b - a;
      return dist;
    } else {
      return b;
    }
  };

  dist.sample = function() {
    return a + d * Object(_random__WEBPACK_IMPORTED_MODULE_0__["random"])();
  };

  dist.pdf = function(x) {
    return (x >= a && x <= b) ? 1 / d : 0;
  };

  dist.cdf = function(x) {
    return x < a ? 0 : x > b ? 1 : (x - a) / d;
  };

  dist.icdf = function(p) {
    return (p >= 0 && p <= 1) ? a + p * d : NaN;
  };

  return dist.min(min).max(max);
});


/***/ }),

/***/ "./node_modules/vega-themes/build/index.js":
/*!*************************************************!*\
  !*** ./node_modules/vega-themes/build/index.js ***!
  \*************************************************/
/*! exports provided: excel, ggplot2, quartz, vox, dark, fivethirtyeight, latimes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _theme_excel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./theme-excel */ "./node_modules/vega-themes/build/theme-excel.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "excel", function() { return _theme_excel__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _theme_ggplot2__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./theme-ggplot2 */ "./node_modules/vega-themes/build/theme-ggplot2.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ggplot2", function() { return _theme_ggplot2__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _theme_quartz__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./theme-quartz */ "./node_modules/vega-themes/build/theme-quartz.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "quartz", function() { return _theme_quartz__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _theme_vox__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./theme-vox */ "./node_modules/vega-themes/build/theme-vox.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "vox", function() { return _theme_vox__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _theme_dark__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./theme-dark */ "./node_modules/vega-themes/build/theme-dark.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dark", function() { return _theme_dark__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _theme_fivethirtyeight__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./theme-fivethirtyeight */ "./node_modules/vega-themes/build/theme-fivethirtyeight.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "fivethirtyeight", function() { return _theme_fivethirtyeight__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _theme_latimes__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./theme-latimes */ "./node_modules/vega-themes/build/theme-latimes.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "latimes", function() { return _theme_latimes__WEBPACK_IMPORTED_MODULE_6__["default"]; });








//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLE9BQU8sSUFBSSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDakQsT0FBTyxFQUFFLE9BQU8sSUFBSSxPQUFPLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUNyRCxPQUFPLEVBQUUsT0FBTyxJQUFJLE1BQU0sRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ25ELE9BQU8sRUFBRSxPQUFPLElBQUksR0FBRyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBQzdDLE9BQU8sRUFBRSxPQUFPLElBQUksSUFBSSxFQUFFLE1BQU0sY0FBYyxDQUFDO0FBQy9DLE9BQU8sRUFBRSxPQUFPLElBQUksZUFBZSxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDckUsT0FBTyxFQUFFLE9BQU8sSUFBSSxPQUFPLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQyJ9

/***/ }),

/***/ "./node_modules/vega-themes/build/theme-dark.js":
/*!******************************************************!*\
  !*** ./node_modules/vega-themes/build/theme-dark.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
const lightColor = '#fff';
const medColor = '#888';
const darkTheme = {
    background: '#333',
    title: { color: lightColor },
    style: {
        'guide-label': {
            fill: lightColor,
        },
        'guide-title': {
            fill: lightColor,
        },
    },
    axis: {
        domainColor: lightColor,
        gridColor: medColor,
        tickColor: lightColor,
    },
};
/* harmony default export */ __webpack_exports__["default"] = (darkTheme);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhlbWUtZGFyay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy90aGVtZS1kYXJrLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLE1BQU0sVUFBVSxHQUFHLE1BQU0sQ0FBQztBQUMxQixNQUFNLFFBQVEsR0FBRyxNQUFNLENBQUM7QUFFeEIsTUFBTSxTQUFTLEdBQVc7SUFDeEIsVUFBVSxFQUFFLE1BQU07SUFFbEIsS0FBSyxFQUFFLEVBQUUsS0FBSyxFQUFFLFVBQVUsRUFBRTtJQUU1QixLQUFLLEVBQUU7UUFDTCxhQUFhLEVBQUU7WUFDYixJQUFJLEVBQUUsVUFBVTtTQUNqQjtRQUNELGFBQWEsRUFBRTtZQUNiLElBQUksRUFBRSxVQUFVO1NBQ2pCO0tBQ0Y7SUFFRCxJQUFJLEVBQUU7UUFDSixXQUFXLEVBQUUsVUFBVTtRQUN2QixTQUFTLEVBQUUsUUFBUTtRQUNuQixTQUFTLEVBQUUsVUFBVTtLQUN0QjtDQUNGLENBQUM7QUFFRixlQUFlLFNBQVMsQ0FBQyJ9

/***/ }),

/***/ "./node_modules/vega-themes/build/theme-excel.js":
/*!*******************************************************!*\
  !*** ./node_modules/vega-themes/build/theme-excel.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
const markColor = '#4572a7';
const excelTheme = {
    background: '#fff',
    arc: { fill: markColor },
    area: { fill: markColor },
    line: { stroke: markColor, strokeWidth: 2 },
    path: { stroke: markColor },
    rect: { fill: markColor },
    shape: { stroke: markColor },
    symbol: { fill: markColor, strokeWidth: 1.5, size: 50 },
    axis: {
        bandPosition: 0.5,
        grid: true,
        gridColor: '#000000',
        gridOpacity: 1,
        gridWidth: 0.5,
        labelPadding: 10,
        tickSize: 5,
        tickWidth: 0.5,
    },
    axisBand: {
        grid: false,
        tickExtra: true,
    },
    legend: {
        labelBaseline: 'middle',
        labelFontSize: 11,
        symbolSize: 50,
        symbolType: 'square',
    },
    range: {
        category: [
            '#4572a7',
            '#aa4643',
            '#8aa453',
            '#71598e',
            '#4598ae',
            '#d98445',
            '#94aace',
            '#d09393',
            '#b9cc98',
            '#a99cbc',
        ],
    },
};
/* harmony default export */ __webpack_exports__["default"] = (excelTheme);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhlbWUtZXhjZWwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvdGhlbWUtZXhjZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxTQUFTLEdBQUcsU0FBUyxDQUFDO0FBRTVCLE1BQU0sVUFBVSxHQUFXO0lBQ3pCLFVBQVUsRUFBRSxNQUFNO0lBRWxCLEdBQUcsRUFBRSxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUU7SUFDeEIsSUFBSSxFQUFFLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRTtJQUN6QixJQUFJLEVBQUUsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLFdBQVcsRUFBRSxDQUFDLEVBQUU7SUFDM0MsSUFBSSxFQUFFLEVBQUUsTUFBTSxFQUFFLFNBQVMsRUFBRTtJQUMzQixJQUFJLEVBQUUsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFO0lBQ3pCLEtBQUssRUFBRSxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUU7SUFDNUIsTUFBTSxFQUFFLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRSxXQUFXLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxFQUFFLEVBQUU7SUFFdkQsSUFBSSxFQUFFO1FBQ0osWUFBWSxFQUFFLEdBQUc7UUFDakIsSUFBSSxFQUFFLElBQUk7UUFDVixTQUFTLEVBQUUsU0FBUztRQUNwQixXQUFXLEVBQUUsQ0FBQztRQUNkLFNBQVMsRUFBRSxHQUFHO1FBQ2QsWUFBWSxFQUFFLEVBQUU7UUFDaEIsUUFBUSxFQUFFLENBQUM7UUFDWCxTQUFTLEVBQUUsR0FBRztLQUNmO0lBRUQsUUFBUSxFQUFFO1FBQ1IsSUFBSSxFQUFFLEtBQUs7UUFDWCxTQUFTLEVBQUUsSUFBSTtLQUNoQjtJQUVELE1BQU0sRUFBRTtRQUNOLGFBQWEsRUFBRSxRQUFRO1FBQ3ZCLGFBQWEsRUFBRSxFQUFFO1FBQ2pCLFVBQVUsRUFBRSxFQUFFO1FBQ2QsVUFBVSxFQUFFLFFBQVE7S0FDckI7SUFFRCxLQUFLLEVBQUU7UUFDTCxRQUFRLEVBQUU7WUFDUixTQUFTO1lBQ1QsU0FBUztZQUNULFNBQVM7WUFDVCxTQUFTO1lBQ1QsU0FBUztZQUNULFNBQVM7WUFDVCxTQUFTO1lBQ1QsU0FBUztZQUNULFNBQVM7WUFDVCxTQUFTO1NBQ1Y7S0FDRjtDQUNGLENBQUM7QUFFRixlQUFlLFVBQVUsQ0FBQyJ9

/***/ }),

/***/ "./node_modules/vega-themes/build/theme-fivethirtyeight.js":
/*!*****************************************************************!*\
  !*** ./node_modules/vega-themes/build/theme-fivethirtyeight.js ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
const markColor = '#30a2da';
const axisColor = '#cbcbcb';
const guideLabelColor = '#999';
const guideTitleColor = '#333';
const backgroundColor = '#f0f0f0';
const blackTitle = '#333';
const fiveThirtyEightTheme = {
    arc: { fill: markColor },
    area: { fill: markColor },
    axisBand: {
        grid: false,
    },
    axisBottom: {
        domain: false,
        domainColor: blackTitle,
        domainWidth: 3,
        grid: true,
        gridColor: axisColor,
        gridWidth: 1,
        labelColor: guideLabelColor,
        labelFontSize: 10,
        labelPadding: 4,
        tickColor: axisColor,
        tickSize: 10,
        titleFontSize: 14,
        titlePadding: 10,
    },
    axisLeft: {
        domainColor: axisColor,
        domainWidth: 1,
        grid: true,
        gridColor: axisColor,
        gridWidth: 1,
        labelColor: guideLabelColor,
        labelFontSize: 10,
        labelPadding: 4,
        tickColor: axisColor,
        tickSize: 10,
        ticks: true,
        titleFontSize: 14,
        titlePadding: 10,
    },
    axisRight: {
        domainColor: blackTitle,
        domainWidth: 1,
        grid: true,
        gridColor: axisColor,
        gridWidth: 1,
        labelColor: guideLabelColor,
        labelFontSize: 10,
        labelPadding: 4,
        tickColor: axisColor,
        tickSize: 10,
        ticks: true,
        titleFontSize: 14,
        titlePadding: 10,
    },
    axisTop: {
        domain: false,
        domainColor: blackTitle,
        domainWidth: 3,
        grid: true,
        gridColor: axisColor,
        gridWidth: 1,
        labelColor: guideLabelColor,
        labelFontSize: 10,
        labelPadding: 4,
        tickColor: axisColor,
        tickSize: 10,
        titleFontSize: 14,
        titlePadding: 10,
    },
    background: backgroundColor,
    group: {
        fill: backgroundColor,
    },
    legend: {
        labelColor: blackTitle,
        labelFontSize: 11,
        padding: 1,
        symbolSize: 30,
        symbolType: 'square',
        titleColor: blackTitle,
        titleFontSize: 14,
        titlePadding: 10,
    },
    line: {
        stroke: markColor,
        strokeWidth: 2,
    },
    path: { stroke: markColor, strokeWidth: 0.5 },
    rect: { fill: markColor },
    range: {
        category: [
            '#30a2da',
            '#fc4f30',
            '#e5ae38',
            '#6d904f',
            '#8b8b8b',
            '#b96db8',
            '#ff9e27',
            '#56cc60',
            '#52d2ca',
            '#52689e',
            '#545454',
            '#9fe4f8',
        ],
        diverging: [
            '#cc0020',
            '#e77866',
            '#f6e7e1',
            '#d6e8ed',
            '#91bfd9',
            '#1d78b5',
        ],
        heatmap: ['#d6e8ed', '#cee0e5', '#91bfd9', '#549cc6', '#1d78b5'],
    },
    symbol: {
        filled: true,
        shape: 'circle',
    },
    shape: { stroke: markColor },
    style: {
        bar: {
            binSpacing: 2,
            fill: markColor,
            stroke: null,
        },
    },
    title: {
        anchor: 'start',
        fontSize: 24,
        fontWeight: 600,
        offset: 20,
    },
};
/* harmony default export */ __webpack_exports__["default"] = (fiveThirtyEightTheme);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhlbWUtZml2ZXRoaXJ0eWVpZ2h0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL3RoZW1lLWZpdmV0aGlydHllaWdodC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxNQUFNLFNBQVMsR0FBRyxTQUFTLENBQUM7QUFDNUIsTUFBTSxTQUFTLEdBQUcsU0FBUyxDQUFDO0FBQzVCLE1BQU0sZUFBZSxHQUFHLE1BQU0sQ0FBQztBQUMvQixNQUFNLGVBQWUsR0FBRyxNQUFNLENBQUM7QUFDL0IsTUFBTSxlQUFlLEdBQUcsU0FBUyxDQUFDO0FBQ2xDLE1BQU0sVUFBVSxHQUFHLE1BQU0sQ0FBQztBQUUxQixNQUFNLG9CQUFvQixHQUFXO0lBQ25DLEdBQUcsRUFBRSxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUU7SUFDeEIsSUFBSSxFQUFFLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRTtJQUV6QixRQUFRLEVBQUU7UUFDUixJQUFJLEVBQUUsS0FBSztLQUNaO0lBRUQsVUFBVSxFQUFFO1FBQ1YsTUFBTSxFQUFFLEtBQUs7UUFDYixXQUFXLEVBQUUsVUFBVTtRQUN2QixXQUFXLEVBQUUsQ0FBQztRQUNkLElBQUksRUFBRSxJQUFJO1FBQ1YsU0FBUyxFQUFFLFNBQVM7UUFDcEIsU0FBUyxFQUFFLENBQUM7UUFDWixVQUFVLEVBQUUsZUFBZTtRQUMzQixhQUFhLEVBQUUsRUFBRTtRQUNqQixZQUFZLEVBQUUsQ0FBQztRQUNmLFNBQVMsRUFBRSxTQUFTO1FBQ3BCLFFBQVEsRUFBRSxFQUFFO1FBQ1osYUFBYSxFQUFFLEVBQUU7UUFDakIsWUFBWSxFQUFFLEVBQUU7S0FDakI7SUFFRCxRQUFRLEVBQUU7UUFDUixXQUFXLEVBQUUsU0FBUztRQUN0QixXQUFXLEVBQUUsQ0FBQztRQUNkLElBQUksRUFBRSxJQUFJO1FBQ1YsU0FBUyxFQUFFLFNBQVM7UUFDcEIsU0FBUyxFQUFFLENBQUM7UUFDWixVQUFVLEVBQUUsZUFBZTtRQUMzQixhQUFhLEVBQUUsRUFBRTtRQUNqQixZQUFZLEVBQUUsQ0FBQztRQUNmLFNBQVMsRUFBRSxTQUFTO1FBQ3BCLFFBQVEsRUFBRSxFQUFFO1FBQ1osS0FBSyxFQUFFLElBQUk7UUFDWCxhQUFhLEVBQUUsRUFBRTtRQUNqQixZQUFZLEVBQUUsRUFBRTtLQUNqQjtJQUVELFNBQVMsRUFBRTtRQUNULFdBQVcsRUFBRSxVQUFVO1FBQ3ZCLFdBQVcsRUFBRSxDQUFDO1FBQ2QsSUFBSSxFQUFFLElBQUk7UUFDVixTQUFTLEVBQUUsU0FBUztRQUNwQixTQUFTLEVBQUUsQ0FBQztRQUNaLFVBQVUsRUFBRSxlQUFlO1FBQzNCLGFBQWEsRUFBRSxFQUFFO1FBQ2pCLFlBQVksRUFBRSxDQUFDO1FBQ2YsU0FBUyxFQUFFLFNBQVM7UUFDcEIsUUFBUSxFQUFFLEVBQUU7UUFDWixLQUFLLEVBQUUsSUFBSTtRQUNYLGFBQWEsRUFBRSxFQUFFO1FBQ2pCLFlBQVksRUFBRSxFQUFFO0tBQ2pCO0lBRUQsT0FBTyxFQUFFO1FBQ1AsTUFBTSxFQUFFLEtBQUs7UUFDYixXQUFXLEVBQUUsVUFBVTtRQUN2QixXQUFXLEVBQUUsQ0FBQztRQUNkLElBQUksRUFBRSxJQUFJO1FBQ1YsU0FBUyxFQUFFLFNBQVM7UUFDcEIsU0FBUyxFQUFFLENBQUM7UUFDWixVQUFVLEVBQUUsZUFBZTtRQUMzQixhQUFhLEVBQUUsRUFBRTtRQUNqQixZQUFZLEVBQUUsQ0FBQztRQUNmLFNBQVMsRUFBRSxTQUFTO1FBQ3BCLFFBQVEsRUFBRSxFQUFFO1FBQ1osYUFBYSxFQUFFLEVBQUU7UUFDakIsWUFBWSxFQUFFLEVBQUU7S0FDakI7SUFFRCxVQUFVLEVBQUUsZUFBZTtJQUMzQixLQUFLLEVBQUU7UUFDTCxJQUFJLEVBQUUsZUFBZTtLQUN0QjtJQUVELE1BQU0sRUFBRTtRQUNOLFVBQVUsRUFBRSxVQUFVO1FBQ3RCLGFBQWEsRUFBRSxFQUFFO1FBQ2pCLE9BQU8sRUFBRSxDQUFDO1FBQ1YsVUFBVSxFQUFFLEVBQUU7UUFDZCxVQUFVLEVBQUUsUUFBUTtRQUNwQixVQUFVLEVBQUUsVUFBVTtRQUN0QixhQUFhLEVBQUUsRUFBRTtRQUNqQixZQUFZLEVBQUUsRUFBRTtLQUNqQjtJQUVELElBQUksRUFBRTtRQUNKLE1BQU0sRUFBRSxTQUFTO1FBQ2pCLFdBQVcsRUFBRSxDQUFDO0tBQ2Y7SUFFRCxJQUFJLEVBQUUsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLFdBQVcsRUFBRSxHQUFHLEVBQUU7SUFDN0MsSUFBSSxFQUFFLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRTtJQUV6QixLQUFLLEVBQUU7UUFDTCxRQUFRLEVBQUU7WUFDUixTQUFTO1lBQ1QsU0FBUztZQUNULFNBQVM7WUFDVCxTQUFTO1lBQ1QsU0FBUztZQUNULFNBQVM7WUFDVCxTQUFTO1lBQ1QsU0FBUztZQUNULFNBQVM7WUFDVCxTQUFTO1lBQ1QsU0FBUztZQUNULFNBQVM7U0FDVjtRQUVELFNBQVMsRUFBRTtZQUNULFNBQVM7WUFDVCxTQUFTO1lBQ1QsU0FBUztZQUNULFNBQVM7WUFDVCxTQUFTO1lBQ1QsU0FBUztTQUNWO1FBQ0QsT0FBTyxFQUFFLENBQUMsU0FBUyxFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUFFLFNBQVMsQ0FBQztLQUNqRTtJQUVELE1BQU0sRUFBRTtRQUNOLE1BQU0sRUFBRSxJQUFJO1FBQ1osS0FBSyxFQUFFLFFBQVE7S0FDaEI7SUFFRCxLQUFLLEVBQUUsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFO0lBRTVCLEtBQUssRUFBRTtRQUNMLEdBQUcsRUFBRTtZQUNILFVBQVUsRUFBRSxDQUFDO1lBQ2IsSUFBSSxFQUFFLFNBQVM7WUFDZixNQUFNLEVBQUUsSUFBSTtTQUNiO0tBQ0Y7SUFFRCxLQUFLLEVBQUU7UUFDTCxNQUFNLEVBQUUsT0FBTztRQUNmLFFBQVEsRUFBRSxFQUFFO1FBQ1osVUFBVSxFQUFFLEdBQUc7UUFDZixNQUFNLEVBQUUsRUFBRTtLQUNYO0NBQ0YsQ0FBQztBQUVGLGVBQWUsb0JBQW9CLENBQUMifQ==

/***/ }),

/***/ "./node_modules/vega-themes/build/theme-ggplot2.js":
/*!*********************************************************!*\
  !*** ./node_modules/vega-themes/build/theme-ggplot2.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
const markColor = '#000';
const ggplot2Theme = {
    group: {
        fill: '#e5e5e5',
    },
    arc: { fill: markColor },
    area: { fill: markColor },
    line: { stroke: markColor },
    path: { stroke: markColor },
    rect: { fill: markColor },
    shape: { stroke: markColor },
    symbol: { fill: markColor, size: 40 },
    axis: {
        domain: false,
        grid: true,
        gridColor: '#FFFFFF',
        gridOpacity: 1,
        labelColor: '#7F7F7F',
        labelPadding: 4,
        tickColor: '#7F7F7F',
        tickSize: 5.67,
        titleFontSize: 16,
        titleFontWeight: 'normal',
    },
    legend: {
        labelBaseline: 'middle',
        labelFontSize: 11,
        symbolSize: 40,
    },
    range: {
        category: [
            '#000000',
            '#7F7F7F',
            '#1A1A1A',
            '#999999',
            '#333333',
            '#B0B0B0',
            '#4D4D4D',
            '#C9C9C9',
            '#666666',
            '#DCDCDC',
        ],
    },
};
/* harmony default export */ __webpack_exports__["default"] = (ggplot2Theme);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhlbWUtZ2dwbG90Mi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy90aGVtZS1nZ3Bsb3QyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLE1BQU0sU0FBUyxHQUFHLE1BQU0sQ0FBQztBQUV6QixNQUFNLFlBQVksR0FBVztJQUMzQixLQUFLLEVBQUU7UUFDTCxJQUFJLEVBQUUsU0FBUztLQUNoQjtJQUVELEdBQUcsRUFBRSxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUU7SUFDeEIsSUFBSSxFQUFFLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRTtJQUN6QixJQUFJLEVBQUUsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFO0lBQzNCLElBQUksRUFBRSxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUU7SUFDM0IsSUFBSSxFQUFFLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRTtJQUN6QixLQUFLLEVBQUUsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFO0lBQzVCLE1BQU0sRUFBRSxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBRTtJQUVyQyxJQUFJLEVBQUU7UUFDSixNQUFNLEVBQUUsS0FBSztRQUNiLElBQUksRUFBRSxJQUFJO1FBQ1YsU0FBUyxFQUFFLFNBQVM7UUFDcEIsV0FBVyxFQUFFLENBQUM7UUFDZCxVQUFVLEVBQUUsU0FBUztRQUNyQixZQUFZLEVBQUUsQ0FBQztRQUNmLFNBQVMsRUFBRSxTQUFTO1FBQ3BCLFFBQVEsRUFBRSxJQUFJO1FBQ2QsYUFBYSxFQUFFLEVBQUU7UUFDakIsZUFBZSxFQUFFLFFBQVE7S0FDMUI7SUFFRCxNQUFNLEVBQUU7UUFDTixhQUFhLEVBQUUsUUFBUTtRQUN2QixhQUFhLEVBQUUsRUFBRTtRQUNqQixVQUFVLEVBQUUsRUFBRTtLQUNmO0lBRUQsS0FBSyxFQUFFO1FBQ0wsUUFBUSxFQUFFO1lBQ1IsU0FBUztZQUNULFNBQVM7WUFDVCxTQUFTO1lBQ1QsU0FBUztZQUNULFNBQVM7WUFDVCxTQUFTO1lBQ1QsU0FBUztZQUNULFNBQVM7WUFDVCxTQUFTO1lBQ1QsU0FBUztTQUNWO0tBQ0Y7Q0FDRixDQUFDO0FBRUYsZUFBZSxZQUFZLENBQUMifQ==

/***/ }),

/***/ "./node_modules/vega-themes/build/theme-latimes.js":
/*!*********************************************************!*\
  !*** ./node_modules/vega-themes/build/theme-latimes.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
const headlineFontSize = 22;
const headlineFontWeight = 'normal';
const labelFont = 'Benton Gothic, sans';
const labelFontSize = 11.5;
const labelFontWeight = 'normal';
const markColor = '#82c6df';
const markHighlight = '#006d8f';
const markDemocrat = '#5789b8';
const markRepublican = '#d94f54';
const titleFont = 'Benton Gothic Bold, sans';
const titleFontWeight = 'normal';
const titleFontSize = 13;
const colorSchemes = {
    'category-6': [
        '#ec8431',
        '#829eb1',
        '#c89d29',
        '#3580b1',
        '#adc839',
        '#ab7fb4',
    ],
    'fire-7': [
        '#fbf2c7',
        '#f9e39c',
        '#f8d36e',
        '#f4bb6a',
        '#e68a4f',
        '#d15a40',
        '#ab4232',
    ],
    'fireandice-6': [
        '#e68a4f',
        '#f4bb6a',
        '#f9e39c',
        '#dadfe2',
        '#a6b7c6',
        '#849eae',
    ],
    'ice-7': [
        '#edefee',
        '#dadfe2',
        '#c4ccd2',
        '#a6b7c6',
        '#849eae',
        '#607785',
        '#47525d',
    ],
};
const latimesTheme = {
    background: '#ffffff',
    title: {
        anchor: 'start',
        font: titleFont,
        fontColor: '#000000',
        fontSize: headlineFontSize,
        fontWeight: headlineFontWeight,
    },
    arc: { fill: markColor },
    area: { fill: markColor },
    line: { stroke: markColor, strokeWidth: 2 },
    path: { stroke: markColor },
    rect: { fill: markColor },
    shape: { stroke: markColor },
    symbol: { fill: markColor, size: 30 },
    axis: {
        labelFont,
        labelFontSize,
        labelFontWeight,
        titleFont,
        titleFontSize,
        titleFontWeight,
    },
    axisX: {
        labelAngle: 0,
        labelPadding: 4,
        tickSize: 3,
    },
    axisY: {
        labelBaseline: 'middle',
        maxExtent: 45,
        minExtent: 45,
        tickSize: 2,
        titleAlign: 'left',
        titleAngle: 0,
        titleX: -45,
        titleY: -11,
    },
    legend: {
        labelFont,
        labelFontSize,
        symbolType: 'square',
        titleFont,
        titleFontSize,
        titleFontWeight,
    },
    range: {
        category: colorSchemes['category-6'],
        diverging: colorSchemes['fireandice-6'],
        heatmap: colorSchemes['fire-7'],
        ordinal: colorSchemes['fire-7'],
        ramp: colorSchemes['fire-7'],
    },
};
/* harmony default export */ __webpack_exports__["default"] = (latimesTheme);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhlbWUtbGF0aW1lcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy90aGVtZS1sYXRpbWVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLE1BQU0sZ0JBQWdCLEdBQUcsRUFBRSxDQUFDO0FBQzVCLE1BQU0sa0JBQWtCLEdBQUcsUUFBUSxDQUFDO0FBQ3BDLE1BQU0sU0FBUyxHQUFHLHFCQUFxQixDQUFDO0FBQ3hDLE1BQU0sYUFBYSxHQUFHLElBQUksQ0FBQztBQUMzQixNQUFNLGVBQWUsR0FBRyxRQUFRLENBQUM7QUFDakMsTUFBTSxTQUFTLEdBQUcsU0FBUyxDQUFDO0FBQzVCLE1BQU0sYUFBYSxHQUFHLFNBQVMsQ0FBQztBQUNoQyxNQUFNLFlBQVksR0FBRyxTQUFTLENBQUM7QUFDL0IsTUFBTSxjQUFjLEdBQUcsU0FBUyxDQUFDO0FBQ2pDLE1BQU0sU0FBUyxHQUFHLDBCQUEwQixDQUFDO0FBQzdDLE1BQU0sZUFBZSxHQUFHLFFBQVEsQ0FBQztBQUNqQyxNQUFNLGFBQWEsR0FBRyxFQUFFLENBQUM7QUFDekIsTUFBTSxZQUFZLEdBQUc7SUFDbkIsWUFBWSxFQUFFO1FBQ1osU0FBUztRQUNULFNBQVM7UUFDVCxTQUFTO1FBQ1QsU0FBUztRQUNULFNBQVM7UUFDVCxTQUFTO0tBQ1Y7SUFDRCxRQUFRLEVBQUU7UUFDUixTQUFTO1FBQ1QsU0FBUztRQUNULFNBQVM7UUFDVCxTQUFTO1FBQ1QsU0FBUztRQUNULFNBQVM7UUFDVCxTQUFTO0tBQ1Y7SUFDRCxjQUFjLEVBQUU7UUFDZCxTQUFTO1FBQ1QsU0FBUztRQUNULFNBQVM7UUFDVCxTQUFTO1FBQ1QsU0FBUztRQUNULFNBQVM7S0FDVjtJQUNELE9BQU8sRUFBRTtRQUNQLFNBQVM7UUFDVCxTQUFTO1FBQ1QsU0FBUztRQUNULFNBQVM7UUFDVCxTQUFTO1FBQ1QsU0FBUztRQUNULFNBQVM7S0FDVjtDQUNGLENBQUM7QUFFRixNQUFNLFlBQVksR0FBVztJQUMzQixVQUFVLEVBQUUsU0FBUztJQUVyQixLQUFLLEVBQUU7UUFDTCxNQUFNLEVBQUUsT0FBTztRQUNmLElBQUksRUFBRSxTQUFTO1FBQ2YsU0FBUyxFQUFFLFNBQVM7UUFDcEIsUUFBUSxFQUFFLGdCQUFnQjtRQUMxQixVQUFVLEVBQUUsa0JBQWtCO0tBQy9CO0lBRUQsR0FBRyxFQUFFLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRTtJQUN4QixJQUFJLEVBQUUsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFO0lBQ3pCLElBQUksRUFBRSxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUUsV0FBVyxFQUFFLENBQUMsRUFBRTtJQUMzQyxJQUFJLEVBQUUsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFO0lBQzNCLElBQUksRUFBRSxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUU7SUFDekIsS0FBSyxFQUFFLEVBQUUsTUFBTSxFQUFFLFNBQVMsRUFBRTtJQUM1QixNQUFNLEVBQUUsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxFQUFFLEVBQUU7SUFFckMsSUFBSSxFQUFFO1FBQ0osU0FBUztRQUNULGFBQWE7UUFDYixlQUFlO1FBQ2YsU0FBUztRQUNULGFBQWE7UUFDYixlQUFlO0tBQ2hCO0lBRUQsS0FBSyxFQUFFO1FBQ0wsVUFBVSxFQUFFLENBQUM7UUFDYixZQUFZLEVBQUUsQ0FBQztRQUNmLFFBQVEsRUFBRSxDQUFDO0tBQ1o7SUFFRCxLQUFLLEVBQUU7UUFDTCxhQUFhLEVBQUUsUUFBUTtRQUN2QixTQUFTLEVBQUUsRUFBRTtRQUNiLFNBQVMsRUFBRSxFQUFFO1FBQ2IsUUFBUSxFQUFFLENBQUM7UUFDWCxVQUFVLEVBQUUsTUFBTTtRQUNsQixVQUFVLEVBQUUsQ0FBQztRQUNiLE1BQU0sRUFBRSxDQUFDLEVBQUU7UUFDWCxNQUFNLEVBQUUsQ0FBQyxFQUFFO0tBQ1o7SUFFRCxNQUFNLEVBQUU7UUFDTixTQUFTO1FBQ1QsYUFBYTtRQUNiLFVBQVUsRUFBRSxRQUFRO1FBQ3BCLFNBQVM7UUFDVCxhQUFhO1FBQ2IsZUFBZTtLQUNoQjtJQUVELEtBQUssRUFBRTtRQUNMLFFBQVEsRUFBRSxZQUFZLENBQUMsWUFBWSxDQUFDO1FBQ3BDLFNBQVMsRUFBRSxZQUFZLENBQUMsY0FBYyxDQUFDO1FBQ3ZDLE9BQU8sRUFBRSxZQUFZLENBQUMsUUFBUSxDQUFDO1FBQy9CLE9BQU8sRUFBRSxZQUFZLENBQUMsUUFBUSxDQUFDO1FBQy9CLElBQUksRUFBRSxZQUFZLENBQUMsUUFBUSxDQUFDO0tBQzdCO0NBQ0YsQ0FBQztBQUVGLGVBQWUsWUFBWSxDQUFDIn0=

/***/ }),

/***/ "./node_modules/vega-themes/build/theme-quartz.js":
/*!********************************************************!*\
  !*** ./node_modules/vega-themes/build/theme-quartz.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
const markColor = '#ab5787';
const axisColor = '#979797';
const quartzTheme = {
    background: '#f9f9f9',
    arc: { fill: markColor },
    area: { fill: markColor },
    line: { stroke: markColor },
    path: { stroke: markColor },
    rect: { fill: markColor },
    shape: { stroke: markColor },
    symbol: { fill: markColor, size: 30 },
    axis: {
        domainColor: axisColor,
        domainWidth: 0.5,
        gridWidth: 0.2,
        labelColor: axisColor,
        tickColor: axisColor,
        tickWidth: 0.2,
        titleColor: axisColor,
    },
    axisBand: {
        grid: false,
    },
    axisX: {
        grid: true,
        tickSize: 10,
    },
    axisY: {
        domain: false,
        grid: true,
        tickSize: 0,
    },
    legend: {
        labelFontSize: 11,
        padding: 1,
        symbolSize: 30,
        symbolType: 'square',
    },
    range: {
        category: [
            '#ab5787',
            '#51b2e5',
            '#703c5c',
            '#168dd9',
            '#d190b6',
            '#00609f',
            '#d365ba',
            '#154866',
            '#666666',
            '#c4c4c4',
        ],
    },
};
/* harmony default export */ __webpack_exports__["default"] = (quartzTheme);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhlbWUtcXVhcnR6LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL3RoZW1lLXF1YXJ0ei50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxNQUFNLFNBQVMsR0FBRyxTQUFTLENBQUM7QUFDNUIsTUFBTSxTQUFTLEdBQUcsU0FBUyxDQUFDO0FBRTVCLE1BQU0sV0FBVyxHQUFXO0lBQzFCLFVBQVUsRUFBRSxTQUFTO0lBRXJCLEdBQUcsRUFBRSxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUU7SUFDeEIsSUFBSSxFQUFFLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRTtJQUN6QixJQUFJLEVBQUUsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFO0lBQzNCLElBQUksRUFBRSxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUU7SUFDM0IsSUFBSSxFQUFFLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRTtJQUN6QixLQUFLLEVBQUUsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFO0lBQzVCLE1BQU0sRUFBRSxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBRTtJQUVyQyxJQUFJLEVBQUU7UUFDSixXQUFXLEVBQUUsU0FBUztRQUN0QixXQUFXLEVBQUUsR0FBRztRQUNoQixTQUFTLEVBQUUsR0FBRztRQUNkLFVBQVUsRUFBRSxTQUFTO1FBQ3JCLFNBQVMsRUFBRSxTQUFTO1FBQ3BCLFNBQVMsRUFBRSxHQUFHO1FBQ2QsVUFBVSxFQUFFLFNBQVM7S0FDdEI7SUFFRCxRQUFRLEVBQUU7UUFDUixJQUFJLEVBQUUsS0FBSztLQUNaO0lBRUQsS0FBSyxFQUFFO1FBQ0wsSUFBSSxFQUFFLElBQUk7UUFDVixRQUFRLEVBQUUsRUFBRTtLQUNiO0lBRUQsS0FBSyxFQUFFO1FBQ0wsTUFBTSxFQUFFLEtBQUs7UUFDYixJQUFJLEVBQUUsSUFBSTtRQUNWLFFBQVEsRUFBRSxDQUFDO0tBQ1o7SUFFRCxNQUFNLEVBQUU7UUFDTixhQUFhLEVBQUUsRUFBRTtRQUNqQixPQUFPLEVBQUUsQ0FBQztRQUNWLFVBQVUsRUFBRSxFQUFFO1FBQ2QsVUFBVSxFQUFFLFFBQVE7S0FDckI7SUFFRCxLQUFLLEVBQUU7UUFDTCxRQUFRLEVBQUU7WUFDUixTQUFTO1lBQ1QsU0FBUztZQUNULFNBQVM7WUFDVCxTQUFTO1lBQ1QsU0FBUztZQUNULFNBQVM7WUFDVCxTQUFTO1lBQ1QsU0FBUztZQUNULFNBQVM7WUFDVCxTQUFTO1NBQ1Y7S0FDRjtDQUNGLENBQUM7QUFFRixlQUFlLFdBQVcsQ0FBQyJ9

/***/ }),

/***/ "./node_modules/vega-themes/build/theme-vox.js":
/*!*****************************************************!*\
  !*** ./node_modules/vega-themes/build/theme-vox.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
const markColor = '#3e5c69';
const voxTheme = {
    background: '#fff',
    arc: { fill: markColor },
    area: { fill: markColor },
    line: { stroke: markColor },
    path: { stroke: markColor },
    rect: { fill: markColor },
    shape: { stroke: markColor },
    symbol: { fill: markColor },
    axis: {
        domainWidth: 0.5,
        grid: true,
        labelPadding: 2,
        tickSize: 5,
        tickWidth: 0.5,
        titleFontWeight: 'normal',
    },
    axisBand: {
        grid: false,
    },
    axisX: {
        gridWidth: 0.2,
    },
    axisY: {
        gridDash: [3],
        gridWidth: 0.4,
    },
    legend: {
        labelFontSize: 11,
        padding: 1,
        symbolType: 'square',
    },
    range: {
        category: [
            '#3e5c69',
            '#6793a6',
            '#182429',
            '#0570b0',
            '#3690c0',
            '#74a9cf',
            '#a6bddb',
            '#e2ddf2',
        ],
    },
};
/* harmony default export */ __webpack_exports__["default"] = (voxTheme);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhlbWUtdm94LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL3RoZW1lLXZveC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxNQUFNLFNBQVMsR0FBRyxTQUFTLENBQUM7QUFFNUIsTUFBTSxRQUFRLEdBQVc7SUFDdkIsVUFBVSxFQUFFLE1BQU07SUFFbEIsR0FBRyxFQUFFLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRTtJQUN4QixJQUFJLEVBQUUsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFO0lBQ3pCLElBQUksRUFBRSxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUU7SUFDM0IsSUFBSSxFQUFFLEVBQUUsTUFBTSxFQUFFLFNBQVMsRUFBRTtJQUMzQixJQUFJLEVBQUUsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFO0lBQ3pCLEtBQUssRUFBRSxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUU7SUFDNUIsTUFBTSxFQUFFLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRTtJQUUzQixJQUFJLEVBQUU7UUFDSixXQUFXLEVBQUUsR0FBRztRQUNoQixJQUFJLEVBQUUsSUFBSTtRQUNWLFlBQVksRUFBRSxDQUFDO1FBQ2YsUUFBUSxFQUFFLENBQUM7UUFDWCxTQUFTLEVBQUUsR0FBRztRQUNkLGVBQWUsRUFBRSxRQUFRO0tBQzFCO0lBRUQsUUFBUSxFQUFFO1FBQ1IsSUFBSSxFQUFFLEtBQUs7S0FDWjtJQUVELEtBQUssRUFBRTtRQUNMLFNBQVMsRUFBRSxHQUFHO0tBQ2Y7SUFFRCxLQUFLLEVBQUU7UUFDTCxRQUFRLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDYixTQUFTLEVBQUUsR0FBRztLQUNmO0lBRUQsTUFBTSxFQUFFO1FBQ04sYUFBYSxFQUFFLEVBQUU7UUFDakIsT0FBTyxFQUFFLENBQUM7UUFDVixVQUFVLEVBQUUsUUFBUTtLQUNyQjtJQUVELEtBQUssRUFBRTtRQUNMLFFBQVEsRUFBRTtZQUNSLFNBQVM7WUFDVCxTQUFTO1lBQ1QsU0FBUztZQUNULFNBQVM7WUFDVCxTQUFTO1lBQ1QsU0FBUztZQUNULFNBQVM7WUFDVCxTQUFTO1NBQ1Y7S0FDRjtDQUNGLENBQUM7QUFFRixlQUFlLFFBQVEsQ0FBQyJ9

/***/ }),

/***/ "./node_modules/vega-tooltip/build/Handler.js":
/*!****************************************************!*\
  !*** ./node_modules/vega-tooltip/build/Handler.js ***!
  \****************************************************/
/*! exports provided: Handler */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Handler", function() { return Handler; });
/* harmony import */ var _defaults__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defaults */ "./node_modules/vega-tooltip/build/defaults.js");
/* harmony import */ var _formatValue__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./formatValue */ "./node_modules/vega-tooltip/build/formatValue.js");
/* harmony import */ var _position__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./position */ "./node_modules/vega-tooltip/build/position.js");



/**
 * The tooltip handler class.
 */
class Handler {
    /**
     * Create the tooltip handler and initialize the element and style.
     *
     * @param options Tooltip Options
     */
    constructor(options) {
        this.options = Object.assign({}, _defaults__WEBPACK_IMPORTED_MODULE_0__["DEFAULT_OPTIONS"], options);
        const elementId = this.options.id;
        // bind this to call
        this.call = this.tooltipHandler.bind(this);
        // prepend a default stylesheet for tooltips to the head
        if (!this.options.disableDefaultStyle && !document.getElementById(this.options.styleId)) {
            const style = document.createElement('style');
            style.setAttribute('id', this.options.styleId);
            style.innerHTML = Object(_defaults__WEBPACK_IMPORTED_MODULE_0__["createDefaultStyle"])(elementId);
            const head = document.head;
            if (head.childNodes.length > 0) {
                head.insertBefore(style, head.childNodes[0]);
            }
            else {
                head.appendChild(style);
            }
        }
        // append a div element that we use as a tooltip unless it already exists
        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
        this.el = document.getElementById(elementId);
        if (!this.el) {
            this.el = document.createElement('div');
            this.el.setAttribute('id', elementId);
            this.el.classList.add('vg-tooltip');
            document.body.appendChild(this.el);
        }
    }
    /**
     * The tooltip handler function.
     */
    tooltipHandler(handler, event, item, value) {
        // console.log(handler, event, item, value);
        // hide tooltip for null, undefined, or empty string values
        if (value == null || value === '') {
            this.el.classList.remove('visible', `${this.options.theme}-theme`);
            return;
        }
        // set the tooltip content
        this.el.innerHTML = Object(_formatValue__WEBPACK_IMPORTED_MODULE_1__["formatValue"])(value, this.options.sanitize, this.options.maxDepth);
        // make the tooltip visible
        this.el.classList.add('visible', `${this.options.theme}-theme`);
        const { x, y } = Object(_position__WEBPACK_IMPORTED_MODULE_2__["calculatePosition"])(event, this.el.getBoundingClientRect(), this.options.offsetX, this.options.offsetY);
        this.el.setAttribute('style', `top: ${y}px; left: ${x}px`);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSGFuZGxlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9IYW5kbGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLE9BQU8sRUFBQyxrQkFBa0IsRUFBRSxlQUFlLEVBQVUsTUFBTSxZQUFZLENBQUM7QUFDeEUsT0FBTyxFQUFDLFdBQVcsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUMxQyxPQUFPLEVBQUMsaUJBQWlCLEVBQUMsTUFBTSxZQUFZLENBQUM7QUFFN0M7O0dBRUc7QUFDSCxNQUFNLE9BQU8sT0FBTztJQWdCbEI7Ozs7T0FJRztJQUNILFlBQVksT0FBMEI7UUFDcEMsSUFBSSxDQUFDLE9BQU8scUJBQU8sZUFBZSxFQUFLLE9BQU8sQ0FBQyxDQUFDO1FBQ2hELE1BQU0sU0FBUyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDO1FBRWxDLG9CQUFvQjtRQUNwQixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBRTNDLHdEQUF3RDtRQUN4RCxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxtQkFBbUIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsRUFBRTtZQUN2RixNQUFNLEtBQUssR0FBRyxRQUFRLENBQUMsYUFBYSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1lBQzlDLEtBQUssQ0FBQyxZQUFZLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUM7WUFDL0MsS0FBSyxDQUFDLFNBQVMsR0FBRyxrQkFBa0IsQ0FBQyxTQUFTLENBQUMsQ0FBQztZQUVoRCxNQUFNLElBQUksR0FBRyxRQUFRLENBQUMsSUFBSSxDQUFDO1lBQzNCLElBQUksSUFBSSxDQUFDLFVBQVUsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO2dCQUM5QixJQUFJLENBQUMsWUFBWSxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7YUFDOUM7aUJBQU07Z0JBQ0wsSUFBSSxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsQ0FBQzthQUN6QjtTQUNGO1FBRUQseUVBQXlFO1FBQ3pFLG9FQUFvRTtRQUNwRSxJQUFJLENBQUMsRUFBRSxHQUFHLFFBQVEsQ0FBQyxjQUFjLENBQUMsU0FBUyxDQUFFLENBQUM7UUFDOUMsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLEVBQUU7WUFDWixJQUFJLENBQUMsRUFBRSxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDeEMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxZQUFZLENBQUMsSUFBSSxFQUFFLFNBQVMsQ0FBQyxDQUFDO1lBQ3RDLElBQUksQ0FBQyxFQUFFLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxZQUFZLENBQUMsQ0FBQztZQUVwQyxRQUFRLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUM7U0FDcEM7SUFDSCxDQUFDO0lBRUQ7O09BRUc7SUFDSyxjQUFjLENBQUMsT0FBWSxFQUFFLEtBQWlCLEVBQUUsSUFBUyxFQUFFLEtBQVU7UUFDM0UsNENBQTRDO1FBRTVDLDJEQUEyRDtRQUMzRCxJQUFJLEtBQUssSUFBSSxJQUFJLElBQUksS0FBSyxLQUFLLEVBQUUsRUFBRTtZQUNqQyxJQUFJLENBQUMsRUFBRSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsU0FBUyxFQUFFLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLFFBQVEsQ0FBQyxDQUFDO1lBQ25FLE9BQU87U0FDUjtRQUVELDBCQUEwQjtRQUMxQixJQUFJLENBQUMsRUFBRSxDQUFDLFNBQVMsR0FBRyxXQUFXLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7UUFFckYsMkJBQTJCO1FBQzNCLElBQUksQ0FBQyxFQUFFLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxTQUFTLEVBQUUsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssUUFBUSxDQUFDLENBQUM7UUFFaEUsTUFBTSxFQUFDLENBQUMsRUFBRSxDQUFDLEVBQUMsR0FBRyxpQkFBaUIsQ0FDOUIsS0FBSyxFQUNMLElBQUksQ0FBQyxFQUFFLENBQUMscUJBQXFCLEVBQUUsRUFDL0IsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLEVBQ3BCLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUNyQixDQUFDO1FBRUYsSUFBSSxDQUFDLEVBQUUsQ0FBQyxZQUFZLENBQUMsT0FBTyxFQUFFLFFBQVEsQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDN0QsQ0FBQztDQUNGIn0=

/***/ }),

/***/ "./node_modules/vega-tooltip/build/defaults.js":
/*!*****************************************************!*\
  !*** ./node_modules/vega-tooltip/build/defaults.js ***!
  \*****************************************************/
/*! exports provided: DEFAULT_OPTIONS, escapeHTML, createDefaultStyle */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DEFAULT_OPTIONS", function() { return DEFAULT_OPTIONS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "escapeHTML", function() { return escapeHTML; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createDefaultStyle", function() { return createDefaultStyle; });
/* harmony import */ var _style__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./style */ "./node_modules/vega-tooltip/build/style.js");

const EL_ID = 'vg-tooltip-element';
const DEFAULT_OPTIONS = {
    /**
     * X offset.
     */
    offsetX: 10,
    /**
     * Y offset.
     */
    offsetY: 10,
    /**
     * ID of the tooltip element.
     */
    id: EL_ID,
    /**
     * ID of the tooltip CSS style.
     */
    styleId: 'vega-tooltip-style',
    /**
     * The name of the theme. You can use the CSS class called [THEME]-theme to style the tooltips.
     *
     * There are two predefined themes: "light" (default) and "dark".
     */
    theme: 'light',
    /**
     * Do not use the default styles provided by Vega Tooltip. If you enable this option, you need to use your own styles. It is not necessary to disable the default style when using a custom theme.
     */
    disableDefaultStyle: false,
    /**
     * HTML sanitizer function that removes dangerous HTML to prevent XSS.
     *
     * This should be a function from string to string. You may replace it with a formatter such as a markdown formatter.
     */
    sanitize: escapeHTML,
    /**
     * The maximum recursion depth when printing objects in the tooltip.
     */
    maxDepth: 2
};
/**
 * Escape special HTML characters.
 *
 * @param value A value to convert to string and HTML-escape.
 */
function escapeHTML(value) {
    return String(value)
        .replace(/&/g, '&amp;')
        .replace(/</g, '&lt;');
}
function createDefaultStyle(id) {
    // Just in case this id comes from a user, ensure these is no security issues
    if (!/^[A-Za-z]+[-:.\w]*$/.test(id)) {
        throw new Error('Invalid HTML ID');
    }
    return _style__WEBPACK_IMPORTED_MODULE_0__["default"].toString().replace(EL_ID, id);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVmYXVsdHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvZGVmYXVsdHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxZQUFZLE1BQU0sU0FBUyxDQUFDO0FBRW5DLE1BQU0sS0FBSyxHQUFHLG9CQUFvQixDQUFDO0FBRW5DLE1BQU0sQ0FBQyxNQUFNLGVBQWUsR0FBRztJQUM3Qjs7T0FFRztJQUNILE9BQU8sRUFBRSxFQUFFO0lBRVg7O09BRUc7SUFDSCxPQUFPLEVBQUUsRUFBRTtJQUVYOztPQUVHO0lBQ0gsRUFBRSxFQUFFLEtBQUs7SUFFVDs7T0FFRztJQUNILE9BQU8sRUFBRSxvQkFBb0I7SUFFN0I7Ozs7T0FJRztJQUNILEtBQUssRUFBRSxPQUFPO0lBRWQ7O09BRUc7SUFDSCxtQkFBbUIsRUFBRSxLQUFLO0lBRTFCOzs7O09BSUc7SUFDSCxRQUFRLEVBQUUsVUFBVTtJQUVwQjs7T0FFRztJQUNILFFBQVEsRUFBRSxDQUFDO0NBQ1osQ0FBQztBQUlGOzs7O0dBSUc7QUFDSCxNQUFNLFVBQVUsVUFBVSxDQUFDLEtBQVU7SUFDbkMsT0FBTyxNQUFNLENBQUMsS0FBSyxDQUFDO1NBQ2pCLE9BQU8sQ0FBQyxJQUFJLEVBQUUsT0FBTyxDQUFDO1NBQ3RCLE9BQU8sQ0FBQyxJQUFJLEVBQUUsTUFBTSxDQUFDLENBQUM7QUFDM0IsQ0FBQztBQUVELE1BQU0sVUFBVSxrQkFBa0IsQ0FBQyxFQUFVO0lBQzNDLDZFQUE2RTtJQUM3RSxJQUFJLENBQUMscUJBQXFCLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxFQUFFO1FBQ25DLE1BQU0sSUFBSSxLQUFLLENBQUMsaUJBQWlCLENBQUMsQ0FBQztLQUNwQztJQUVELE9BQU8sWUFBWSxDQUFDLFFBQVEsRUFBRSxDQUFDLE9BQU8sQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLENBQUM7QUFDcEQsQ0FBQyJ9

/***/ }),

/***/ "./node_modules/vega-tooltip/build/formatValue.js":
/*!********************************************************!*\
  !*** ./node_modules/vega-tooltip/build/formatValue.js ***!
  \********************************************************/
/*! exports provided: formatValue, replacer, stringify */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "formatValue", function() { return formatValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "replacer", function() { return replacer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "stringify", function() { return stringify; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
var __rest = (undefined && undefined.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};

/**
 * Format the value to be shown in the toolip.
 *
 * @param value The value to show in the tooltip.
 * @param valueToHtml Function to convert a single cell value to an HTML string
 */
function formatValue(value, valueToHtml, maxDepth) {
    if (Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isArray"])(value)) {
        return `[${value.map(v => valueToHtml(Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isString"])(v) ? v : stringify(v, maxDepth))).join(', ')}]`;
    }
    if (Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isObject"])(value)) {
        let content = '';
        const _a = value, { title } = _a, rest = __rest(_a, ["title"]);
        if (title) {
            content += `<h2>${valueToHtml(title)}</h2>`;
        }
        const keys = Object.keys(rest);
        if (keys.length > 0) {
            content += '<table>';
            for (const key of keys) {
                let val = rest[key];
                // ignore undefined properties
                if (val === undefined) {
                    continue;
                }
                if (Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isObject"])(val)) {
                    val = stringify(val, maxDepth);
                }
                content += `<tr><td class="key">${valueToHtml(key)}:</td><td class="value">${valueToHtml(val)}</td></tr>`;
            }
            content += `</table>`;
        }
        return content || '{}'; // show empty object if there are no properties
    }
    return valueToHtml(value);
}
function replacer(maxDepth) {
    const stack = [];
    return function (key, value) {
        if (typeof value !== 'object' || value === null) {
            return value;
        }
        const pos = stack.indexOf(this) + 1;
        stack.length = pos;
        if (stack.length > maxDepth) {
            return '[Object]';
        }
        if (stack.indexOf(value) >= 0) {
            return '[Circular]';
        }
        stack.push(value);
        return value;
    };
}
/**
 * Stringify any JS object to valid JSON
 */
function stringify(obj, maxDepth) {
    return JSON.stringify(obj, replacer(maxDepth));
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybWF0VmFsdWUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvZm9ybWF0VmFsdWUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQSxPQUFPLEVBQUMsT0FBTyxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUMsTUFBTSxXQUFXLENBQUM7QUFFdEQ7Ozs7O0dBS0c7QUFDSCxNQUFNLFVBQVUsV0FBVyxDQUFDLEtBQVUsRUFBRSxXQUFtQyxFQUFFLFFBQWdCO0lBQzNGLElBQUksT0FBTyxDQUFDLEtBQUssQ0FBQyxFQUFFO1FBQ2xCLE9BQU8sSUFBSSxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxFQUFFLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQztLQUNoRztJQUVELElBQUksUUFBUSxDQUFDLEtBQUssQ0FBQyxFQUFFO1FBQ25CLElBQUksT0FBTyxHQUFHLEVBQUUsQ0FBQztRQUVqQixNQUFNLFVBQStCLEVBQS9CLEVBQUMsS0FBSyxPQUF5QixFQUF2Qiw0QkFBdUIsQ0FBQztRQUV0QyxJQUFJLEtBQUssRUFBRTtZQUNULE9BQU8sSUFBSSxPQUFPLFdBQVcsQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDO1NBQzdDO1FBRUQsTUFBTSxJQUFJLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUMvQixJQUFJLElBQUksQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO1lBQ25CLE9BQU8sSUFBSSxTQUFTLENBQUM7WUFDckIsS0FBSyxNQUFNLEdBQUcsSUFBSSxJQUFJLEVBQUU7Z0JBQ3RCLElBQUksR0FBRyxHQUFJLElBQVksQ0FBQyxHQUFHLENBQUMsQ0FBQztnQkFFN0IsOEJBQThCO2dCQUM5QixJQUFJLEdBQUcsS0FBSyxTQUFTLEVBQUU7b0JBQ3JCLFNBQVM7aUJBQ1Y7Z0JBRUQsSUFBSSxRQUFRLENBQUMsR0FBRyxDQUFDLEVBQUU7b0JBQ2pCLEdBQUcsR0FBRyxTQUFTLENBQUMsR0FBRyxFQUFFLFFBQVEsQ0FBQyxDQUFDO2lCQUNoQztnQkFFRCxPQUFPLElBQUksdUJBQXVCLFdBQVcsQ0FBQyxHQUFHLENBQUMsMkJBQTJCLFdBQVcsQ0FBQyxHQUFHLENBQUMsWUFBWSxDQUFDO2FBQzNHO1lBQ0QsT0FBTyxJQUFJLFVBQVUsQ0FBQztTQUN2QjtRQUVELE9BQU8sT0FBTyxJQUFJLElBQUksQ0FBQyxDQUFDLCtDQUErQztLQUN4RTtJQUVELE9BQU8sV0FBVyxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQzVCLENBQUM7QUFFRCxNQUFNLFVBQVUsUUFBUSxDQUFDLFFBQWdCO0lBQ3ZDLE1BQU0sS0FBSyxHQUFVLEVBQUUsQ0FBQztJQUV4QixPQUFPLFVBQW9CLEdBQVcsRUFBRSxLQUFVO1FBQ2hELElBQUksT0FBTyxLQUFLLEtBQUssUUFBUSxJQUFJLEtBQUssS0FBSyxJQUFJLEVBQUU7WUFDL0MsT0FBTyxLQUFLLENBQUM7U0FDZDtRQUNELE1BQU0sR0FBRyxHQUFHLEtBQUssQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ3BDLEtBQUssQ0FBQyxNQUFNLEdBQUcsR0FBRyxDQUFDO1FBQ25CLElBQUksS0FBSyxDQUFDLE1BQU0sR0FBRyxRQUFRLEVBQUU7WUFDM0IsT0FBTyxVQUFVLENBQUM7U0FDbkI7UUFDRCxJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxFQUFFO1lBQzdCLE9BQU8sWUFBWSxDQUFDO1NBQ3JCO1FBQ0QsS0FBSyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNsQixPQUFPLEtBQUssQ0FBQztJQUNmLENBQUMsQ0FBQztBQUNKLENBQUM7QUFFRDs7R0FFRztBQUNILE1BQU0sVUFBVSxTQUFTLENBQUMsR0FBUSxFQUFFLFFBQWdCO0lBQ2xELE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLEVBQUUsUUFBUSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7QUFDakQsQ0FBQyJ9

/***/ }),

/***/ "./node_modules/vega-tooltip/build/index.js":
/*!**************************************************!*\
  !*** ./node_modules/vega-tooltip/build/index.js ***!
  \**************************************************/
/*! exports provided: default, DEFAULT_OPTIONS, escapeHTML, createDefaultStyle, formatValue, replacer, stringify, calculatePosition, Handler */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Handler__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Handler */ "./node_modules/vega-tooltip/build/Handler.js");
/* harmony import */ var _defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./defaults */ "./node_modules/vega-tooltip/build/defaults.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DEFAULT_OPTIONS", function() { return _defaults__WEBPACK_IMPORTED_MODULE_1__["DEFAULT_OPTIONS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "escapeHTML", function() { return _defaults__WEBPACK_IMPORTED_MODULE_1__["escapeHTML"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createDefaultStyle", function() { return _defaults__WEBPACK_IMPORTED_MODULE_1__["createDefaultStyle"]; });

/* harmony import */ var _formatValue__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./formatValue */ "./node_modules/vega-tooltip/build/formatValue.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "formatValue", function() { return _formatValue__WEBPACK_IMPORTED_MODULE_2__["formatValue"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "replacer", function() { return _formatValue__WEBPACK_IMPORTED_MODULE_2__["replacer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stringify", function() { return _formatValue__WEBPACK_IMPORTED_MODULE_2__["stringify"]; });

/* harmony import */ var _position__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./position */ "./node_modules/vega-tooltip/build/position.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "calculatePosition", function() { return _position__WEBPACK_IMPORTED_MODULE_3__["calculatePosition"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Handler", function() { return _Handler__WEBPACK_IMPORTED_MODULE_0__["Handler"]; });






/**
 * Create a tooltip handler and register it with the provided view.
 *
 * @param view The Vega view.
 * @param opt Tooltip options.
 */
/* harmony default export */ __webpack_exports__["default"] = (function (view, opt) {
    const handler = new _Handler__WEBPACK_IMPORTED_MODULE_0__["Handler"](opt);
    view.tooltip(handler.call).run();
    return handler;
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0EsT0FBTyxFQUFDLE9BQU8sRUFBQyxNQUFNLFdBQVcsQ0FBQztBQUVsQyxjQUFjLFlBQVksQ0FBQztBQUMzQixjQUFjLGVBQWUsQ0FBQztBQUM5QixjQUFjLFlBQVksQ0FBQztBQUMzQixjQUFjLFdBQVcsQ0FBQztBQUUxQjs7Ozs7R0FLRztBQUNILE1BQU0sQ0FBQyxPQUFPLFdBQVUsSUFBVSxFQUFFLEdBQXNCO0lBQ3hELE1BQU0sT0FBTyxHQUFHLElBQUksT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRWpDLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDO0lBRWpDLE9BQU8sT0FBTyxDQUFDO0FBQ2pCLENBQUMifQ==

/***/ }),

/***/ "./node_modules/vega-tooltip/build/position.js":
/*!*****************************************************!*\
  !*** ./node_modules/vega-tooltip/build/position.js ***!
  \*****************************************************/
/*! exports provided: calculatePosition */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "calculatePosition", function() { return calculatePosition; });
/**
 * Position the tooltip
 *
 * @param event The mouse event.
 * @param tooltipBox
 * @param offsetX Horizontal offset.
 * @param offsetY Vertical offset.
 */
function calculatePosition(event, tooltipBox, offsetX, offsetY) {
    let x = event.clientX + offsetX;
    if (x + tooltipBox.width > window.innerWidth) {
        x = +event.clientX - offsetX - tooltipBox.width;
    }
    let y = event.clientY + offsetY;
    if (y + tooltipBox.height > window.innerHeight) {
        y = +event.clientY - offsetY - tooltipBox.height;
    }
    return { x, y };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9zaXRpb24uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvcG9zaXRpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7R0FPRztBQUNILE1BQU0sVUFBVSxpQkFBaUIsQ0FDL0IsS0FBaUIsRUFDakIsVUFBMkMsRUFDM0MsT0FBZSxFQUNmLE9BQWU7SUFFZixJQUFJLENBQUMsR0FBRyxLQUFLLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztJQUNoQyxJQUFJLENBQUMsR0FBRyxVQUFVLENBQUMsS0FBSyxHQUFHLE1BQU0sQ0FBQyxVQUFVLEVBQUU7UUFDNUMsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLE9BQU8sR0FBRyxPQUFPLEdBQUcsVUFBVSxDQUFDLEtBQUssQ0FBQztLQUNqRDtJQUVELElBQUksQ0FBQyxHQUFHLEtBQUssQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDO0lBQ2hDLElBQUksQ0FBQyxHQUFHLFVBQVUsQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDLFdBQVcsRUFBRTtRQUM5QyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsT0FBTyxHQUFHLE9BQU8sR0FBRyxVQUFVLENBQUMsTUFBTSxDQUFDO0tBQ2xEO0lBRUQsT0FBTyxFQUFDLENBQUMsRUFBRSxDQUFDLEVBQUMsQ0FBQztBQUNoQixDQUFDIn0=

/***/ }),

/***/ "./node_modules/vega-tooltip/build/style.js":
/*!**************************************************!*\
  !*** ./node_modules/vega-tooltip/build/style.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// generated with build-style.sh
/* harmony default export */ __webpack_exports__["default"] = (`#vg-tooltip-element {
  visibility: hidden;
  padding: 8px;
  position: fixed;
  z-index: 1000;
  font-family: sans-serif;
  font-size: 11px;
  border-radius: 3px;
  box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);
  /* The default theme is the light theme. */
  background-color: rgba(255, 255, 255, 0.95);
  border: 1px solid #d9d9d9;
  color: black; }
  #vg-tooltip-element.visible {
    visibility: visible; }
  #vg-tooltip-element h2 {
    margin-top: 0;
    margin-bottom: 10px;
    font-size: 13px; }
  #vg-tooltip-element table {
    border-spacing: 0; }
    #vg-tooltip-element table tr {
      border: none; }
      #vg-tooltip-element table tr td {
        overflow: hidden;
        text-overflow: ellipsis;
        padding-top: 2px;
        padding-bottom: 2px; }
        #vg-tooltip-element table tr td.key {
          color: #808080;
          max-width: 150px;
          text-align: right;
          padding-right: 4px; }
        #vg-tooltip-element table tr td.value {
          display: block;
          max-width: 300px;
          max-height: 7em;
          text-align: left; }
  #vg-tooltip-element.dark-theme {
    background-color: rgba(32, 32, 32, 0.9);
    border: 1px solid #f5f5f5;
    color: white; }
    #vg-tooltip-element.dark-theme td.key {
      color: #bfbfbf; }
`);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvc3R5bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsZ0NBQWdDO0FBQ2hDLGVBQWU7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0NBNENkLENBQUEifQ==

/***/ }),

/***/ "./node_modules/vega-transforms/index.js":
/*!***********************************************!*\
  !*** ./node_modules/vega-transforms/index.js ***!
  \***********************************************/
/*! exports provided: aggregate, bin, collect, compare, countpattern, cross, density, expression, extent, facet, field, filter, flatten, fold, formula, generate, impute, joinaggregate, kde, key, load, lookup, multiextent, multivalues, params, pivot, prefacet, project, proxy, relay, sample, sequence, sieve, subflow, tupleindex, values, window */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _src_Aggregate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/Aggregate */ "./node_modules/vega-transforms/src/Aggregate.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "aggregate", function() { return _src_Aggregate__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _src_Bin__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/Bin */ "./node_modules/vega-transforms/src/Bin.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bin", function() { return _src_Bin__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _src_Collect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/Collect */ "./node_modules/vega-transforms/src/Collect.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "collect", function() { return _src_Collect__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _src_Compare__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/Compare */ "./node_modules/vega-transforms/src/Compare.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "compare", function() { return _src_Compare__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _src_CountPattern__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./src/CountPattern */ "./node_modules/vega-transforms/src/CountPattern.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "countpattern", function() { return _src_CountPattern__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _src_Cross__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./src/Cross */ "./node_modules/vega-transforms/src/Cross.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cross", function() { return _src_Cross__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _src_Density__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./src/Density */ "./node_modules/vega-transforms/src/Density.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "density", function() { return _src_Density__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony import */ var _src_Expression__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./src/Expression */ "./node_modules/vega-transforms/src/Expression.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "expression", function() { return _src_Expression__WEBPACK_IMPORTED_MODULE_7__["default"]; });

/* harmony import */ var _src_Extent__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./src/Extent */ "./node_modules/vega-transforms/src/Extent.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "extent", function() { return _src_Extent__WEBPACK_IMPORTED_MODULE_8__["default"]; });

/* harmony import */ var _src_Facet__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./src/Facet */ "./node_modules/vega-transforms/src/Facet.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "facet", function() { return _src_Facet__WEBPACK_IMPORTED_MODULE_9__["default"]; });

/* harmony import */ var _src_Field__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./src/Field */ "./node_modules/vega-transforms/src/Field.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "field", function() { return _src_Field__WEBPACK_IMPORTED_MODULE_10__["default"]; });

/* harmony import */ var _src_Filter__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./src/Filter */ "./node_modules/vega-transforms/src/Filter.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "filter", function() { return _src_Filter__WEBPACK_IMPORTED_MODULE_11__["default"]; });

/* harmony import */ var _src_Flatten__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./src/Flatten */ "./node_modules/vega-transforms/src/Flatten.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "flatten", function() { return _src_Flatten__WEBPACK_IMPORTED_MODULE_12__["default"]; });

/* harmony import */ var _src_Fold__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./src/Fold */ "./node_modules/vega-transforms/src/Fold.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "fold", function() { return _src_Fold__WEBPACK_IMPORTED_MODULE_13__["default"]; });

/* harmony import */ var _src_Formula__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./src/Formula */ "./node_modules/vega-transforms/src/Formula.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "formula", function() { return _src_Formula__WEBPACK_IMPORTED_MODULE_14__["default"]; });

/* harmony import */ var _src_Generate__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./src/Generate */ "./node_modules/vega-transforms/src/Generate.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "generate", function() { return _src_Generate__WEBPACK_IMPORTED_MODULE_15__["default"]; });

/* harmony import */ var _src_Impute__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./src/Impute */ "./node_modules/vega-transforms/src/Impute.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "impute", function() { return _src_Impute__WEBPACK_IMPORTED_MODULE_16__["default"]; });

/* harmony import */ var _src_JoinAggregate__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./src/JoinAggregate */ "./node_modules/vega-transforms/src/JoinAggregate.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "joinaggregate", function() { return _src_JoinAggregate__WEBPACK_IMPORTED_MODULE_17__["default"]; });

/* harmony import */ var _src_KDE__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./src/KDE */ "./node_modules/vega-transforms/src/KDE.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "kde", function() { return _src_KDE__WEBPACK_IMPORTED_MODULE_18__["default"]; });

/* harmony import */ var _src_Key__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./src/Key */ "./node_modules/vega-transforms/src/Key.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "key", function() { return _src_Key__WEBPACK_IMPORTED_MODULE_19__["default"]; });

/* harmony import */ var _src_Load__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./src/Load */ "./node_modules/vega-transforms/src/Load.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "load", function() { return _src_Load__WEBPACK_IMPORTED_MODULE_20__["default"]; });

/* harmony import */ var _src_Lookup__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./src/Lookup */ "./node_modules/vega-transforms/src/Lookup.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "lookup", function() { return _src_Lookup__WEBPACK_IMPORTED_MODULE_21__["default"]; });

/* harmony import */ var _src_MultiExtent__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./src/MultiExtent */ "./node_modules/vega-transforms/src/MultiExtent.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "multiextent", function() { return _src_MultiExtent__WEBPACK_IMPORTED_MODULE_22__["default"]; });

/* harmony import */ var _src_MultiValues__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./src/MultiValues */ "./node_modules/vega-transforms/src/MultiValues.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "multivalues", function() { return _src_MultiValues__WEBPACK_IMPORTED_MODULE_23__["default"]; });

/* harmony import */ var _src_Params__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./src/Params */ "./node_modules/vega-transforms/src/Params.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "params", function() { return _src_Params__WEBPACK_IMPORTED_MODULE_24__["default"]; });

/* harmony import */ var _src_Pivot__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./src/Pivot */ "./node_modules/vega-transforms/src/Pivot.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pivot", function() { return _src_Pivot__WEBPACK_IMPORTED_MODULE_25__["default"]; });

/* harmony import */ var _src_PreFacet__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./src/PreFacet */ "./node_modules/vega-transforms/src/PreFacet.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "prefacet", function() { return _src_PreFacet__WEBPACK_IMPORTED_MODULE_26__["default"]; });

/* harmony import */ var _src_Project__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./src/Project */ "./node_modules/vega-transforms/src/Project.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "project", function() { return _src_Project__WEBPACK_IMPORTED_MODULE_27__["default"]; });

/* harmony import */ var _src_Proxy__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./src/Proxy */ "./node_modules/vega-transforms/src/Proxy.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "proxy", function() { return _src_Proxy__WEBPACK_IMPORTED_MODULE_28__["default"]; });

/* harmony import */ var _src_Relay__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./src/Relay */ "./node_modules/vega-transforms/src/Relay.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "relay", function() { return _src_Relay__WEBPACK_IMPORTED_MODULE_29__["default"]; });

/* harmony import */ var _src_Sample__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./src/Sample */ "./node_modules/vega-transforms/src/Sample.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sample", function() { return _src_Sample__WEBPACK_IMPORTED_MODULE_30__["default"]; });

/* harmony import */ var _src_Sequence__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./src/Sequence */ "./node_modules/vega-transforms/src/Sequence.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sequence", function() { return _src_Sequence__WEBPACK_IMPORTED_MODULE_31__["default"]; });

/* harmony import */ var _src_Sieve__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./src/Sieve */ "./node_modules/vega-transforms/src/Sieve.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sieve", function() { return _src_Sieve__WEBPACK_IMPORTED_MODULE_32__["default"]; });

/* harmony import */ var _src_Subflow__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./src/Subflow */ "./node_modules/vega-transforms/src/Subflow.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "subflow", function() { return _src_Subflow__WEBPACK_IMPORTED_MODULE_33__["default"]; });

/* harmony import */ var _src_TupleIndex__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./src/TupleIndex */ "./node_modules/vega-transforms/src/TupleIndex.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tupleindex", function() { return _src_TupleIndex__WEBPACK_IMPORTED_MODULE_34__["default"]; });

/* harmony import */ var _src_Values__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./src/Values */ "./node_modules/vega-transforms/src/Values.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "values", function() { return _src_Values__WEBPACK_IMPORTED_MODULE_35__["default"]; });

/* harmony import */ var _src_Window__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./src/Window */ "./node_modules/vega-transforms/src/Window.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "window", function() { return _src_Window__WEBPACK_IMPORTED_MODULE_36__["default"]; });








































/***/ }),

/***/ "./node_modules/vega-transforms/src/Aggregate.js":
/*!*******************************************************!*\
  !*** ./node_modules/vega-transforms/src/Aggregate.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Aggregate; });
/* harmony import */ var _util_AggregateKeys__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/AggregateKeys */ "./node_modules/vega-transforms/src/util/AggregateKeys.js");
/* harmony import */ var _util_AggregateOps__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/AggregateOps */ "./node_modules/vega-transforms/src/util/AggregateOps.js");
/* harmony import */ var _util_TupleStore__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util/TupleStore */ "./node_modules/vega-transforms/src/util/TupleStore.js");
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");






/**
 * Group-by aggregation operator.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {Array<function(object): *>} [params.groupby] - An array of accessors to groupby.
 * @param {Array<function(object): *>} [params.fields] - An array of accessors to aggregate.
 * @param {Array<string>} [params.ops] - An array of strings indicating aggregation operations.
 * @param {Array<string>} [params.as] - An array of output field names for aggregated values.
 * @param {boolean} [params.cross=false] - A flag indicating that the full
 *   cross-product of groupby values should be generated, including empty cells.
 *   If true, the drop parameter is ignored and empty cells are retained.
 * @param {boolean} [params.drop=true] - A flag indicating if empty cells should be removed.
 */
function Aggregate(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_3__["Transform"].call(this, null, params);

  this._adds = []; // array of added output tuples
  this._mods = []; // array of modified output tuples
  this._alen = 0;  // number of active added tuples
  this._mlen = 0;  // number of active modified tuples
  this._drop = true;   // should empty aggregation cells be removed
  this._cross = false; // produce full cross-product of group-by values

  this._dims = [];   // group-by dimension accessors
  this._dnames = []; // group-by dimension names

  this._measures = []; // collection of aggregation monoids
  this._countOnly = false; // flag indicating only count aggregation
  this._counts = null; // collection of count fields
  this._prev = null;   // previous aggregation cells

  this._inputs = null;  // array of dependent input tuple field names
  this._outputs = null; // array of output tuple field names
}

Aggregate.Definition = {
  "type": "Aggregate",
  "metadata": {"generates": true, "changes": true},
  "params": [
    { "name": "groupby", "type": "field", "array": true },
    { "name": "ops", "type": "enum", "array": true, "values": _util_AggregateOps__WEBPACK_IMPORTED_MODULE_1__["ValidAggregateOps"] },
    { "name": "fields", "type": "field", "null": true, "array": true },
    { "name": "as", "type": "string", "null": true, "array": true },
    { "name": "drop", "type": "boolean", "default": true },
    { "name": "cross", "type": "boolean", "default": false },
    { "name": "key", "type": "field" }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["inherits"])(Aggregate, vega_dataflow__WEBPACK_IMPORTED_MODULE_3__["Transform"]);

prototype.transform = function(_, pulse) {
  var aggr = this,
      out = pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS),
      mod;

  this.stamp = out.stamp;

  if (this.value && ((mod = _.modified()) || pulse.modified(this._inputs))) {
    this._prev = this.value;
    this.value = mod ? this.init(_) : {};
    pulse.visit(pulse.SOURCE, function(t) { aggr.add(t); });
  } else {
    this.value = this.value || this.init(_);
    pulse.visit(pulse.REM, function(t) { aggr.rem(t); });
    pulse.visit(pulse.ADD, function(t) { aggr.add(t); });
  }

  // Indicate output fields and return aggregate tuples.
  out.modifies(this._outputs);

  // Should empty cells be dropped?
  aggr._drop = _.drop !== false;

  // If domain cross-product requested, generate empty cells as needed
  // and ensure that empty cells are not dropped
  if (_.cross && aggr._dims.length > 1) {
    aggr._drop = false;
    this.cross();
  }

  return aggr.changes(out);
};

prototype.cross = function() {
  var aggr = this,
      curr = aggr.value,
      dims = aggr._dnames,
      vals = dims.map(function() { return {}; }),
      n = dims.length;

  // collect all group-by domain values
  function collect(cells) {
    var key, i, t, v;
    for (key in cells) {
      t = cells[key].tuple;
      for (i=0; i<n; ++i) {
        vals[i][(v = t[dims[i]])] = v;
      }
    }
  }
  collect(aggr._prev);
  collect(curr);

  // iterate over key cross-product, create cells as needed
  function generate(base, tuple, index) {
    var name = dims[index],
        v = vals[index++],
        k, key;

    for (k in v) {
      tuple[name] = v[k];
      key = base ? base + '|' + k : k;
      if (index < n) generate(key, tuple, index);
      else if (!curr[key]) aggr.cell(key, tuple);
    }
  }
  generate('', {}, 0);
};

prototype.init = function(_) {
  // initialize input and output fields
  var inputs = (this._inputs = []),
      outputs = (this._outputs = []),
      inputMap = {};

  function inputVisit(get) {
    var fields = Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["array"])(Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["accessorFields"])(get)),
        i = 0, n = fields.length, f;
    for (; i<n; ++i) {
      if (!inputMap[f=fields[i]]) {
        inputMap[f] = 1;
        inputs.push(f);
      }
    }
  }

  // initialize group-by dimensions
  this._dims = Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["array"])(_.groupby);
  this._dnames = this._dims.map(function(d) {
    var dname = Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["accessorName"])(d);
    inputVisit(d);
    outputs.push(dname);
    return dname;
  });
  this.cellkey = _.key ? _.key : Object(_util_AggregateKeys__WEBPACK_IMPORTED_MODULE_0__["groupkey"])(this._dims);

  // initialize aggregate measures
  this._countOnly = true;
  this._counts = [];
  this._measures = [];

  var fields = _.fields || [null],
      ops = _.ops || ['count'],
      as = _.as || [],
      n = fields.length,
      map = {},
      field, op, m, mname, outname, i;

  if (n !== ops.length) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["error"])('Unmatched number of fields and aggregate ops.');
  }

  for (i=0; i<n; ++i) {
    field = fields[i];
    op = ops[i];

    if (field == null && op !== 'count') {
      Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["error"])('Null aggregate field specified.');
    }
    mname = Object(vega_util__WEBPACK_IMPORTED_MODULE_4__["accessorName"])(field);
    outname = Object(_util_AggregateOps__WEBPACK_IMPORTED_MODULE_1__["measureName"])(op, mname, as[i]);
    outputs.push(outname);

    if (op === 'count') {
      this._counts.push(outname);
      continue;
    }

    m = map[mname];
    if (!m) {
      inputVisit(field);
      m = (map[mname] = []);
      m.field = field;
      this._measures.push(m);
    }

    if (op !== 'count') this._countOnly = false;
    m.push(Object(_util_AggregateOps__WEBPACK_IMPORTED_MODULE_1__["createMeasure"])(op, outname));
  }

  this._measures = this._measures.map(function(m) {
    return Object(_util_AggregateOps__WEBPACK_IMPORTED_MODULE_1__["compileMeasures"])(m, m.field);
  });

  return {}; // aggregation cells (this.value)
};

// -- Cell Management -----

prototype.cellkey = Object(_util_AggregateKeys__WEBPACK_IMPORTED_MODULE_0__["groupkey"])();

prototype.cell = function(key, t) {
  var cell = this.value[key];
  if (!cell) {
    cell = this.value[key] = this.newcell(key, t);
    this._adds[this._alen++] = cell;
  } else if (cell.num === 0 && this._drop && cell.stamp < this.stamp) {
    cell.stamp = this.stamp;
    this._adds[this._alen++] = cell;
  } else if (cell.stamp < this.stamp) {
    cell.stamp = this.stamp;
    this._mods[this._mlen++] = cell;
  }
  return cell;
};

prototype.newcell = function(key, t) {
  var cell = {
    key:   key,
    num:   0,
    agg:   null,
    tuple: this.newtuple(t, this._prev && this._prev[key]),
    stamp: this.stamp,
    store: false
  };

  if (!this._countOnly) {
    var measures = this._measures,
        n = measures.length, i;

    cell.agg = Array(n);
    for (i=0; i<n; ++i) {
      cell.agg[i] = new measures[i](cell);
    }
  }

  if (cell.store) {
    cell.data = new _util_TupleStore__WEBPACK_IMPORTED_MODULE_2__["default"]();
  }

  return cell;
};

prototype.newtuple = function(t, p) {
  var names = this._dnames,
      dims = this._dims,
      x = {}, i, n;

  for (i=0, n=dims.length; i<n; ++i) {
    x[names[i]] = dims[i](t);
  }

  return p ? Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_3__["replace"])(p.tuple, x) : Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_3__["ingest"])(x);
};

// -- Process Tuples -----

prototype.add = function(t) {
  var key = this.cellkey(t),
      cell = this.cell(key, t),
      agg, i, n;

  cell.num += 1;
  if (this._countOnly) return;

  if (cell.store) cell.data.add(t);

  agg = cell.agg;
  for (i=0, n=agg.length; i<n; ++i) {
    agg[i].add(agg[i].get(t), t);
  }
};

prototype.rem = function(t) {
  var key = this.cellkey(t),
      cell = this.cell(key, t),
      agg, i, n;

  cell.num -= 1;
  if (this._countOnly) return;

  if (cell.store) cell.data.rem(t);

  agg = cell.agg;
  for (i=0, n=agg.length; i<n; ++i) {
    agg[i].rem(agg[i].get(t), t);
  }
};

prototype.celltuple = function(cell) {
  var tuple = cell.tuple,
      counts = this._counts,
      agg, i, n;

  // consolidate stored values
  if (cell.store) {
    cell.data.values();
  }

  // update tuple properties
  for (i=0, n=counts.length; i<n; ++i) {
    tuple[counts[i]] = cell.num;
  }
  if (!this._countOnly) {
    agg = cell.agg;
    for (i=0, n=agg.length; i<n; ++i) {
      agg[i].set(tuple);
    }
  }

  return tuple;
};

prototype.changes = function(out) {
  var adds = this._adds,
      mods = this._mods,
      prev = this._prev,
      drop = this._drop,
      add = out.add,
      rem = out.rem,
      mod = out.mod,
      cell, key, i, n;

  if (prev) for (key in prev) {
    cell = prev[key];
    if (!drop || cell.num) rem.push(cell.tuple);
  }

  for (i=0, n=this._alen; i<n; ++i) {
    add.push(this.celltuple(adds[i]));
    adds[i] = null; // for garbage collection
  }

  for (i=0, n=this._mlen; i<n; ++i) {
    cell = mods[i];
    (cell.num === 0 && drop ? rem : mod).push(this.celltuple(cell));
    mods[i] = null; // for garbage collection
  }

  this._alen = this._mlen = 0; // reset list of active cells
  this._prev = null;
  return out;
};


/***/ }),

/***/ "./node_modules/vega-transforms/src/Bin.js":
/*!*************************************************!*\
  !*** ./node_modules/vega-transforms/src/Bin.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Bin; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_statistics__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-statistics */ "./node_modules/vega-statistics/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");




// epsilon bias to offset floating point error (#1737)
const EPSILON = 1e-14;

/**
 * Generates a binning function for discretizing data.
 * @constructor
 * @param {object} params - The parameters for this operator. The
 *   provided values should be valid options for the {@link bin} function.
 * @param {function(object): *} params.field - The data field to bin.
 */
function Bin(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, null, params);
}

Bin.Definition = {
  "type": "Bin",
  "metadata": {"modifies": true},
  "params": [
    { "name": "field", "type": "field", "required": true },
    { "name": "anchor", "type": "number" },
    { "name": "maxbins", "type": "number", "default": 20 },
    { "name": "base", "type": "number", "default": 10 },
    { "name": "divide", "type": "number", "array": true, "default": [5, 2] },
    { "name": "extent", "type": "number", "array": true, "length": 2, "required": true },
    { "name": "step", "type": "number" },
    { "name": "steps", "type": "number", "array": true },
    { "name": "minstep", "type": "number", "default": 0 },
    { "name": "nice", "type": "boolean", "default": true },
    { "name": "name", "type": "string" },
    { "name": "as", "type": "string", "array": true, "length": 2, "default": ["bin0", "bin1"] }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["inherits"])(Bin, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

prototype.transform = function(_, pulse) {
  var bins = this._bins(_),
      start = bins.start,
      step = bins.step,
      as = _.as || ['bin0', 'bin1'],
      b0 = as[0],
      b1 = as[1],
      flag;

  if (_.modified()) {
    pulse = pulse.reflow(true);
    flag = pulse.SOURCE;
  } else {
    flag = pulse.modified(Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["accessorFields"])(_.field)) ? pulse.ADD_MOD : pulse.ADD;
  }

  pulse.visit(flag, function(t) {
    var v = bins(t);
    // minimum bin value (inclusive)
    t[b0] = v;
    // maximum bin value (exclusive)
    // use convoluted math for better floating point agreement
    // see https://github.com/vega/vega/issues/830
    t[b1] = v == null ? null : start + step * (1 + (v - start) / step);
  });

  return pulse.modifies(as);
};

prototype._bins = function(_) {
  if (this.value && !_.modified()) {
    return this.value;
  }

  var field = _.field,
      bins  = Object(vega_statistics__WEBPACK_IMPORTED_MODULE_1__["bin"])(_),
      start = bins.start,
      stop  = bins.stop,
      step  = bins.step,
      a, d;

  if ((a = _.anchor) != null) {
    d = a - (start + step * Math.floor((a - start) / step));
    start += d;
    stop += d;
  }

  var f = function(t) {
    var v = field(t);
    if (v == null) {
      return null;
    } else {
      v = Math.max(start, Math.min(+v, stop - step));
      return start + step * Math.floor(EPSILON + (v - start) / step);
    }
  };

  f.start = start;
  f.stop = stop;
  f.step = step;

  return this.value = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["accessor"])(
    f,
    Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["accessorFields"])(field),
    _.name || 'bin_' + Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["accessorName"])(field)
  );
};


/***/ }),

/***/ "./node_modules/vega-transforms/src/Collect.js":
/*!*****************************************************!*\
  !*** ./node_modules/vega-transforms/src/Collect.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Collect; });
/* harmony import */ var _util_SortedList__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/SortedList */ "./node_modules/vega-transforms/src/util/SortedList.js");
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");




/**
 * Collects all data tuples that pass through this operator.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(*,*): number} [params.sort] - An optional
 *   comparator function for additionally sorting the collected tuples.
 */
function Collect(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Transform"].call(this, [], params);
}

Collect.Definition = {
  "type": "Collect",
  "metadata": {"source": true},
  "params": [
    { "name": "sort", "type": "compare" }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["inherits"])(Collect, vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Transform"]);

prototype.transform = function(_, pulse) {
  var out = pulse.fork(pulse.ALL),
      list = Object(_util_SortedList__WEBPACK_IMPORTED_MODULE_0__["default"])(vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["tupleid"], this.value, out.materialize(out.ADD).add),
      sort = _.sort,
      mod = pulse.changed() || (sort &&
            (_.modified('sort') || pulse.modified(sort.fields)));

  out.visit(out.REM, list.remove);

  this.modified(mod);
  this.value = out.source = list.data(sort, mod);

  // propagate tree root if defined
  if (pulse.source && pulse.source.root) {
    this.value.root = pulse.source.root;
  }

  return out;
};


/***/ }),

/***/ "./node_modules/vega-transforms/src/Compare.js":
/*!*****************************************************!*\
  !*** ./node_modules/vega-transforms/src/Compare.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Compare; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");



/**
 * Generates a comparator function.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {Array<string|function>} params.fields - The fields to compare.
 * @param {Array<string>} [params.orders] - The sort orders.
 *   Each entry should be one of "ascending" (default) or "descending".
 */
function Compare(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Operator"].call(this, null, update, params);
}

Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(Compare, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Operator"]);

function update(_) {
  return (this.value && !_.modified())
    ? this.value
    : Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["compare"])(_.fields, _.orders);
}


/***/ }),

/***/ "./node_modules/vega-transforms/src/CountPattern.js":
/*!**********************************************************!*\
  !*** ./node_modules/vega-transforms/src/CountPattern.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return CountPattern; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");



/**
 * Count regexp-defined pattern occurrences in a text field.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(object): *} params.field - An accessor for the text field.
 * @param {string} [params.pattern] - RegExp string defining the text pattern.
 * @param {string} [params.case] - One of 'lower', 'upper' or null (mixed) case.
 * @param {string} [params.stopwords] - RegExp string of words to ignore.
 */
function CountPattern(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, null, params);
}

CountPattern.Definition = {
  "type": "CountPattern",
  "metadata": {"generates": true, "changes": true},
  "params": [
    { "name": "field", "type": "field", "required": true },
    { "name": "case", "type": "enum", "values": ["upper", "lower", "mixed"], "default": "mixed" },
    { "name": "pattern", "type": "string", "default": "[\\w\"]+" },
    { "name": "stopwords", "type": "string", "default": "" },
    { "name": "as", "type": "string", "array": true, "length": 2, "default": ["text", "count"] }
  ]
};

function tokenize(text, tcase, match) {
  switch (tcase) {
    case 'upper': text = text.toUpperCase(); break;
    case 'lower': text = text.toLowerCase(); break;
  }
  return text.match(match);
}

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(CountPattern, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

prototype.transform = function(_, pulse) {
  function process(update) {
    return function(tuple) {
      var tokens = tokenize(get(tuple), _.case, match) || [], t;
      for (var i=0, n=tokens.length; i<n; ++i) {
        if (!stop.test(t = tokens[i])) update(t);
      }
    };
  }

  var init = this._parameterCheck(_, pulse),
      counts = this._counts,
      match = this._match,
      stop = this._stop,
      get = _.field,
      as = _.as || ['text', 'count'],
      add = process(function(t) { counts[t] = 1 + (counts[t] || 0); }),
      rem = process(function(t) { counts[t] -= 1; });

  if (init) {
    pulse.visit(pulse.SOURCE, add);
  } else {
    pulse.visit(pulse.ADD, add);
    pulse.visit(pulse.REM, rem);
  }

  return this._finish(pulse, as); // generate output tuples
};

prototype._parameterCheck = function(_, pulse) {
  var init = false;

  if (_.modified('stopwords') || !this._stop) {
    this._stop = new RegExp('^' + (_.stopwords || '') + '$', 'i');
    init = true;
  }

  if (_.modified('pattern') || !this._match) {
    this._match = new RegExp((_.pattern || '[\\w\']+'), 'g');
    init = true;
  }

  if (_.modified('field') || pulse.modified(_.field.fields)) {
    init = true;
  }

  if (init) this._counts = {};
  return init;
};

prototype._finish = function(pulse, as) {
  var counts = this._counts,
      tuples = this._tuples || (this._tuples = {}),
      text = as[0],
      count = as[1],
      out = pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS),
      w, t, c;

  for (w in counts) {
    t = tuples[w];
    c = counts[w] || 0;
    if (!t && c) {
      tuples[w] = (t = Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["ingest"])({}));
      t[text] = w;
      t[count] = c;
      out.add.push(t);
    } else if (c === 0) {
      if (t) out.rem.push(t);
      counts[w] = null;
      tuples[w] = null;
    } else if (t[count] !== c) {
      t[count] = c;
      out.mod.push(t);
    }
  }

  return out.modifies(as);
};


/***/ }),

/***/ "./node_modules/vega-transforms/src/Cross.js":
/*!***************************************************!*\
  !*** ./node_modules/vega-transforms/src/Cross.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Cross; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");



/**
 * Perform a cross-product of a tuple stream with itself.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(object):boolean} [params.filter] - An optional filter
 *   function for selectively including tuples in the cross product.
 * @param {Array<string>} [params.as] - The names of the output fields.
 */
function Cross(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, null, params);
}

Cross.Definition = {
  "type": "Cross",
  "metadata": {"generates": true},
  "params": [
    { "name": "filter", "type": "expr" },
    { "name": "as", "type": "string", "array": true, "length": 2, "default": ["a", "b"] }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(Cross, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

prototype.transform = function(_, pulse) {
  var out = pulse.fork(pulse.NO_SOURCE),
      data = this.value,
      as = _.as || ['a', 'b'],
      a = as[0], b = as[1],
      reset = !data
          || pulse.changed(pulse.ADD_REM)
          || _.modified('as')
          || _.modified('filter');

  if (reset) {
    if (data) out.rem = data;
    data = pulse.materialize(pulse.SOURCE).source;
    out.add = this.value = cross(data, a, b, _.filter || vega_util__WEBPACK_IMPORTED_MODULE_1__["truthy"]);
  } else {
    out.mod = data;
  }

  out.source = this.value;
  return out.modifies(as);
};

function cross(input, a, b, filter) {
  var data = [],
      t = {},
      n = input.length,
      i = 0,
      j, left;

  for (; i<n; ++i) {
    t[a] = left = input[i];
    for (j=0; j<n; ++j) {
      t[b] = input[j];
      if (filter(t)) {
        data.push(Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["ingest"])(t));
        t = {};
        t[a] = left;
      }
    }
  }

  return data;
}


/***/ }),

/***/ "./node_modules/vega-transforms/src/Density.js":
/*!*****************************************************!*\
  !*** ./node_modules/vega-transforms/src/Density.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Density; });
/* harmony import */ var _util_Distributions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/Distributions */ "./node_modules/vega-transforms/src/util/Distributions.js");
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_statistics__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-statistics */ "./node_modules/vega-statistics/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");





/**
 * Grid sample points for a probability density. Given a distribution and
 * a sampling extent, will generate points suitable for plotting either
 * PDF (probability density function) or CDF (cumulative distribution
 * function) curves.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {object} params.distribution - The probability distribution. This
 *   is an object parameter dependent on the distribution type.
 * @param {string} [params.method='pdf'] - The distribution method to sample.
 *   One of 'pdf' or 'cdf'.
 * @param {Array<number>} [params.extent] - The [min, max] extent over which
 *   to sample the distribution. This argument is required in most cases, but
 *   can be omitted if the distribution (e.g., 'kde') supports a 'data' method
 *   that returns numerical sample points from which the extent can be deduced.
 * @param {number} [params.minsteps=25] - The minimum number of curve samples
 *   for plotting the density.
 * @param {number} [params.maxsteps=200] - The maximum number of curve samples
 *   for plotting the density.
 * @param {number} [params.steps] - The exact number of curve samples for
 *   plotting the density. If specified, overrides both minsteps and maxsteps
 *   to set an exact number of uniform samples. Useful in conjunction with
 *   a fixed extent to ensure consistent sample points for stacked densities.
 */
function Density(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Transform"].call(this, null, params);
}

var distributions = [
  {
    "key": {"function": "normal"},
    "params": [
      { "name": "mean", "type": "number", "default": 0 },
      { "name": "stdev", "type": "number", "default": 1 }
    ]
  },
  {
    "key": {"function": "uniform"},
    "params": [
      { "name": "min", "type": "number", "default": 0 },
      { "name": "max", "type": "number", "default": 1 }
    ]
  },
  {
    "key": {"function": "kde"},
    "params": [
      { "name": "field", "type": "field", "required": true },
      { "name": "from", "type": "data" },
      { "name": "bandwidth", "type": "number", "default": 0 }
    ]
  }
];

var mixture = {
  "key": {"function": "mixture"},
  "params": [
    { "name": "distributions", "type": "param", "array": true,
      "params": distributions },
    { "name": "weights", "type": "number", "array": true }
  ]
};

Density.Definition = {
  "type": "Density",
  "metadata": {"generates": true},
  "params": [
    { "name": "extent", "type": "number", "array": true, "length": 2 },
    { "name": "steps", "type": "number" },
    { "name": "minsteps", "type": "number", "default": 25 },
    { "name": "maxsteps", "type": "number", "default": 200 },
    { "name": "method", "type": "string", "default": "pdf",
      "values": ["pdf", "cdf"] },
    { "name": "distribution", "type": "param",
      "params": distributions.concat(mixture) },
    { "name": "as", "type": "string", "array": true,
      "default": ["value", "density"] }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["inherits"])(Density, vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Transform"]);

prototype.transform = function(_, pulse) {
  var out = pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS);

  if (!this.value || pulse.changed() || _.modified()) {
    var dist = Object(_util_Distributions__WEBPACK_IMPORTED_MODULE_0__["default"])(_.distribution, source(pulse)),
        minsteps = _.steps || _.minsteps || 25,
        maxsteps = _.steps || _.maxsteps || 200,
        method = _.method || 'pdf';

    if (method !== 'pdf' && method !== 'cdf') {
      Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["error"])('Invalid density method: ' + method);
    }
    if (!_.extent && !dist.data) {
      Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["error"])('Missing density extent parameter.');
    }
    method = dist[method];

    var as = _.as || ['value', 'density'],
        domain = _.extent || Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["extent"])(dist.data()),
        values = Object(vega_statistics__WEBPACK_IMPORTED_MODULE_2__["sampleCurve"])(method, domain, minsteps, maxsteps).map(v => {
          var tuple = {};
          tuple[as[0]] = v[0];
          tuple[as[1]] = v[1];
          return Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["ingest"])(tuple);
        });

    if (this.value) out.rem = this.value;
    this.value = out.add = out.source = values;
  }

  return out;
};

function source(pulse) {
  return function() { return pulse.materialize(pulse.SOURCE).source; };
}


/***/ }),

/***/ "./node_modules/vega-transforms/src/Expression.js":
/*!********************************************************!*\
  !*** ./node_modules/vega-transforms/src/Expression.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Expression; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");



/**
 * Wraps an expression function with access to external parameters.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function} params.expr - The expression function. The
 *  function should accept both a datum and a parameter object.
 *  This operator's value will be a new function that wraps the
 *  expression function with access to this operator's parameters.
 */
function Expression(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Operator"].call(this, null, update, params);
  this.modified(true);
}

Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(Expression, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Operator"]);

function update(_) {
  var expr = _.expr;
  return this.value && !_.modified('expr')
    ? this.value
    : Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["accessor"])(
        datum => expr(datum, _),
        Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["accessorFields"])(expr),
        Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["accessorName"])(expr)
      );
}


/***/ }),

/***/ "./node_modules/vega-transforms/src/Extent.js":
/*!****************************************************!*\
  !*** ./node_modules/vega-transforms/src/Extent.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Extent; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");



/**
 * Computes extents (min/max) for a data field.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(object): *} params.field - The field over which to compute extends.
 */
function Extent(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, [undefined, undefined], params);
}

Extent.Definition = {
  "type": "Extent",
  "metadata": {},
  "params": [
    { "name": "field", "type": "field", "required": true }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(Extent, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

prototype.transform = function(_, pulse) {
  var extent = this.value,
      field = _.field,
      min = extent[0],
      max = extent[1],
      mod;

  mod = pulse.changed()
     || pulse.modified(field.fields)
     || _.modified('field');

  if (mod || min == null) {
    min = +Infinity;
    max = -Infinity;
  }

  pulse.visit(mod ? pulse.SOURCE : pulse.ADD, function(t) {
    var v = field(t);
    if (v != null) {
      // coerce to number
      v = +v;
      // NaNs will fail all comparisons!
      if (v < min) min = v;
      if (v > max) max = v;
    }
  });

  if (!isFinite(min) || !isFinite(max)) {
    min = max = undefined;
  }
  this.value = [min, max];
};


/***/ }),

/***/ "./node_modules/vega-transforms/src/Facet.js":
/*!***************************************************!*\
  !*** ./node_modules/vega-transforms/src/Facet.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Facet; });
/* harmony import */ var _Subflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Subflow */ "./node_modules/vega-transforms/src/Subflow.js");
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");




/**
 * Facets a dataflow into a set of subflows based on a key.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(Dataflow, string): Operator} params.subflow - A function
 *   that generates a subflow of operators and returns its root operator.
 * @param {function(object): *} params.key - The key field to facet by.
 */
function Facet(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Transform"].call(this, {}, params);
  this._keys = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["fastmap"])(); // cache previously calculated key values

  // keep track of active subflows, use as targets array for listeners
  // this allows us to limit propagation to only updated subflows
  var a = this._targets = [];
  a.active = 0;
  a.forEach = function(f) {
    for (var i=0, n=a.active; i<n; ++i) f(a[i], i, a);
  };
}

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["inherits"])(Facet, vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Transform"]);

prototype.activate = function(flow) {
  this._targets[this._targets.active++] = flow;
};

prototype.subflow = function(key, flow, pulse, parent) {
  var flows = this.value,
      sf = flows.hasOwnProperty(key) && flows[key],
      df, p;

  if (!sf) {
    p = parent || (p = this._group[key]) && p.tuple;
    df = pulse.dataflow;
    sf = df.add(new _Subflow__WEBPACK_IMPORTED_MODULE_0__["default"](pulse.fork(pulse.NO_SOURCE), this))
      .connect(flow(df, key, p));
    flows[key] = sf;
    this.activate(sf);
  } else if (sf.value.stamp < pulse.stamp) {
    sf.init(pulse);
    this.activate(sf);
  }

  return sf;
};

prototype.transform = function(_, pulse) {
  var df = pulse.dataflow,
      self = this,
      key = _.key,
      flow = _.subflow,
      cache = this._keys,
      rekey = _.modified('key');

  function subflow(key) {
    return self.subflow(key, flow, pulse);
  }

  this._group = _.group || {};
  this._targets.active = 0; // reset list of active subflows

  pulse.visit(pulse.REM, function(t) {
    var id = Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["tupleid"])(t),
        k = cache.get(id);
    if (k !== undefined) {
      cache.delete(id);
      subflow(k).rem(t);
    }
  });

  pulse.visit(pulse.ADD, function(t) {
    var k = key(t);
    cache.set(Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["tupleid"])(t), k);
    subflow(k).add(t);
  });

  if (rekey || pulse.modified(key.fields)) {
    pulse.visit(pulse.MOD, function(t) {
      var id = Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["tupleid"])(t),
          k0 = cache.get(id),
          k1 = key(t);
      if (k0 === k1) {
        subflow(k1).mod(t);
      } else {
        cache.set(id, k1);
        subflow(k0).rem(t);
        subflow(k1).add(t);
      }
    });
  } else if (pulse.changed(pulse.MOD)) {
    pulse.visit(pulse.MOD, function(t) {
      subflow(cache.get(Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["tupleid"])(t))).mod(t);
    });
  }

  if (rekey) {
    pulse.visit(pulse.REFLOW, function(t) {
      var id = Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["tupleid"])(t),
          k0 = cache.get(id),
          k1 = key(t);
      if (k0 !== k1) {
        cache.set(id, k1);
        subflow(k0).rem(t);
        subflow(k1).add(t);
      }
    });
  }

  if (cache.empty > df.cleanThreshold) df.runAfter(cache.clean);
  return pulse;
};


/***/ }),

/***/ "./node_modules/vega-transforms/src/Field.js":
/*!***************************************************!*\
  !*** ./node_modules/vega-transforms/src/Field.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Field; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");



/**
 * Generates one or more field accessor functions.
 * If the 'name' parameter is an array, an array of field accessors
 * will be created and the 'as' parameter will be ignored.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {string} params.name - The field name(s) to access.
 * @param {string} params.as - The accessor function name.
 */
function Field(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Operator"].call(this, null, update, params);
}

Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(Field, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Operator"]);

function update(_) {
  return (this.value && !_.modified()) ? this.value
    : Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(_.name) ? Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["array"])(_.name).map(function(f) { return Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["field"])(f); })
    : Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["field"])(_.name, _.as);
}


/***/ }),

/***/ "./node_modules/vega-transforms/src/Filter.js":
/*!****************************************************!*\
  !*** ./node_modules/vega-transforms/src/Filter.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Filter; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");



/**
 * Filters data tuples according to a predicate function.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(object): *} params.expr - The predicate expression function
 *   that determines a tuple's filter status. Truthy values pass the filter.
 */
function Filter(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["fastmap"])(), params);
}

Filter.Definition = {
  "type": "Filter",
  "metadata": {"changes": true},
  "params": [
    { "name": "expr", "type": "expr", "required": true }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(Filter, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

prototype.transform = function(_, pulse) {
  var df = pulse.dataflow,
      cache = this.value, // cache ids of filtered tuples
      output = pulse.fork(),
      add = output.add,
      rem = output.rem,
      mod = output.mod,
      test = _.expr,
      isMod = true;

  pulse.visit(pulse.REM, function(t) {
    var id = Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["tupleid"])(t);
    if (!cache.has(id)) rem.push(t);
    else cache.delete(id);
  });

  pulse.visit(pulse.ADD, function(t) {
    if (test(t, _)) add.push(t);
    else cache.set(Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["tupleid"])(t), 1);
  });

  function revisit(t) {
    var id = Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["tupleid"])(t),
        b = test(t, _),
        s = cache.get(id);
    if (b && s) {
      cache.delete(id);
      add.push(t);
    } else if (!b && !s) {
      cache.set(id, 1);
      rem.push(t);
    } else if (isMod && b && !s) {
      mod.push(t);
    }
  }

  pulse.visit(pulse.MOD, revisit);

  if (_.modified()) {
    isMod = false;
    pulse.visit(pulse.REFLOW, revisit);
  }

  if (cache.empty > df.cleanThreshold) df.runAfter(cache.clean);
  return output;
};


/***/ }),

/***/ "./node_modules/vega-transforms/src/Flatten.js":
/*!*****************************************************!*\
  !*** ./node_modules/vega-transforms/src/Flatten.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Flatten; });
/* harmony import */ var _util_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/util */ "./node_modules/vega-transforms/src/util/util.js");
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");




/**
 * Flattens array-typed field values into new data objects.
 * If multiple fields are specified, they are treated as parallel arrays,
 * with output values included for each matching index (or null if missing).
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {Array<function(object): *>} params.fields - An array of field
 *   accessors for the tuple fields that should be flattened.
 * @param {Array<string>} [params.as] - Output field names for flattened
 *   array fields. Any unspecified fields will use the field name provided
 *   by the fields accessors.
 */
function Flatten(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Transform"].call(this, [], params);
}

Flatten.Definition = {
  "type": "Flatten",
  "metadata": {"generates": true},
  "params": [
    { "name": "fields", "type": "field", "array": true, "required": true },
    { "name": "as", "type": "string", "array": true }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["inherits"])(Flatten, vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Transform"]);

prototype.transform = function(_, pulse) {
  var out = pulse.fork(pulse.NO_SOURCE),
      fields = _.fields,
      as = Object(_util_util__WEBPACK_IMPORTED_MODULE_0__["fieldNames"])(fields, _.as || []),
      m = as.length;

  // remove any previous results
  out.rem = this.value;

  // generate flattened tuples
  pulse.visit(pulse.SOURCE, function(t) {
    var arrays = fields.map(function(f) { return f(t); }),
        maxlen = arrays.reduce(function(l, a) { return Math.max(l, a.length); }, 0),
        i = 0, j, d, v;

    for (; i<maxlen; ++i) {
      d = Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["derive"])(t);
      for (j=0; j<m; ++j) {
        d[as[j]] = (v = arrays[j][i]) == null ? null : v;
      }
      out.add.push(d);
    }
  });

  this.value = out.source = out.add;
  return out.modifies(as);
};


/***/ }),

/***/ "./node_modules/vega-transforms/src/Fold.js":
/*!**************************************************!*\
  !*** ./node_modules/vega-transforms/src/Fold.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Fold; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");



/**
 * Folds one more tuple fields into multiple tuples in which the field
 * name and values are available under new 'key' and 'value' fields.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(object): *} params.fields - An array of field accessors
 *   for the tuple fields that should be folded.
 * @param {Array<string>} [params.as] - Output field names for folded key
 *   and value fields, defaults to ['key', 'value'].
 */
function Fold(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, [], params);
}

Fold.Definition = {
  "type": "Fold",
  "metadata": {"generates": true},
  "params": [
    { "name": "fields", "type": "field", "array": true, "required": true },
    { "name": "as", "type": "string", "array": true, "length": 2, "default": ["key", "value"] }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(Fold, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

prototype.transform = function(_, pulse) {
  var out = pulse.fork(pulse.NO_SOURCE),
      fields = _.fields,
      fnames = fields.map(vega_util__WEBPACK_IMPORTED_MODULE_1__["accessorName"]),
      as = _.as || ['key', 'value'],
      k = as[0],
      v = as[1],
      n = fields.length;

  out.rem = this.value;

  pulse.visit(pulse.SOURCE, function(t) {
    for (var i=0, d; i<n; ++i) {
      d = Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["derive"])(t);
      d[k] = fnames[i];
      d[v] = fields[i](t);
      out.add.push(d);
    }
  });

  this.value = out.source = out.add;
  return out.modifies(as);
};


/***/ }),

/***/ "./node_modules/vega-transforms/src/Formula.js":
/*!*****************************************************!*\
  !*** ./node_modules/vega-transforms/src/Formula.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Formula; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");



/**
 * Invokes a function for each data tuple and saves the results as a new field.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(object): *} params.expr - The formula function to invoke for each tuple.
 * @param {string} params.as - The field name under which to save the result.
 * @param {boolean} [params.initonly=false] - If true, the formula is applied to
 *   added tuples only, and does not update in response to modifications.
 */
function Formula(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, null, params);
}

Formula.Definition = {
  "type": "Formula",
  "metadata": {"modifies": true},
  "params": [
    { "name": "expr", "type": "expr", "required": true },
    { "name": "as", "type": "string", "required": true },
    { "name": "initonly", "type": "boolean" }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(Formula, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

prototype.transform = function(_, pulse) {
  var func = _.expr,
      as = _.as,
      mod = _.modified(),
      flag = _.initonly ? pulse.ADD
        : mod ? pulse.SOURCE
        : pulse.modified(func.fields) ? pulse.ADD_MOD
        : pulse.ADD;

  function set(t) {
    t[as] = func(t, _);
  }

  if (mod) {
    // parameters updated, need to reflow
    pulse = pulse.materialize().reflow(true);
  }

  if (!_.initonly) {
    pulse.modifies(as);
  }

  return pulse.visit(flag, set);
};


/***/ }),

/***/ "./node_modules/vega-transforms/src/Generate.js":
/*!******************************************************!*\
  !*** ./node_modules/vega-transforms/src/Generate.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Generate; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");



/**
 * Generates data tuples using a provided generator function.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(Parameters): object} params.generator - A tuple generator
 *   function. This function is given the operator parameters as input.
 *   Changes to any additional parameters will not trigger re-calculation
 *   of previously generated tuples. Only future tuples are affected.
 * @param {number} params.size - The number of tuples to produce.
 */
function Generate(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, [], params);
}

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(Generate, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

prototype.transform = function(_, pulse) {
  var data = this.value,
      out = pulse.fork(pulse.ALL),
      num = _.size - data.length,
      gen = _.generator,
      add, rem, t;

  if (num > 0) {
    // need more tuples, generate and add
    for (add=[]; --num >= 0;) {
      add.push(t = Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["ingest"])(gen(_)));
      data.push(t);
    }
    out.add = out.add.length
      ? out.materialize(out.ADD).add.concat(add)
      : add;
  } else {
    // need fewer tuples, remove
    rem = data.slice(0, -num);
    out.rem = out.rem.length
      ? out.materialize(out.REM).rem.concat(rem)
      : rem;
    data = data.slice(-num);
  }

  out.source = this.value = data;
  return out;
};


/***/ }),

/***/ "./node_modules/vega-transforms/src/Impute.js":
/*!****************************************************!*\
  !*** ./node_modules/vega-transforms/src/Impute.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Impute; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");




var Methods = {
  value: 'value',
  median: d3_array__WEBPACK_IMPORTED_MODULE_2__["median"],
  mean: d3_array__WEBPACK_IMPORTED_MODULE_2__["mean"],
  min: d3_array__WEBPACK_IMPORTED_MODULE_2__["min"],
  max: d3_array__WEBPACK_IMPORTED_MODULE_2__["max"]
};

var Empty = [];

/**
 * Impute missing values.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(object): *} params.field - The value field to impute.
 * @param {Array<function(object): *>} [params.groupby] - An array of
 *   accessors to determine series within which to perform imputation.
 * @param {function(object): *} params.key - An accessor for a key value.
 *   Each key value should be unique within a group. New tuples will be
 *   imputed for any key values that are not found within a group.
 * @param {Array<*>} [params.keyvals] - Optional array of required key
 *   values. New tuples will be imputed for any key values that are not
 *   found within a group. In addition, these values will be automatically
 *   augmented with the key values observed in the input data.
 * @param {string} [method='value'] - The imputation method to use. One of
 *   'value', 'mean', 'median', 'max', 'min'.
 * @param {*} [value=0] - The constant value to use for imputation
 *   when using method 'value'.
 */
function Impute(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, [], params);
}

Impute.Definition = {
  "type": "Impute",
  "metadata": {"changes": true},
  "params": [
    { "name": "field", "type": "field", "required": true },
    { "name": "key", "type": "field", "required": true },
    { "name": "keyvals", "array": true },
    { "name": "groupby", "type": "field", "array": true },
    { "name": "method", "type": "enum", "default": "value",
      "values": ["value", "mean", "median", "max", "min"] },
    { "name": "value", "default": 0 }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(Impute, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

function getValue(_) {
  var m = _.method || Methods.value, v;

  if (Methods[m] == null) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["error"])('Unrecognized imputation method: ' + m);
  } else if (m === Methods.value) {
    v = _.value !== undefined ? _.value : 0;
    return function() { return v; };
  } else {
    return Methods[m];
  }
}

function getField(_) {
  var f = _.field;
  return function(t) { return t ? f(t) : NaN; };
}

prototype.transform = function(_, pulse) {
  var out = pulse.fork(pulse.ALL),
      impute = getValue(_),
      field = getField(_),
      fName = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["accessorName"])(_.field),
      kName = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["accessorName"])(_.key),
      gNames = (_.groupby || []).map(vega_util__WEBPACK_IMPORTED_MODULE_1__["accessorName"]),
      groups = partition(pulse.source, _.groupby, _.key, _.keyvals),
      curr = [],
      prev = this.value,
      m = groups.domain.length,
      group, value, gVals, kVal, g, i, j, l, n, t;

  for (g=0, l=groups.length; g<l; ++g) {
    group = groups[g];
    gVals = group.values;
    value = NaN;

    // add tuples for missing values
    for (j=0; j<m; ++j) {
      if (group[j] != null) continue;
      kVal = groups.domain[j];

      t = {_impute: true};
      for (i=0, n=gVals.length; i<n; ++i) t[gNames[i]] = gVals[i];
      t[kName] = kVal;
      t[fName] = isNaN(value) ? (value = impute(group, field)) : value;

      curr.push(Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["ingest"])(t));
    }
  }

  // update pulse with imputed tuples
  if (curr.length) out.add = out.materialize(out.ADD).add.concat(curr);
  if (prev.length) out.rem = out.materialize(out.REM).rem.concat(prev);
  this.value = curr;

  return out;
};

function partition(data, groupby, key, keyvals) {
  var get = function(f) { return f(t); },
      groups = [],
      domain = keyvals ? keyvals.slice() : [],
      kMap = {},
      gMap = {}, gVals, gKey,
      group, i, j, k, n, t;

  domain.forEach(function(k, i) { kMap[k] = i + 1; });

  for (i=0, n=data.length; i<n; ++i) {
    t = data[i];
    k = key(t);
    j = kMap[k] || (kMap[k] = domain.push(k));

    gKey = (gVals = groupby ? groupby.map(get) : Empty) + '';
    if (!(group = gMap[gKey])) {
      group = (gMap[gKey] = []);
      groups.push(group);
      group.values = gVals;
    }
    group[j-1] = t;
  }

  groups.domain = domain;
  return groups;
}


/***/ }),

/***/ "./node_modules/vega-transforms/src/JoinAggregate.js":
/*!***********************************************************!*\
  !*** ./node_modules/vega-transforms/src/JoinAggregate.js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return JoinAggregate; });
/* harmony import */ var _Aggregate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Aggregate */ "./node_modules/vega-transforms/src/Aggregate.js");
/* harmony import */ var _util_AggregateOps__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/AggregateOps */ "./node_modules/vega-transforms/src/util/AggregateOps.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");




/**
 * Extend input tuples with aggregate values.
 * Calcuates aggregate values and joins them with the input stream.
 * @constructor
 */
function JoinAggregate(params) {
  _Aggregate__WEBPACK_IMPORTED_MODULE_0__["default"].call(this, params);
}

JoinAggregate.Definition = {
  "type": "JoinAggregate",
  "metadata": {"modifies": true},
  "params": [
    { "name": "groupby", "type": "field", "array": true },
    { "name": "fields", "type": "field", "null": true, "array": true },
    { "name": "ops", "type": "enum", "array": true, "values": _util_AggregateOps__WEBPACK_IMPORTED_MODULE_1__["ValidAggregateOps"] },
    { "name": "as", "type": "string", "null": true, "array": true },
    { "name": "key", "type": "field" }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["inherits"])(JoinAggregate, _Aggregate__WEBPACK_IMPORTED_MODULE_0__["default"]);

prototype.transform = function(_, pulse) {
  var aggr = this,
      mod = _.modified(),
      cells;

  // process all input tuples to calculate aggregates
  if (aggr.value && (mod || pulse.modified(aggr._inputs))) {
    cells = aggr.value = mod ? aggr.init(_) : {};
    pulse.visit(pulse.SOURCE, function(t) { aggr.add(t); });
  } else {
    cells = aggr.value = aggr.value || this.init(_);
    pulse.visit(pulse.REM, function(t) { aggr.rem(t); });
    pulse.visit(pulse.ADD, function(t) { aggr.add(t); });
  }

  // update aggregation cells
  aggr.changes();

  // write aggregate values to input tuples
  pulse.visit(pulse.SOURCE, function(t) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["extend"])(t, cells[aggr.cellkey(t)].tuple);
  });

  return pulse.reflow(mod).modifies(this._outputs);
};

prototype.changes = function() {
  var adds = this._adds,
      mods = this._mods,
      i, n;

  for (i=0, n=this._alen; i<n; ++i) {
    this.celltuple(adds[i]);
    adds[i] = null; // for garbage collection
  }

  for (i=0, n=this._mlen; i<n; ++i) {
    this.celltuple(mods[i]);
    mods[i] = null; // for garbage collection
  }

  this._alen = this._mlen = 0; // reset list of active cells
};


/***/ }),

/***/ "./node_modules/vega-transforms/src/KDE.js":
/*!*************************************************!*\
  !*** ./node_modules/vega-transforms/src/KDE.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return KDE; });
/* harmony import */ var vega_statistics__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-statistics */ "./node_modules/vega-statistics/index.js");
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");






/**
 * Compute kernel density estimates (KDE) for one or more data groups.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {Array<function(object): *>} [params.groupby] - An array of accessors
 *   to groupby.
 * @param {function(object): *} params.field - An accessor for the data field
 *   to estimate.
 * @param {number} [params.bandwidth=0] - The KDE kernal bandwidth.
 *   If zero of unspecified, the bandwidth is automatically determined.
 * @param {string} [params.cumulative=false] - A boolean flag indicating if a
 *   density (false) or cumulative distribution (true) should be generated.
 * @param {Array<number>} [params.extent] - The domain extent over which to
 *   plot the density. If unspecified, the [min, max] data extent is used.
 * @param {number} [params.minsteps=25] - The minimum number of curve samples
 *   for plotting the density.
 * @param {number} [params.maxsteps=200] - The maximum number of curve samples
 *   for plotting the density.
 * @param {number} [params.steps] - The exact number of curve samples for
 *   plotting the density. If specified, overrides both minsteps and maxsteps
 *   to set an exact number of uniform samples. Useful in conjunction with
 *   a fixed extent to ensure consistent sample points for stacked densities.
 */
function KDE(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Transform"].call(this, null, params);
}

KDE.Definition = {
  "type": "KDE",
  "metadata": {"generates": true},
  "params": [
    { "name": "groupby", "type": "field", "array": true },
    { "name": "field", "type": "field", "required": true },
    { "name": "cumulative", "type": "boolean", "default": false },
    { "name": "counts", "type": "boolean", "default": false },
    { "name": "bandwidth", "type": "number", "default": 0 },
    { "name": "extent", "type": "number", "array": true, "length": 2 },
    { "name": "steps", "type": "number" },
    { "name": "minsteps", "type": "number", "default": 25 },
    { "name": "maxsteps", "type": "number", "default": 200 },
    { "name": "as", "type": "string", "array": true, "default": ["value", "density"] }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["inherits"])(KDE, vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Transform"]);

prototype.transform = function(_, pulse) {
  var out = pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS);

  if (!this.value || pulse.changed() || _.modified()) {
    const source = pulse.materialize(pulse.SOURCE).source,
          groups = partition(source, _.groupby, _.field),
          names = (_.groupby || []).map(vega_util__WEBPACK_IMPORTED_MODULE_2__["accessorName"]),
          bandwidth = _.bandwidth,
          method = _.cumulative ? 'cdf' : 'pdf',
          minsteps = _.steps || _.minsteps || 25,
          maxsteps = _.steps || _.maxsteps || 200,
          as = _.as || ['value', 'density'],
          values = [];

    if (method !== 'pdf' && method !== 'cdf') {
      Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["error"])('Invalid density method: ' + method);
    }

    groups.forEach(g => {
      const density = Object(vega_statistics__WEBPACK_IMPORTED_MODULE_0__["randomKDE"])(g, bandwidth)[method],
            scale = _.counts ? g.length : 1,
            domain = _.extent || Object(d3_array__WEBPACK_IMPORTED_MODULE_3__["extent"])(g);

      Object(vega_statistics__WEBPACK_IMPORTED_MODULE_0__["sampleCurve"])(density, domain, minsteps, maxsteps).forEach(v => {
        const t = {};
        for (let i=0; i<names.length; ++i) {
          t[names[i]] = g.dims[i];
        }
        t[as[0]] = v[0];
        t[as[1]] = v[1] * scale;
        values.push(Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["ingest"])(t));
      });
    });

    if (this.value) out.rem = this.value;
    this.value = out.add = out.source = values;
  }

  return out;
};

function partition(data, groupby, field) {
  var groups = [],
      get = function(f) { return f(t); },
      map, i, n, t, k, g;

  // partition data points into stack groups
  if (groupby == null) {
    groups.push(data.map(field));
  } else {
    for (map={}, i=0, n=data.length; i<n; ++i) {
      t = data[i];
      k = groupby.map(get);
      g = map[k];
      if (!g) {
        map[k] = (g = []);
        g.dims = k;
        groups.push(g);
      }
      g.push(field(t));
    }
  }

  return groups;
}


/***/ }),

/***/ "./node_modules/vega-transforms/src/Key.js":
/*!*************************************************!*\
  !*** ./node_modules/vega-transforms/src/Key.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Key; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");



/**
 * Generates a key function.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {Array<string>} params.fields - The field name(s) for the key function.
 * @param {boolean} params.flat - A boolean flag indicating if the field names
 *  should be treated as flat property names, side-stepping nested field
 *  lookups normally indicated by dot or bracket notation.
 */
function Key(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Operator"].call(this, null, update, params);
}

Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(Key, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Operator"]);

function update(_) {
  return (this.value && !_.modified()) ? this.value : Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["key"])(_.fields, _.flat);
}


/***/ }),

/***/ "./node_modules/vega-transforms/src/Load.js":
/*!**************************************************!*\
  !*** ./node_modules/vega-transforms/src/Load.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Load; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");



/**
 * Load and parse data from an external source. Marshalls parameter
 * values and then invokes the Dataflow request method.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {string} params.url - The URL to load from.
 * @param {object} params.format - The data format options.
 */
function Load(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, [], params);
}

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(Load, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

prototype.transform = function(_, pulse) {
  const df = pulse.dataflow;

  if (_.values) {
    // parse and ingest values
    return output(this, pulse, df.parse(_.values, _.format));
  } else {
    // return promise for async loading
    return df.request(_.url, _.format)
      .then(res => output(this, pulse, res.data || []));
  }
};

function output(op, pulse, data) {
  data.forEach(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["ingest"]);
  const out = pulse.fork(pulse.NO_FIELDS & pulse.NO_SOURCE);
  out.rem = op.value;
  op.value = out.add = out.source = data;
  return out;
}


/***/ }),

/***/ "./node_modules/vega-transforms/src/Lookup.js":
/*!****************************************************!*\
  !*** ./node_modules/vega-transforms/src/Lookup.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Lookup; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");



/**
 * Extend tuples by joining them with values from a lookup table.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {Map} params.index - The lookup table map.
 * @param {Array<function(object): *} params.fields - The fields to lookup.
 * @param {Array<string>} params.as - Output field names for each lookup value.
 * @param {*} [params.default] - A default value to use if lookup fails.
 */
function Lookup(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, {}, params);
}

Lookup.Definition = {
  "type": "Lookup",
  "metadata": {"modifies": true},
  "params": [
    { "name": "index", "type": "index", "params": [
        {"name": "from", "type": "data", "required": true },
        {"name": "key", "type": "field", "required": true }
      ] },
    { "name": "values", "type": "field", "array": true },
    { "name": "fields", "type": "field", "array": true, "required": true },
    { "name": "as", "type": "string", "array": true },
    { "name": "default", "default": null }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(Lookup, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

prototype.transform = function(_, pulse) {
  var out = pulse,
      as = _.as,
      keys = _.fields,
      index = _.index,
      values = _.values,
      defaultValue = _.default==null ? null : _.default,
      reset = _.modified(),
      flag = reset ? pulse.SOURCE : pulse.ADD,
      n = keys.length,
      set, m, mods;

  if (values) {
    m = values.length;

    if (n > 1 && !as) {
      Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["error"])('Multi-field lookup requires explicit "as" parameter.');
    }
    if (as && as.length !== n * m) {
      Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["error"])('The "as" parameter has too few output field names.');
    }
    as = as || values.map(vega_util__WEBPACK_IMPORTED_MODULE_1__["accessorName"]);

    set = function(t) {
      for (var i=0, k=0, j, v; i<n; ++i) {
        v = index.get(keys[i](t));
        if (v == null) for (j=0; j<m; ++j, ++k) t[as[k]] = defaultValue;
        else for (j=0; j<m; ++j, ++k) t[as[k]] = values[j](v);
      }
    };
  } else {
    if (!as) {
      Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["error"])('Missing output field names.');
    }

    set = function(t) {
      for (var i=0, v; i<n; ++i) {
        v = index.get(keys[i](t));
        t[as[i]] = v==null ? defaultValue : v;
      }
    };
  }

  if (reset) {
    out = pulse.reflow(true);
  } else {
    mods = keys.some(function(k) { return pulse.modified(k.fields); });
    flag |= (mods ? pulse.MOD : 0);
  }
  pulse.visit(flag, set);

  return out.modifies(as);
};


/***/ }),

/***/ "./node_modules/vega-transforms/src/MultiExtent.js":
/*!*********************************************************!*\
  !*** ./node_modules/vega-transforms/src/MultiExtent.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return MultiExtent; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");



/**
 * Computes global min/max extents over a collection of extents.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {Array<Array<number>>} params.extents - The input extents.
 */
function MultiExtent(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Operator"].call(this, null, update, params);
}

Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(MultiExtent, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Operator"]);

function update(_) {
  if (this.value && !_.modified()) {
    return this.value;
  }

  var min = +Infinity,
      max = -Infinity,
      ext = _.extents,
      i, n, e;

  for (i=0, n=ext.length; i<n; ++i) {
    e = ext[i];
    if (e[0] < min) min = e[0];
    if (e[1] > max) max = e[1];
  }
  return [min, max];
}


/***/ }),

/***/ "./node_modules/vega-transforms/src/MultiValues.js":
/*!*********************************************************!*\
  !*** ./node_modules/vega-transforms/src/MultiValues.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return MultiValues; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");



/**
 * Merge a collection of value arrays.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {Array<Array<*>>} params.values - The input value arrrays.
 */
function MultiValues(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Operator"].call(this, null, update, params);
}

Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(MultiValues, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Operator"]);

function update(_) {
  return (this.value && !_.modified())
    ? this.value
    : _.values.reduce(function(data, _) { return data.concat(_); }, []);
}


/***/ }),

/***/ "./node_modules/vega-transforms/src/Params.js":
/*!****************************************************!*\
  !*** ./node_modules/vega-transforms/src/Params.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Params; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");



/**
 * Operator whose value is simply its parameter hash. This operator is
 * useful for enabling reactive updates to values of nested objects.
 * @constructor
 * @param {object} params - The parameters for this operator.
 */
function Params(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, null, params);
}

Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(Params, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

Params.prototype.transform = function(_, pulse) {
  this.modified(_.modified());
  this.value = _;
  return pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS); // do not pass tuples
};


/***/ }),

/***/ "./node_modules/vega-transforms/src/Pivot.js":
/*!***************************************************!*\
  !*** ./node_modules/vega-transforms/src/Pivot.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Pivot; });
/* harmony import */ var _Aggregate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Aggregate */ "./node_modules/vega-transforms/src/Aggregate.js");
/* harmony import */ var _util_AggregateOps__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/AggregateOps */ "./node_modules/vega-transforms/src/util/AggregateOps.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");




/**
 * Aggregate and pivot selected field values to become new fields.
 * This operator is useful to construction cross-tabulations.
 * @constructor
 * @param {Array<function(object): *>} [params.groupby] - An array of accessors
 *  to groupby. These fields act just like groupby fields of an Aggregate transform.
 * @param {function(object): *} params.field - The field to pivot on. The unique
 *  values of this field become new field names in the output stream.
 * @param {function(object): *} params.value - The field to populate pivoted fields.
 *  The aggregate values of this field become the values of the new pivoted fields.
 * @param {string} [params.op] - The aggregation operation for the value field,
 *  applied per cell in the output stream. The default is "sum".
 * @param {number} [params.limit] - An optional parameter indicating the maximum
 *  number of pivoted fields to generate. The pivoted field names are sorted in
 *  ascending order prior to enforcing the limit.
 */
function Pivot(params) {
  _Aggregate__WEBPACK_IMPORTED_MODULE_0__["default"].call(this, params);
}

Pivot.Definition = {
  "type": "Pivot",
  "metadata": {"generates": true, "changes": true},
  "params": [
    { "name": "groupby", "type": "field", "array": true },
    { "name": "field", "type": "field", "required": true },
    { "name": "value", "type": "field", "required": true },
    { "name": "op", "type": "enum", "values": _util_AggregateOps__WEBPACK_IMPORTED_MODULE_1__["ValidAggregateOps"], "default": "sum" },
    { "name": "limit", "type": "number", "default": 0 },
    { "name": "key", "type": "field" }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["inherits"])(Pivot, _Aggregate__WEBPACK_IMPORTED_MODULE_0__["default"]);

prototype._transform = prototype.transform;

prototype.transform = function(_, pulse) {
  return this._transform(aggregateParams(_, pulse), pulse);
};

// Shoehorn a pivot transform into an aggregate transform!
// First collect all unique pivot field values.
// Then generate aggregate fields for each output pivot field.
function aggregateParams(_, pulse) {
  var key    = _.field,
  value  = _.value,
      op     = (_.op === 'count' ? '__count__' : _.op) || 'sum',
      fields = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["accessorFields"])(key).concat(Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["accessorFields"])(value)),
      keys   = pivotKeys(key, _.limit || 0, pulse);

  return {
    key:      _.key,
    groupby:  _.groupby,
    ops:      keys.map(function() { return op; }),
    fields:   keys.map(function(k) { return get(k, key, value, fields); }),
    as:       keys.map(function(k) { return k + ''; }),
    modified: _.modified.bind(_)
  };
}

// Generate aggregate field accessor.
// Output NaN for non-existent values; aggregator will ignore!
function get(k, key, value, fields) {
  return Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["accessor"])(
    function(d) { return key(d) === k ? value(d) : NaN; },
    fields,
    k + ''
  );
}

// Collect (and optionally limit) all unique pivot values.
function pivotKeys(key, limit, pulse) {
  var map = {},
      list = [];

  pulse.visit(pulse.SOURCE, function(t) {
    var k = key(t);
    if (!map[k]) {
      map[k] = 1;
      list.push(k);
    }
  });

  // TODO? Move this comparator to vega-util?
  list.sort(function(u, v) {
    return (u<v||u==null) && v!=null ? -1
      : (u>v||v==null) && u!=null ? 1
      : ((v=v instanceof Date?+v:v),(u=u instanceof Date?+u:u))!==u && v===v ? -1
      : v!==v && u===u ? 1 : 0;
  });

  return limit ? list.slice(0, limit) : list;
}


/***/ }),

/***/ "./node_modules/vega-transforms/src/PreFacet.js":
/*!******************************************************!*\
  !*** ./node_modules/vega-transforms/src/PreFacet.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return PreFacet; });
/* harmony import */ var _Facet__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Facet */ "./node_modules/vega-transforms/src/Facet.js");
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");




/**
 * Partitions pre-faceted data into tuple subflows.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(Dataflow, string): Operator} params.subflow - A function
 *   that generates a subflow of operators and returns its root operator.
 * @param {function(object): Array<object>} params.field - The field
 *   accessor for an array of subflow tuple objects.
 */
function PreFacet(params) {
  _Facet__WEBPACK_IMPORTED_MODULE_0__["default"].call(this, params);
}

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["inherits"])(PreFacet, _Facet__WEBPACK_IMPORTED_MODULE_0__["default"]);

prototype.transform = function(_, pulse) {
  var self = this,
      flow = _.subflow,
      field = _.field;

  if (_.modified('field') || field && pulse.modified(Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["accessorFields"])(field))) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["error"])('PreFacet does not support field modification.');
  }

  this._targets.active = 0; // reset list of active subflows

  pulse.visit(pulse.MOD, function(t) {
    var sf = self.subflow(Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["tupleid"])(t), flow, pulse, t);
    field ? field(t).forEach(function(_) { sf.mod(_); }) : sf.mod(t);
  });

  pulse.visit(pulse.ADD, function(t) {
    var sf = self.subflow(Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["tupleid"])(t), flow, pulse, t);
    field ? field(t).forEach(function(_) { sf.add(Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["ingest"])(_)); }) : sf.add(t);
  });

  pulse.visit(pulse.REM, function(t) {
    var sf = self.subflow(Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["tupleid"])(t), flow, pulse, t);
    field ? field(t).forEach(function(_) { sf.rem(_); }) : sf.rem(t);
  });

  return pulse;
};


/***/ }),

/***/ "./node_modules/vega-transforms/src/Project.js":
/*!*****************************************************!*\
  !*** ./node_modules/vega-transforms/src/Project.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Project; });
/* harmony import */ var _util_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/util */ "./node_modules/vega-transforms/src/util/util.js");
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");




/**
 * Performs a relational projection, copying selected fields from source
 * tuples to a new set of derived tuples.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {Array<function(object): *} params.fields - The fields to project,
 *   as an array of field accessors. If unspecified, all fields will be
 *   copied with names unchanged.
 * @param {Array<string>} [params.as] - Output field names for each projected
 *   field. Any unspecified fields will use the field name provided by
 *   the field accessor.
 */
function Project(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Transform"].call(this, null, params);
}

Project.Definition = {
  "type": "Project",
  "metadata": {"generates": true, "changes": true},
  "params": [
    { "name": "fields", "type": "field", "array": true },
    { "name": "as", "type": "string", "null": true, "array": true },
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["inherits"])(Project, vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Transform"]);

prototype.transform = function(_, pulse) {
  var fields = _.fields,
      as = Object(_util_util__WEBPACK_IMPORTED_MODULE_0__["fieldNames"])(_.fields, _.as || []),
      derive = fields
        ? function(s, t) { return project(s, t, fields, as); }
        : vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["rederive"],
      out, lut;

  if (this.value) {
    lut = this.value;
  } else {
    pulse = pulse.addAll();
    lut = this.value = {};
  }

  out = pulse.fork(pulse.NO_SOURCE);

  pulse.visit(pulse.REM, function(t) {
    var id = Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["tupleid"])(t);
    out.rem.push(lut[id]);
    lut[id] = null;
  });

  pulse.visit(pulse.ADD, function(t) {
    var dt = derive(t, Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["ingest"])({}));
    lut[Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["tupleid"])(t)] = dt;
    out.add.push(dt);
  });

  pulse.visit(pulse.MOD, function(t) {
    out.mod.push(derive(t, lut[Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["tupleid"])(t)]));
  });

  return out;
};

function project(s, t, fields, as) {
  for (var i=0, n=fields.length; i<n; ++i) {
    t[as[i]] = fields[i](s);
  }
  return t;
}


/***/ }),

/***/ "./node_modules/vega-transforms/src/Proxy.js":
/*!***************************************************!*\
  !*** ./node_modules/vega-transforms/src/Proxy.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Proxy; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");



/**
 * Proxy the value of another operator as a pure signal value.
 * Ensures no tuples are propagated.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {*} params.value - The value to proxy, becomes the value of this operator.
 */
function Proxy(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, null, params);
}

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(Proxy, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

prototype.transform = function(_, pulse) {
  this.value = _.value;
  return _.modified('value')
    ? pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS)
    : pulse.StopPropagation;
};


/***/ }),

/***/ "./node_modules/vega-transforms/src/Relay.js":
/*!***************************************************!*\
  !*** ./node_modules/vega-transforms/src/Relay.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Relay; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");



/**
 * Relays a data stream between data processing pipelines.
 * If the derive parameter is set, this transform will create derived
 * copies of observed tuples. This provides derived data streams in which
 * modifications to the tuples do not pollute an upstream data source.
 * @param {object} params - The parameters for this operator.
 * @param {number} [params.derive=false] - Boolean flag indicating if
 *   the transform should make derived copies of incoming tuples.
 * @constructor
 */
function Relay(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, null, params);
}

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(Relay, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

prototype.transform = function(_, pulse) {
  var out, lut;

  if (this.value) {
    lut = this.value;
  } else {
    out = pulse = pulse.addAll();
    lut = this.value = {};
  }

  if (_.derive) {
    out = pulse.fork(pulse.NO_SOURCE);

    pulse.visit(pulse.REM, function(t) {
      var id = Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["tupleid"])(t);
      out.rem.push(lut[id]);
      lut[id] = null;
    });

    pulse.visit(pulse.ADD, function(t) {
      var dt = Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["derive"])(t);
      lut[Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["tupleid"])(t)] = dt;
      out.add.push(dt);
    });

    pulse.visit(pulse.MOD, function(t) {
      out.mod.push(Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["rederive"])(t, lut[Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["tupleid"])(t)]));
    });
  }

  return out;
};


/***/ }),

/***/ "./node_modules/vega-transforms/src/Sample.js":
/*!****************************************************!*\
  !*** ./node_modules/vega-transforms/src/Sample.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Sample; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_statistics__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-statistics */ "./node_modules/vega-statistics/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");




/**
 * Samples tuples passing through this operator.
 * Uses reservoir sampling to maintain a representative sample.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {number} [params.size=1000] - The maximum number of samples.
 */
function Sample(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, [], params);
  this.count = 0;
}

Sample.Definition = {
  "type": "Sample",
  "metadata": {},
  "params": [
    { "name": "size", "type": "number", "default": 1000 }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["inherits"])(Sample, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

prototype.transform = function(_, pulse) {
  var out = pulse.fork(pulse.NO_SOURCE),
      mod = _.modified('size'),
      num = _.size,
      res = this.value,
      cnt = this.count,
      cap = 0,
      map = res.reduce(function(m, t) {
        m[Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["tupleid"])(t)] = 1;
        return m;
      }, {});

  // sample reservoir update function
  function update(t) {
    var p, idx;

    if (res.length < num) {
      res.push(t);
    } else {
      idx = ~~((cnt + 1) * Object(vega_statistics__WEBPACK_IMPORTED_MODULE_1__["random"])());
      if (idx < res.length && idx >= cap) {
        p = res[idx];
        if (map[Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["tupleid"])(p)]) out.rem.push(p); // eviction
        res[idx] = t;
      }
    }
    ++cnt;
  }

  if (pulse.rem.length) {
    // find all tuples that should be removed, add to output
    pulse.visit(pulse.REM, function(t) {
      var id = Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["tupleid"])(t);
      if (map[id]) {
        map[id] = -1;
        out.rem.push(t);
      }
      --cnt;
    });

    // filter removed tuples out of the sample reservoir
    res = res.filter(function(t) { return map[Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["tupleid"])(t)] !== -1; });
  }

  if ((pulse.rem.length || mod) && res.length < num && pulse.source) {
    // replenish sample if backing data source is available
    cap = cnt = res.length;
    pulse.visit(pulse.SOURCE, function(t) {
      // update, but skip previously sampled tuples
      if (!map[Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["tupleid"])(t)]) update(t);
    });
    cap = -1;
  }

  if (mod && res.length > num) {
    for (var i=0, n=res.length-num; i<n; ++i) {
      map[Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["tupleid"])(res[i])] = -1;
      out.rem.push(res[i]);
    }
    res = res.slice(n);
  }

  if (pulse.mod.length) {
    // propagate modified tuples in the sample reservoir
    pulse.visit(pulse.MOD, function(t) {
      if (map[Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["tupleid"])(t)]) out.mod.push(t);
    });
  }

  if (pulse.add.length) {
    // update sample reservoir
    pulse.visit(pulse.ADD, update);
  }

  if (pulse.add.length || cap < 0) {
    // output newly added tuples
    out.add = res.filter(function(t) { return !map[Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["tupleid"])(t)]; });
  }

  this.count = cnt;
  this.value = out.source = res;
  return out;
};


/***/ }),

/***/ "./node_modules/vega-transforms/src/Sequence.js":
/*!******************************************************!*\
  !*** ./node_modules/vega-transforms/src/Sequence.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Sequence; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");




/**
 * Generates data tuples for a specified sequence range of numbers.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {number} params.start - The first number in the sequence.
 * @param {number} params.stop - The last number (exclusive) in the sequence.
 * @param {number} [params.step=1] - The step size between numbers in the sequence.
 */
function Sequence(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, null, params);
}

Sequence.Definition = {
  "type": "Sequence",
  "metadata": {"changes": true},
  "params": [
    { "name": "start", "type": "number", "required": true },
    { "name": "stop", "type": "number", "required": true },
    { "name": "step", "type": "number", "default": 1 },
    { "name": "as", "type": "string", "default": "data" }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(Sequence, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

prototype.transform = function(_, pulse) {
  if (this.value && !_.modified()) return;

  var out = pulse.materialize().fork(pulse.MOD),
      as = _.as || 'data';

  out.rem = this.value ? pulse.rem.concat(this.value) : pulse.rem;

  this.value = Object(d3_array__WEBPACK_IMPORTED_MODULE_2__["range"])(_.start, _.stop, _.step || 1).map(function(v) {
    var t = {};
    t[as] = v;
    return Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["ingest"])(t);
  });

  out.add = pulse.add.concat(this.value);

  return out;
};


/***/ }),

/***/ "./node_modules/vega-transforms/src/Sieve.js":
/*!***************************************************!*\
  !*** ./node_modules/vega-transforms/src/Sieve.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Sieve; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");



/**
 * Propagates a new pulse without any tuples so long as the input
 * pulse contains some added, removed or modified tuples.
 * @param {object} params - The parameters for this operator.
 * @constructor
 */
function Sieve(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, null, params);
  this.modified(true); // always treat as modified
}

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(Sieve, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

prototype.transform = function(_, pulse) {
  this.value = pulse.source;
  return pulse.changed()
    ? pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS)
    : pulse.StopPropagation;
};


/***/ }),

/***/ "./node_modules/vega-transforms/src/Subflow.js":
/*!*****************************************************!*\
  !*** ./node_modules/vega-transforms/src/Subflow.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Subflow; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");



/**
 * Provides a bridge between a parent transform and a target subflow that
 * consumes only a subset of the tuples that pass through the parent.
 * @constructor
 * @param {Pulse} pulse - A pulse to use as the value of this operator.
 * @param {Transform} parent - The parent transform (typically a Facet instance).
 * @param {Transform} target - A transform that receives the subflow of tuples.
 */
function Subflow(pulse, parent) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Operator"].call(this, pulse);
  this.parent = parent;
}

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(Subflow, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Operator"]);

prototype.connect = function(target) {
  this.targets().add(target);
  return (target.source = this);
};

/**
 * Add an 'add' tuple to the subflow pulse.
 * @param {Tuple} t - The tuple being added.
 */
prototype.add = function(t) {
  this.value.add.push(t);
};

/**
 * Add a 'rem' tuple to the subflow pulse.
 * @param {Tuple} t - The tuple being removed.
 */
prototype.rem = function(t) {
  this.value.rem.push(t);
};

/**
 * Add a 'mod' tuple to the subflow pulse.
 * @param {Tuple} t - The tuple being modified.
 */
prototype.mod = function(t) {
  this.value.mod.push(t);
};

/**
 * Re-initialize this operator's pulse value.
 * @param {Pulse} pulse - The pulse to copy from.
 * @see Pulse.init
 */
prototype.init = function(pulse) {
  this.value.init(pulse, pulse.NO_SOURCE);
};

/**
 * Evaluate this operator. This method overrides the
 * default behavior to simply return the contained pulse value.
 * @return {Pulse}
 */
prototype.evaluate = function() {
  // assert: this.value.stamp === pulse.stamp
  return this.value;
};


/***/ }),

/***/ "./node_modules/vega-transforms/src/TupleIndex.js":
/*!********************************************************!*\
  !*** ./node_modules/vega-transforms/src/TupleIndex.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return TupleIndex; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");



/**
 * An index that maps from unique, string-coerced, field values to tuples.
 * Assumes that the field serves as a unique key with no duplicate values.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(object): *} params.field - The field accessor to index.
 */
function TupleIndex(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["fastmap"])(), params);
}

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(TupleIndex, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

prototype.transform = function(_, pulse) {
  var df = pulse.dataflow,
      field = _.field,
      index = this.value,
      mod = true;

  function set(t) { index.set(field(t), t); }

  if (_.modified('field') || pulse.modified(field.fields)) {
    index.clear();
    pulse.visit(pulse.SOURCE, set);
  } else if (pulse.changed()) {
    pulse.visit(pulse.REM, function(t) { index.delete(field(t)); });
    pulse.visit(pulse.ADD, set);
  } else {
    mod = false;
  }

  this.modified(mod);
  if (index.empty > df.cleanThreshold) df.runAfter(index.clean);
  return pulse.fork();
};


/***/ }),

/***/ "./node_modules/vega-transforms/src/Values.js":
/*!****************************************************!*\
  !*** ./node_modules/vega-transforms/src/Values.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Values; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");



/**
 * Extracts an array of values. Assumes the source data has already been
 * reduced as needed (e.g., by an upstream Aggregate transform).
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(object): *} params.field - The domain field to extract.
 * @param {function(*,*): number} [params.sort] - An optional
 *   comparator function for sorting the values. The comparator will be
 *   applied to backing tuples prior to value extraction.
 */
function Values(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, null, params);
}

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(Values, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

prototype.transform = function(_, pulse) {
  var run = !this.value
    || _.modified('field')
    || _.modified('sort')
    || pulse.changed()
    || (_.sort && pulse.modified(_.sort.fields));

  if (run) {
    this.value = (_.sort
      ? pulse.source.slice().sort(_.sort)
      : pulse.source).map(_.field);
  }
};


/***/ }),

/***/ "./node_modules/vega-transforms/src/Window.js":
/*!****************************************************!*\
  !*** ./node_modules/vega-transforms/src/Window.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Window; });
/* harmony import */ var _util_AggregateKeys__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/AggregateKeys */ "./node_modules/vega-transforms/src/util/AggregateKeys.js");
/* harmony import */ var _util_AggregateOps__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/AggregateOps */ "./node_modules/vega-transforms/src/util/AggregateOps.js");
/* harmony import */ var _util_SortedList__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util/SortedList */ "./node_modules/vega-transforms/src/util/SortedList.js");
/* harmony import */ var _util_WindowOps__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./util/WindowOps */ "./node_modules/vega-transforms/src/util/WindowOps.js");
/* harmony import */ var _util_WindowState__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./util/WindowState */ "./node_modules/vega-transforms/src/util/WindowState.js");
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");









/**
 * Perform window calculations and write results to the input stream.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {function(*,*): number} [params.sort] - A comparator function for sorting tuples within a window.
 * @param {Array<function(object): *>} [params.groupby] - An array of accessors by which to partition tuples into separate windows.
 * @param {Array<string>} params.ops - An array of strings indicating window operations to perform.
 * @param {Array<function(object): *>} [params.fields] - An array of accessors
 *   for data fields to use as inputs to window operations.
 * @param {Array<*>} [params.params] - An array of parameter values for window operations.
 * @param {Array<string>} [params.as] - An array of output field names for window operations.
 * @param {Array<number>} [params.frame] - Window frame definition as two-element array.
 * @param {boolean} [params.ignorePeers=false] - If true, base window frame boundaries on row
 *   number alone, ignoring peers with identical sort values. If false (default),
 *   the window boundaries will be adjusted to include peer values.
 */
function Window(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_5__["Transform"].call(this, {}, params);
  this._mlen = 0;
  this._mods = [];
}

Window.Definition = {
  "type": "Window",
  "metadata": {"modifies": true},
  "params": [
    { "name": "sort", "type": "compare" },
    { "name": "groupby", "type": "field", "array": true },
    { "name": "ops", "type": "enum", "array": true, "values": _util_WindowOps__WEBPACK_IMPORTED_MODULE_3__["ValidWindowOps"].concat(_util_AggregateOps__WEBPACK_IMPORTED_MODULE_1__["ValidAggregateOps"]) },
    { "name": "params", "type": "number", "null": true, "array": true },
    { "name": "fields", "type": "field", "null": true, "array": true },
    { "name": "as", "type": "string", "null": true, "array": true },
    { "name": "frame", "type": "number", "null": true, "array": true, "length": 2, "default": [null, 0] },
    { "name": "ignorePeers", "type": "boolean", "default": false }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_6__["inherits"])(Window, vega_dataflow__WEBPACK_IMPORTED_MODULE_5__["Transform"]);

prototype.transform = function(_, pulse) {
  var self = this,
      state = self.state,
      mod = _.modified(),
      i, n;

  this.stamp = pulse.stamp;

  // initialize window state
  if (!state || mod) {
    state = self.state = new _util_WindowState__WEBPACK_IMPORTED_MODULE_4__["default"](_);
  }

  // retrieve group for a tuple
  var key = Object(_util_AggregateKeys__WEBPACK_IMPORTED_MODULE_0__["groupkey"])(_.groupby);
  function group(t) { return self.group(key(t)); }

  // partition input tuples
  if (mod || pulse.modified(state.inputs)) {
    self.value = {};
    pulse.visit(pulse.SOURCE, function(t) { group(t).add(t); });
  } else {
    pulse.visit(pulse.REM, function(t) { group(t).remove(t); });
    pulse.visit(pulse.ADD, function(t) { group(t).add(t); });
  }

  // perform window calculations for each modified partition
  for (i=0, n=self._mlen; i<n; ++i) {
    processPartition(self._mods[i], state, _);
  }
  self._mlen = 0;
  self._mods = [];

  // TODO don't reflow everything?
  return pulse.reflow(mod).modifies(state.outputs);
};

prototype.group = function(key) {
  var self = this,
      group = self.value[key];

  if (!group) {
    group = self.value[key] = Object(_util_SortedList__WEBPACK_IMPORTED_MODULE_2__["default"])(vega_dataflow__WEBPACK_IMPORTED_MODULE_5__["tupleid"]);
    group.stamp = -1;
  }

  if (group.stamp < self.stamp) {
    group.stamp = self.stamp;
    self._mods[self._mlen++] = group;
  }

  return group;
};

function processPartition(list, state, _) {
  var sort = _.sort,
      range = sort && !_.ignorePeers,
      frame = _.frame || [null, 0],
      data = list.data(sort),
      n = data.length,
      i = 0,
      b = range ? Object(d3_array__WEBPACK_IMPORTED_MODULE_7__["bisector"])(sort) : null,
      w = {
        i0: 0, i1: 0, p0: 0, p1: 0, index: 0,
        data: data, compare: sort || Object(vega_util__WEBPACK_IMPORTED_MODULE_6__["constant"])(-1)
      };

  for (state.init(); i<n; ++i) {
    setWindow(w, frame, i, n);
    if (range) adjustRange(w, b);
    state.update(w, data[i]);
  }
}

function setWindow(w, f, i, n) {
  w.p0 = w.i0;
  w.p1 = w.i1;
  w.i0 = f[0] == null ? 0 : Math.max(0, i - Math.abs(f[0]));
  w.i1 = f[1] == null ? n : Math.min(n, i + Math.abs(f[1]) + 1);
  w.index = i;
}

// if frame type is 'range', adjust window for peer values
function adjustRange(w, bisect) {
  var r0 = w.i0,
      r1 = w.i1 - 1,
      c = w.compare,
      d = w.data,
      n = d.length - 1;

  if (r0 > 0 && !c(d[r0], d[r0-1])) w.i0 = bisect.left(d, d[r0]);
  if (r1 < n && !c(d[r1], d[r1+1])) w.i1 = bisect.right(d, d[r1]);
}


/***/ }),

/***/ "./node_modules/vega-transforms/src/util/AggregateKeys.js":
/*!****************************************************************!*\
  !*** ./node_modules/vega-transforms/src/util/AggregateKeys.js ***!
  \****************************************************************/
/*! exports provided: multikey, groupkey */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "multikey", function() { return multikey; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "groupkey", function() { return groupkey; });
function multikey(f) {
  return function(x) {
    var n = f.length,
        i = 1,
        k = String(f[0](x));

    for (; i<n; ++i) {
      k += '|' + f[i](x);
    }

    return k;
  };
}

function groupkey(fields) {
  return !fields || !fields.length ? function() { return ''; }
    : fields.length === 1 ? fields[0]
    : multikey(fields);
}


/***/ }),

/***/ "./node_modules/vega-transforms/src/util/AggregateOps.js":
/*!***************************************************************!*\
  !*** ./node_modules/vega-transforms/src/util/AggregateOps.js ***!
  \***************************************************************/
/*! exports provided: measureName, AggregateOps, ValidAggregateOps, createMeasure, compileMeasures */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "measureName", function() { return measureName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AggregateOps", function() { return AggregateOps; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ValidAggregateOps", function() { return ValidAggregateOps; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createMeasure", function() { return createMeasure; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "compileMeasures", function() { return compileMeasures; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");


function measureName(op, field, as) {
  return as || (op + (!field ? '' : '_' + field));
}

var AggregateOps = {
  'values': measure({
    name: 'values',
    init: 'cell.store = true;',
    set:  'cell.data.values()', idx: -1
  }),
  'count': measure({
    name: 'count',
    set:  'cell.num'
  }),
  '__count__': measure({
    name: 'count',
    set:  'this.missing + this.valid'
  }),
  'missing': measure({
    name: 'missing',
    set:  'this.missing'
  }),
  'valid': measure({
    name: 'valid',
    set:  'this.valid'
  }),
  'sum': measure({
    name: 'sum',
    init: 'this.sum = 0;',
    add:  'this.sum += +v;',
    rem:  'this.sum -= v;',
    set:  'this.sum'
  }),
  'mean': measure({
    name: 'mean',
    init: 'this.mean = 0;',
    add:  'var d = v - this.mean; this.mean += d / this.valid;',
    rem:  'var d = v - this.mean; this.mean -= this.valid ? d / this.valid : this.mean;',
    set:  'this.valid ? this.mean : undefined'
  }),
  'average': measure({
    name: 'average',
    set:  'this.valid ? this.mean : undefined',
    req:  ['mean'], idx: 1
  }),
  'variance': measure({
    name: 'variance',
    init: 'this.dev = 0;',
    add:  'this.dev += d * (v - this.mean);',
    rem:  'this.dev -= d * (v - this.mean);',
    set:  'this.valid > 1 ? this.dev / (this.valid-1) : undefined',
    req:  ['mean'], idx: 1
  }),
  'variancep': measure({
    name: 'variancep',
    set:  'this.valid > 1 ? this.dev / this.valid : undefined',
    req:  ['variance'], idx: 2
  }),
  'stdev': measure({
    name: 'stdev',
    set:  'this.valid > 1 ? Math.sqrt(this.dev / (this.valid-1)) : undefined',
    req:  ['variance'], idx: 2
  }),
  'stdevp': measure({
    name: 'stdevp',
    set:  'this.valid > 1 ? Math.sqrt(this.dev / this.valid) : undefined',
    req:  ['variance'], idx: 2
  }),
  'stderr': measure({
    name: 'stderr',
    set:  'this.valid > 1 ? Math.sqrt(this.dev / (this.valid * (this.valid-1))) : undefined',
    req:  ['variance'], idx: 2
  }),
  'distinct': measure({
    name: 'distinct',
    set:  'cell.data.distinct(this.get)',
    req:  ['values'], idx: 3
  }),
  'ci0': measure({
    name: 'ci0',
    set:  'cell.data.ci0(this.get)',
    req:  ['values'], idx: 3
  }),
  'ci1': measure({
    name: 'ci1',
    set:  'cell.data.ci1(this.get)',
    req:  ['values'], idx: 3
  }),
  'median': measure({
    name: 'median',
    set:  'cell.data.q2(this.get)',
    req:  ['values'], idx: 3
  }),
  'q1': measure({
    name: 'q1',
    set:  'cell.data.q1(this.get)',
    req:  ['values'], idx: 3
  }),
  'q3': measure({
    name: 'q3',
    set:  'cell.data.q3(this.get)',
    req:  ['values'], idx: 3
  }),
  'argmin': measure({
    name: 'argmin',
    init: 'this.argmin = undefined;',
    add:  'if (v < this.min) this.argmin = t;',
    rem:  'if (v <= this.min) this.argmin = undefined;',
    set:  'this.argmin || cell.data.argmin(this.get)',
    req:  ['min'], str: ['values'], idx: 3
  }),
  'argmax': measure({
    name: 'argmax',
    init: 'this.argmax = undefined;',
    add:  'if (v > this.max) this.argmax = t;',
    rem:  'if (v >= this.max) this.argmax = undefined;',
    set:  'this.argmax || cell.data.argmax(this.get)',
    req:  ['max'], str: ['values'], idx: 3
  }),
  'min': measure({
    name: 'min',
    init: 'this.min = undefined;',
    add:  'if (v < this.min || this.min === undefined) this.min = v;',
    rem:  'if (v <= this.min) this.min = NaN;',
    set:  'this.min = (isNaN(this.min) ? cell.data.min(this.get) : this.min)',
    str:  ['values'], idx: 4
  }),
  'max': measure({
    name: 'max',
    init: 'this.max = undefined;',
    add:  'if (v > this.max || this.max === undefined) this.max = v;',
    rem:  'if (v >= this.max) this.max = NaN;',
    set:  'this.max = (isNaN(this.max) ? cell.data.max(this.get) : this.max)',
    str:  ['values'], idx: 4
  })
};

var ValidAggregateOps = Object.keys(AggregateOps);

function createMeasure(op, name) {
  return AggregateOps[op](name);
}

function measure(base) {
  return function(out) {
    var m = Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["extend"])({init:'', add:'', rem:'', idx:0}, base);
    m.out = out || base.name;
    return m;
  };
}

function compareIndex(a, b) {
  return a.idx - b.idx;
}

function resolve(agg, stream) {
  function collect(m, a) {
    function helper(r) { if (!m[r]) collect(m, m[r] = AggregateOps[r]()); }
    if (a.req) a.req.forEach(helper);
    if (stream && a.str) a.str.forEach(helper);
    return m;
  }
  var map = agg.reduce(
    collect,
    agg.reduce(function(m, a) {
      m[a.name] = a;
      return m;
    }, {})
  );
  var values = [], key;
  for (key in map) values.push(map[key]);
  return values.sort(compareIndex);
}

function compileMeasures(agg, field) {
  var get = field || vega_util__WEBPACK_IMPORTED_MODULE_0__["identity"],
      all = resolve(agg, true), // assume streaming removes may occur
      init = 'var cell = this.cell; this.valid = 0; this.missing = 0;',
      ctr = 'this.cell = cell; this.init();',
      add = 'if(v==null){++this.missing; return;} if(v!==v) return; ++this.valid;',
      rem = 'if(v==null){--this.missing; return;} if(v!==v) return; --this.valid;',
      set = 'var cell = this.cell;';

  all.forEach(function(a) {
    init += a.init;
    add += a.add;
    rem += a.rem;
  });
  agg.slice().sort(compareIndex).forEach(function(a) {
    set += 't[\'' + a.out + '\']=' + a.set + ';';
  });
  set += 'return t;';

  ctr = Function('cell', ctr);
  ctr.prototype.init = Function(init);
  ctr.prototype.add = Function('v', 't', add);
  ctr.prototype.rem = Function('v', 't', rem);
  ctr.prototype.set = Function('t', set);
  ctr.prototype.get = get;
  ctr.fields = agg.map(function(_) { return _.out; });
  return ctr;
}


/***/ }),

/***/ "./node_modules/vega-transforms/src/util/Distributions.js":
/*!****************************************************************!*\
  !*** ./node_modules/vega-transforms/src/util/Distributions.js ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return parse; });
/* harmony import */ var vega_statistics__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-statistics */ "./node_modules/vega-statistics/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");




var Distributions = {
  kde:     vega_statistics__WEBPACK_IMPORTED_MODULE_0__["randomKDE"],
  mixture: vega_statistics__WEBPACK_IMPORTED_MODULE_0__["randomMixture"],
  normal:  vega_statistics__WEBPACK_IMPORTED_MODULE_0__["randomNormal"],
  uniform: vega_statistics__WEBPACK_IMPORTED_MODULE_0__["randomUniform"]
};

var DISTRIBUTIONS = 'distributions',
    FUNCTION = 'function',
    FIELD = 'field';

/**
 * Parse a parameter object for a probability distribution.
 * @param {object} def - The distribution parameter object.
 * @param {function():Array<object>} - A method for requesting
 *   source data. Used for distributions (such as KDE) that
 *   require sample data points. This method will only be
 *   invoked if the 'from' parameter for a target data source
 *   is not provided. Typically this method returns backing
 *   source data for a Pulse object.
 * @return {object} - The output distribution object.
 */
function parse(def, data) {
  var func = def[FUNCTION];
  if (!Distributions.hasOwnProperty(func)) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["error"])('Unknown distribution function: ' + func);
  }

  var d = Distributions[func]();

  for (var name in def) {
    // if data field, extract values
    if (name === FIELD) {
      d.data((def.from || data()).map(def[name]));
    }

    // if distribution mixture, recurse to parse each definition
    else if (name === DISTRIBUTIONS) {
      d[name](def[name].map(function(_) { return parse(_, data); }));
    }

    // otherwise, simply set the parameter
    else if (typeof d[name] === FUNCTION) {
      d[name](def[name]);
    }
  }

  return d;
}


/***/ }),

/***/ "./node_modules/vega-transforms/src/util/SortedList.js":
/*!*************************************************************!*\
  !*** ./node_modules/vega-transforms/src/util/SortedList.js ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");


/* harmony default export */ __webpack_exports__["default"] = (function(idFunc, source, input) {
  var $ = idFunc,
      data = source || [],
      add = input || [],
      rem = {},
      cnt = 0;

  return {
    add: function(t) { add.push(t); },
    remove: function(t) { rem[$(t)] = ++cnt; },
    size: function() { return data.length; },
    data: function(compare, resort) {
      if (cnt) {
        data = data.filter(function(t) { return !rem[$(t)]; });
        rem = {};
        cnt = 0;
      }
      if (resort && compare) {
        data.sort(compare);
      }
      if (add.length) {
        data = compare
          ? Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["merge"])(compare, data, add.sort(compare))
          : data.concat(add);
        add = [];
      }
      return data;
    }
  }
});

/***/ }),

/***/ "./node_modules/vega-transforms/src/util/TupleStore.js":
/*!*************************************************************!*\
  !*** ./node_modules/vega-transforms/src/util/TupleStore.js ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return TupleStore; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_statistics__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-statistics */ "./node_modules/vega-statistics/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");




function TupleStore(key) {
  this._key = key ? Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["field"])(key) : vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["tupleid"];
  this.reset();
}

var prototype = TupleStore.prototype;

prototype.reset = function() {
  this._add = [];
  this._rem = [];
  this._ext = null;
  this._get = null;
  this._q = null;
};

prototype.add = function(v) {
  this._add.push(v);
};

prototype.rem = function(v) {
  this._rem.push(v);
};

prototype.values = function() {
  this._get = null;
  if (this._rem.length === 0) return this._add;

  var a = this._add,
      r = this._rem,
      k = this._key,
      n = a.length,
      m = r.length,
      x = Array(n - m),
      map = {}, i, j, v;

  // use unique key field to clear removed values
  for (i=0; i<m; ++i) {
    map[k(r[i])] = 1;
  }
  for (i=0, j=0; i<n; ++i) {
    if (map[k(v = a[i])]) {
      map[k(v)] = 0;
    } else {
      x[j++] = v;
    }
  }

  this._rem = [];
  return (this._add = x);
};

// memoizing statistics methods

prototype.distinct = function(get) {
  var v = this.values(),
      n = v.length,
      map = {},
      count = 0, s;

  while (--n >= 0) {
    s = get(v[n]) + '';
    if (!map.hasOwnProperty(s)) {
      map[s] = 1;
      ++count;
    }
  }

  return count;
};

prototype.extent = function(get) {
  if (this._get !== get || !this._ext) {
    var v = this.values(),
        i = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["extentIndex"])(v, get);
    this._ext = [v[i[0]], v[i[1]]];
    this._get = get;
  }
  return this._ext;
};

prototype.argmin = function(get) {
  return this.extent(get)[0] || {};
};

prototype.argmax = function(get) {
  return this.extent(get)[1] || {};
};

prototype.min = function(get) {
  var m = this.extent(get)[0];
  return m != null ? get(m) : undefined;
};

prototype.max = function(get) {
  var m = this.extent(get)[1];
  return m != null ? get(m) : undefined;
};

prototype.quartile = function(get) {
  if (this._get !== get || !this._q) {
    this._q = Object(vega_statistics__WEBPACK_IMPORTED_MODULE_1__["quartiles"])(this.values(), get);
    this._get = get;
  }
  return this._q;
};

prototype.q1 = function(get) {
  return this.quartile(get)[0];
};

prototype.q2 = function(get) {
  return this.quartile(get)[1];
};

prototype.q3 = function(get) {
  return this.quartile(get)[2];
};

prototype.ci = function(get) {
  if (this._get !== get || !this._ci) {
    this._ci = Object(vega_statistics__WEBPACK_IMPORTED_MODULE_1__["bootstrapCI"])(this.values(), 1000, 0.05, get);
    this._get = get;
  }
  return this._ci;
};

prototype.ci0 = function(get) {
  return this.ci(get)[0];
};

prototype.ci1 = function(get) {
  return this.ci(get)[1];
};


/***/ }),

/***/ "./node_modules/vega-transforms/src/util/WindowOps.js":
/*!************************************************************!*\
  !*** ./node_modules/vega-transforms/src/util/WindowOps.js ***!
  \************************************************************/
/*! exports provided: WindowOp, WindowOps, ValidWindowOps */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WindowOp", function() { return WindowOp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WindowOps", function() { return WindowOps; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ValidWindowOps", function() { return ValidWindowOps; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");


function WindowOp(op, field, param, as) {
  let fn = WindowOps[op](field, param);
  return {
    init:   fn.init || vega_util__WEBPACK_IMPORTED_MODULE_0__["zero"],
    update: function(w, t) { t[as] = fn.next(w); }
  };
}

const WindowOps = {
  row_number: function() {
    return {
      next: w => w.index + 1
    };
  },
  rank: function() {
    let rank;
    return {
      init: () => rank = 1,
      next: w => {
        let i = w.index,
            data = w.data;
        return (i && w.compare(data[i - 1], data[i])) ? (rank = i + 1) : rank;
      }
    };
  },
  dense_rank: function() {
    let drank;
    return {
      init: () => drank = 1,
      next: w => {
        let i = w.index,
            d = w.data;
        return (i && w.compare(d[i - 1], d[i])) ? ++drank : drank;
      }
    };
  },
  percent_rank: function() {
    let rank = WindowOps.rank(),
        next = rank.next;
    return {
      init: rank.init,
      next: w => (next(w) - 1) / (w.data.length - 1)
    };
  },
  cume_dist: function() {
    let cume;
    return {
      init: () => cume = 0,
      next: w => {
        let i = w.index,
            d = w.data,
            c = w.compare;
        if (cume < i) {
          while (i + 1 < d.length && !c(d[i], d[i + 1])) ++i;
          cume = i;
        }
        return (1 + cume) / d.length;
      }
    };
  },
  ntile: function(field, num) {
    num = +num;
    if (!(num > 0)) Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["error"])('ntile num must be greater than zero.');
    let cume = WindowOps.cume_dist(),
        next = cume.next;
    return {
      init: cume.init,
      next: w => Math.ceil(num * next(w))
    };
  },

  lag: function(field, offset) {
    offset = +offset || 1;
    return {
      next: w => {
        let i = w.index - offset;
        return i >= 0 ? field(w.data[i]) : null;
      }
    };
  },
  lead: function(field, offset) {
    offset = +offset || 1;
    return {
      next: w => {
        let i = w.index + offset,
            d = w.data;
        return i < d.length ? field(d[i]) : null;
      }
    };
  },

  first_value: function(field) {
    return {
      next: w => field(w.data[w.i0])
    };
  },
  last_value: function(field) {
    return {
      next: w => field(w.data[w.i1 - 1])
    }
  },
  nth_value: function(field, nth) {
    nth = +nth;
    if (!(nth > 0)) Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["error"])('nth_value nth must be greater than zero.');
    return {
      next: w => {
        let i = w.i0 + (nth - 1);
        return i < w.i1 ? field(w.data[i]) : null;
      }
    }
  },

  prev_value: function(field) {
    let prev = null;
    return {
      next: w => {
        let v = field(w.data[w.index]);
        return v != null ? (prev = v) : prev;
      }
    }
  },
  next_value: function(field) {
    let v = null,
        i = -1;
    return {
      next: w => {
        let d = w.data;
        return w.index <= i ? v
          : (i = find(field, d, w.index)) < 0
            ? (i = d.length, v = null)
            : (v = field(d[i]));
      }
    };
  },

};

function find(field, data, index) {
  for (let n = data.length; index < n; ++index) {
    let v = field(data[index]);
    if (v != null) return index;
  }
  return -1;
}

var ValidWindowOps = Object.keys(WindowOps);


/***/ }),

/***/ "./node_modules/vega-transforms/src/util/WindowState.js":
/*!**************************************************************!*\
  !*** ./node_modules/vega-transforms/src/util/WindowState.js ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return WindowState; });
/* harmony import */ var _AggregateOps__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AggregateOps */ "./node_modules/vega-transforms/src/util/AggregateOps.js");
/* harmony import */ var _TupleStore__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TupleStore */ "./node_modules/vega-transforms/src/util/TupleStore.js");
/* harmony import */ var _WindowOps__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./WindowOps */ "./node_modules/vega-transforms/src/util/WindowOps.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");





function WindowState(_) {
  let self = this,
      ops = Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["array"])(_.ops),
      fields = Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["array"])(_.fields),
      params = Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["array"])(_.params),
      as = Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["array"])(_.as),
      outputs = self.outputs = [],
      windows = self.windows = [],
      inputs = {},
      map = {},
      countOnly = true,
      counts = [],
      measures = [];

  function visitInputs(f) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["array"])(Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["accessorFields"])(f)).forEach(_ => inputs[_] = 1);
  }
  visitInputs(_.sort);

  ops.forEach(function(op, i) {
    let field = fields[i],
        mname = Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["accessorName"])(field),
        name = Object(_AggregateOps__WEBPACK_IMPORTED_MODULE_0__["measureName"])(op, mname, as[i]);

    visitInputs(field);
    outputs.push(name);

    // Window operation
    if (_WindowOps__WEBPACK_IMPORTED_MODULE_2__["WindowOps"].hasOwnProperty(op)) {
      windows.push(Object(_WindowOps__WEBPACK_IMPORTED_MODULE_2__["WindowOp"])(op, fields[i], params[i], name));
    }

    // Aggregate operation
    else {
      if (field == null && op !== 'count') {
        Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["error"])('Null aggregate field specified.');
      }
      if (op === 'count') {
        counts.push(name);
        return;
      }

      countOnly = false;
      let m = map[mname];
      if (!m) {
        m = (map[mname] = []);
        m.field = field;
        measures.push(m);
      }
      m.push(Object(_AggregateOps__WEBPACK_IMPORTED_MODULE_0__["createMeasure"])(op, name));
    }
  });

  if (counts.length || measures.length) {
    self.cell = cell(measures, counts, countOnly);
  }

  self.inputs = Object.keys(inputs);
}

const prototype = WindowState.prototype;

prototype.init = function() {
  this.windows.forEach(_ => _.init());
  if (this.cell) this.cell.init();
};

prototype.update = function(w, t) {
  let self = this,
      cell = self.cell,
      wind = self.windows,
      data = w.data,
      m = wind && wind.length,
      j;

  if (cell) {
    for (j=w.p0; j<w.i0; ++j) cell.rem(data[j]);
    for (j=w.p1; j<w.i1; ++j) cell.add(data[j]);
    cell.set(t);
  }
  for (j=0; j<m; ++j) wind[j].update(w, t);
};

function cell(measures, counts, countOnly) {
  measures = measures.map(m => Object(_AggregateOps__WEBPACK_IMPORTED_MODULE_0__["compileMeasures"])(m, m.field));

  let cell = {
    num:   0,
    agg:   null,
    store: false,
    count: counts
  };

  if (!countOnly) {
    var n = measures.length,
        a = cell.agg = Array(n),
        i = 0;
    for (; i<n; ++i) a[i] = new measures[i](cell);
  }

  if (cell.store) {
    var store = cell.data = new _TupleStore__WEBPACK_IMPORTED_MODULE_1__["default"]();
  }

  cell.add = function(t) {
    cell.num += 1;
    if (countOnly) return;
    if (store) store.add(t);
    for (let i=0; i<n; ++i) {
      a[i].add(a[i].get(t), t);
    }
  };

  cell.rem = function(t) {
    cell.num -= 1;
    if (countOnly) return;
    if (store) store.rem(t);
    for (let i=0; i<n; ++i) {
      a[i].rem(a[i].get(t), t);
    }
  };

  cell.set = function(t) {
    let i, n;

    // consolidate stored values
    if (store) store.values();

    // update tuple properties
    for (i=0, n=counts.length; i<n; ++i) t[counts[i]] = cell.num;
    if (!countOnly) for (i=0, n=a.length; i<n; ++i) a[i].set(t);
  };

  cell.init = function() {
    cell.num = 0;
    if (store) store.reset();
    for (let i=0; i<n; ++i) a[i].init();
  };

  return cell;
}


/***/ }),

/***/ "./node_modules/vega-transforms/src/util/util.js":
/*!*******************************************************!*\
  !*** ./node_modules/vega-transforms/src/util/util.js ***!
  \*******************************************************/
/*! exports provided: fieldNames */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fieldNames", function() { return fieldNames; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");


// use either provided alias or accessor field name
function fieldNames(fields, as) {
  if (!fields) return null;
  return fields.map(function(f, i) {
    return as[i] || Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["accessorName"])(f);
  });
}


/***/ }),

/***/ "./node_modules/vega-util/index.js":
/*!*****************************************!*\
  !*** ./node_modules/vega-util/index.js ***!
  \*****************************************/
/*! exports provided: accessor, accessorName, accessorFields, id, identity, zero, one, truthy, falsy, logger, None, Error, Warn, Info, Debug, panLinear, panLog, panPow, panSymlog, zoomLinear, zoomLog, zoomPow, zoomSymlog, quarter, utcquarter, array, clampRange, compare, constant, debounce, error, extend, extent, extentIndex, fastmap, field, flush, inherits, inrange, isArray, isBoolean, isDate, isFunction, isNumber, isObject, isRegExp, isString, key, lerp, merge, pad, peek, repeat, span, splitAccessPath, stringValue, toBoolean, toDate, toNumber, toString, toSet, truncate, visitArray */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _src_accessor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/accessor */ "./node_modules/vega-util/src/accessor.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "accessor", function() { return _src_accessor__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "accessorName", function() { return _src_accessor__WEBPACK_IMPORTED_MODULE_0__["accessorName"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "accessorFields", function() { return _src_accessor__WEBPACK_IMPORTED_MODULE_0__["accessorFields"]; });

/* harmony import */ var _src_accessors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/accessors */ "./node_modules/vega-util/src/accessors.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "id", function() { return _src_accessors__WEBPACK_IMPORTED_MODULE_1__["id"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "identity", function() { return _src_accessors__WEBPACK_IMPORTED_MODULE_1__["identity"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "zero", function() { return _src_accessors__WEBPACK_IMPORTED_MODULE_1__["zero"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "one", function() { return _src_accessors__WEBPACK_IMPORTED_MODULE_1__["one"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "truthy", function() { return _src_accessors__WEBPACK_IMPORTED_MODULE_1__["truthy"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "falsy", function() { return _src_accessors__WEBPACK_IMPORTED_MODULE_1__["falsy"]; });

/* harmony import */ var _src_logger__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/logger */ "./node_modules/vega-util/src/logger.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "logger", function() { return _src_logger__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "None", function() { return _src_logger__WEBPACK_IMPORTED_MODULE_2__["None"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Error", function() { return _src_logger__WEBPACK_IMPORTED_MODULE_2__["Error"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Warn", function() { return _src_logger__WEBPACK_IMPORTED_MODULE_2__["Warn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Info", function() { return _src_logger__WEBPACK_IMPORTED_MODULE_2__["Info"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Debug", function() { return _src_logger__WEBPACK_IMPORTED_MODULE_2__["Debug"]; });

/* harmony import */ var _src_transform__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/transform */ "./node_modules/vega-util/src/transform.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "panLinear", function() { return _src_transform__WEBPACK_IMPORTED_MODULE_3__["panLinear"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "panLog", function() { return _src_transform__WEBPACK_IMPORTED_MODULE_3__["panLog"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "panPow", function() { return _src_transform__WEBPACK_IMPORTED_MODULE_3__["panPow"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "panSymlog", function() { return _src_transform__WEBPACK_IMPORTED_MODULE_3__["panSymlog"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "zoomLinear", function() { return _src_transform__WEBPACK_IMPORTED_MODULE_3__["zoomLinear"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "zoomLog", function() { return _src_transform__WEBPACK_IMPORTED_MODULE_3__["zoomLog"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "zoomPow", function() { return _src_transform__WEBPACK_IMPORTED_MODULE_3__["zoomPow"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "zoomSymlog", function() { return _src_transform__WEBPACK_IMPORTED_MODULE_3__["zoomSymlog"]; });

/* harmony import */ var _src_quarter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./src/quarter */ "./node_modules/vega-util/src/quarter.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "quarter", function() { return _src_quarter__WEBPACK_IMPORTED_MODULE_4__["quarter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcquarter", function() { return _src_quarter__WEBPACK_IMPORTED_MODULE_4__["utcquarter"]; });

/* harmony import */ var _src_array__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./src/array */ "./node_modules/vega-util/src/array.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "array", function() { return _src_array__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _src_clampRange__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./src/clampRange */ "./node_modules/vega-util/src/clampRange.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "clampRange", function() { return _src_clampRange__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony import */ var _src_compare__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./src/compare */ "./node_modules/vega-util/src/compare.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "compare", function() { return _src_compare__WEBPACK_IMPORTED_MODULE_7__["default"]; });

/* harmony import */ var _src_constant__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./src/constant */ "./node_modules/vega-util/src/constant.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "constant", function() { return _src_constant__WEBPACK_IMPORTED_MODULE_8__["default"]; });

/* harmony import */ var _src_debounce__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./src/debounce */ "./node_modules/vega-util/src/debounce.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "debounce", function() { return _src_debounce__WEBPACK_IMPORTED_MODULE_9__["default"]; });

/* harmony import */ var _src_error__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./src/error */ "./node_modules/vega-util/src/error.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "error", function() { return _src_error__WEBPACK_IMPORTED_MODULE_10__["default"]; });

/* harmony import */ var _src_extend__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./src/extend */ "./node_modules/vega-util/src/extend.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return _src_extend__WEBPACK_IMPORTED_MODULE_11__["default"]; });

/* harmony import */ var _src_extent__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./src/extent */ "./node_modules/vega-util/src/extent.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "extent", function() { return _src_extent__WEBPACK_IMPORTED_MODULE_12__["default"]; });

/* harmony import */ var _src_extentIndex__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./src/extentIndex */ "./node_modules/vega-util/src/extentIndex.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "extentIndex", function() { return _src_extentIndex__WEBPACK_IMPORTED_MODULE_13__["default"]; });

/* harmony import */ var _src_fastmap__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./src/fastmap */ "./node_modules/vega-util/src/fastmap.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "fastmap", function() { return _src_fastmap__WEBPACK_IMPORTED_MODULE_14__["default"]; });

/* harmony import */ var _src_field__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./src/field */ "./node_modules/vega-util/src/field.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "field", function() { return _src_field__WEBPACK_IMPORTED_MODULE_15__["default"]; });

/* harmony import */ var _src_flush__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./src/flush */ "./node_modules/vega-util/src/flush.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "flush", function() { return _src_flush__WEBPACK_IMPORTED_MODULE_16__["default"]; });

/* harmony import */ var _src_inherits__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./src/inherits */ "./node_modules/vega-util/src/inherits.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "inherits", function() { return _src_inherits__WEBPACK_IMPORTED_MODULE_17__["default"]; });

/* harmony import */ var _src_inrange__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./src/inrange */ "./node_modules/vega-util/src/inrange.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "inrange", function() { return _src_inrange__WEBPACK_IMPORTED_MODULE_18__["default"]; });

/* harmony import */ var _src_isArray__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./src/isArray */ "./node_modules/vega-util/src/isArray.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isArray", function() { return _src_isArray__WEBPACK_IMPORTED_MODULE_19__["default"]; });

/* harmony import */ var _src_isBoolean__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./src/isBoolean */ "./node_modules/vega-util/src/isBoolean.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isBoolean", function() { return _src_isBoolean__WEBPACK_IMPORTED_MODULE_20__["default"]; });

/* harmony import */ var _src_isDate__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./src/isDate */ "./node_modules/vega-util/src/isDate.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isDate", function() { return _src_isDate__WEBPACK_IMPORTED_MODULE_21__["default"]; });

/* harmony import */ var _src_isFunction__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./src/isFunction */ "./node_modules/vega-util/src/isFunction.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isFunction", function() { return _src_isFunction__WEBPACK_IMPORTED_MODULE_22__["default"]; });

/* harmony import */ var _src_isNumber__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./src/isNumber */ "./node_modules/vega-util/src/isNumber.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isNumber", function() { return _src_isNumber__WEBPACK_IMPORTED_MODULE_23__["default"]; });

/* harmony import */ var _src_isObject__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./src/isObject */ "./node_modules/vega-util/src/isObject.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isObject", function() { return _src_isObject__WEBPACK_IMPORTED_MODULE_24__["default"]; });

/* harmony import */ var _src_isRegExp__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./src/isRegExp */ "./node_modules/vega-util/src/isRegExp.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isRegExp", function() { return _src_isRegExp__WEBPACK_IMPORTED_MODULE_25__["default"]; });

/* harmony import */ var _src_isString__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./src/isString */ "./node_modules/vega-util/src/isString.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isString", function() { return _src_isString__WEBPACK_IMPORTED_MODULE_26__["default"]; });

/* harmony import */ var _src_key__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./src/key */ "./node_modules/vega-util/src/key.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "key", function() { return _src_key__WEBPACK_IMPORTED_MODULE_27__["default"]; });

/* harmony import */ var _src_lerp__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./src/lerp */ "./node_modules/vega-util/src/lerp.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "lerp", function() { return _src_lerp__WEBPACK_IMPORTED_MODULE_28__["default"]; });

/* harmony import */ var _src_merge__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./src/merge */ "./node_modules/vega-util/src/merge.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "merge", function() { return _src_merge__WEBPACK_IMPORTED_MODULE_29__["default"]; });

/* harmony import */ var _src_pad__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./src/pad */ "./node_modules/vega-util/src/pad.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pad", function() { return _src_pad__WEBPACK_IMPORTED_MODULE_30__["default"]; });

/* harmony import */ var _src_peek__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./src/peek */ "./node_modules/vega-util/src/peek.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "peek", function() { return _src_peek__WEBPACK_IMPORTED_MODULE_31__["default"]; });

/* harmony import */ var _src_repeat__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./src/repeat */ "./node_modules/vega-util/src/repeat.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "repeat", function() { return _src_repeat__WEBPACK_IMPORTED_MODULE_32__["default"]; });

/* harmony import */ var _src_span__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./src/span */ "./node_modules/vega-util/src/span.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "span", function() { return _src_span__WEBPACK_IMPORTED_MODULE_33__["default"]; });

/* harmony import */ var _src_splitAccessPath__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./src/splitAccessPath */ "./node_modules/vega-util/src/splitAccessPath.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "splitAccessPath", function() { return _src_splitAccessPath__WEBPACK_IMPORTED_MODULE_34__["default"]; });

/* harmony import */ var _src_stringValue__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./src/stringValue */ "./node_modules/vega-util/src/stringValue.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stringValue", function() { return _src_stringValue__WEBPACK_IMPORTED_MODULE_35__["default"]; });

/* harmony import */ var _src_toBoolean__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./src/toBoolean */ "./node_modules/vega-util/src/toBoolean.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toBoolean", function() { return _src_toBoolean__WEBPACK_IMPORTED_MODULE_36__["default"]; });

/* harmony import */ var _src_toDate__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./src/toDate */ "./node_modules/vega-util/src/toDate.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toDate", function() { return _src_toDate__WEBPACK_IMPORTED_MODULE_37__["default"]; });

/* harmony import */ var _src_toNumber__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./src/toNumber */ "./node_modules/vega-util/src/toNumber.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toNumber", function() { return _src_toNumber__WEBPACK_IMPORTED_MODULE_38__["default"]; });

/* harmony import */ var _src_toString__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./src/toString */ "./node_modules/vega-util/src/toString.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toString", function() { return _src_toString__WEBPACK_IMPORTED_MODULE_39__["default"]; });

/* harmony import */ var _src_toSet__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./src/toSet */ "./node_modules/vega-util/src/toSet.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toSet", function() { return _src_toSet__WEBPACK_IMPORTED_MODULE_40__["default"]; });

/* harmony import */ var _src_truncate__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./src/truncate */ "./node_modules/vega-util/src/truncate.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "truncate", function() { return _src_truncate__WEBPACK_IMPORTED_MODULE_41__["default"]; });

/* harmony import */ var _src_visitArray__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./src/visitArray */ "./node_modules/vega-util/src/visitArray.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "visitArray", function() { return _src_visitArray__WEBPACK_IMPORTED_MODULE_42__["default"]; });



















































/***/ }),

/***/ "./node_modules/vega-util/src/accessor.js":
/*!************************************************!*\
  !*** ./node_modules/vega-util/src/accessor.js ***!
  \************************************************/
/*! exports provided: default, accessorName, accessorFields */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "accessorName", function() { return accessorName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "accessorFields", function() { return accessorFields; });
/* harmony default export */ __webpack_exports__["default"] = (function(fn, fields, name) {
  fn.fields = fields || [];
  fn.fname = name;
  return fn;
});

function accessorName(fn) {
  return fn == null ? null : fn.fname;
}

function accessorFields(fn) {
  return fn == null ? null : fn.fields;
}


/***/ }),

/***/ "./node_modules/vega-util/src/accessors.js":
/*!*************************************************!*\
  !*** ./node_modules/vega-util/src/accessors.js ***!
  \*************************************************/
/*! exports provided: id, identity, zero, one, truthy, falsy */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "id", function() { return id; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "identity", function() { return identity; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "zero", function() { return zero; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "one", function() { return one; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "truthy", function() { return truthy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "falsy", function() { return falsy; });
/* harmony import */ var _accessor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./accessor */ "./node_modules/vega-util/src/accessor.js");
/* harmony import */ var _field__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./field */ "./node_modules/vega-util/src/field.js");



var empty = [];

var id = Object(_field__WEBPACK_IMPORTED_MODULE_1__["default"])('id');

var identity = Object(_accessor__WEBPACK_IMPORTED_MODULE_0__["default"])(function(_) { return _; }, empty, 'identity');

var zero = Object(_accessor__WEBPACK_IMPORTED_MODULE_0__["default"])(function() { return 0; }, empty, 'zero');

var one = Object(_accessor__WEBPACK_IMPORTED_MODULE_0__["default"])(function() { return 1; }, empty, 'one');

var truthy = Object(_accessor__WEBPACK_IMPORTED_MODULE_0__["default"])(function() { return true; }, empty, 'true');

var falsy = Object(_accessor__WEBPACK_IMPORTED_MODULE_0__["default"])(function() { return false; }, empty, 'false');


/***/ }),

/***/ "./node_modules/vega-util/src/array.js":
/*!*********************************************!*\
  !*** ./node_modules/vega-util/src/array.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _isArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isArray */ "./node_modules/vega-util/src/isArray.js");


/* harmony default export */ __webpack_exports__["default"] = (function(_) {
  return _ != null ? (Object(_isArray__WEBPACK_IMPORTED_MODULE_0__["default"])(_) ? _ : [_]) : [];
});


/***/ }),

/***/ "./node_modules/vega-util/src/clampRange.js":
/*!**************************************************!*\
  !*** ./node_modules/vega-util/src/clampRange.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * Span-preserving range clamp. If the span of the input range is less
 * than (max - min) and an endpoint exceeds either the min or max value,
 * the range is translated such that the span is preserved and one
 * endpoint touches the boundary of the min/max range.
 * If the span exceeds (max - min), the range [min, max] is returned.
 */
/* harmony default export */ __webpack_exports__["default"] = (function(range, min, max) {
  var lo = range[0],
      hi = range[1],
      span;

  if (hi < lo) {
    span = hi;
    hi = lo;
    lo = span;
  }
  span = hi - lo;

  return span >= (max - min)
    ? [min, max]
    : [
        (lo = Math.min(Math.max(lo, min), max - span)),
        lo + span
      ];
});


/***/ }),

/***/ "./node_modules/vega-util/src/compare.js":
/*!***********************************************!*\
  !*** ./node_modules/vega-util/src/compare.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _accessor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./accessor */ "./node_modules/vega-util/src/accessor.js");
/* harmony import */ var _array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./array */ "./node_modules/vega-util/src/array.js");
/* harmony import */ var _isFunction__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./isFunction */ "./node_modules/vega-util/src/isFunction.js");
/* harmony import */ var _splitAccessPath__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./splitAccessPath */ "./node_modules/vega-util/src/splitAccessPath.js");
/* harmony import */ var _stringValue__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./stringValue */ "./node_modules/vega-util/src/stringValue.js");






/* harmony default export */ __webpack_exports__["default"] = (function(fields, orders) {
  var idx = [],
      cmp = (fields = Object(_array__WEBPACK_IMPORTED_MODULE_1__["default"])(fields)).map(function(f, i) {
        if (f == null) {
          return null;
        } else {
          idx.push(i);
          return Object(_isFunction__WEBPACK_IMPORTED_MODULE_2__["default"])(f) ? f
            : Object(_splitAccessPath__WEBPACK_IMPORTED_MODULE_3__["default"])(f).map(_stringValue__WEBPACK_IMPORTED_MODULE_4__["default"]).join('][');
        }
      }),
      n = idx.length - 1,
      ord = Object(_array__WEBPACK_IMPORTED_MODULE_1__["default"])(orders),
      code = 'var u,v;return ',
      i, j, f, u, v, d, t, lt, gt;

  if (n < 0) return null;

  for (j=0; j<=n; ++j) {
    i = idx[j];
    f = cmp[i];

    if (Object(_isFunction__WEBPACK_IMPORTED_MODULE_2__["default"])(f)) {
      d = 'f' + i;
      u = '(u=this.' + d + '(a))';
      v = '(v=this.' + d + '(b))';
      (t = t || {})[d] = f;
    } else {
      u = '(u=a['+f+'])';
      v = '(v=b['+f+'])';
    }

    d = '((v=v instanceof Date?+v:v),(u=u instanceof Date?+u:u))';

    if (ord[i] !== 'descending') {
      gt = 1;
      lt = -1;
    } else {
      gt = -1;
      lt = 1;
    }

    code += '(' + u+'<'+v+'||u==null)&&v!=null?' + lt
      + ':(u>v||v==null)&&u!=null?' + gt
      + ':'+d+'!==u&&v===v?' + lt
      + ':v!==v&&u===u?' + gt
      + (i < n ? ':' : ':0');
  }

  f = Function('a', 'b', code + ';');
  if (t) f = f.bind(t);

  fields = fields.reduce(function(map, field) {
    if (Object(_isFunction__WEBPACK_IMPORTED_MODULE_2__["default"])(field)) {
      (Object(_accessor__WEBPACK_IMPORTED_MODULE_0__["accessorFields"])(field) || []).forEach(function(_) { map[_] = 1; });
    } else if (field != null) {
      map[field + ''] = 1;
    }
    return map;
  }, {});

  return Object(_accessor__WEBPACK_IMPORTED_MODULE_0__["default"])(f, Object.keys(fields));
});


/***/ }),

/***/ "./node_modules/vega-util/src/constant.js":
/*!************************************************!*\
  !*** ./node_modules/vega-util/src/constant.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _isFunction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isFunction */ "./node_modules/vega-util/src/isFunction.js");


/* harmony default export */ __webpack_exports__["default"] = (function(_) {
  return Object(_isFunction__WEBPACK_IMPORTED_MODULE_0__["default"])(_) ? _ : function() { return _; };
});


/***/ }),

/***/ "./node_modules/vega-util/src/debounce.js":
/*!************************************************!*\
  !*** ./node_modules/vega-util/src/debounce.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(delay, handler) {
  var tid, evt;

  function callback() {
    handler(evt);
    tid = evt = null;
  }

  return function(e) {
    evt = e;
    if (tid) clearTimeout(tid);
    tid = setTimeout(callback, delay);
  };
});


/***/ }),

/***/ "./node_modules/vega-util/src/error.js":
/*!*********************************************!*\
  !*** ./node_modules/vega-util/src/error.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(message) {
  throw Error(message);
});


/***/ }),

/***/ "./node_modules/vega-util/src/extend.js":
/*!**********************************************!*\
  !*** ./node_modules/vega-util/src/extend.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(_) {
  for (var x, k, i=1, len=arguments.length; i<len; ++i) {
    x = arguments[i];
    for (k in x) { _[k] = x[k]; }
  }
  return _;
});


/***/ }),

/***/ "./node_modules/vega-util/src/extent.js":
/*!**********************************************!*\
  !*** ./node_modules/vega-util/src/extent.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * Return an array with minimum and maximum values, in the
 * form [min, max]. Ignores null, undefined, and NaN values.
 */
/* harmony default export */ __webpack_exports__["default"] = (function(array, f) {
  var i = 0, n, v, min, max;

  if (array && (n = array.length)) {
    if (f == null) {
      // find first valid value
      for (v = array[i]; v == null || v !== v; v = array[++i]);
      min = max = v;

      // visit all other values
      for (; i<n; ++i) {
        v = array[i];
        // skip null/undefined; NaN will fail all comparisons
        if (v != null) {
          if (v < min) min = v;
          if (v > max) max = v;
        }
      }
    } else {
      // find first valid value
      for (v = f(array[i]); v == null || v !== v; v = f(array[++i]));
      min = max = v;

      // visit all other values
      for (; i<n; ++i) {
        v = f(array[i]);
        // skip null/undefined; NaN will fail all comparisons
        if (v != null) {
          if (v < min) min = v;
          if (v > max) max = v;
        }
      }
    }
  }

  return [min, max];
});


/***/ }),

/***/ "./node_modules/vega-util/src/extentIndex.js":
/*!***************************************************!*\
  !*** ./node_modules/vega-util/src/extentIndex.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(array, f) {
  var i = -1,
      n = array.length,
      a, b, c, u, v;

  if (f == null) {
    while (++i < n) {
      b = array[i];
      if (b != null && b >= b) {
        a = c = b;
        break;
      }
    }
    u = v = i;
    while (++i < n) {
      b = array[i];
      if (b != null) {
        if (a > b) {
          a = b;
          u = i;
        }
        if (c < b) {
          c = b;
          v = i;
        }
      }
    }
  } else {
    while (++i < n) {
      b = f(array[i], i, array);
      if (b != null && b >= b) {
        a = c = b;
        break;
      }
    }
    u = v = i;
    while (++i < n) {
      b = f(array[i], i, array);
      if (b != null) {
        if (a > b) {
          a = b;
          u = i;
        }
        if (c < b) {
          c = b;
          v = i;
        }
      }
    }
  }

  return [u, v];
});


/***/ }),

/***/ "./node_modules/vega-util/src/fastmap.js":
/*!***********************************************!*\
  !*** ./node_modules/vega-util/src/fastmap.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var NULL = {};

/* harmony default export */ __webpack_exports__["default"] = (function(input) {
  var obj = {},
      map,
      test;

  function has(key) {
    return obj.hasOwnProperty(key) && obj[key] !== NULL;
  }

  map = {
    size: 0,
    empty: 0,
    object: obj,
    has: has,
    get: function(key) {
      return has(key) ? obj[key] : undefined;
    },
    set: function(key, value) {
      if (!has(key)) {
        ++map.size;
        if (obj[key] === NULL) --map.empty;
      }
      obj[key] = value;
      return this;
    },
    delete: function(key) {
      if (has(key)) {
        --map.size;
        ++map.empty;
        obj[key] = NULL;
      }
      return this;
    },
    clear: function() {
      map.size = map.empty = 0;
      map.object = obj = {};
    },
    test: function(_) {
      if (arguments.length) {
        test = _;
        return map;
      } else {
        return test;
      }
    },
    clean: function() {
      var next = {},
          size = 0,
          key, value;
      for (key in obj) {
        value = obj[key];
        if (value !== NULL && (!test || !test(value))) {
          next[key] = value;
          ++size;
        }
      }
      map.size = size;
      map.empty = 0;
      map.object = (obj = next);
    }
  };

  if (input) Object.keys(input).forEach(function(key) {
    map.set(key, input[key]);
  });

  return map;
});


/***/ }),

/***/ "./node_modules/vega-util/src/field.js":
/*!*********************************************!*\
  !*** ./node_modules/vega-util/src/field.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _accessor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./accessor */ "./node_modules/vega-util/src/accessor.js");
/* harmony import */ var _splitAccessPath__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./splitAccessPath */ "./node_modules/vega-util/src/splitAccessPath.js");
/* harmony import */ var _stringValue__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./stringValue */ "./node_modules/vega-util/src/stringValue.js");




/* harmony default export */ __webpack_exports__["default"] = (function(field, name) {
  var path = Object(_splitAccessPath__WEBPACK_IMPORTED_MODULE_1__["default"])(field),
      code = 'return _[' + path.map(_stringValue__WEBPACK_IMPORTED_MODULE_2__["default"]).join('][') + '];';

  return Object(_accessor__WEBPACK_IMPORTED_MODULE_0__["default"])(
    Function('_', code),
    [(field = path.length===1 ? path[0] : field)],
    name || field
  );
});


/***/ }),

/***/ "./node_modules/vega-util/src/flush.js":
/*!*********************************************!*\
  !*** ./node_modules/vega-util/src/flush.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _peek__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./peek */ "./node_modules/vega-util/src/peek.js");


/* harmony default export */ __webpack_exports__["default"] = (function(range, value, threshold, left, right, center) {
  if (!threshold && threshold !== 0) return center;

  var a = range[0],
      b = Object(_peek__WEBPACK_IMPORTED_MODULE_0__["default"])(range),
      t = +threshold,
      l, r;

  // swap endpoints if range is reversed
  if (b < a) {
    l = a; a = b; b = l;
  }

  // compare value to endpoints
  l = Math.abs(value - a);
  r = Math.abs(b - value);

  // adjust if value is within threshold distance of endpoint
  return l < r && l <= t ? left : r <= t ? right : center;
});


/***/ }),

/***/ "./node_modules/vega-util/src/inherits.js":
/*!************************************************!*\
  !*** ./node_modules/vega-util/src/inherits.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(child, parent) {
  var proto = (child.prototype = Object.create(parent.prototype));
  proto.constructor = child;
  return proto;
});


/***/ }),

/***/ "./node_modules/vega-util/src/inrange.js":
/*!***********************************************!*\
  !*** ./node_modules/vega-util/src/inrange.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * Predicate that returns true if the value lies within the span
 * of the given range. The left and right flags control the use
 * of inclusive (true) or exclusive (false) comparisons.
 */
/* harmony default export */ __webpack_exports__["default"] = (function(value, range, left, right) {
  var r0 = range[0], r1 = range[range.length-1], t;
  if (r0 > r1) {
    t = r0;
    r0 = r1;
    r1 = t;
  }
  left = left === undefined || left;
  right = right === undefined || right;

  return (left ? r0 <= value : r0 < value) &&
    (right ? value <= r1 : value < r1);
});


/***/ }),

/***/ "./node_modules/vega-util/src/isArray.js":
/*!***********************************************!*\
  !*** ./node_modules/vega-util/src/isArray.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (Array.isArray);


/***/ }),

/***/ "./node_modules/vega-util/src/isBoolean.js":
/*!*************************************************!*\
  !*** ./node_modules/vega-util/src/isBoolean.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(_) {
  return typeof _ === 'boolean';
});


/***/ }),

/***/ "./node_modules/vega-util/src/isDate.js":
/*!**********************************************!*\
  !*** ./node_modules/vega-util/src/isDate.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(_) {
  return Object.prototype.toString.call(_) === '[object Date]';
});


/***/ }),

/***/ "./node_modules/vega-util/src/isFunction.js":
/*!**************************************************!*\
  !*** ./node_modules/vega-util/src/isFunction.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(_) {
  return typeof _ === 'function';
});


/***/ }),

/***/ "./node_modules/vega-util/src/isNumber.js":
/*!************************************************!*\
  !*** ./node_modules/vega-util/src/isNumber.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(_) {
  return typeof _ === 'number';
});


/***/ }),

/***/ "./node_modules/vega-util/src/isObject.js":
/*!************************************************!*\
  !*** ./node_modules/vega-util/src/isObject.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(_) {
  return _ === Object(_);
});


/***/ }),

/***/ "./node_modules/vega-util/src/isRegExp.js":
/*!************************************************!*\
  !*** ./node_modules/vega-util/src/isRegExp.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(_) {
  return Object.prototype.toString.call(_) === '[object RegExp]';
});


/***/ }),

/***/ "./node_modules/vega-util/src/isString.js":
/*!************************************************!*\
  !*** ./node_modules/vega-util/src/isString.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(_) {
  return typeof _ === 'string';
});


/***/ }),

/***/ "./node_modules/vega-util/src/key.js":
/*!*******************************************!*\
  !*** ./node_modules/vega-util/src/key.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _accessor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./accessor */ "./node_modules/vega-util/src/accessor.js");
/* harmony import */ var _array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./array */ "./node_modules/vega-util/src/array.js");
/* harmony import */ var _splitAccessPath__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./splitAccessPath */ "./node_modules/vega-util/src/splitAccessPath.js");
/* harmony import */ var _stringValue__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./stringValue */ "./node_modules/vega-util/src/stringValue.js");





/* harmony default export */ __webpack_exports__["default"] = (function(fields, flat) {
  if (fields) {
    fields = flat
      ? Object(_array__WEBPACK_IMPORTED_MODULE_1__["default"])(fields).map(function(f) { return f.replace(/\\(.)/g, '$1'); })
      : Object(_array__WEBPACK_IMPORTED_MODULE_1__["default"])(fields);
  }

  var fn = !(fields && fields.length)
    ? function() { return ''; }
    : Function('_', 'return \'\'+' +
        fields.map(function(f) {
          return '_[' + (flat
              ? Object(_stringValue__WEBPACK_IMPORTED_MODULE_3__["default"])(f)
              : Object(_splitAccessPath__WEBPACK_IMPORTED_MODULE_2__["default"])(f).map(_stringValue__WEBPACK_IMPORTED_MODULE_3__["default"]).join('][')
            ) + ']';
        }).join('+\'|\'+') + ';');

  return Object(_accessor__WEBPACK_IMPORTED_MODULE_0__["default"])(fn, fields, 'key');
});


/***/ }),

/***/ "./node_modules/vega-util/src/lerp.js":
/*!********************************************!*\
  !*** ./node_modules/vega-util/src/lerp.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _peek__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./peek */ "./node_modules/vega-util/src/peek.js");


/* harmony default export */ __webpack_exports__["default"] = (function(array, frac) {
  const lo = array[0],
        hi = Object(_peek__WEBPACK_IMPORTED_MODULE_0__["default"])(array),
        f = +frac;
  return !f ? lo : f === 1 ? hi : lo + f * (hi - lo);
});


/***/ }),

/***/ "./node_modules/vega-util/src/logger.js":
/*!**********************************************!*\
  !*** ./node_modules/vega-util/src/logger.js ***!
  \**********************************************/
/*! exports provided: None, Error, Warn, Info, Debug, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "None", function() { return None; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Error", function() { return Error; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Warn", function() { return Warn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Info", function() { return Info; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Debug", function() { return Debug; });
function log(method, level, input) {
  var msg = [level].concat([].slice.call(input));
  console[method](...msg); // eslint-disable-line no-console
}

var None  = 0;
var Error = 1;
var Warn  = 2;
var Info  = 3;
var Debug = 4;

/* harmony default export */ __webpack_exports__["default"] = (function(_, method) {
  var level = _ || None;
  return {
    level: function(_) {
      if (arguments.length) {
        level = +_;
        return this;
      } else {
        return level;
      }
    },
    error: function() {
      if (level >= Error) log(method || 'error', 'ERROR', arguments);
      return this;
    },
    warn: function() {
      if (level >= Warn) log(method || 'warn', 'WARN', arguments);
      return this;
    },
    info: function() {
      if (level >= Info) log(method || 'log', 'INFO', arguments);
      return this;
    },
    debug: function() {
      if (level >= Debug) log(method || 'log', 'DEBUG', arguments);
      return this;
    }
  }
});


/***/ }),

/***/ "./node_modules/vega-util/src/merge.js":
/*!*********************************************!*\
  !*** ./node_modules/vega-util/src/merge.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(compare, array0, array1, output) {
  var n0 = array0.length,
      n1 = array1.length;

  if (!n1) return array0;
  if (!n0) return array1;

  var merged = output || new array0.constructor(n0 + n1),
      i0 = 0, i1 = 0, i = 0;

  for (; i0<n0 && i1<n1; ++i) {
    merged[i] = compare(array0[i0], array1[i1]) > 0
       ? array1[i1++]
       : array0[i0++];
  }

  for (; i0<n0; ++i0, ++i) {
    merged[i] = array0[i0];
  }

  for (; i1<n1; ++i1, ++i) {
    merged[i] = array1[i1];
  }

  return merged;
});


/***/ }),

/***/ "./node_modules/vega-util/src/pad.js":
/*!*******************************************!*\
  !*** ./node_modules/vega-util/src/pad.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _repeat__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./repeat */ "./node_modules/vega-util/src/repeat.js");


/* harmony default export */ __webpack_exports__["default"] = (function(str, length, padchar, align) {
  var c = padchar || ' ',
      s = str + '',
      n = length - s.length;

  return n <= 0 ? s
    : align === 'left' ? Object(_repeat__WEBPACK_IMPORTED_MODULE_0__["default"])(c, n) + s
    : align === 'center' ? Object(_repeat__WEBPACK_IMPORTED_MODULE_0__["default"])(c, ~~(n/2)) + s + Object(_repeat__WEBPACK_IMPORTED_MODULE_0__["default"])(c, Math.ceil(n/2))
    : s + Object(_repeat__WEBPACK_IMPORTED_MODULE_0__["default"])(c, n);
});


/***/ }),

/***/ "./node_modules/vega-util/src/peek.js":
/*!********************************************!*\
  !*** ./node_modules/vega-util/src/peek.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(array) {
  return array[array.length - 1];
});


/***/ }),

/***/ "./node_modules/vega-util/src/quarter.js":
/*!***********************************************!*\
  !*** ./node_modules/vega-util/src/quarter.js ***!
  \***********************************************/
/*! exports provided: quarter, utcquarter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "quarter", function() { return quarter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utcquarter", function() { return utcquarter; });
function quarter(date) {
  return 1 + ~~(new Date(date).getMonth() / 3);
}

function utcquarter(date) {
  return 1 + ~~(new Date(date).getUTCMonth() / 3);
}


/***/ }),

/***/ "./node_modules/vega-util/src/repeat.js":
/*!**********************************************!*\
  !*** ./node_modules/vega-util/src/repeat.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(str, reps) {
  var s = '';
  while (--reps >= 0) s += str;
  return s;
});


/***/ }),

/***/ "./node_modules/vega-util/src/span.js":
/*!********************************************!*\
  !*** ./node_modules/vega-util/src/span.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _peek__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./peek */ "./node_modules/vega-util/src/peek.js");


/**
 * Return the numerical span of an array: the difference between
 * the last and first values.
 */
/* harmony default export */ __webpack_exports__["default"] = (function(array) {
  return (Object(_peek__WEBPACK_IMPORTED_MODULE_0__["default"])(array) - array[0]) || 0;
});


/***/ }),

/***/ "./node_modules/vega-util/src/splitAccessPath.js":
/*!*******************************************************!*\
  !*** ./node_modules/vega-util/src/splitAccessPath.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./error */ "./node_modules/vega-util/src/error.js");


/* harmony default export */ __webpack_exports__["default"] = (function(p) {
  var path = [],
      q = null,
      b = 0,
      n = p.length,
      s = '',
      i, j, c;

  p = p + '';

  function push() {
    path.push(s + p.substring(i, j));
    s = '';
    i = j + 1;
  }

  for (i=j=0; j<n; ++j) {
    c = p[j];
    if (c === '\\') {
      s += p.substring(i, j);
      i = ++j;
    } else if (c === q) {
      push();
      q = null;
      b = -1;
    } else if (q) {
      continue;
    } else if (i === b && c === '"') {
      i = j + 1;
      q = c;
    } else if (i === b && c === "'") {
      i = j + 1;
      q = c;
    } else if (c === '.' && !b) {
      if (j > i) {
        push();
      } else {
        i = j + 1;
      }
    } else if (c === '[') {
      if (j > i) push();
      b = i = j + 1;
    } else if (c === ']') {
      if (!b) Object(_error__WEBPACK_IMPORTED_MODULE_0__["default"])('Access path missing open bracket: ' + p);
      if (b > 0) push();
      b = 0;
      i = j + 1;
    }
  }

  if (b) Object(_error__WEBPACK_IMPORTED_MODULE_0__["default"])('Access path missing closing bracket: ' + p);
  if (q) Object(_error__WEBPACK_IMPORTED_MODULE_0__["default"])('Access path missing closing quote: ' + p);

  if (j > i) {
    j++;
    push();
  }

  return path;
});


/***/ }),

/***/ "./node_modules/vega-util/src/stringValue.js":
/*!***************************************************!*\
  !*** ./node_modules/vega-util/src/stringValue.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return $; });
/* harmony import */ var _isArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isArray */ "./node_modules/vega-util/src/isArray.js");
/* harmony import */ var _isObject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./isObject */ "./node_modules/vega-util/src/isObject.js");
/* harmony import */ var _isString__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./isString */ "./node_modules/vega-util/src/isString.js");




function $(x) {
  return Object(_isArray__WEBPACK_IMPORTED_MODULE_0__["default"])(x) ? '[' + x.map($) + ']'
    : Object(_isObject__WEBPACK_IMPORTED_MODULE_1__["default"])(x) || Object(_isString__WEBPACK_IMPORTED_MODULE_2__["default"])(x) ?
      // Output valid JSON and JS source strings.
      // See http://timelessrepo.com/json-isnt-a-javascript-subset
      JSON.stringify(x).replace('\u2028','\\u2028').replace('\u2029', '\\u2029')
    : x;
}


/***/ }),

/***/ "./node_modules/vega-util/src/toBoolean.js":
/*!*************************************************!*\
  !*** ./node_modules/vega-util/src/toBoolean.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(_) {
  return _ == null || _ === '' ? null : !_ || _ === 'false' || _ === '0' ? false : !!_;
});


/***/ }),

/***/ "./node_modules/vega-util/src/toDate.js":
/*!**********************************************!*\
  !*** ./node_modules/vega-util/src/toDate.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _isDate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isDate */ "./node_modules/vega-util/src/isDate.js");
/* harmony import */ var _isNumber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./isNumber */ "./node_modules/vega-util/src/isNumber.js");



function defaultParser(_) {
  return Object(_isNumber__WEBPACK_IMPORTED_MODULE_1__["default"])(_) ? _ : Object(_isDate__WEBPACK_IMPORTED_MODULE_0__["default"])(_) ? _ : Date.parse(_);
}

/* harmony default export */ __webpack_exports__["default"] = (function(_, parser) {
  parser = parser || defaultParser;
  return _ == null || _ === '' ? null : parser(_);
});


/***/ }),

/***/ "./node_modules/vega-util/src/toNumber.js":
/*!************************************************!*\
  !*** ./node_modules/vega-util/src/toNumber.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(_) {
  return _ == null || _ === '' ? null : +_;
});


/***/ }),

/***/ "./node_modules/vega-util/src/toSet.js":
/*!*********************************************!*\
  !*** ./node_modules/vega-util/src/toSet.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(_) {
  for (var s={}, i=0, n=_.length; i<n; ++i) s[_[i]] = true;
  return s;
});


/***/ }),

/***/ "./node_modules/vega-util/src/toString.js":
/*!************************************************!*\
  !*** ./node_modules/vega-util/src/toString.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(_) {
  return _ == null || _ === '' ? null : _ + '';
});


/***/ }),

/***/ "./node_modules/vega-util/src/transform.js":
/*!*************************************************!*\
  !*** ./node_modules/vega-util/src/transform.js ***!
  \*************************************************/
/*! exports provided: panLinear, panLog, panPow, panSymlog, zoomLinear, zoomLog, zoomPow, zoomSymlog */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "panLinear", function() { return panLinear; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "panLog", function() { return panLog; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "panPow", function() { return panPow; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "panSymlog", function() { return panSymlog; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "zoomLinear", function() { return zoomLinear; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "zoomLog", function() { return zoomLog; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "zoomPow", function() { return zoomPow; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "zoomSymlog", function() { return zoomSymlog; });
/* harmony import */ var _accessors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./accessors */ "./node_modules/vega-util/src/accessors.js");
/* harmony import */ var _peek__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./peek */ "./node_modules/vega-util/src/peek.js");
/* harmony import */ var _toNumber__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./toNumber */ "./node_modules/vega-util/src/toNumber.js");




function exp(sign) {
  return function(x) { return sign * Math.exp(x); };
}

function log(sign) {
  return function(x) { return Math.log(sign * x); };
}

function symlog(c) {
  return function(x) { return Math.sign(x) * Math.log1p(Math.abs(x / c)); };
}

function symexp(c) {
  return function(x) { return Math.sign(x) * Math.expm1(Math.abs(x)) * c; };
}

function pow(exponent) {
  return function(x) {
    return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);
  };
}

function pan(domain, delta, lift, ground) {
  var d0 = lift(domain[0]),
      d1 = lift(Object(_peek__WEBPACK_IMPORTED_MODULE_1__["default"])(domain)),
      dd = (d1 - d0) * delta;

  return [
    ground(d0 - dd),
    ground(d1 - dd)
  ];
}

function panLinear(domain, delta) {
  return pan(domain, delta, _toNumber__WEBPACK_IMPORTED_MODULE_2__["default"], _accessors__WEBPACK_IMPORTED_MODULE_0__["identity"]);
}

function panLog(domain, delta) {
  var sign = Math.sign(domain[0]);
  return pan(domain, delta, log(sign), exp(sign));
}

function panPow(domain, delta, exponent) {
  return pan(domain, delta, pow(exponent), pow(1/exponent));
}

function panSymlog(domain, delta, constant) {
  return pan(domain, delta, symlog(constant), symexp(constant));
}

function zoom(domain, anchor, scale, lift, ground) {
  var d0 = lift(domain[0]),
      d1 = lift(Object(_peek__WEBPACK_IMPORTED_MODULE_1__["default"])(domain)),
      da = anchor != null ? lift(anchor) : (d0 + d1) / 2;

  return [
    ground(da + (d0 - da) * scale),
    ground(da + (d1 - da) * scale)
  ];
}

function zoomLinear(domain, anchor, scale) {
  return zoom(domain, anchor, scale, _toNumber__WEBPACK_IMPORTED_MODULE_2__["default"], _accessors__WEBPACK_IMPORTED_MODULE_0__["identity"]);
}

function zoomLog(domain, anchor, scale) {
  var sign = Math.sign(domain[0]);
  return zoom(domain, anchor, scale, log(sign), exp(sign));
}

function zoomPow(domain, anchor, scale, exponent) {
  return zoom(domain, anchor, scale, pow(exponent), pow(1/exponent));
}

function zoomSymlog(domain, anchor, scale, constant) {
  return zoom(domain, anchor, scale, symlog(constant), symexp(constant));
}


/***/ }),

/***/ "./node_modules/vega-util/src/truncate.js":
/*!************************************************!*\
  !*** ./node_modules/vega-util/src/truncate.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(str, length, align, ellipsis) {
  var e = ellipsis != null ? ellipsis : '\u2026',
      s = str + '',
      n = s.length,
      l = Math.max(0, length - e.length);

  return n <= length ? s
    : align === 'left' ? e + s.slice(n - l)
    : align === 'center' ? s.slice(0, Math.ceil(l/2)) + e + s.slice(n - ~~(l/2))
    : s.slice(0, l) + e;
});


/***/ }),

/***/ "./node_modules/vega-util/src/visitArray.js":
/*!**************************************************!*\
  !*** ./node_modules/vega-util/src/visitArray.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(array, filter, visitor) {
  if (array) {
    var i = 0, n = array.length, t;
    if (filter) {
      for (; i<n; ++i) {
        if (t = filter(array[i])) visitor(t, i, array);
      }
    } else {
      array.forEach(visitor);
    }
  }
});


/***/ }),

/***/ "./node_modules/vega-view-transforms/index.js":
/*!****************************************************!*\
  !*** ./node_modules/vega-view-transforms/index.js ***!
  \****************************************************/
/*! exports provided: bound, identifier, mark, overlap, render, viewlayout */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _src_Bound__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/Bound */ "./node_modules/vega-view-transforms/src/Bound.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bound", function() { return _src_Bound__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _src_Identifier__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/Identifier */ "./node_modules/vega-view-transforms/src/Identifier.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "identifier", function() { return _src_Identifier__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _src_Mark__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/Mark */ "./node_modules/vega-view-transforms/src/Mark.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mark", function() { return _src_Mark__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _src_Overlap__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/Overlap */ "./node_modules/vega-view-transforms/src/Overlap.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "overlap", function() { return _src_Overlap__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _src_Render__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./src/Render */ "./node_modules/vega-view-transforms/src/Render.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _src_Render__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _src_ViewLayout__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./src/ViewLayout */ "./node_modules/vega-view-transforms/src/ViewLayout.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "viewlayout", function() { return _src_ViewLayout__WEBPACK_IMPORTED_MODULE_5__["default"]; });









/***/ }),

/***/ "./node_modules/vega-view-transforms/src/Bound.js":
/*!********************************************************!*\
  !*** ./node_modules/vega-view-transforms/src/Bound.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Bound; });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ "./node_modules/vega-view-transforms/src/constants.js");
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_scenegraph__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-scenegraph */ "./node_modules/vega-scenegraph/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");





/**
 * Calculate bounding boxes for scenegraph items.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {object} params.mark - The scenegraph mark instance to bound.
 */
function Bound(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Transform"].call(this, null, params);
}

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["inherits"])(Bound, vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Transform"]);

prototype.transform = function(_, pulse) {
  var view = pulse.dataflow,
      mark = _.mark,
      type = mark.marktype,
      entry = vega_scenegraph__WEBPACK_IMPORTED_MODULE_2__["Marks"][type],
      bound = entry.bound,
      markBounds = mark.bounds, rebound;

  if (entry.nested) {
    // multi-item marks have a single bounds instance
    if (mark.items.length) view.dirty(mark.items[0]);
    markBounds = boundItem(mark, bound);
    mark.items.forEach(function(item) {
      item.bounds.clear().union(markBounds);
    });
  }

  else if (type === _constants__WEBPACK_IMPORTED_MODULE_0__["Group"] || _.modified()) {
    // operator parameters modified -> re-bound all items
    // updates group bounds in response to modified group content
    pulse.visit(pulse.MOD, function(item) { view.dirty(item); });
    markBounds.clear();
    mark.items.forEach(function(item) {
      markBounds.union(boundItem(item, bound));
    });

    // force reflow for legends to propagate any layout changes
    // suppress other types to prevent overall layout jumpiness
    if (mark.role === _constants__WEBPACK_IMPORTED_MODULE_0__["LegendRole"]) pulse.reflow();
  }

  else {
    // incrementally update bounds, re-bound mark as needed
    rebound = pulse.changed(pulse.REM);

    pulse.visit(pulse.ADD, function(item) {
      markBounds.union(boundItem(item, bound));
    });

    pulse.visit(pulse.MOD, function(item) {
      rebound = rebound || markBounds.alignsWith(item.bounds);
      view.dirty(item);
      markBounds.union(boundItem(item, bound));
    });

    if (rebound) {
      markBounds.clear();
      mark.items.forEach(function(item) { markBounds.union(item.bounds); });
    }
  }

  // ensure mark bounds do not exceed any clipping region
  Object(vega_scenegraph__WEBPACK_IMPORTED_MODULE_2__["boundClip"])(mark);

  return pulse.modifies('bounds');
};

function boundItem(item, bound, opt) {
  return bound(item.bounds.clear(), item, opt);
}


/***/ }),

/***/ "./node_modules/vega-view-transforms/src/Identifier.js":
/*!*************************************************************!*\
  !*** ./node_modules/vega-view-transforms/src/Identifier.js ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Identifier; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");



var COUNTER_NAME = ':vega_identifier:';

/**
 * Adds a unique identifier to all added tuples.
 * This transform creates a new signal that serves as an id counter.
 * As a result, the id counter is shared across all instances of this
 * transform, generating unique ids across multiple data streams. In
 * addition, this signal value can be included in a snapshot of the
 * dataflow state, enabling correct resumption of id allocation.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {string} params.as - The field name for the generated identifier.
 */
function Identifier(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, 0, params);
}

Identifier.Definition = {
  "type": "Identifier",
  "metadata": {"modifies": true},
  "params": [
    { "name": "as", "type": "string", "required": true }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(Identifier, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

prototype.transform = function(_, pulse) {
  var counter = getCounter(pulse.dataflow),
      id = counter.value,
      as = _.as;

  pulse.visit(pulse.ADD, function(t) {
    if (!t[as]) t[as] = ++id;
  });

  counter.set(this.value = id);
  return pulse;
};

function getCounter(view) {
  var counter = view._signals[COUNTER_NAME];
  if (!counter) {
    view._signals[COUNTER_NAME] = (counter = view.add(0));
  }
  return counter;
}


/***/ }),

/***/ "./node_modules/vega-view-transforms/src/Mark.js":
/*!*******************************************************!*\
  !*** ./node_modules/vega-view-transforms/src/Mark.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Mark; });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ "./node_modules/vega-view-transforms/src/constants.js");
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_scenegraph__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-scenegraph */ "./node_modules/vega-scenegraph/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");





/**
 * Bind scenegraph items to a scenegraph mark instance.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {object} params.markdef - The mark definition for creating the mark.
 *   This is an object of legal scenegraph mark properties which *must* include
 *   the 'marktype' property.
 */
function Mark(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Transform"].call(this, null, params);
}

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["inherits"])(Mark, vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Transform"]);

prototype.transform = function(_, pulse) {
  var mark = this.value;

  // acquire mark on first invocation, bind context and group
  if (!mark) {
    mark = pulse.dataflow.scenegraph().mark(_.markdef, lookup(_), _.index);
    mark.group.context = _.context;
    if (!_.context.group) _.context.group = mark.group;
    mark.source = this;
    mark.clip = _.clip;
    mark.interactive = _.interactive;
    this.value = mark;
  }

  // initialize entering items
  var Init = mark.marktype === _constants__WEBPACK_IMPORTED_MODULE_0__["Group"] ? vega_scenegraph__WEBPACK_IMPORTED_MODULE_2__["GroupItem"] : vega_scenegraph__WEBPACK_IMPORTED_MODULE_2__["Item"];
  pulse.visit(pulse.ADD, function(item) { Init.call(item, mark); });

  // update clipping and/or interactive status
  if (_.modified('clip') || _.modified('interactive')) {
    mark.clip = _.clip;
    mark.interactive = !!_.interactive;
    mark.zdirty = true; // force scenegraph re-eval
    pulse.reflow();
  }

  // bind items array to scenegraph mark
  mark.items = pulse.source;
  return pulse;
};

function lookup(_) {
  var g = _.groups, p = _.parent;
  return g && g.size === 1 ? g.get(Object.keys(g.object)[0])
    : g && p ? g.lookup(p)
    : null;
}


/***/ }),

/***/ "./node_modules/vega-view-transforms/src/Overlap.js":
/*!**********************************************************!*\
  !*** ./node_modules/vega-view-transforms/src/Overlap.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Overlap; });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ "./node_modules/vega-view-transforms/src/constants.js");
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_scenegraph__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-scenegraph */ "./node_modules/vega-scenegraph/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");





/**
 * Analyze items for overlap, changing opacity to hide items with
 * overlapping bounding boxes. This transform will preserve at least
 * two items (e.g., first and last) even if overlap persists.
 * @param {object} params - The parameters for this operator.
 * @param {function(*,*): number} [params.sort] - A comparator
 *   function for sorting items.
 * @param {object} [params.method] - The overlap removal method to apply.
 *   One of 'parity' (default, hide every other item until there is no
 *   more overlap) or 'greedy' (sequentially scan and hide and items that
 *   overlap with the last visible item).
 * @param {object} [params.boundScale] - A scale whose range should be used
 *   to bound the items. Items exceeding the bounds of the scale range
 *   will be treated as overlapping. If null or undefined, no bounds check
 *   will be applied.
 * @param {object} [params.boundOrient] - The orientation of the scale
 *   (top, bottom, left, or right) used to bound items. This parameter is
 *   ignored if boundScale is null or undefined.
 * @param {object} [params.boundTolerance] - The tolerance in pixels for
 *   bound inclusion testing (default 1). This specifies by how many pixels
 *   an item's bounds may exceed the scale range bounds and not be culled.
 * @constructor
 */
function Overlap(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Transform"].call(this, null, params);
}

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["inherits"])(Overlap, vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Transform"]);

var methods = {
  parity: function(items) {
    return items.filter((item, i) => i % 2 ? (item.opacity = 0) : 1);
  },
  greedy: function(items, sep) {
    var a;
    return items.filter((b, i) => {
      if (!i || !intersect(a.bounds, b.bounds, sep)) {
        a = b;
        return 1;
      } else {
        return b.opacity = 0;
      }
    });
  }
};

// compute bounding box intersection
// including padding pixels of separation
function intersect(a, b, sep) {
  return sep > Math.max(
    b.x1 - a.x2,
    a.x1 - b.x2,
    b.y1 - a.y2,
    a.y1 - b.y2
  );
}

function hasOverlap(items, pad) {
  for (var i=1, n=items.length, a=items[0].bounds, b; i<n; a=b, ++i) {
    if (intersect(a, b = items[i].bounds, pad)) return true;
  }
}

function hasBounds(item) {
  var b = item.bounds;
  return b.width() > 1 && b.height() > 1;
}

function boundTest(scale, orient, tolerance) {
  var range = scale.range(),
      b = new vega_scenegraph__WEBPACK_IMPORTED_MODULE_2__["Bounds"]();

  if (orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Top"] || orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Bottom"]) {
    b.set(range[0], -Infinity, range[1], +Infinity);
  } else {
    b.set(-Infinity, range[0], +Infinity, range[1]);
  }
  b.expand(tolerance || 1);

  return item => b.encloses(item.bounds);
}

// reset all items to be fully opaque
function reset(source) {
  source.forEach(item => item.opacity = 1);
  return source;
}

// add all tuples to mod, fork pulse if parameters were modified
// fork prevents cross-stream tuple pollution (e.g., pulse from scale)
function reflow(pulse, _) {
  return pulse.reflow(_.modified()).modifies('opacity');
}

prototype.transform = function(_, pulse) {
  var reduce = methods[_.method] || methods.parity,
      source = pulse.materialize(pulse.SOURCE).source,
      sep = _.separation || 0,
      items, test, bounds;

  if (!source || !source.length) return;

  if (!_.method) {
    // early exit if method is falsy
    if (_.modified('method')) {
      reset(source);
      pulse = reflow(pulse, _);
    }
    return pulse;
  }

  if (_.sort) {
    source = source.slice().sort(_.sort);
  }

  // skip labels with no content
  source = source.filter(hasBounds);

  items = reset(source);
  pulse = reflow(pulse, _);

  if (items.length >= 3 && hasOverlap(items, sep)) {
    do {
      items = reduce(items, sep);
    } while (items.length >= 3 && hasOverlap(items, sep));

    if (items.length < 3 && !Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["peek"])(source).opacity) {
      if (items.length > 1) Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["peek"])(items).opacity = 0;
      Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["peek"])(source).opacity = 1;
    }
  }

  if (_.boundScale && _.boundTolerance >= 0) {
    test = boundTest(_.boundScale, _.boundOrient, +_.boundTolerance);
    source.forEach(item => {
      if (!test(item)) item.opacity = 0;
    });
  }

  // re-calculate mark bounds
  bounds = items[0].mark.bounds.clear();
  source.forEach(item => {
    if (item.opacity) bounds.union(item.bounds);
  });

  return pulse;
};


/***/ }),

/***/ "./node_modules/vega-view-transforms/src/Render.js":
/*!*********************************************************!*\
  !*** ./node_modules/vega-view-transforms/src/Render.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Render; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");



/**
 * Queue modified scenegraph items for rendering.
 * @constructor
 */
function Render(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, null, params);
}

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(Render, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

prototype.transform = function(_, pulse) {
  var view = pulse.dataflow;

  pulse.visit(pulse.ALL, function(item) { view.dirty(item); });

  // set z-index dirty flag as needed
  if (pulse.fields && pulse.fields['zindex']) {
    var item = pulse.source && pulse.source[0];
    if (item) item.mark.zdirty = true;
  }
};


/***/ }),

/***/ "./node_modules/vega-view-transforms/src/ViewLayout.js":
/*!*************************************************************!*\
  !*** ./node_modules/vega-view-transforms/src/ViewLayout.js ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return ViewLayout; });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ "./node_modules/vega-view-transforms/src/constants.js");
/* harmony import */ var _layout_axis__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./layout/axis */ "./node_modules/vega-view-transforms/src/layout/axis.js");
/* harmony import */ var _layout_grid__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./layout/grid */ "./node_modules/vega-view-transforms/src/layout/grid.js");
/* harmony import */ var _layout_legend__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./layout/legend */ "./node_modules/vega-view-transforms/src/layout/legend.js");
/* harmony import */ var _layout_title__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./layout/title */ "./node_modules/vega-view-transforms/src/layout/title.js");
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_scenegraph__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! vega-scenegraph */ "./node_modules/vega-scenegraph/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");











/**
 * Layout view elements such as axes and legends.
 * Also performs size adjustments.
 * @constructor
 * @param {object} params - The parameters for this operator.
 * @param {object} params.mark - Scenegraph mark of groups to layout.
 */
function ViewLayout(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_5__["Transform"].call(this, null, params);
}

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_7__["inherits"])(ViewLayout, vega_dataflow__WEBPACK_IMPORTED_MODULE_5__["Transform"]);

prototype.transform = function(_, pulse) {
  // TODO incremental update, output?
  var view = pulse.dataflow;
  _.mark.items.forEach(function(group) {
    if (_.layout) Object(_layout_grid__WEBPACK_IMPORTED_MODULE_2__["trellisLayout"])(view, group, _.layout);
    layoutGroup(view, group, _);
  });
  if (_.modified()) pulse.reflow();
  return pulse;
};

function layoutGroup(view, group, _) {
  var items = group.items,
      width = Math.max(0, group.width || 0),
      height = Math.max(0, group.height || 0),
      viewBounds = new vega_scenegraph__WEBPACK_IMPORTED_MODULE_6__["Bounds"]().set(0, 0, width, height),
      xBounds = viewBounds.clone(),
      yBounds = viewBounds.clone(),
      legends = [], title,
      mark, orient, b, i, n;

  // layout axes, gather legends, collect bounds
  for (i=0, n=items.length; i<n; ++i) {
    mark = items[i];
    switch (mark.role) {
      case _constants__WEBPACK_IMPORTED_MODULE_0__["AxisRole"]:
        b = Object(_layout_axis__WEBPACK_IMPORTED_MODULE_1__["isYAxis"])(mark) ? xBounds : yBounds;
        b.union(Object(_layout_axis__WEBPACK_IMPORTED_MODULE_1__["axisLayout"])(view, mark, width, height));
        break;
      case _constants__WEBPACK_IMPORTED_MODULE_0__["TitleRole"]:
        title = mark;
        break;
      case _constants__WEBPACK_IMPORTED_MODULE_0__["LegendRole"]:
        legends.push(Object(_layout_legend__WEBPACK_IMPORTED_MODULE_3__["legendLayout"])(view, mark));
        break;
      case _constants__WEBPACK_IMPORTED_MODULE_0__["FrameRole"]:
      case _constants__WEBPACK_IMPORTED_MODULE_0__["ScopeRole"]:
      case _constants__WEBPACK_IMPORTED_MODULE_0__["RowHeader"]:
      case _constants__WEBPACK_IMPORTED_MODULE_0__["RowFooter"]:
      case _constants__WEBPACK_IMPORTED_MODULE_0__["RowTitle"]:
      case _constants__WEBPACK_IMPORTED_MODULE_0__["ColHeader"]:
      case _constants__WEBPACK_IMPORTED_MODULE_0__["ColFooter"]:
      case _constants__WEBPACK_IMPORTED_MODULE_0__["ColTitle"]:
        xBounds.union(mark.bounds);
        yBounds.union(mark.bounds);
        break;
      default:
        viewBounds.union(mark.bounds);
    }
  }

  // layout legends, adjust viewBounds
  if (legends.length) {
    // group legends by orient
    const l = {};
    legends.forEach(item => {
      orient = item.orient || _constants__WEBPACK_IMPORTED_MODULE_0__["Right"];
      if (orient !== _constants__WEBPACK_IMPORTED_MODULE_0__["None"]) (l[orient] || (l[orient] = [])).push(item);
    });

    // perform grid layout for each orient group
    for (let orient in l) {
      const g = l[orient];
      Object(_layout_grid__WEBPACK_IMPORTED_MODULE_2__["gridLayout"])(view, g, Object(_layout_legend__WEBPACK_IMPORTED_MODULE_3__["legendParams"])(
        g, orient, _.legends, xBounds, yBounds, width, height
      ));
    }

    // update view bounds
    legends.forEach(item => {
      const b = item.bounds;

      if (!b.equals(item._bounds)) {
        item.bounds = item._bounds;
        view.dirty(item); // dirty previous location
        item.bounds = b;
        view.dirty(item);
      }

      if (_.autosize && _.autosize.type === _constants__WEBPACK_IMPORTED_MODULE_0__["Fit"]) {
        // For autosize fit, incorporate the orthogonal dimension only.
        // Legends that overrun the chart area will then be clipped;
        // otherwise the chart area gets reduced to nothing!
        switch(item.orient) {
          case _constants__WEBPACK_IMPORTED_MODULE_0__["Left"]:
          case _constants__WEBPACK_IMPORTED_MODULE_0__["Right"]:
            viewBounds.add(b.x1, 0).add(b.x2, 0);
            break;
          case _constants__WEBPACK_IMPORTED_MODULE_0__["Top"]:
          case _constants__WEBPACK_IMPORTED_MODULE_0__["Bottom"]:
            viewBounds.add(0, b.y1).add(0, b.y2);
        }
      } else {
        viewBounds.union(b);
      }
    });
  }

  // combine bounding boxes
  viewBounds.union(xBounds).union(yBounds);

  // layout title, adjust bounds
  if (title) {
    viewBounds.union(Object(_layout_title__WEBPACK_IMPORTED_MODULE_4__["titleLayout"])(view, title, width, height, viewBounds));
  }

  // perform size adjustment
  viewSizeLayout(view, group, viewBounds, _);
}

function viewSizeLayout(view, group, viewBounds, _) {
  var auto = _.autosize || {},
      type = auto.type,
      viewWidth = view._width,
      viewHeight = view._height,
      padding = view.padding();

  if (view._autosize < 1 || !type) return;

  var width  = Math.max(0, group.width || 0),
      left   = Math.max(0, Math.ceil(-viewBounds.x1)),
      right  = Math.max(0, Math.ceil(viewBounds.x2 - width)),
      height = Math.max(0, group.height || 0),
      top    = Math.max(0, Math.ceil(-viewBounds.y1)),
      bottom = Math.max(0, Math.ceil(viewBounds.y2 - height));

  if (auto.contains === _constants__WEBPACK_IMPORTED_MODULE_0__["Padding"]) {
    viewWidth -= padding.left + padding.right;
    viewHeight -= padding.top + padding.bottom;
  }

  if (type === _constants__WEBPACK_IMPORTED_MODULE_0__["None"]) {
    left = 0;
    top = 0;
    width = viewWidth;
    height = viewHeight;
  }

  else if (type === _constants__WEBPACK_IMPORTED_MODULE_0__["Fit"]) {
    width = Math.max(0, viewWidth - left - right);
    height = Math.max(0, viewHeight - top - bottom);
  }

  else if (type === _constants__WEBPACK_IMPORTED_MODULE_0__["FitX"]) {
    width = Math.max(0, viewWidth - left - right);
    viewHeight = height + top + bottom;
  }

  else if (type === _constants__WEBPACK_IMPORTED_MODULE_0__["FitY"]) {
    viewWidth = width + left + right;
    height = Math.max(0, viewHeight - top - bottom);
  }

  else if (type === _constants__WEBPACK_IMPORTED_MODULE_0__["Pad"]) {
    viewWidth = width + left + right;
    viewHeight = height + top + bottom;
  }

  view._resizeView(
    viewWidth, viewHeight,
    width, height,
    [left, top],
    auto.resize
  );
}


/***/ }),

/***/ "./node_modules/vega-view-transforms/src/constants.js":
/*!************************************************************!*\
  !*** ./node_modules/vega-view-transforms/src/constants.js ***!
  \************************************************************/
/*! exports provided: Top, Left, Right, Bottom, TopLeft, TopRight, BottomLeft, BottomRight, Start, Middle, End, X, Y, Group, AxisRole, TitleRole, FrameRole, ScopeRole, LegendRole, RowHeader, RowFooter, RowTitle, ColHeader, ColFooter, ColTitle, Padding, Symbols, Fit, FitX, FitY, Pad, None, All, Each, Flush, Column, Row */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Top", function() { return Top; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Left", function() { return Left; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Right", function() { return Right; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Bottom", function() { return Bottom; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TopLeft", function() { return TopLeft; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TopRight", function() { return TopRight; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BottomLeft", function() { return BottomLeft; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BottomRight", function() { return BottomRight; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Start", function() { return Start; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Middle", function() { return Middle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "End", function() { return End; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "X", function() { return X; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Y", function() { return Y; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Group", function() { return Group; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AxisRole", function() { return AxisRole; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TitleRole", function() { return TitleRole; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FrameRole", function() { return FrameRole; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ScopeRole", function() { return ScopeRole; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LegendRole", function() { return LegendRole; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RowHeader", function() { return RowHeader; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RowFooter", function() { return RowFooter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RowTitle", function() { return RowTitle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ColHeader", function() { return ColHeader; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ColFooter", function() { return ColFooter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ColTitle", function() { return ColTitle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Padding", function() { return Padding; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Symbols", function() { return Symbols; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Fit", function() { return Fit; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FitX", function() { return FitX; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FitY", function() { return FitY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Pad", function() { return Pad; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "None", function() { return None; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "All", function() { return All; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Each", function() { return Each; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Flush", function() { return Flush; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Column", function() { return Column; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Row", function() { return Row; });
const Top = 'top';
const Left = 'left';
const Right = 'right';
const Bottom = 'bottom';

const TopLeft = 'top-left';
const TopRight = 'top-right';
const BottomLeft = 'bottom-left';
const BottomRight = 'bottom-right';

const Start = 'start';
const Middle = 'middle';
const End = 'end';

const X = 'x';
const Y = 'y';

const Group = 'group';

const AxisRole = 'axis';
const TitleRole = 'title';
const FrameRole = 'frame';
const ScopeRole = 'scope';
const LegendRole = 'legend';

const RowHeader = 'row-header';
const RowFooter = 'row-footer';
const RowTitle  = 'row-title';
const ColHeader = 'column-header';
const ColFooter = 'column-footer';
const ColTitle  = 'column-title';

const Padding = 'padding';

const Symbols = 'symbol';

const Fit  = 'fit';
const FitX = 'fit-x';
const FitY = 'fit-y';
const Pad  = 'pad';
const None = 'none';

const All = 'all';
const Each = 'each';
const Flush = 'flush';

const Column = 'column';
const Row = 'row';


/***/ }),

/***/ "./node_modules/vega-view-transforms/src/layout/axis.js":
/*!**************************************************************!*\
  !*** ./node_modules/vega-view-transforms/src/layout/axis.js ***!
  \**************************************************************/
/*! exports provided: isYAxis, axisLayout */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isYAxis", function() { return isYAxis; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "axisLayout", function() { return axisLayout; });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants */ "./node_modules/vega-view-transforms/src/constants.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util */ "./node_modules/vega-view-transforms/src/layout/util.js");
/* harmony import */ var vega_scenegraph__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-scenegraph */ "./node_modules/vega-scenegraph/index.js");




const AxisOffset = 0.5;

function isYAxis(mark) {
  var orient = mark.items[0].datum.orient;
  return orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Left"] || orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Right"];
}

function axisIndices(datum) {
  var index = +datum.grid;
  return [
    datum.ticks  ? index++ : -1, // ticks index
    datum.labels ? index++ : -1, // labels index
    index + (+datum.domain)      // title index
  ];
}

function axisLayout(view, axis, width, height) {
  var item = axis.items[0],
      datum = item.datum,
      orient = datum.orient,
      indices = axisIndices(datum),
      range = item.range,
      offset = item.offset,
      position = item.position,
      minExtent = item.minExtent,
      maxExtent = item.maxExtent,
      title = datum.title && item.items[indices[2]].items[0],
      titlePadding = item.titlePadding,
      bounds = item.bounds,
      x = 0, y = 0, i, s;

  _util__WEBPACK_IMPORTED_MODULE_1__["tempBounds"].clear().union(bounds);
  bounds.clear();
  if ((i=indices[0]) > -1) bounds.union(item.items[i].bounds);
  if ((i=indices[1]) > -1) bounds.union(item.items[i].bounds);

  // position axis group and title
  switch (orient) {
    case _constants__WEBPACK_IMPORTED_MODULE_0__["Top"]:
      x = position || 0;
      y = -offset;
      s = Math.max(minExtent, Math.min(maxExtent, -bounds.y1));
      if (title) s = axisTitleLayout(title, s, titlePadding, 0, -1, bounds);
      bounds.add(0, -s).add(range, 0);
      break;
    case _constants__WEBPACK_IMPORTED_MODULE_0__["Left"]:
      x = -offset;
      y = position || 0;
      s = Math.max(minExtent, Math.min(maxExtent, -bounds.x1));
      if (title) s = axisTitleLayout(title, s, titlePadding, 1, -1, bounds);
      bounds.add(-s, 0).add(0, range);
      break;
    case _constants__WEBPACK_IMPORTED_MODULE_0__["Right"]:
      x = width + offset;
      y = position || 0;
      s = Math.max(minExtent, Math.min(maxExtent, bounds.x2));
      if (title) s = axisTitleLayout(title, s, titlePadding, 1, 1, bounds);
      bounds.add(0, 0).add(s, range);
      break;
    case _constants__WEBPACK_IMPORTED_MODULE_0__["Bottom"]:
      x = position || 0;
      y = height + offset;
      s = Math.max(minExtent, Math.min(maxExtent, bounds.y2));
      if (title) s = axisTitleLayout(title, s, titlePadding, 0, 1, bounds);
      bounds.add(0, 0).add(range, s);
      break;
    default:
      x = item.x;
      y = item.y;
  }

  // update bounds
  Object(vega_scenegraph__WEBPACK_IMPORTED_MODULE_2__["boundStroke"])(bounds.translate(x, y), item);

  if (Object(_util__WEBPACK_IMPORTED_MODULE_1__["set"])(item, 'x', x + AxisOffset) | Object(_util__WEBPACK_IMPORTED_MODULE_1__["set"])(item, 'y', y + AxisOffset)) {
    item.bounds = _util__WEBPACK_IMPORTED_MODULE_1__["tempBounds"];
    view.dirty(item);
    item.bounds = bounds;
    view.dirty(item);
  }

  return item.mark.bounds.clear().union(bounds);
}

function axisTitleLayout(title, offset, pad, isYAxis, sign, bounds) {
  var b = title.bounds, dx = 0, dy = 0;

  if (title.auto) {
    offset += pad;

    isYAxis
      ? dx = (title.x || 0) - (title.x = sign * offset)
      : dy = (title.y || 0) - (title.y = sign * offset);

    b.translate(-dx, -dy);
    title.mark.bounds.set(b.x1, b.y1, b.x2, b.y2);

    if (isYAxis) {
      bounds.add(0, b.y1).add(0, b.y2);
      offset += b.width();
    } else {
      bounds.add(b.x1, 0).add(b.x2, 0);
      offset += b.height();
    }
  } else {
    bounds.union(b);
  }

  return offset;
}


/***/ }),

/***/ "./node_modules/vega-view-transforms/src/layout/grid.js":
/*!**************************************************************!*\
  !*** ./node_modules/vega-view-transforms/src/layout/grid.js ***!
  \**************************************************************/
/*! exports provided: gridLayout, trellisLayout */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "gridLayout", function() { return gridLayout; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "trellisLayout", function() { return trellisLayout; });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants */ "./node_modules/vega-view-transforms/src/constants.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util */ "./node_modules/vega-view-transforms/src/layout/util.js");
/* harmony import */ var vega_scenegraph__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-scenegraph */ "./node_modules/vega-scenegraph/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");





function gridLayoutGroups(group) {
  var groups = group.items,
      n = groups.length,
      i = 0, mark, items;

  var views = {
    marks:      [],
    rowheaders: [],
    rowfooters: [],
    colheaders: [],
    colfooters: [],
    rowtitle: null,
    coltitle: null
  };

  // layout axes, gather legends, collect bounds
  for (; i<n; ++i) {
    mark = groups[i];
    items = mark.items;
    if (mark.marktype === _constants__WEBPACK_IMPORTED_MODULE_0__["Group"]) {
      switch (mark.role) {
        case _constants__WEBPACK_IMPORTED_MODULE_0__["AxisRole"]:
        case _constants__WEBPACK_IMPORTED_MODULE_0__["LegendRole"]:
          break;
        case _constants__WEBPACK_IMPORTED_MODULE_0__["RowHeader"]: views.rowheaders.push(...items); break;
        case _constants__WEBPACK_IMPORTED_MODULE_0__["RowFooter"]: views.rowfooters.push(...items); break;
        case _constants__WEBPACK_IMPORTED_MODULE_0__["ColHeader"]: views.colheaders.push(...items); break;
        case _constants__WEBPACK_IMPORTED_MODULE_0__["ColFooter"]: views.colfooters.push(...items); break;
        case _constants__WEBPACK_IMPORTED_MODULE_0__["RowTitle"]:  views.rowtitle = items[0]; break;
        case _constants__WEBPACK_IMPORTED_MODULE_0__["ColTitle"]:  views.coltitle = items[0]; break;
        default:        views.marks.push(...items);
      }
    }
  }

  return views;
}

function bboxFlush(item) {
  return new vega_scenegraph__WEBPACK_IMPORTED_MODULE_2__["Bounds"]().set(0, 0, item.width || 0, item.height || 0);
}

function bboxFull(item) {
  var b = item.bounds.clone();
  return b.empty()
    ? b.set(0, 0, 0, 0)
    : b.translate(-(item.x || 0), -(item.y || 0));
}

function get(opt, key, d) {
  var v = Object(vega_util__WEBPACK_IMPORTED_MODULE_3__["isObject"])(opt) ? opt[key] : opt;
  return v != null ? v : (d !== undefined ? d : 0);
}

function offsetValue(v) {
  return v < 0 ? Math.ceil(-v) : 0;
}

function gridLayout(view, groups, opt) {
  var dirty = !opt.nodirty,
      bbox = opt.bounds === _constants__WEBPACK_IMPORTED_MODULE_0__["Flush"] ? bboxFlush : bboxFull,
      bounds = _util__WEBPACK_IMPORTED_MODULE_1__["tempBounds"].set(0, 0, 0, 0),
      alignCol = get(opt.align, _constants__WEBPACK_IMPORTED_MODULE_0__["Column"]),
      alignRow = get(opt.align, _constants__WEBPACK_IMPORTED_MODULE_0__["Row"]),
      padCol = get(opt.padding, _constants__WEBPACK_IMPORTED_MODULE_0__["Column"]),
      padRow = get(opt.padding, _constants__WEBPACK_IMPORTED_MODULE_0__["Row"]),
      ncols = opt.columns || groups.length,
      nrows = ncols < 0 ? 1 : Math.ceil(groups.length / ncols),
      n = groups.length,
      xOffset = Array(n), xExtent = Array(ncols), xMax = 0,
      yOffset = Array(n), yExtent = Array(nrows), yMax = 0,
      dx = Array(n), dy = Array(n), boxes = Array(n),
      m, i, c, r, b, g, px, py, x, y, offset;

  for (i=0; i<ncols; ++i) xExtent[i] = 0;
  for (i=0; i<nrows; ++i) yExtent[i] = 0;

  // determine offsets for each group
  for (i=0; i<n; ++i) {
    g = groups[i];
    b = boxes[i] = bbox(g);
    g.x = g.x || 0; dx[i] = 0;
    g.y = g.y || 0; dy[i] = 0;
    c = i % ncols;
    r = ~~(i / ncols);
    xMax = Math.max(xMax, px = Math.ceil(b.x2));
    yMax = Math.max(yMax, py = Math.ceil(b.y2));
    xExtent[c] = Math.max(xExtent[c], px);
    yExtent[r] = Math.max(yExtent[r], py);
    xOffset[i] = padCol + offsetValue(b.x1);
    yOffset[i] = padRow + offsetValue(b.y1);
    if (dirty) view.dirty(groups[i]);
  }

  // set initial alignment offsets
  for (i=0; i<n; ++i) {
    if (i % ncols === 0) xOffset[i] = 0;
    if (i < ncols) yOffset[i] = 0;
  }

  // enforce column alignment constraints
  if (alignCol === _constants__WEBPACK_IMPORTED_MODULE_0__["Each"]) {
    for (c=1; c<ncols; ++c) {
      for (offset=0, i=c; i<n; i += ncols) {
        if (offset < xOffset[i]) offset = xOffset[i];
      }
      for (i=c; i<n; i += ncols) {
        xOffset[i] = offset + xExtent[c-1];
      }
    }
  } else if (alignCol === _constants__WEBPACK_IMPORTED_MODULE_0__["All"]) {
    for (offset=0, i=0; i<n; ++i) {
      if (i % ncols && offset < xOffset[i]) offset = xOffset[i];
    }
    for (i=0; i<n; ++i) {
      if (i % ncols) xOffset[i] = offset + xMax;
    }
  } else {
    for (alignCol=false, c=1; c<ncols; ++c) {
      for (i=c; i<n; i += ncols) {
        xOffset[i] += xExtent[c-1];
      }
    }
  }

  // enforce row alignment constraints
  if (alignRow === _constants__WEBPACK_IMPORTED_MODULE_0__["Each"]) {
    for (r=1; r<nrows; ++r) {
      for (offset=0, i=r*ncols, m=i+ncols; i<m; ++i) {
        if (offset < yOffset[i]) offset = yOffset[i];
      }
      for (i=r*ncols; i<m; ++i) {
        yOffset[i] = offset + yExtent[r-1];
      }
    }
  } else if (alignRow === _constants__WEBPACK_IMPORTED_MODULE_0__["All"]) {
    for (offset=0, i=ncols; i<n; ++i) {
      if (offset < yOffset[i]) offset = yOffset[i];
    }
    for (i=ncols; i<n; ++i) {
      yOffset[i] = offset + yMax;
    }
  } else {
    for (alignRow=false, r=1; r<nrows; ++r) {
      for (i=r*ncols, m=i+ncols; i<m; ++i) {
        yOffset[i] += yExtent[r-1];
      }
    }
  }

  // perform horizontal grid layout
  for (x=0, i=0; i<n; ++i) {
    x = xOffset[i] + (i % ncols ? x : 0);
    dx[i] += x - groups[i].x;
  }

  // perform vertical grid layout
  for (c=0; c<ncols; ++c) {
    for (y=0, i=c; i<n; i += ncols) {
      y += yOffset[i];
      dy[i] += y - groups[i].y;
    }
  }

  // perform horizontal centering
  if (alignCol && get(opt.center, _constants__WEBPACK_IMPORTED_MODULE_0__["Column"]) && nrows > 1) {
    for (i=0; i<n; ++i) {
      b = alignCol === _constants__WEBPACK_IMPORTED_MODULE_0__["All"] ? xMax : xExtent[i % ncols];
      x = b - boxes[i].x2 - groups[i].x - dx[i];
      if (x > 0) dx[i] += x / 2;
    }
  }

  // perform vertical centering
  if (alignRow && get(opt.center, _constants__WEBPACK_IMPORTED_MODULE_0__["Row"]) && ncols !== 1) {
    for (i=0; i<n; ++i) {
      b = alignRow === _constants__WEBPACK_IMPORTED_MODULE_0__["All"] ? yMax : yExtent[~~(i / ncols)];
      y = b - boxes[i].y2 - groups[i].y - dy[i];
      if (y > 0) dy[i] += y / 2;
    }
  }

  // position grid relative to anchor
  for (i=0; i<n; ++i) {
    bounds.union(boxes[i].translate(dx[i], dy[i]));
  }
  x = get(opt.anchor, _constants__WEBPACK_IMPORTED_MODULE_0__["X"]);
  y = get(opt.anchor, _constants__WEBPACK_IMPORTED_MODULE_0__["Y"]);
  switch (get(opt.anchor, _constants__WEBPACK_IMPORTED_MODULE_0__["Column"])) {
    case _constants__WEBPACK_IMPORTED_MODULE_0__["End"]:    x -= bounds.width(); break;
    case _constants__WEBPACK_IMPORTED_MODULE_0__["Middle"]: x -= bounds.width() / 2;
  }
  switch (get(opt.anchor, _constants__WEBPACK_IMPORTED_MODULE_0__["Row"])) {
    case _constants__WEBPACK_IMPORTED_MODULE_0__["End"]:    y -= bounds.height(); break;
    case _constants__WEBPACK_IMPORTED_MODULE_0__["Middle"]: y -= bounds.height() / 2;
  }
  x = Math.round(x);
  y = Math.round(y);

  // update mark positions, bounds, dirty
  bounds.clear();
  for (i=0; i<n; ++i) {
    groups[i].mark.bounds.clear();
  }
  for (i=0; i<n; ++i) {
    g = groups[i];
    g.x += (dx[i] += x);
    g.y += (dy[i] += y);
    bounds.union(g.mark.bounds.union(g.bounds.translate(dx[i], dy[i])));
    if (dirty) view.dirty(g);
  }

  return bounds;
}

function trellisLayout(view, group, opt) {
  var views = gridLayoutGroups(group),
      groups = views.marks,
      bbox = opt.bounds === _constants__WEBPACK_IMPORTED_MODULE_0__["Flush"] ? boundFlush : boundFull,
      off = opt.offset,
      ncols = opt.columns || groups.length,
      nrows = ncols < 0 ? 1 : Math.ceil(groups.length / ncols),
      cells = nrows * ncols,
      x, y, x2, y2, anchor, band, offset;

  // -- initial grid layout
  const bounds = gridLayout(view, groups, opt);

  // -- layout grid headers and footers --

  // perform row header layout
  if (views.rowheaders) {
    band = get(opt.headerBand, _constants__WEBPACK_IMPORTED_MODULE_0__["Row"], null);
    x = layoutHeaders(view, views.rowheaders, groups, ncols, nrows, -get(off, 'rowHeader'), min, 0, bbox, 'x1', 0, ncols, 1, band);
  }

  // perform column header layout
  if (views.colheaders) {
    band = get(opt.headerBand, _constants__WEBPACK_IMPORTED_MODULE_0__["Column"], null);
    y = layoutHeaders(view, views.colheaders, groups, ncols, ncols, -get(off, 'columnHeader'), min, 1, bbox, 'y1', 0, 1, ncols, band);
  }

  // perform row footer layout
  if (views.rowfooters) {
    band = get(opt.footerBand, _constants__WEBPACK_IMPORTED_MODULE_0__["Row"], null);
    x2 = layoutHeaders(view, views.rowfooters, groups, ncols, nrows,  get(off, 'rowFooter'), max, 0, bbox, 'x2', ncols-1, ncols, 1, band);
  }

  // perform column footer layout
  if (views.colfooters) {
    band = get(opt.footerBand, _constants__WEBPACK_IMPORTED_MODULE_0__["Column"], null);
    y2 = layoutHeaders(view, views.colfooters, groups, ncols, ncols,  get(off, 'columnFooter'), max, 1, bbox, 'y2', cells-ncols, 1, ncols, band);
  }

  // perform row title layout
  if (views.rowtitle) {
    anchor = get(opt.titleAnchor, _constants__WEBPACK_IMPORTED_MODULE_0__["Row"]);
    offset = get(off, 'rowTitle');
    offset = anchor === _constants__WEBPACK_IMPORTED_MODULE_0__["End"] ? x2 + offset : x - offset;
    band = get(opt.titleBand, _constants__WEBPACK_IMPORTED_MODULE_0__["Row"], 0.5);
    layoutTitle(view, views.rowtitle, offset, 0, bounds, band);
  }

  // perform column title layout
  if (views.coltitle) {
    anchor = get(opt.titleAnchor, _constants__WEBPACK_IMPORTED_MODULE_0__["Column"]);
    offset = get(off, 'columnTitle');
    offset = anchor === _constants__WEBPACK_IMPORTED_MODULE_0__["End"] ? y2 + offset : y - offset;
    band = get(opt.titleBand, _constants__WEBPACK_IMPORTED_MODULE_0__["Column"], 0.5);
    layoutTitle(view, views.coltitle, offset, 1, bounds, band);
  }
}

function boundFlush(item, field) {
  return field === 'x1' ? (item.x || 0)
    : field === 'y1' ? (item.y || 0)
    : field === 'x2' ? (item.x || 0) + (item.width || 0)
    : field === 'y2' ? (item.y || 0) + (item.height || 0)
    : undefined;
}

function boundFull(item, field) {
  return item.bounds[field];
}

// aggregation functions for grid margin determination
function min(a, b) { return Math.floor(Math.min(a, b)); }
function max(a, b) { return Math.ceil(Math.max(a, b)); }

function layoutHeaders(view, headers, groups, ncols, limit, offset, agg, isX, bound, bf, start, stride, back, band) {
  var n = groups.length,
      init = 0,
      edge = 0,
      i, j, k, m, b, h, g, x, y;

  // if no groups, early exit and return 0
  if (!n) return init;

  // compute margin
  for (i=start; i<n; i+=stride) {
    if (groups[i]) init = agg(init, bound(groups[i], bf));
  }

  // if no headers, return margin calculation
  if (!headers.length) return init;

  // check if number of headers exceeds number of rows or columns
  if (headers.length > limit) {
    view.warn('Grid headers exceed limit: ' + limit);
    headers = headers.slice(0, limit);
  }

  // apply offset
  init += offset;

  // clear mark bounds for all headers
  for (j=0, m=headers.length; j<m; ++j) {
    view.dirty(headers[j]);
    headers[j].mark.bounds.clear();
  }

  // layout each header
  for (i=start, j=0, m=headers.length; j<m; ++j, i+=stride) {
    h = headers[j];
    b = h.mark.bounds;

    // search for nearest group to align to
    // necessary if table has empty cells
    for (k=i; k >= 0 && (g = groups[k]) == null; k-=back);

    // assign coordinates and update bounds
    if (isX) {
      x = band == null ? g.x : Math.round(g.bounds.x1 + band * g.bounds.width());
      y = init;
    } else {
      x = init;
      y = band == null ? g.y : Math.round(g.bounds.y1 + band * g.bounds.height());
    }
    b.union(h.bounds.translate(x - (h.x || 0), y - (h.y || 0)));
    h.x = x;
    h.y = y;
    view.dirty(h);

    // update current edge of layout bounds
    edge = agg(edge, b[bf]);
  }

  return edge;
}

function layoutTitle(view, g, offset, isX, bounds, band) {
  if (!g) return;
  view.dirty(g);

  // compute title coordinates
  var x = offset, y = offset;
  isX
    ? (x = Math.round(bounds.x1 + band * bounds.width()))
    : (y = Math.round(bounds.y1 + band * bounds.height()));

  // assign coordinates and update bounds
  g.bounds.translate(x - (g.x || 0), y - (g.y || 0));
  g.mark.bounds.clear().union(g.bounds);
  g.x = x;
  g.y = y;

  // queue title for redraw
  view.dirty(g);
}


/***/ }),

/***/ "./node_modules/vega-view-transforms/src/layout/legend.js":
/*!****************************************************************!*\
  !*** ./node_modules/vega-view-transforms/src/layout/legend.js ***!
  \****************************************************************/
/*! exports provided: legendParams, legendLayout */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "legendParams", function() { return legendParams; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "legendLayout", function() { return legendLayout; });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants */ "./node_modules/vega-view-transforms/src/constants.js");
/* harmony import */ var vega_scenegraph__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-scenegraph */ "./node_modules/vega-scenegraph/index.js");



// utility for looking up legend layout configuration
function lookup(config, orient) {
  const opt = config[orient] || {};
  return (key, d) => opt[key] != null ? opt[key]
    : config[key] != null ? config[key]
    : d;
}

// if legends specify offset directly, use the maximum specified value
function offsets(legends, value) {
  var max = -Infinity;
  legends.forEach(item => {
    if (item.offset != null) max = Math.max(max, item.offset);
  });
  return max > -Infinity ? max : value;
}

function legendParams(g, orient, config, xb, yb, w, h) {
  const _ = lookup(config, orient),
        offset = offsets(g, _('offset', 0)),
        anchor = _('anchor', _constants__WEBPACK_IMPORTED_MODULE_0__["Start"]),
        mult = anchor === _constants__WEBPACK_IMPORTED_MODULE_0__["End"] ? 1 : anchor === _constants__WEBPACK_IMPORTED_MODULE_0__["Middle"] ? 0.5 : 0;

  const p = {
    align:   _constants__WEBPACK_IMPORTED_MODULE_0__["Each"],
    bounds:  _('bounds', _constants__WEBPACK_IMPORTED_MODULE_0__["Flush"]),
    columns: _('direction') === 'vertical' ? 1 : g.length,
    padding: _('margin', 8),
    center:  _('center'),
    nodirty: true
  };

  switch (orient) {
    case _constants__WEBPACK_IMPORTED_MODULE_0__["Left"]:
      p.anchor = {
        x: Math.floor(xb.x1) - offset, column: _constants__WEBPACK_IMPORTED_MODULE_0__["End"],
        y: mult * (h || xb.height() + 2 * xb.y1), row: anchor
      };
      break;
    case _constants__WEBPACK_IMPORTED_MODULE_0__["Right"]:
      p.anchor = {
        x: Math.ceil(xb.x2) + offset,
        y: mult * (h || xb.height() + 2 * xb.y1), row: anchor
      };
      break;
    case _constants__WEBPACK_IMPORTED_MODULE_0__["Top"]:
      p.anchor = {
        y: Math.floor(yb.y1) - offset, row: _constants__WEBPACK_IMPORTED_MODULE_0__["End"],
        x: mult * (w || yb.width() + 2 * yb.x1), column: anchor
      };
      break;
    case _constants__WEBPACK_IMPORTED_MODULE_0__["Bottom"]:
      p.anchor = {
        y: Math.ceil(yb.y2) + offset,
        x: mult * (w || yb.width() + 2 * yb.x1), column: anchor
      };
      break;
    case _constants__WEBPACK_IMPORTED_MODULE_0__["TopLeft"]:
      p.anchor = {x: offset, y: offset};
      break;
    case _constants__WEBPACK_IMPORTED_MODULE_0__["TopRight"]:
      p.anchor = {x: w - offset, y: offset, column: _constants__WEBPACK_IMPORTED_MODULE_0__["End"]};
      break;
    case _constants__WEBPACK_IMPORTED_MODULE_0__["BottomLeft"]:
      p.anchor = {x: offset, y: h - offset, row: _constants__WEBPACK_IMPORTED_MODULE_0__["End"]};
      break;
    case _constants__WEBPACK_IMPORTED_MODULE_0__["BottomRight"]:
      p.anchor = {x: w - offset, y: h - offset, column: _constants__WEBPACK_IMPORTED_MODULE_0__["End"], row: _constants__WEBPACK_IMPORTED_MODULE_0__["End"]};
      break;
  }

  return p;
}

function legendLayout(view, legend) {
  var item = legend.items[0],
      datum = item.datum,
      orient = item.orient,
      bounds = item.bounds,
      x = item.x, y = item.y, w, h;

  // cache current bounds for later comparison
  item._bounds
    ? item._bounds.clear().union(bounds)
    : item._bounds = bounds.clone();
  bounds.clear();

  // adjust legend to accommodate padding and title
  legendGroupLayout(view, item, item.items[0].items[0]);

  // aggregate bounds to determine size, and include origin
  bounds = legendBounds(item, bounds);
  w = 2 * item.padding;
  h = 2 * item.padding;
  if (!bounds.empty()) {
    w = Math.ceil(bounds.width() + w);
    h = Math.ceil(bounds.height() + h);
  }

  if (datum.type === _constants__WEBPACK_IMPORTED_MODULE_0__["Symbols"]) {
    legendEntryLayout(item.items[0].items[0].items[0].items);
  }

  if (orient !== _constants__WEBPACK_IMPORTED_MODULE_0__["None"]) {
    item.x = x = 0;
    item.y = y = 0;
  }
  item.width = w;
  item.height = h;
  Object(vega_scenegraph__WEBPACK_IMPORTED_MODULE_1__["boundStroke"])(bounds.set(x, y, x + w, y + h), item);
  item.mark.bounds.clear().union(bounds);

  return item;
}

function legendBounds(item, b) {
  // aggregate item bounds
  item.items.forEach(_ => b.union(_.bounds));

  // anchor to legend origin
  b.x1 = item.padding;
  b.y1 = item.padding;

  return b;
}

function legendGroupLayout(view, item, entry) {
  var pad = item.padding,
      ex = pad - entry.x,
      ey = pad - entry.y;

  if (!item.datum.title) {
    if (ex || ey) translate(view, entry, ex, ey);
  } else {
    var title = item.items[1].items[0],
        anchor = title.anchor,
        tpad = item.titlePadding || 0,
        tx = pad - title.x,
        ty = pad - title.y;

    switch (title.orient) {
      case _constants__WEBPACK_IMPORTED_MODULE_0__["Left"]:
        ex += Math.ceil(title.bounds.width()) + tpad;
        break;
      case _constants__WEBPACK_IMPORTED_MODULE_0__["Right"]:
      case _constants__WEBPACK_IMPORTED_MODULE_0__["Bottom"]:
        break;
      default:
        ey += title.fontSize + tpad;
    }
    if (ex || ey) translate(view, entry, ex, ey);

    switch (title.orient) {
      case _constants__WEBPACK_IMPORTED_MODULE_0__["Left"]:
        ty += legendTitleOffset(item, entry, title, anchor, 0, 1);
        break;
      case _constants__WEBPACK_IMPORTED_MODULE_0__["Right"]:
        tx += legendTitleOffset(item, entry, title, _constants__WEBPACK_IMPORTED_MODULE_0__["End"], 1, 0) + tpad;
        ty += legendTitleOffset(item, entry, title, anchor, 0, 1);
        break;
      case _constants__WEBPACK_IMPORTED_MODULE_0__["Bottom"]:
        tx += legendTitleOffset(item, entry, title, anchor, 1, 0);
        ty += legendTitleOffset(item, entry, title, _constants__WEBPACK_IMPORTED_MODULE_0__["End"], 0, 0, 1) + tpad;
        break;
      default:
        tx += legendTitleOffset(item, entry, title, anchor, 1, 0);
    }
    if (tx || ty) translate(view, title, tx, ty);

    // translate legend if title pushes into negative coordinates
    if ((tx = Math.round(title.bounds.x1 - pad)) < 0) {
      translate(view, entry, -tx, 0);
      translate(view, title, -tx, 0);
    }
  }
}

function legendTitleOffset(item, entry, title, anchor, x, lr, noBar) {
  const grad = item.datum.type !== 'symbol',
        vgrad = title.datum.vgrad,
        e = grad && (lr || !vgrad) && !noBar ? entry.items[0] : entry,
        s = e.bounds[x ? 'x2' : 'y2'] - item.padding,
        u = vgrad && lr ? s : 0,
        v = vgrad && lr ? 0 : s;

  return Math.round(anchor === _constants__WEBPACK_IMPORTED_MODULE_0__["Start"] ? u : anchor === _constants__WEBPACK_IMPORTED_MODULE_0__["End"] ? v : 0.5 * s);
}

function translate(view, item, dx, dy) {
  item.x += dx;
  item.y += dy;
  item.bounds.translate(dx, dy);
  item.mark.bounds.translate(dx, dy);
  view.dirty(item);
}

function legendEntryLayout(entries) {
  // get max widths for each column
  var widths = entries.reduce(function(w, g) {
    w[g.column] = Math.max(g.bounds.x2 - g.x, w[g.column] || 0);
    return w;
  }, {});

  // set dimensions of legend entry groups
  entries.forEach(function(g) {
    g.width  = widths[g.column];
    g.height = g.bounds.y2 - g.y;
  });
}


/***/ }),

/***/ "./node_modules/vega-view-transforms/src/layout/title.js":
/*!***************************************************************!*\
  !*** ./node_modules/vega-view-transforms/src/layout/title.js ***!
  \***************************************************************/
/*! exports provided: titleLayout */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "titleLayout", function() { return titleLayout; });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants */ "./node_modules/vega-view-transforms/src/constants.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util */ "./node_modules/vega-view-transforms/src/layout/util.js");



function titleLayout(view, title, width, height, viewBounds) {
  var item = title.items[0],
      frame = item.frame,
      orient = item.orient,
      anchor = item.anchor,
      offset = item.offset,
      bounds = item.bounds,
      vertical = (orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Left"] || orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Right"]),
      start = 0,
      end = vertical ? height : width,
      x = 0, y = 0, pos;

  if (frame !== _constants__WEBPACK_IMPORTED_MODULE_0__["Group"]) {
    orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Left"] ? (start = viewBounds.y2, end = viewBounds.y1)
      : orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Right"] ? (start = viewBounds.y1, end = viewBounds.y2)
      : (start = viewBounds.x1, end = viewBounds.x2);
  } else if (orient === _constants__WEBPACK_IMPORTED_MODULE_0__["Left"]) {
    start = height, end = 0;
  }

  pos = (anchor === _constants__WEBPACK_IMPORTED_MODULE_0__["Start"]) ? start
    : (anchor === _constants__WEBPACK_IMPORTED_MODULE_0__["End"]) ? end
    : (start + end) / 2;

  _util__WEBPACK_IMPORTED_MODULE_1__["tempBounds"].clear().union(bounds);

  // position title text
  switch (orient) {
    case _constants__WEBPACK_IMPORTED_MODULE_0__["Top"]:
      x = pos;
      y = viewBounds.y1 - offset;
      break;
    case _constants__WEBPACK_IMPORTED_MODULE_0__["Left"]:
      x = viewBounds.x1 - offset;
      y = pos;
      break;
    case _constants__WEBPACK_IMPORTED_MODULE_0__["Right"]:
      x = viewBounds.x2 + offset;
      y = pos;
      break;
    case _constants__WEBPACK_IMPORTED_MODULE_0__["Bottom"]:
      x = pos;
      y = viewBounds.y2 + offset;
      break;
    default:
      x = item.x;
      y = item.y;
  }

  bounds.translate(x - (item.x || 0), y - (item.y || 0));
  if (Object(_util__WEBPACK_IMPORTED_MODULE_1__["set"])(item, 'x', x) | Object(_util__WEBPACK_IMPORTED_MODULE_1__["set"])(item, 'y', y)) {
    item.bounds = _util__WEBPACK_IMPORTED_MODULE_1__["tempBounds"];
    view.dirty(item);
    item.bounds = bounds;
    view.dirty(item);
  }

  // update bounds
  return title.bounds.clear().union(bounds);
}


/***/ }),

/***/ "./node_modules/vega-view-transforms/src/layout/util.js":
/*!**************************************************************!*\
  !*** ./node_modules/vega-view-transforms/src/layout/util.js ***!
  \**************************************************************/
/*! exports provided: tempBounds, set */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tempBounds", function() { return tempBounds; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "set", function() { return set; });
/* harmony import */ var vega_scenegraph__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-scenegraph */ "./node_modules/vega-scenegraph/index.js");


const tempBounds = new vega_scenegraph__WEBPACK_IMPORTED_MODULE_0__["Bounds"]();

function set(item, property, value) {
  return item[property] === value ? 0
    : (item[property] = value, 1);
}

/***/ }),

/***/ "./node_modules/vega-view/index.js":
/*!*****************************************!*\
  !*** ./node_modules/vega-view/index.js ***!
  \*****************************************/
/*! exports provided: View */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _src_View__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/View */ "./node_modules/vega-view/src/View.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "View", function() { return _src_View__WEBPACK_IMPORTED_MODULE_0__["default"]; });




/***/ }),

/***/ "./node_modules/vega-view/src/View.js":
/*!********************************************!*\
  !*** ./node_modules/vega-view/src/View.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return View; });
/* harmony import */ var _cursor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cursor */ "./node_modules/vega-view/src/cursor.js");
/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./data */ "./node_modules/vega-view/src/data.js");
/* harmony import */ var _events__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./events */ "./node_modules/vega-view/src/events.js");
/* harmony import */ var _hover__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./hover */ "./node_modules/vega-view/src/hover.js");
/* harmony import */ var _finalize__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./finalize */ "./node_modules/vega-view/src/finalize.js");
/* harmony import */ var _initialize__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./initialize */ "./node_modules/vega-view/src/initialize.js");
/* harmony import */ var _render_to_image_url__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./render-to-image-url */ "./node_modules/vega-view/src/render-to-image-url.js");
/* harmony import */ var _render_to_canvas__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./render-to-canvas */ "./node_modules/vega-view/src/render-to-canvas.js");
/* harmony import */ var _render_to_svg__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./render-to-svg */ "./node_modules/vega-view/src/render-to-svg.js");
/* harmony import */ var _render_size__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./render-size */ "./node_modules/vega-view/src/render-size.js");
/* harmony import */ var _runtime__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./runtime */ "./node_modules/vega-view/src/runtime.js");
/* harmony import */ var _scale__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./scale */ "./node_modules/vega-view/src/scale.js");
/* harmony import */ var _size__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./size */ "./node_modules/vega-view/src/size.js");
/* harmony import */ var _state__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./state */ "./node_modules/vega-view/src/state.js");
/* harmony import */ var _timer__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./timer */ "./node_modules/vega-view/src/timer.js");
/* harmony import */ var _tooltip__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./tooltip */ "./node_modules/vega-view/src/tooltip.js");
/* harmony import */ var _trap__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./trap */ "./node_modules/vega-view/src/trap.js");
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var vega_scenegraph__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! vega-scenegraph */ "./node_modules/vega-scenegraph/index.js");






















/**
 * Create a new View instance from a Vega dataflow runtime specification.
 * The generated View will not immediately be ready for display. Callers
 * should also invoke the initialize method (e.g., to set the parent
 * DOM element in browser-based deployment) and then invoke the run
 * method to evaluate the dataflow graph. Rendering will automatically
 * be peformed upon dataflow runs.
 * @constructor
 * @param {object} spec - The Vega dataflow runtime specification.
 */
function View(spec, options) {
  var view = this;
  options = options || {};

  vega_dataflow__WEBPACK_IMPORTED_MODULE_17__["Dataflow"].call(view);
  if (options.loader) view.loader(options.loader);
  if (options.logger) view.logger(options.logger);
  if (options.logLevel != null) view.logLevel(options.logLevel);

  view._el = null;
  view._elBind = null;
  view._renderType = options.renderer || vega_scenegraph__WEBPACK_IMPORTED_MODULE_19__["RenderType"].Canvas;
  view._scenegraph = new vega_scenegraph__WEBPACK_IMPORTED_MODULE_19__["Scenegraph"]();
  var root = view._scenegraph.root;

  // initialize renderer, handler and event management
  view._renderer = null;
  view._tooltip = options.tooltip || _tooltip__WEBPACK_IMPORTED_MODULE_15__["default"],
  view._redraw = true;
  view._handler = new vega_scenegraph__WEBPACK_IMPORTED_MODULE_19__["CanvasHandler"]().scene(root);
  view._preventDefault = false;
  view._timers = [];
  view._eventListeners = [];
  view._resizeListeners = [];

  // initialize dataflow graph
  var ctx = Object(_runtime__WEBPACK_IMPORTED_MODULE_10__["default"])(view, spec, options.functions);
  view._runtime = ctx;
  view._signals = ctx.signals;
  view._bind = (spec.bindings || []).map(function(_) {
    return {
      state: null,
      param: Object(vega_util__WEBPACK_IMPORTED_MODULE_18__["extend"])({}, _)
    };
  });

  // initialize scenegraph
  if (ctx.root) ctx.root.set(root);
  root.source = ctx.data.root.input;
  view.pulse(
    ctx.data.root.input,
    view.changeset().insert(root.items)
  );

  // initialize background color
  view._background = options.background || ctx.background || null;

  // initialize event configuration
  view._eventConfig = Object(_events__WEBPACK_IMPORTED_MODULE_2__["initializeEventConfig"])(ctx.eventConfig);

  // initialize view size
  view._width = view.width();
  view._height = view.height();
  view._viewWidth = Object(_size__WEBPACK_IMPORTED_MODULE_12__["viewWidth"])(view, view._width);
  view._viewHeight = Object(_size__WEBPACK_IMPORTED_MODULE_12__["viewHeight"])(view, view._height);
  view._origin = [0, 0];
  view._resize = 0;
  view._autosize = 1;
  Object(_size__WEBPACK_IMPORTED_MODULE_12__["initializeResize"])(view);

  // initialize cursor
  Object(_cursor__WEBPACK_IMPORTED_MODULE_0__["default"])(view);

  // initialize hover proessing, if requested
  if (options.hover) view.hover();

  // initialize DOM container(s) and renderer
  if (options.container) view.initialize(options.container, options.bind);
}

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_18__["inherits"])(View, vega_dataflow__WEBPACK_IMPORTED_MODULE_17__["Dataflow"]);

// -- DATAFLOW / RENDERING ----

prototype.evaluate = async function(encode, prerun, postrun) {
  // evaluate dataflow and prerun
  await vega_dataflow__WEBPACK_IMPORTED_MODULE_17__["Dataflow"].prototype.evaluate.call(this, encode, prerun);

  // render as needed
  if (this._redraw || this._resize) {
    try {
      if (this._renderer) {
        if (this._resize) {
          this._resize = 0;
          Object(_render_size__WEBPACK_IMPORTED_MODULE_9__["resizeRenderer"])(this);
        }
        await this._renderer.renderAsync(this._scenegraph.root);
      }
      this._redraw = false;
    } catch (e) {
      this.error(e);
    }
  }

  // evaluate postrun
  if (postrun) Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_17__["asyncCallback"])(this, postrun);

  return this;
};

prototype.dirty = function(item) {
  this._redraw = true;
  this._renderer && this._renderer.dirty(item);
};

// -- GET / SET ----

prototype.container = function() {
  return this._el;
};

prototype.scenegraph = function() {
  return this._scenegraph;
};

prototype.origin = function() {
  return this._origin.slice();
};

function lookupSignal(view, name) {
  return view._signals.hasOwnProperty(name)
    ? view._signals[name]
    : Object(vega_util__WEBPACK_IMPORTED_MODULE_18__["error"])('Unrecognized signal name: ' + Object(vega_util__WEBPACK_IMPORTED_MODULE_18__["stringValue"])(name));
}

prototype.signal = function(name, value, options) {
  var op = lookupSignal(this, name);
  return arguments.length === 1
    ? op.value
    : this.update(op, value, options);
};

prototype.background = function(_) {
  if (arguments.length) {
    this._background = _;
    this._resize = 1;
    return this;
  } else {
    return this._background;
  }
};

prototype.width = function(_) {
  return arguments.length ? this.signal('width', _) : this.signal('width');
};

prototype.height = function(_) {
  return arguments.length ? this.signal('height', _) : this.signal('height');
};

prototype.padding = function(_) {
  return arguments.length ? this.signal('padding', _) : this.signal('padding');
};

prototype.autosize = function(_) {
  return arguments.length ? this.signal('autosize', _) : this.signal('autosize');
};

prototype.renderer = function(type) {
  if (!arguments.length) return this._renderType;
  if (!Object(vega_scenegraph__WEBPACK_IMPORTED_MODULE_19__["renderModule"])(type)) Object(vega_util__WEBPACK_IMPORTED_MODULE_18__["error"])('Unrecognized renderer type: ' + type);
  if (type !== this._renderType) {
    this._renderType = type;
    this._resetRenderer();
  }
  return this;
};

prototype.tooltip = function(handler) {
  if (!arguments.length) return this._tooltip;
  if (handler !== this._tooltip) {
    this._tooltip = handler;
    this._resetRenderer();
  }
  return this;
};

prototype.loader = function(loader) {
  if (!arguments.length) return this._loader;
  if (loader !== this._loader) {
    vega_dataflow__WEBPACK_IMPORTED_MODULE_17__["Dataflow"].prototype.loader.call(this, loader);
    this._resetRenderer();
  }
  return this;
};

prototype.resize = function() {
  // set flag to perform autosize
  this._autosize = 1;
  // touch autosize signal to ensure top-level ViewLayout runs
  return this.touch(lookupSignal(this, 'autosize'));
};

prototype._resetRenderer = function() {
  if (this._renderer) {
    this._renderer = null;
    this.initialize(this._el, this._elBind);
  }
};

// -- SIZING ----
prototype._resizeView = _size__WEBPACK_IMPORTED_MODULE_12__["resizeView"];

// -- EVENT HANDLING ----

prototype.addEventListener = function(type, handler, options) {
  var callback = handler;
  if (!(options && options.trap === false)) {
    // wrap callback in error handler
    callback = Object(_trap__WEBPACK_IMPORTED_MODULE_16__["default"])(this, handler);
    callback.raw = handler;
  }
  this._handler.on(type, callback);
  return this;
};

prototype.removeEventListener = function(type, handler) {
  var handlers = this._handler.handlers(type),
      i = handlers.length, h, t;

  // search registered handlers, remove if match found
  while (--i >= 0) {
    t = handlers[i].type;
    h = handlers[i].handler;
    if (type === t && (handler === h || handler === h.raw)) {
      this._handler.off(t, h);
      break;
    }
  }
  return this;
};

prototype.addResizeListener = function(handler) {
  var l = this._resizeListeners;
  if (l.indexOf(handler) < 0) {
    // add handler if it isn't already registered
    // note: error trapping handled elsewhere, so
    // no need to wrap handlers here
    l.push(handler);
  }
  return this;
};

prototype.removeResizeListener = function(handler) {
  var l = this._resizeListeners,
      i = l.indexOf(handler);
  if (i >= 0) {
    l.splice(i, 1);
  }
  return this;
};

function findOperatorHandler(op, handler) {
  var t = op._targets || [],
      h = t.filter(function(op) {
            var u = op._update;
            return u && u.handler === handler;
          });
  return h.length ? h[0] : null;
}

function addOperatorListener(view, name, op, handler) {
  var h = findOperatorHandler(op, handler);
  if (!h) {
    h = Object(_trap__WEBPACK_IMPORTED_MODULE_16__["default"])(this, function() { handler(name, op.value); });
    h.handler = handler;
    view.on(op, null, h);
  }
  return view;
}

function removeOperatorListener(view, op, handler) {
  var h = findOperatorHandler(op, handler);
  if (h) op._targets.remove(h);
  return view;
}

prototype.addSignalListener = function(name, handler) {
  return addOperatorListener(this, name, lookupSignal(this, name), handler);
};

prototype.removeSignalListener = function(name, handler) {
  return removeOperatorListener(this, lookupSignal(this, name), handler);
};

prototype.addDataListener = function(name, handler) {
  return addOperatorListener(this, name, Object(_data__WEBPACK_IMPORTED_MODULE_1__["dataref"])(this, name).values, handler);
};

prototype.removeDataListener = function(name, handler) {
  return removeOperatorListener(this, Object(_data__WEBPACK_IMPORTED_MODULE_1__["dataref"])(this, name).values, handler);
};

prototype.preventDefault = function(_) {
  if (arguments.length) {
    this._preventDefault = _;
    return this;
  } else {
    return this._preventDefault;
  }
};

prototype.timer = _timer__WEBPACK_IMPORTED_MODULE_14__["default"];
prototype.events = _events__WEBPACK_IMPORTED_MODULE_2__["events"];
prototype.finalize = _finalize__WEBPACK_IMPORTED_MODULE_4__["default"];
prototype.hover = _hover__WEBPACK_IMPORTED_MODULE_3__["default"];

// -- DATA ----
prototype.data = _data__WEBPACK_IMPORTED_MODULE_1__["data"];
prototype.change = _data__WEBPACK_IMPORTED_MODULE_1__["change"];
prototype.insert = _data__WEBPACK_IMPORTED_MODULE_1__["insert"];
prototype.remove = _data__WEBPACK_IMPORTED_MODULE_1__["remove"];

// -- SCALES --
prototype.scale = _scale__WEBPACK_IMPORTED_MODULE_11__["scale"];

// -- INITIALIZATION ----
prototype.initialize = _initialize__WEBPACK_IMPORTED_MODULE_5__["default"];

// -- HEADLESS RENDERING ----
prototype.toImageURL = _render_to_image_url__WEBPACK_IMPORTED_MODULE_6__["default"];
prototype.toCanvas = _render_to_canvas__WEBPACK_IMPORTED_MODULE_7__["default"];
prototype.toSVG = _render_to_svg__WEBPACK_IMPORTED_MODULE_8__["default"];

// -- SAVE / RESTORE STATE ----
prototype.getState = _state__WEBPACK_IMPORTED_MODULE_13__["getState"];
prototype.setState = _state__WEBPACK_IMPORTED_MODULE_13__["setState"];


/***/ }),

/***/ "./node_modules/vega-view/src/bind.js":
/*!********************************************!*\
  !*** ./node_modules/vega-view/src/bind.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./element */ "./node_modules/vega-view/src/element.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");




var BindClass = 'vega-bind',
    NameClass = 'vega-bind-name',
    RadioClass = 'vega-bind-radio',
    OptionClass = 'vega-option-';

/**
 * Bind a signal to an external HTML input element. The resulting two-way
 * binding will propagate input changes to signals, and propagate signal
 * changes to the input element state. If this view instance has no parent
 * element, we assume the view is headless and no bindings are created.
 * @param {Element|string} el - The parent DOM element to which the input
 *   element should be appended as a child. If string-valued, this argument
 *   will be treated as a CSS selector. If null or undefined, the parent
 *   element of this view will be used as the element.
 * @param {object} param - The binding parameters which specify the signal
 *   to bind to, the input element type, and type-specific configuration.
 * @return {View} - This view instance.
 */
/* harmony default export */ __webpack_exports__["default"] = (function(view, el, binding) {
  if (!el) return;

  var param = binding.param,
      bind = binding.state;

  if (!bind) {
    bind = binding.state = {
      elements: null,
      active: false,
      set: null,
      update: function(value) {
        if (value !== view.signal(param.signal)) {
          view.runAsync(null, function() {
            bind.source = true;
            view.signal(param.signal, value);
          });
        }
      }
    };
    if (param.debounce) {
      bind.update = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["debounce"])(param.debounce, bind.update);
    }
  }

  generate(bind, el, param, view.signal(param.signal));

  if (!bind.active) {
    view.on(view._signals[param.signal], null, function() {
      bind.source
        ? (bind.source = false)
        : bind.set(view.signal(param.signal));
    });
    bind.active = true;
  }

  return bind;
});

/**
 * Generate an HTML input form element and bind it to a signal.
 */
function generate(bind, el, param, value) {
  var div = Object(_element__WEBPACK_IMPORTED_MODULE_0__["default"])('div', {'class': BindClass});

  div.appendChild(Object(_element__WEBPACK_IMPORTED_MODULE_0__["default"])('span',
    {'class': NameClass},
    (param.name || param.signal)
  ));

  el.appendChild(div);

  var input = form;
  switch (param.input) {
    case 'checkbox': input = checkbox; break;
    case 'select':   input = select; break;
    case 'radio':    input = radio; break;
    case 'range':    input = range; break;
  }

  input(bind, div, param, value);
}

/**
 * Generates an arbitrary input form element.
 * The input type is controlled via user-provided parameters.
 */
function form(bind, el, param, value) {
  var node = Object(_element__WEBPACK_IMPORTED_MODULE_0__["default"])('input');

  for (var key in param) {
    if (key !== 'signal' && key !== 'element') {
      node.setAttribute(key === 'input' ? 'type' : key, param[key]);
    }
  }
  node.setAttribute('name', param.signal);
  node.value = value;

  el.appendChild(node);

  node.addEventListener('input', function() {
    bind.update(node.value);
  });

  bind.elements = [node];
  bind.set = function(value) { node.value = value; };
}

/**
 * Generates a checkbox input element.
 */
function checkbox(bind, el, param, value) {
  var attr = {type: 'checkbox', name: param.signal};
  if (value) attr.checked = true;
  var node = Object(_element__WEBPACK_IMPORTED_MODULE_0__["default"])('input', attr);

  el.appendChild(node);

  node.addEventListener('change', function() {
    bind.update(node.checked);
  });

  bind.elements = [node];
  bind.set = function(value) { node.checked = !!value || null; }
}

/**
 * Generates a selection list input element.
 */
function select(bind, el, param, value) {
  var node = Object(_element__WEBPACK_IMPORTED_MODULE_0__["default"])('select', {name: param.signal});

  param.options.forEach(function(option) {
    var attr = {value: option};
    if (valuesEqual(option, value)) attr.selected = true;
    node.appendChild(Object(_element__WEBPACK_IMPORTED_MODULE_0__["default"])('option', attr, option+''));
  });

  el.appendChild(node);

  node.addEventListener('change', function() {
    bind.update(param.options[node.selectedIndex]);
  });

  bind.elements = [node];
  bind.set = function(value) {
    for (var i=0, n=param.options.length; i<n; ++i) {
      if (valuesEqual(param.options[i], value)) {
        node.selectedIndex = i; return;
      }
    }
  };
}

/**
 * Generates a radio button group.
 */
function radio(bind, el, param, value) {
  var group = Object(_element__WEBPACK_IMPORTED_MODULE_0__["default"])('span', {'class': RadioClass});

  el.appendChild(group);

  bind.elements = param.options.map(function(option) {
    var id = OptionClass + param.signal + '-' + option;

    var attr = {
      id:    id,
      type:  'radio',
      name:  param.signal,
      value: option
    };
    if (valuesEqual(option, value)) attr.checked = true;

    var input = Object(_element__WEBPACK_IMPORTED_MODULE_0__["default"])('input', attr);

    input.addEventListener('change', function() {
      bind.update(option);
    });

    group.appendChild(input);
    group.appendChild(Object(_element__WEBPACK_IMPORTED_MODULE_0__["default"])('label', {'for': id}, option+''));

    return input;
  });

  bind.set = function(value) {
    var nodes = bind.elements,
        i = 0,
        n = nodes.length;
    for (; i<n; ++i) {
      if (valuesEqual(nodes[i].value, value)) nodes[i].checked = true;
    }
  };
}

/**
 * Generates a slider input element.
 */
function range(bind, el, param, value) {
  value = value !== undefined ? value : ((+param.max) + (+param.min)) / 2;

  var min = param.min || Math.min(0, +value) || 0,
      max = param.max || Math.max(100, +value) || 100,
      step = param.step || Object(d3_array__WEBPACK_IMPORTED_MODULE_2__["tickStep"])(min, max, 100);

  var node = Object(_element__WEBPACK_IMPORTED_MODULE_0__["default"])('input', {
    type:  'range',
    name:  param.signal,
    min:   min,
    max:   max,
    step:  step
  });
  node.value = value;

  var label = Object(_element__WEBPACK_IMPORTED_MODULE_0__["default"])('label', {}, +value);

  el.appendChild(node);
  el.appendChild(label);

  function update() {
    label.textContent = node.value;
    bind.update(+node.value);
  }

  // subscribe to both input and change
  node.addEventListener('input', update);
  node.addEventListener('change', update);

  bind.elements = [node];
  bind.set = function(value) {
    node.value = value;
    label.textContent = value;
  };
}

function valuesEqual(a, b) {
  return a === b || (a+'' === b+'');
}


/***/ }),

/***/ "./node_modules/vega-view/src/cursor.js":
/*!**********************************************!*\
  !*** ./node_modules/vega-view/src/cursor.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");


var Default = 'default';

/* harmony default export */ __webpack_exports__["default"] = (function(view) {
  var cursor = view._signals.cursor;

  // add cursor signal to dataflow, if needed
  if (!cursor) {
    view._signals.cursor = (cursor = view.add({user: Default, item: null}));
  }

  // evaluate cursor on each mousemove event
  view.on(view.events('view', 'mousemove'), cursor,
    function(_, event) {
      var value = cursor.value,
          user = value ? (Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isString"])(value) ? value : value.user) : Default,
          item = event.item && event.item.cursor || null;

      return (value && user === value.user && item == value.item) ? value
        : {user: user, item: item};
    }
  );

  // when cursor signal updates, set visible cursor
  view.add(null, function(_) {
    var user = _.cursor,
        item = this.value;

    if (!Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isString"])(user)) {
      item = user.item;
      user = user.user;
    }

    setCursor(user && user !== Default ? user : (item || user));

    return item;
  }, {cursor: cursor});
});

function setCursor(cursor) {
  // set cursor on document body
  // this ensures cursor applies even if dragging out of view
  if (typeof document !== 'undefined' && document.body) {
    document.body.style.cursor = cursor;
  }
}


/***/ }),

/***/ "./node_modules/vega-view/src/data.js":
/*!********************************************!*\
  !*** ./node_modules/vega-view/src/data.js ***!
  \********************************************/
/*! exports provided: dataref, data, change, insert, remove */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dataref", function() { return dataref; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "data", function() { return data; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "change", function() { return change; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "insert", function() { return insert; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "remove", function() { return remove; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");



function dataref(view, name) {
  var data = view._runtime.data;
  if (!data.hasOwnProperty(name)) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["error"])('Unrecognized data set: ' + name);
  }
  return data[name];
}

function data(name) {
  return dataref(this, name).values.value;
}

function change(name, changes) {
  if (!Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["isChangeSet"])(changes)) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["error"])('Second argument to changes must be a changeset.');
  }
  var dataset = dataref(this, name);
  dataset.modified = true;
  return this.pulse(dataset.input, changes);
}

function insert(name, _) {
  return change.call(this, name, Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["changeset"])().insert(_));
}

function remove(name, _) {
  return change.call(this, name, Object(vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["changeset"])().remove(_));
}


/***/ }),

/***/ "./node_modules/vega-view/src/element.js":
/*!***********************************************!*\
  !*** ./node_modules/vega-view/src/element.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(tag, attr, text) {
  var el = document.createElement(tag);
  for (var key in attr) el.setAttribute(key, attr[key]);
  if (text != null) el.textContent = text;
  return el;
});


/***/ }),

/***/ "./node_modules/vega-view/src/events-extend.js":
/*!*****************************************************!*\
  !*** ./node_modules/vega-view/src/events-extend.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _render_size__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./render-size */ "./node_modules/vega-view/src/render-size.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var vega_scenegraph__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-scenegraph */ "./node_modules/vega-scenegraph/index.js");




/**
 * Extend an event with additional view-specific methods.
 * Adds a new property ('vega') to an event that provides a number
 * of methods for querying information about the current interaction.
 * The vega object provides the following methods:
 *   view - Returns the backing View instance.
 *   item - Returns the currently active scenegraph item (if any).
 *   group - Returns the currently active scenegraph group (if any).
 *     This method accepts a single string-typed argument indicating the name
 *     of the desired parent group. The scenegraph will be traversed from
 *     the item up towards the root to search for a matching group. If no
 *     argument is provided the enclosing group for the active item is
 *     returned, unless the item it itself a group, in which case it is
 *     returned directly.
 *   xy - Returns a two-element array containing the x and y coordinates for
 *     mouse or touch events. For touch events, this is based on the first
 *     elements in the changedTouches array. This method accepts a single
 *     argument: either an item instance or mark name that should serve as
 *     the reference coordinate system. If no argument is provided the
 *     top-level view coordinate system is assumed.
 *   x - Returns the current x-coordinate, accepts the same arguments as xy.
 *   y - Returns the current y-coordinate, accepts the same arguments as xy.
 * @param {Event} event - The input event to extend.
 * @param {Item} item - The currently active scenegraph item (if any).
 * @return {Event} - The extended input event.
 */
/* harmony default export */ __webpack_exports__["default"] = (function(view, event, item) {
  var r  = view._renderer,
      el = r && r.canvas(),
      p, e, translate;

  if (el) {
    translate = Object(_render_size__WEBPACK_IMPORTED_MODULE_0__["offset"])(view);
    e = event.changedTouches ? event.changedTouches[0] : event;
    p = Object(vega_scenegraph__WEBPACK_IMPORTED_MODULE_2__["point"])(e, el);
    p[0] -= translate[0];
    p[1] -= translate[1];
  }

  event.dataflow = view;
  event.item = item;
  event.vega = extension(view, item, p);
  return event;
});

function extension(view, item, point) {
  var itemGroup = item
    ? item.mark.marktype === 'group' ? item : item.mark.group
    : null;

  function group(name) {
    var g = itemGroup, i;
    if (name) for (i = item; i; i = i.mark.group) {
      if (i.mark.name === name) { g = i; break; }
    }
    return g && g.mark && g.mark.interactive ? g : {};
  }

  function xy(item) {
    if (!item) return point;
    if (Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isString"])(item)) item = group(item);

    var p = point.slice();
    while (item) {
      p[0] -= item.x || 0;
      p[1] -= item.y || 0;
      item = item.mark && item.mark.group;
    }
    return p;
  }

  return {
    view:  Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["constant"])(view),
    item:  Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["constant"])(item || {}),
    group: group,
    xy:    xy,
    x:     function(item) { return xy(item)[0]; },
    y:     function(item) { return xy(item)[1]; }
  };
}


/***/ }),

/***/ "./node_modules/vega-view/src/events.js":
/*!**********************************************!*\
  !*** ./node_modules/vega-view/src/events.js ***!
  \**********************************************/
/*! exports provided: initializeEventConfig, events */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initializeEventConfig", function() { return initializeEventConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "events", function() { return events; });
/* harmony import */ var _events_extend__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./events-extend */ "./node_modules/vega-view/src/events-extend.js");
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");




var VIEW = 'view',
    TIMER = 'timer',
    WINDOW = 'window',
    NO_TRAP = {trap: false};

/**
 * Initialize event handling configuration.
 * @param {object} config - The configuration settings.
 * @return {object}
 */
function initializeEventConfig(config) {
  config = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["extend"])({}, config);

  var def = config.defaults;
  if (def) {
    if (Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["isArray"])(def.prevent)) {
      def.prevent = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["toSet"])(def.prevent);
    }
    if (Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["isArray"])(def.allow)) {
      def.allow = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["toSet"])(def.allow);
    }
  }

  return config;
}

function prevent(view, type) {
  var def = view._eventConfig.defaults,
      prevent = def && def.prevent,
      allow = def && def.allow;

  return prevent === false || allow === true ? false
    : prevent === true || allow === false ? true
    : prevent ? prevent[type]
    : allow ? !allow[type]
    : view.preventDefault();
}

/**
 * Create a new event stream from an event source.
 * @param {object} source - The event source to monitor.
 * @param {string} type - The event type.
 * @param {function(object): boolean} [filter] - Event filter function.
 * @return {EventStream}
 */
function events(source, type, filter) {
  var view = this,
      s = new vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["EventStream"](filter),
      send = function(e, item) {
        view.runAsync(null, () => {
          if (source === VIEW && prevent(view, type)) {
            e.preventDefault();
          }
          s.receive(Object(_events_extend__WEBPACK_IMPORTED_MODULE_0__["default"])(view, e, item));
        });
      },
      sources;

  if (source === TIMER) {
    view.timer(send, type);
  }

  else if (source === VIEW) {
    // send traps errors, so use {trap: false} option
    view.addEventListener(type, send, NO_TRAP);
  }

  else {
    if (source === WINDOW) {
      if (typeof window !== 'undefined') sources = [window];
    } else if (typeof document !== 'undefined') {
      sources = document.querySelectorAll(source);
    }

    if (!sources) {
      view.warn('Can not resolve event source: ' + source);
    } else {
      for (var i=0, n=sources.length; i<n; ++i) {
        sources[i].addEventListener(type, send);
      }

      view._eventListeners.push({
        type:    type,
        sources: sources,
        handler: send
      });
    }
  }

  return s;
}


/***/ }),

/***/ "./node_modules/vega-view/src/finalize.js":
/*!************************************************!*\
  !*** ./node_modules/vega-view/src/finalize.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * Finalize a View instance that is being removed.
 * Cancel any running timers.
 * Remove all external event listeners.
 * Remove any currently displayed tooltip.
 */
/* harmony default export */ __webpack_exports__["default"] = (function() {
  var tooltip = this._tooltip,
      timers = this._timers,
      listeners = this._eventListeners,
      n, m, e;

  n = timers.length;
  while (--n >= 0) {
    timers[n].stop();
  }

  n = listeners.length;
  while (--n >= 0) {
    e = listeners[n];
    m = e.sources.length;
    while (--m >= 0) {
      e.sources[m].removeEventListener(e.type, e.handler);
    }
  }

  if (tooltip) {
    tooltip.call(this, this._handler, null, null, null);
  }

  return this;
});


/***/ }),

/***/ "./node_modules/vega-view/src/hover.js":
/*!*********************************************!*\
  !*** ./node_modules/vega-view/src/hover.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function itemFilter(event) {
  return event.item;
}

function markTarget(event) {
  // grab upstream collector feeding the mark operator
  var source = event.item.mark.source;
  return source.source || source;
}

function invoke(name) {
  return function(_, event) {
    return event.vega.view()
      .changeset()
      .encode(event.item, name);
  };
}

/* harmony default export */ __webpack_exports__["default"] = (function(hoverSet, leaveSet) {
  hoverSet = [hoverSet || 'hover'];
  leaveSet = [leaveSet || 'update', hoverSet[0]];

  // invoke hover set upon mouseover
  this.on(
    this.events('view', 'mouseover', itemFilter),
    markTarget,
    invoke(hoverSet)
  );

  // invoke leave set upon mouseout
  this.on(
    this.events('view', 'mouseout', itemFilter),
    markTarget,
    invoke(leaveSet)
  );

  return this;
});


/***/ }),

/***/ "./node_modules/vega-view/src/initialize-handler.js":
/*!**********************************************************!*\
  !*** ./node_modules/vega-view/src/initialize-handler.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _render_size__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./render-size */ "./node_modules/vega-view/src/render-size.js");
/* harmony import */ var _trap__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./trap */ "./node_modules/vega-view/src/trap.js");



/* harmony default export */ __webpack_exports__["default"] = (function(view, prevHandler, el, constructor) {
  // instantiate scenegraph handler
  var handler = new constructor(view.loader(), Object(_trap__WEBPACK_IMPORTED_MODULE_1__["default"])(view, view.tooltip()))
    .scene(view.scenegraph().root)
    .initialize(el, Object(_render_size__WEBPACK_IMPORTED_MODULE_0__["offset"])(view), view);

  // transfer event handlers
  if (prevHandler) {
    prevHandler.handlers().forEach(function(h) {
      handler.on(h.type, h.handler);
    });
  }

  return handler;
});


/***/ }),

/***/ "./node_modules/vega-view/src/initialize-renderer.js":
/*!***********************************************************!*\
  !*** ./node_modules/vega-view/src/initialize-renderer.js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _render_size__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./render-size */ "./node_modules/vega-view/src/render-size.js");


/* harmony default export */ __webpack_exports__["default"] = (function(view, r, el, constructor, scaleFactor, opt) {
  r = r || new constructor(view.loader());
  return r
    .initialize(el, Object(_render_size__WEBPACK_IMPORTED_MODULE_0__["width"])(view), Object(_render_size__WEBPACK_IMPORTED_MODULE_0__["height"])(view), Object(_render_size__WEBPACK_IMPORTED_MODULE_0__["offset"])(view), scaleFactor, opt)
    .background(view._background);
});


/***/ }),

/***/ "./node_modules/vega-view/src/initialize.js":
/*!**************************************************!*\
  !*** ./node_modules/vega-view/src/initialize.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _bind__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bind */ "./node_modules/vega-view/src/bind.js");
/* harmony import */ var _element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./element */ "./node_modules/vega-view/src/element.js");
/* harmony import */ var _initialize_renderer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./initialize-renderer */ "./node_modules/vega-view/src/initialize-renderer.js");
/* harmony import */ var _initialize_handler__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./initialize-handler */ "./node_modules/vega-view/src/initialize-handler.js");
/* harmony import */ var vega_scenegraph__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! vega-scenegraph */ "./node_modules/vega-scenegraph/index.js");






/* harmony default export */ __webpack_exports__["default"] = (function(el, elBind) {
  var view = this,
      type = view._renderType,
      module = Object(vega_scenegraph__WEBPACK_IMPORTED_MODULE_4__["renderModule"])(type),
      Handler, Renderer;

  // containing dom element
  el = view._el = el ? lookup(view, el) : null;

  // select appropriate renderer & handler
  if (!module) view.error('Unrecognized renderer type: ' + type);
  Handler = module.handler || vega_scenegraph__WEBPACK_IMPORTED_MODULE_4__["CanvasHandler"];
  Renderer = (el ? module.renderer : module.headless);

  // initialize renderer and input handler
  view._renderer = !Renderer ? null
    : Object(_initialize_renderer__WEBPACK_IMPORTED_MODULE_2__["default"])(view, view._renderer, el, Renderer);
  view._handler = Object(_initialize_handler__WEBPACK_IMPORTED_MODULE_3__["default"])(view, view._handler, el, Handler);
  view._redraw = true;

  // initialize signal bindings
  if (el) {
    elBind = elBind ? (view._elBind = lookup(view, elBind))
      : el.appendChild(Object(_element__WEBPACK_IMPORTED_MODULE_1__["default"])('div', {'class': 'vega-bindings'}));

    view._bind.forEach(function(_) {
      if (_.param.element) {
        _.element = lookup(view, _.param.element);
      }
    });

    view._bind.forEach(function(_) {
      Object(_bind__WEBPACK_IMPORTED_MODULE_0__["default"])(view, _.element || elBind, _);
    });
  }

  return view;
});

function lookup(view, el) {
  if (typeof el === 'string') {
    if (typeof document !== 'undefined') {
      el = document.querySelector(el);
      if (!el) {
        view.error('Signal bind element not found: ' + el);
        return null;
      }
    } else {
      view.error('DOM document instance not found.');
      return null;
    }
  }
  if (el) {
    try {
      el.innerHTML = '';
    } catch (e) {
      el = null;
      view.error(e);
    }
  }
  return el;
}


/***/ }),

/***/ "./node_modules/vega-view/src/render-headless.js":
/*!*******************************************************!*\
  !*** ./node_modules/vega-view/src/render-headless.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _initialize_renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./initialize-renderer */ "./node_modules/vega-view/src/initialize-renderer.js");
/* harmony import */ var vega_scenegraph__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-scenegraph */ "./node_modules/vega-scenegraph/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");




/**
 * Render the current scene in a headless fashion.
 * This method is asynchronous, returning a Promise instance.
 * @return {Promise} - A Promise that resolves to a renderer.
 */
/* harmony default export */ __webpack_exports__["default"] = (async function(view, type, scaleFactor, opt) {
  const module = Object(vega_scenegraph__WEBPACK_IMPORTED_MODULE_1__["renderModule"])(type),
        ctr = module && module.headless;

  if (!ctr) Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["error"])('Unrecognized renderer type: ' + type);

  await view.runAsync();
  return Object(_initialize_renderer__WEBPACK_IMPORTED_MODULE_0__["default"])(view, null, null, ctr, scaleFactor, opt)
    .renderAsync(view._scenegraph.root);
});


/***/ }),

/***/ "./node_modules/vega-view/src/render-size.js":
/*!***************************************************!*\
  !*** ./node_modules/vega-view/src/render-size.js ***!
  \***************************************************/
/*! exports provided: width, height, offset, resizeRenderer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "width", function() { return width; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "height", function() { return height; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "offset", function() { return offset; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "resizeRenderer", function() { return resizeRenderer; });
function width(view) {
  var padding = view.padding();
  return Math.max(0, view._viewWidth + padding.left + padding.right);
}

function height(view) {
  var padding = view.padding();
  return Math.max(0, view._viewHeight + padding.top + padding.bottom);
}

function offset(view) {
  var padding = view.padding(),
      origin = view._origin;
  return [
    padding.left + origin[0],
    padding.top + origin[1]
  ];
}

function resizeRenderer(view) {
  var origin = offset(view),
      w = width(view),
      h = height(view);

  view._renderer.background(view._background);
  view._renderer.resize(w, h, origin);
  view._handler.origin(origin);

  view._resizeListeners.forEach(function(handler) {
    try {
      handler(w, h);
    } catch (error) {
      view.error(error);
    }
  });
}


/***/ }),

/***/ "./node_modules/vega-view/src/render-to-canvas.js":
/*!********************************************************!*\
  !*** ./node_modules/vega-view/src/render-to-canvas.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _render_headless__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./render-headless */ "./node_modules/vega-view/src/render-headless.js");
/* harmony import */ var vega_scenegraph__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-scenegraph */ "./node_modules/vega-scenegraph/index.js");



/**
 * Produce a Canvas instance containing a rendered visualization.
 * This method is asynchronous, returning a Promise instance.
 * @return {Promise} - A promise that resolves to a Canvas instance.
 */
/* harmony default export */ __webpack_exports__["default"] = (async function(scaleFactor, opt) {
  const r = await Object(_render_headless__WEBPACK_IMPORTED_MODULE_0__["default"])(this, vega_scenegraph__WEBPACK_IMPORTED_MODULE_1__["RenderType"].Canvas, scaleFactor, opt);
  return r.canvas();
});


/***/ }),

/***/ "./node_modules/vega-view/src/render-to-image-url.js":
/*!***********************************************************!*\
  !*** ./node_modules/vega-view/src/render-to-image-url.js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _render_headless__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./render-headless */ "./node_modules/vega-view/src/render-headless.js");
/* harmony import */ var vega_scenegraph__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-scenegraph */ "./node_modules/vega-scenegraph/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");




/**
 * Produce an image URL for the visualization. Depending on the type
 * parameter, the generated URL contains data for either a PNG or SVG image.
 * The URL can be used (for example) to download images of the visualization.
 * This method is asynchronous, returning a Promise instance.
 * @param {string} type - The image type. One of 'svg', 'png' or 'canvas'.
 *   The 'canvas' and 'png' types are synonyms for a PNG image.
 * @return {Promise} - A promise that resolves to an image URL.
 */
/* harmony default export */ __webpack_exports__["default"] = (async function(type, scaleFactor) {
  if (type !== vega_scenegraph__WEBPACK_IMPORTED_MODULE_1__["RenderType"].Canvas && type !== vega_scenegraph__WEBPACK_IMPORTED_MODULE_1__["RenderType"].SVG && type !== vega_scenegraph__WEBPACK_IMPORTED_MODULE_1__["RenderType"].PNG) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["error"])('Unrecognized image type: ' + type);
  }

  const r = await Object(_render_headless__WEBPACK_IMPORTED_MODULE_0__["default"])(this, type, scaleFactor);
  return type === vega_scenegraph__WEBPACK_IMPORTED_MODULE_1__["RenderType"].SVG
    ? toBlobURL(r.svg(), 'image/svg+xml')
    : r.canvas().toDataURL('image/png');
});

function toBlobURL(data, mime) {
  var blob = new Blob([data], {type: mime});
  return window.URL.createObjectURL(blob);
}


/***/ }),

/***/ "./node_modules/vega-view/src/render-to-svg.js":
/*!*****************************************************!*\
  !*** ./node_modules/vega-view/src/render-to-svg.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _render_headless__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./render-headless */ "./node_modules/vega-view/src/render-headless.js");
/* harmony import */ var vega_scenegraph__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-scenegraph */ "./node_modules/vega-scenegraph/index.js");



/**
 * Produce a rendered SVG string of the visualization.
 * This method is asynchronous, returning a Promise instance.
 * @return {Promise} - A promise that resolves to an SVG string.
 */
/* harmony default export */ __webpack_exports__["default"] = (async function(scaleFactor) {
  const r = await Object(_render_headless__WEBPACK_IMPORTED_MODULE_0__["default"])(this, vega_scenegraph__WEBPACK_IMPORTED_MODULE_1__["RenderType"].SVG, scaleFactor);
  return r.svg();
});


/***/ }),

/***/ "./node_modules/vega-view/src/runtime.js":
/*!***********************************************!*\
  !*** ./node_modules/vega-view/src/runtime.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_functions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-functions */ "./node_modules/vega-functions/index.js");
/* harmony import */ var vega_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-runtime */ "./node_modules/vega-runtime/index.js");




/* harmony default export */ __webpack_exports__["default"] = (function(view, spec, functions) {
  var fn = functions || vega_functions__WEBPACK_IMPORTED_MODULE_1__["functionContext"];
  return Object(vega_runtime__WEBPACK_IMPORTED_MODULE_2__["parse"])(spec, Object(vega_runtime__WEBPACK_IMPORTED_MODULE_2__["context"])(view, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["transforms"], fn));
});


/***/ }),

/***/ "./node_modules/vega-view/src/scale.js":
/*!*********************************************!*\
  !*** ./node_modules/vega-view/src/scale.js ***!
  \*********************************************/
/*! exports provided: scale */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scale", function() { return scale; });
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");


function scale(name) {
  var scales = this._runtime.scales;
  if (!scales.hasOwnProperty(name)) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["error"])('Unrecognized scale or projection: ' + name);
  }
  return scales[name].value;
}


/***/ }),

/***/ "./node_modules/vega-view/src/size.js":
/*!********************************************!*\
  !*** ./node_modules/vega-view/src/size.js ***!
  \********************************************/
/*! exports provided: viewWidth, viewHeight, initializeResize, resizeView */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "viewWidth", function() { return viewWidth; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "viewHeight", function() { return viewHeight; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initializeResize", function() { return initializeResize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "resizeView", function() { return resizeView; });
var Width = 'width',
    Height = 'height',
    Padding = 'padding',
    Skip = {skip: true};

function viewWidth(view, width) {
  var a = view.autosize(),
      p = view.padding();
  return width - (a && a.contains === Padding ? p.left + p.right : 0);
}

function viewHeight(view, height) {
  var a = view.autosize(),
      p = view.padding();
  return height - (a && a.contains === Padding ? p.top + p.bottom : 0);
}

function initializeResize(view) {
  var s = view._signals,
      w = s[Width],
      h = s[Height],
      p = s[Padding];

  function resetSize() {
    view._autosize = view._resize = 1;
  }

  // respond to width signal
  view._resizeWidth = view.add(null,
    function(_) {
      view._width = _.size;
      view._viewWidth = viewWidth(view, _.size);
      resetSize();
    },
    {size: w}
  );

  // respond to height signal
  view._resizeHeight = view.add(null,
    function(_) {
      view._height = _.size;
      view._viewHeight = viewHeight(view, _.size);
      resetSize();
    },
    {size: h}
  );

  // respond to padding signal
  var resizePadding = view.add(null, resetSize, {pad: p});

  // set rank to run immediately after source signal
  view._resizeWidth.rank = w.rank + 1;
  view._resizeHeight.rank = h.rank + 1;
  resizePadding.rank = p.rank + 1;
}

function resizeView(viewWidth, viewHeight, width, height, origin, auto) {
  this.runAfter(function(view) {
    var rerun = 0;

    // reset autosize flag
    view._autosize = 0;

    // width value changed: update signal, skip resize op
    if (view.width() !== width) {
      rerun = 1;
      view.signal(Width, width, Skip); // set width, skip update calc
      view._resizeWidth.skip(true); // skip width resize handler
    }

    // height value changed: update signal, skip resize op
    if (view.height() !== height) {
      rerun = 1;
      view.signal(Height, height, Skip); // set height, skip update calc
      view._resizeHeight.skip(true); // skip height resize handler
    }

    // view width changed: update view property, set resize flag
    if (view._viewWidth !== viewWidth) {
      view._resize = 1;
      view._viewWidth = viewWidth;
    }

    // view height changed: update view property, set resize flag
    if (view._viewHeight !== viewHeight) {
      view._resize = 1;
      view._viewHeight = viewHeight;
    }

    // origin changed: update view property, set resize flag
    if (view._origin[0] !== origin[0] || view._origin[1] !== origin[1]) {
      view._resize = 1;
      view._origin = origin;
    }

    // run dataflow on width/height signal change
    if (rerun) view.run('enter');
    if (auto) view.runAfter(v => v.resize());
  }, false, 1);
}


/***/ }),

/***/ "./node_modules/vega-view/src/state.js":
/*!*********************************************!*\
  !*** ./node_modules/vega-view/src/state.js ***!
  \*********************************************/
/*! exports provided: getState, setState */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getState", function() { return getState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setState", function() { return setState; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");



/**
 * Get the current view state, consisting of signal values and/or data sets.
 * @param {object} [options] - Options flags indicating which state to export.
 *   If unspecified, all signals and data sets will be exported.
 * @param {function(string, Operator):boolean} [options.signals] - Optional
 *   predicate function for testing if a signal should be included in the
 *   exported state. If unspecified, all signals will be included, except for
 *   those named 'parent' or those which refer to a Transform value.
 * @param {function(string, object):boolean} [options.data] - Optional
 *   predicate function for testing if a data set's input should be included
 *   in the exported state. If unspecified, all data sets that have been
 *   explicitly modified will be included.
 * @param {boolean} [options.recurse=true] - Flag indicating if the exported
 *   state should recursively include state from group mark sub-contexts.
 * @return {object} - An object containing the exported state values.
 */
function getState(options) {
  return this._runtime.getState(options || {
    data:    dataTest,
    signals: signalTest,
    recurse: true
  });
}

function dataTest(name, data) {
  return data.modified
      && Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(data.input.value)
      && name.indexOf('_:vega:_');
}

function signalTest(name, op) {
  return !(name === 'parent' || op instanceof vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["transforms"].proxy);
}

/**
 * Sets the current view state and updates the view by invoking run.
 * @param {object} state - A state object containing signal and/or
 *   data set values, following the format used by the getState method.
 * @return {View} - This view instance.
 */
function setState(state) {
  this.runAsync(null,
    v => { v._trigger = false; v._runtime.setState(state); },
    v => { v._trigger = true; }
  );
  return this;
}


/***/ }),

/***/ "./node_modules/vega-view/src/timer.js":
/*!*********************************************!*\
  !*** ./node_modules/vega-view/src/timer.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_timer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-timer */ "./node_modules/d3-timer/src/index.js");


/* harmony default export */ __webpack_exports__["default"] = (function(callback, delay) {
  function tick(elapsed) {
    callback({timestamp: Date.now(), elapsed: elapsed});
  }
  this._timers.push(Object(d3_timer__WEBPACK_IMPORTED_MODULE_0__["interval"])(tick, delay));
});


/***/ }),

/***/ "./node_modules/vega-view/src/tooltip.js":
/*!***********************************************!*\
  !*** ./node_modules/vega-view/src/tooltip.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");


/* harmony default export */ __webpack_exports__["default"] = (function(handler, event, item, value) {
  var el = handler.element();
  if (el) el.setAttribute('title', formatTooltip(value));
});

function formatTooltip(value) {
  return value == null ? ''
    : Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isArray"])(value) ? formatArray(value)
    : Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isObject"])(value) && !Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isDate"])(value) ? formatObject(value)
    : value + '';
}

function formatObject(obj) {
  return Object.keys(obj).map(function(key) {
    var v = obj[key];
    return key + ': ' + (Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isArray"])(v) ? formatArray(v) : formatValue(v));
  }).join('\n');
}

function formatArray(value) {
  return '[' + value.map(formatValue).join(', ') + ']';
}

function formatValue(value) {
  return Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isArray"])(value) ? '[\u2026]'
    : Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isObject"])(value) && !Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["isDate"])(value) ? '{\u2026}'
    : value;
}


/***/ }),

/***/ "./node_modules/vega-view/src/trap.js":
/*!********************************************!*\
  !*** ./node_modules/vega-view/src/trap.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(view, fn) {
  return !fn ? null : function() {
    try {
      fn.apply(this, arguments);
    } catch (error) {
      view.error(error);
    }
  };
});


/***/ }),

/***/ "./node_modules/vega-voronoi/index.js":
/*!********************************************!*\
  !*** ./node_modules/vega-voronoi/index.js ***!
  \********************************************/
/*! exports provided: voronoi */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _src_Voronoi__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/Voronoi */ "./node_modules/vega-voronoi/src/Voronoi.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "voronoi", function() { return _src_Voronoi__WEBPACK_IMPORTED_MODULE_0__["default"]; });




/***/ }),

/***/ "./node_modules/vega-voronoi/src/Voronoi.js":
/*!**************************************************!*\
  !*** ./node_modules/vega-voronoi/src/Voronoi.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Voronoi; });
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var d3_voronoi__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-voronoi */ "./node_modules/d3-voronoi/src/index.js");




function Voronoi(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"].call(this, null, params);
}

Voronoi.Definition = {
  "type": "Voronoi",
  "metadata": {"modifies": true},
  "params": [
    { "name": "x", "type": "field", "required": true },
    { "name": "y", "type": "field", "required": true },
    { "name": "size", "type": "number", "array": true, "length": 2 },
    { "name": "extent", "type": "array", "array": true, "length": 2,
      "default": [[-1e5, -1e5], [1e5, 1e5]],
      "content": {"type": "number", "array": true, "length": 2} },
    { "name": "as", "type": "string", "default": "path" }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_1__["inherits"])(Voronoi, vega_dataflow__WEBPACK_IMPORTED_MODULE_0__["Transform"]);

var defaultExtent = [[-1e5, -1e5], [1e5, 1e5]];

prototype.transform = function(_, pulse) {
  var as = _.as || 'path',
      data = pulse.source,
      diagram, polygons, i, n;

  // configure and construct voronoi diagram
  diagram = Object(d3_voronoi__WEBPACK_IMPORTED_MODULE_2__["voronoi"])().x(_.x).y(_.y);
  if (_.size) diagram.size(_.size);
  else diagram.extent(_.extent || defaultExtent);

  this.value = (diagram = diagram(data));

  // map polygons to paths
  polygons = diagram.polygons();
  for (i=0, n=data.length; i<n; ++i) {
    data[i][as] = polygons[i]
      ? 'M' + polygons[i].join('L') + 'Z'
      : null;
  }

  return pulse.reflow(_.modified()).modifies(as);
};


/***/ }),

/***/ "./node_modules/vega-wordcloud/index.js":
/*!**********************************************!*\
  !*** ./node_modules/vega-wordcloud/index.js ***!
  \**********************************************/
/*! exports provided: wordcloud */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _src_Wordcloud__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/Wordcloud */ "./node_modules/vega-wordcloud/src/Wordcloud.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "wordcloud", function() { return _src_Wordcloud__WEBPACK_IMPORTED_MODULE_0__["default"]; });




/***/ }),

/***/ "./node_modules/vega-wordcloud/src/CloudLayout.js":
/*!********************************************************!*\
  !*** ./node_modules/vega-wordcloud/src/CloudLayout.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var vega_canvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-canvas */ "./node_modules/vega-canvas/index.browser.js");


/*
Copyright (c) 2013, Jason Davies.
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

  * Redistributions of source code must retain the above copyright notice, this
    list of conditions and the following disclaimer.

  * Redistributions in binary form must reproduce the above copyright notice,
    this list of conditions and the following disclaimer in the documentation
    and/or other materials provided with the distribution.

  * The name Jason Davies may not be used to endorse or promote products
    derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL JASON DAVIES BE LIABLE FOR ANY DIRECT, INDIRECT,
INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

// Word cloud layout by Jason Davies, https://www.jasondavies.com/wordcloud/
// Algorithm due to Jonathan Feinberg, http://static.mrfeinberg.com/bv_ch03.pdf

var cloudRadians = Math.PI / 180,
    cw = 1 << 11 >> 5,
    ch = 1 << 11;

/* harmony default export */ __webpack_exports__["default"] = (function() {
  var size = [256, 256],
      text,
      font,
      fontSize,
      fontStyle,
      fontWeight,
      rotate,
      padding,
      spiral = archimedeanSpiral,
      words = [],
      random = Math.random,
      cloud = {};

  cloud.layout = function() {
    var contextAndRatio = getContext(Object(vega_canvas__WEBPACK_IMPORTED_MODULE_0__["canvas"])()),
        board = zeroArray((size[0] >> 5) * size[1]),
        bounds = null,
        n = words.length,
        i = -1,
        tags = [],
        data = words.map(function(d) {
          return {
            text: text(d),
            font: font(d),
            style: fontStyle(d),
            weight: fontWeight(d),
            rotate: rotate(d),
            size: ~~fontSize(d),
            padding: padding(d),
            xoff: 0,
            yoff: 0,
            x1: 0,
            y1: 0,
            x0: 0,
            y0: 0,
            hasText: false,
            sprite: null,
            datum: d
          };
        }).sort(function(a, b) { return b.size - a.size; });

    while (++i < n) {
      var d = data[i];
      d.x = (size[0] * (random() + .5)) >> 1;
      d.y = (size[1] * (random() + .5)) >> 1;
      cloudSprite(contextAndRatio, d, data, i);
      if (d.hasText && place(board, d, bounds)) {
        tags.push(d);
        if (bounds) cloudBounds(bounds, d);
        else bounds = [{x: d.x + d.x0, y: d.y + d.y0}, {x: d.x + d.x1, y: d.y + d.y1}];
        // Temporary hack
        d.x -= size[0] >> 1;
        d.y -= size[1] >> 1;
      }
    }

    return tags;
  };

  function getContext(canvas) {
    canvas.width = canvas.height = 1;
    var ratio = Math.sqrt(canvas.getContext("2d").getImageData(0, 0, 1, 1).data.length >> 2);
    canvas.width = (cw << 5) / ratio;
    canvas.height = ch / ratio;

    var context = canvas.getContext("2d");
    context.fillStyle = context.strokeStyle = "red";
    context.textAlign = "center";

    return {context: context, ratio: ratio};
  }

  function place(board, tag, bounds) {
    var startX = tag.x,
        startY = tag.y,
        maxDelta = Math.sqrt(size[0] * size[0] + size[1] * size[1]),
        s = spiral(size),
        dt = random() < .5 ? 1 : -1,
        t = -dt,
        dxdy,
        dx,
        dy;

    while (dxdy = s(t += dt)) {
      dx = ~~dxdy[0];
      dy = ~~dxdy[1];

      if (Math.min(Math.abs(dx), Math.abs(dy)) >= maxDelta) break;

      tag.x = startX + dx;
      tag.y = startY + dy;

      if (tag.x + tag.x0 < 0 || tag.y + tag.y0 < 0 ||
          tag.x + tag.x1 > size[0] || tag.y + tag.y1 > size[1]) continue;
      // TODO only check for collisions within current bounds.
      if (!bounds || !cloudCollide(tag, board, size[0])) {
        if (!bounds || collideRects(tag, bounds)) {
          var sprite = tag.sprite,
              w = tag.width >> 5,
              sw = size[0] >> 5,
              lx = tag.x - (w << 4),
              sx = lx & 0x7f,
              msx = 32 - sx,
              h = tag.y1 - tag.y0,
              x = (tag.y + tag.y0) * sw + (lx >> 5),
              last;
          for (var j = 0; j < h; j++) {
            last = 0;
            for (var i = 0; i <= w; i++) {
              board[x + i] |= (last << msx) | (i < w ? (last = sprite[j * w + i]) >>> sx : 0);
            }
            x += sw;
          }
          tag.sprite = null;
          return true;
        }
      }
    }
    return false;
  }

  cloud.words = function(_) {
    if (arguments.length) {
      words = _;
      return cloud;
    } else {
      return words;
    }
  };

  cloud.size = function(_) {
    if (arguments.length) {
      size = [+_[0], +_[1]];
      return cloud;
    } else {
      return size;
    }
  };

  cloud.font = function(_) {
    if (arguments.length) {
      font = functor(_);
      return cloud;
    } else {
      return font;
    }
  };

  cloud.fontStyle = function(_) {
    if (arguments.length) {
      fontStyle = functor(_);
      return cloud;
    } else {
      return fontStyle;
    }
  };

  cloud.fontWeight = function(_) {
    if (arguments.length) {
      fontWeight = functor(_);
      return cloud;
    } else {
      return fontWeight;
    }
  };

  cloud.rotate = function(_) {
    if (arguments.length) {
      rotate = functor(_);
      return cloud;
    } else {
      return rotate;
    }
  };

  cloud.text = function(_) {
    if (arguments.length) {
      text = functor(_);
      return cloud;
    } else {
      return text;
    }
  };

  cloud.spiral = function(_) {
    if (arguments.length) {
      spiral = spirals[_] || _;
      return cloud;
    } else {
      return spiral;
    }
  };

  cloud.fontSize = function(_) {
    if (arguments.length) {
      fontSize = functor(_);
      return cloud;
    } else {
      return fontSize;
    }
  };

  cloud.padding = function(_) {
    if (arguments.length) {
      padding = functor(_);
      return cloud;
    } else {
      return padding;
    }
  };

  cloud.random = function(_) {
    if (arguments.length) {
      random = _;
      return cloud;
    } else {
      return random;
    }
  };

  return cloud;
});

// Fetches a monochrome sprite bitmap for the specified text.
// Load in batches for speed.
function cloudSprite(contextAndRatio, d, data, di) {
  if (d.sprite) return;
  var c = contextAndRatio.context,
      ratio = contextAndRatio.ratio;

  c.clearRect(0, 0, (cw << 5) / ratio, ch / ratio);
  var x = 0,
      y = 0,
      maxh = 0,
      n = data.length,
      w, w32, h, i, j;
  --di;
  while (++di < n) {
    d = data[di];
    c.save();
    c.font = d.style + " " + d.weight + " " + ~~((d.size + 1) / ratio) + "px " + d.font;
    w = c.measureText(d.text + "m").width * ratio;
    h = d.size << 1;
    if (d.rotate) {
      var sr = Math.sin(d.rotate * cloudRadians),
          cr = Math.cos(d.rotate * cloudRadians),
          wcr = w * cr,
          wsr = w * sr,
          hcr = h * cr,
          hsr = h * sr;
      w = (Math.max(Math.abs(wcr + hsr), Math.abs(wcr - hsr)) + 0x1f) >> 5 << 5;
      h = ~~Math.max(Math.abs(wsr + hcr), Math.abs(wsr - hcr));
    } else {
      w = (w + 0x1f) >> 5 << 5;
    }
    if (h > maxh) maxh = h;
    if (x + w >= (cw << 5)) {
      x = 0;
      y += maxh;
      maxh = 0;
    }
    if (y + h >= ch) break;
    c.translate((x + (w >> 1)) / ratio, (y + (h >> 1)) / ratio);
    if (d.rotate) c.rotate(d.rotate * cloudRadians);
    c.fillText(d.text, 0, 0);
    if (d.padding) {
      c.lineWidth = 2 * d.padding;
      c.strokeText(d.text, 0, 0);
    }
    c.restore();
    d.width = w;
    d.height = h;
    d.xoff = x;
    d.yoff = y;
    d.x1 = w >> 1;
    d.y1 = h >> 1;
    d.x0 = -d.x1;
    d.y0 = -d.y1;
    d.hasText = true;
    x += w;
  }
  var pixels = c.getImageData(0, 0, (cw << 5) / ratio, ch / ratio).data,
      sprite = [];
  while (--di >= 0) {
    d = data[di];
    if (!d.hasText) continue;
    w = d.width;
    w32 = w >> 5;
    h = d.y1 - d.y0;
    // Zero the buffer
    for (i = 0; i < h * w32; i++) sprite[i] = 0;
    x = d.xoff;
    if (x == null) return;
    y = d.yoff;
    var seen = 0,
        seenRow = -1;
    for (j = 0; j < h; j++) {
      for (i = 0; i < w; i++) {
        var k = w32 * j + (i >> 5),
            m = pixels[((y + j) * (cw << 5) + (x + i)) << 2] ? 1 << (31 - (i % 32)) : 0;
        sprite[k] |= m;
        seen |= m;
      }
      if (seen) seenRow = j;
      else {
        d.y0++;
        h--;
        j--;
        y++;
      }
    }
    d.y1 = d.y0 + seenRow;
    d.sprite = sprite.slice(0, (d.y1 - d.y0) * w32);
  }
}

// Use mask-based collision detection.
function cloudCollide(tag, board, sw) {
  sw >>= 5;
  var sprite = tag.sprite,
      w = tag.width >> 5,
      lx = tag.x - (w << 4),
      sx = lx & 0x7f,
      msx = 32 - sx,
      h = tag.y1 - tag.y0,
      x = (tag.y + tag.y0) * sw + (lx >> 5),
      last;
  for (var j = 0; j < h; j++) {
    last = 0;
    for (var i = 0; i <= w; i++) {
      if (((last << msx) | (i < w ? (last = sprite[j * w + i]) >>> sx : 0))
          & board[x + i]) return true;
    }
    x += sw;
  }
  return false;
}

function cloudBounds(bounds, d) {
  var b0 = bounds[0],
      b1 = bounds[1];
  if (d.x + d.x0 < b0.x) b0.x = d.x + d.x0;
  if (d.y + d.y0 < b0.y) b0.y = d.y + d.y0;
  if (d.x + d.x1 > b1.x) b1.x = d.x + d.x1;
  if (d.y + d.y1 > b1.y) b1.y = d.y + d.y1;
}

function collideRects(a, b) {
  return a.x + a.x1 > b[0].x && a.x + a.x0 < b[1].x && a.y + a.y1 > b[0].y && a.y + a.y0 < b[1].y;
}

function archimedeanSpiral(size) {
  var e = size[0] / size[1];
  return function(t) {
    return [e * (t *= .1) * Math.cos(t), t * Math.sin(t)];
  };
}

function rectangularSpiral(size) {
  var dy = 4,
      dx = dy * size[0] / size[1],
      x = 0,
      y = 0;
  return function(t) {
    var sign = t < 0 ? -1 : 1;
    // See triangular numbers: T_n = n * (n + 1) / 2.
    switch ((Math.sqrt(1 + 4 * sign * t) - sign) & 3) {
      case 0:  x += dx; break;
      case 1:  y += dy; break;
      case 2:  x -= dx; break;
      default: y -= dy; break;
    }
    return [x, y];
  };
}

// TODO reuse arrays?
function zeroArray(n) {
  var a = [],
      i = -1;
  while (++i < n) a[i] = 0;
  return a;
}

function functor(d) {
  return typeof d === "function" ? d : function() { return d; };
}

var spirals = {
  archimedean: archimedeanSpiral,
  rectangular: rectangularSpiral
};


/***/ }),

/***/ "./node_modules/vega-wordcloud/src/Wordcloud.js":
/*!******************************************************!*\
  !*** ./node_modules/vega-wordcloud/src/Wordcloud.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Wordcloud; });
/* harmony import */ var _CloudLayout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CloudLayout */ "./node_modules/vega-wordcloud/src/CloudLayout.js");
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var vega_scale__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vega-scale */ "./node_modules/vega-scale/index.js");
/* harmony import */ var vega_statistics__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! vega-statistics */ "./node_modules/vega-statistics/index.js");






var Output = ['x', 'y', 'font', 'fontSize', 'fontStyle', 'fontWeight', 'angle'];

var Params = ['text', 'font', 'rotate', 'fontSize', 'fontStyle', 'fontWeight'];

function Wordcloud(params) {
  vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Transform"].call(this, Object(_CloudLayout__WEBPACK_IMPORTED_MODULE_0__["default"])(), params);
}

Wordcloud.Definition = {
  "type": "Wordcloud",
  "metadata": {"modifies": true},
  "params": [
    { "name": "size", "type": "number", "array": true, "length": 2 },
    { "name": "font", "type": "string", "expr": true, "default": "sans-serif" },
    { "name": "fontStyle", "type": "string", "expr": true, "default": "normal" },
    { "name": "fontWeight", "type": "string", "expr": true, "default": "normal" },
    { "name": "fontSize", "type": "number", "expr": true, "default": 14 },
    { "name": "fontSizeRange", "type": "number", "array": "nullable", "default": [10, 50] },
    { "name": "rotate", "type": "number", "expr": true, "default": 0 },
    { "name": "text", "type": "field" },
    { "name": "spiral", "type": "string", "values": ["archimedean", "rectangular"] },
    { "name": "padding", "type": "number", "expr": true },
    { "name": "as", "type": "string", "array": true, "length": 7, "default": Output }
  ]
};

var prototype = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["inherits"])(Wordcloud, vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Transform"]);

prototype.transform = function(_, pulse) {
  if (_.size && !(_.size[0] && _.size[1])) {
    Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["error"])('Wordcloud size dimensions must be non-zero.');
  }

  function modp(param) {
    var p = _[param];
    return Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["isFunction"])(p) && pulse.modified(p.fields);
  }

  var mod = _.modified();
  if (!(mod || pulse.changed(pulse.ADD_REM) || Params.some(modp))) return;

  var data = pulse.materialize(pulse.SOURCE).source,
      layout = this.value,
      as = _.as || Output,
      fontSize = _.fontSize || 14,
      range;

  Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["isFunction"])(fontSize)
    ? (range = _.fontSizeRange)
    : (fontSize = Object(vega_util__WEBPACK_IMPORTED_MODULE_2__["constant"])(fontSize));

  // create font size scaling function as needed
  if (range) {
    var fsize = fontSize,
        sizeScale = Object(vega_scale__WEBPACK_IMPORTED_MODULE_3__["scale"])('sqrt')()
          .domain(extent(fsize, data))
          .range(range);
    fontSize = function(x) { return sizeScale(fsize(x)); };
  }

  data.forEach(function(t) {
    t[as[0]] = NaN;
    t[as[1]] = NaN;
    t[as[3]] = 0;
  });

  // configure layout
  var words = layout
    .words(data)
    .text(_.text)
    .size(_.size || [500, 500])
    .padding(_.padding || 1)
    .spiral(_.spiral || 'archimedean')
    .rotate(_.rotate || 0)
    .font(_.font || 'sans-serif')
    .fontStyle(_.fontStyle || 'normal')
    .fontWeight(_.fontWeight || 'normal')
    .fontSize(fontSize)
    .random(vega_statistics__WEBPACK_IMPORTED_MODULE_4__["random"])
    .layout();

  var size = layout.size(),
      dx = size[0] >> 1,
      dy = size[1] >> 1,
      i = 0,
      n = words.length,
      w, t;

  for (; i<n; ++i) {
    w = words[i];
    t = w.datum;
    t[as[0]] = w.x + dx;
    t[as[1]] = w.y + dy;
    t[as[2]] = w.font;
    t[as[3]] = w.size;
    t[as[4]] = w.style;
    t[as[5]] = w.weight;
    t[as[6]] = w.rotate;
  }

  return pulse.reflow(mod).modifies(as);
};

function extent(field, data) {
  var min = +Infinity,
      max = -Infinity,
      i = 0,
      n = data.length,
      v;

  for (; i<n; ++i) {
    v = field(data[i]);
    if (v < min) min = v;
    if (v > max) max = v;
  }

  return [min, max];
}


/***/ }),

/***/ "./node_modules/vega/index.js":
/*!************************************!*\
  !*** ./node_modules/vega/index.js ***!
  \************************************/
/*! exports provided: version, Dataflow, EventStream, Parameters, Pulse, MultiPulse, Operator, Transform, changeset, ingest, isTuple, definition, transform, transforms, tupleid, scale, scheme, interpolate, interpolateColors, interpolateRange, timeInterval, quantizeInterpolator, projection, View, expressionFunction, formatLocale, timeFormatLocale, parse, runtime, runtimeContext, bin, bootstrapCI, quartiles, random, setRandom, randomLCG, randomInteger, randomKDE, randomMixture, randomNormal, randomUniform, regressionLinear, regressionLog, regressionExp, regressionPow, regressionQuad, regressionPoly, regressionLoess, sampleCurve, accessor, accessorName, accessorFields, id, identity, zero, one, truthy, falsy, logger, None, Error, Warn, Info, Debug, panLinear, panLog, panPow, panSymlog, zoomLinear, zoomLog, zoomPow, zoomSymlog, quarter, utcquarter, array, clampRange, compare, constant, debounce, error, extend, extent, extentIndex, fastmap, field, flush, inherits, inrange, isArray, isBoolean, isDate, isFunction, isNumber, isObject, isRegExp, isString, key, lerp, merge, pad, peek, repeat, span, splitAccessPath, stringValue, toBoolean, toDate, toNumber, toString, toSet, truncate, visitArray, loader, read, inferType, inferTypes, typeParsers, format, formats, responseType, Bounds, Gradient, GroupItem, ResourceLoader, Item, Scenegraph, Handler, Renderer, CanvasHandler, CanvasRenderer, SVGHandler, SVGRenderer, SVGStringRenderer, RenderType, renderModule, intersect, Marks, boundClip, boundContext, boundStroke, boundItem, boundMark, pathCurves, pathSymbols, pathRectangle, pathTrail, pathParse, pathRender, point, domCreate, domFind, domChild, domClear, openTag, closeTag, font, fontFamily, fontSize, textMetrics, resetSVGClipId, sceneEqual, pathEqual, sceneToJSON, sceneFromJSON, intersectPath, intersectPoint, intersectRule, intersectBoxLine, sceneZOrder, sceneVisit, scenePickVisit */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var vega_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega-util */ "./node_modules/vega-util/index.js");
/* harmony import */ var vega_dataflow__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-dataflow */ "./node_modules/vega-dataflow/index.js");
/* harmony import */ var vega_transforms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-transforms */ "./node_modules/vega-transforms/index.js");
/* harmony import */ var vega_view_transforms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vega-view-transforms */ "./node_modules/vega-view-transforms/index.js");
/* harmony import */ var vega_encode__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! vega-encode */ "./node_modules/vega-encode/index.js");
/* harmony import */ var vega_geo__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! vega-geo */ "./node_modules/vega-geo/index.js");
/* harmony import */ var vega_force__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! vega-force */ "./node_modules/vega-force/index.js");
/* harmony import */ var vega_hierarchy__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! vega-hierarchy */ "./node_modules/vega-hierarchy/index.js");
/* harmony import */ var vega_voronoi__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! vega-voronoi */ "./node_modules/vega-voronoi/index.js");
/* harmony import */ var vega_wordcloud__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! vega-wordcloud */ "./node_modules/vega-wordcloud/index.js");
/* harmony import */ var vega_crossfilter__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! vega-crossfilter */ "./node_modules/vega-crossfilter/index.js");
/* harmony import */ var _package_json__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./package.json */ "./node_modules/vega/package.json");
var _package_json__WEBPACK_IMPORTED_MODULE_11___namespace = /*#__PURE__*/__webpack_require__.t(/*! ./package.json */ "./node_modules/vega/package.json", 1);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "version", function() { return _package_json__WEBPACK_IMPORTED_MODULE_11__["version"]; });

/* harmony import */ var vega_statistics__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! vega-statistics */ "./node_modules/vega-statistics/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bin", function() { return vega_statistics__WEBPACK_IMPORTED_MODULE_12__["bin"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bootstrapCI", function() { return vega_statistics__WEBPACK_IMPORTED_MODULE_12__["bootstrapCI"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "quartiles", function() { return vega_statistics__WEBPACK_IMPORTED_MODULE_12__["quartiles"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "random", function() { return vega_statistics__WEBPACK_IMPORTED_MODULE_12__["random"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setRandom", function() { return vega_statistics__WEBPACK_IMPORTED_MODULE_12__["setRandom"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "randomLCG", function() { return vega_statistics__WEBPACK_IMPORTED_MODULE_12__["randomLCG"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "randomInteger", function() { return vega_statistics__WEBPACK_IMPORTED_MODULE_12__["randomInteger"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "randomKDE", function() { return vega_statistics__WEBPACK_IMPORTED_MODULE_12__["randomKDE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "randomMixture", function() { return vega_statistics__WEBPACK_IMPORTED_MODULE_12__["randomMixture"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "randomNormal", function() { return vega_statistics__WEBPACK_IMPORTED_MODULE_12__["randomNormal"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "randomUniform", function() { return vega_statistics__WEBPACK_IMPORTED_MODULE_12__["randomUniform"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "regressionLinear", function() { return vega_statistics__WEBPACK_IMPORTED_MODULE_12__["regressionLinear"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "regressionLog", function() { return vega_statistics__WEBPACK_IMPORTED_MODULE_12__["regressionLog"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "regressionExp", function() { return vega_statistics__WEBPACK_IMPORTED_MODULE_12__["regressionExp"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "regressionPow", function() { return vega_statistics__WEBPACK_IMPORTED_MODULE_12__["regressionPow"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "regressionQuad", function() { return vega_statistics__WEBPACK_IMPORTED_MODULE_12__["regressionQuad"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "regressionPoly", function() { return vega_statistics__WEBPACK_IMPORTED_MODULE_12__["regressionPoly"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "regressionLoess", function() { return vega_statistics__WEBPACK_IMPORTED_MODULE_12__["regressionLoess"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sampleCurve", function() { return vega_statistics__WEBPACK_IMPORTED_MODULE_12__["sampleCurve"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "accessor", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["accessor"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "accessorName", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["accessorName"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "accessorFields", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["accessorFields"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "id", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["id"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "identity", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["identity"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "zero", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["zero"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "one", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["one"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "truthy", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["truthy"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "falsy", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["falsy"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "logger", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["logger"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "None", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["None"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Error", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["Error"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Warn", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["Warn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Info", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["Info"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Debug", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["Debug"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "panLinear", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["panLinear"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "panLog", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["panLog"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "panPow", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["panPow"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "panSymlog", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["panSymlog"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "zoomLinear", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["zoomLinear"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "zoomLog", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["zoomLog"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "zoomPow", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["zoomPow"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "zoomSymlog", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["zoomSymlog"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "quarter", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["quarter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utcquarter", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["utcquarter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "array", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["array"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "clampRange", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["clampRange"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "compare", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["compare"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "constant", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["constant"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "debounce", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["debounce"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "error", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["error"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["extend"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "extent", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["extent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "extentIndex", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["extentIndex"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "fastmap", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["fastmap"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "field", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["field"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "flush", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["flush"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "inherits", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["inherits"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "inrange", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["inrange"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isArray", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["isArray"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isBoolean", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["isBoolean"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isDate", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["isDate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isFunction", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["isFunction"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isNumber", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["isNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isObject", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["isObject"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isRegExp", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["isRegExp"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isString", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["isString"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "key", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["key"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "lerp", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["lerp"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "merge", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["merge"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pad", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["pad"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "peek", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["peek"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "repeat", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["repeat"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "span", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["span"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "splitAccessPath", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["splitAccessPath"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stringValue", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["stringValue"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toBoolean", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["toBoolean"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toDate", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["toDate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toNumber", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["toNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toString", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["toString"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toSet", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["toSet"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "truncate", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["truncate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "visitArray", function() { return vega_util__WEBPACK_IMPORTED_MODULE_0__["visitArray"]; });

/* harmony import */ var vega_loader__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! vega-loader */ "./node_modules/vega-loader/index.browser.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "loader", function() { return vega_loader__WEBPACK_IMPORTED_MODULE_13__["loader"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "read", function() { return vega_loader__WEBPACK_IMPORTED_MODULE_13__["read"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "inferType", function() { return vega_loader__WEBPACK_IMPORTED_MODULE_13__["inferType"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "inferTypes", function() { return vega_loader__WEBPACK_IMPORTED_MODULE_13__["inferTypes"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "typeParsers", function() { return vega_loader__WEBPACK_IMPORTED_MODULE_13__["typeParsers"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "format", function() { return vega_loader__WEBPACK_IMPORTED_MODULE_13__["format"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "formats", function() { return vega_loader__WEBPACK_IMPORTED_MODULE_13__["formats"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "responseType", function() { return vega_loader__WEBPACK_IMPORTED_MODULE_13__["responseType"]; });

/* harmony import */ var vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! vega-scenegraph */ "./node_modules/vega-scenegraph/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Bounds", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["Bounds"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Gradient", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["Gradient"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GroupItem", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["GroupItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ResourceLoader", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["ResourceLoader"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Item", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["Item"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Scenegraph", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["Scenegraph"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Handler", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["Handler"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Renderer", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["Renderer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CanvasHandler", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["CanvasHandler"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CanvasRenderer", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["CanvasRenderer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SVGHandler", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["SVGHandler"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SVGRenderer", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["SVGRenderer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SVGStringRenderer", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["SVGStringRenderer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RenderType", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["RenderType"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "renderModule", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["renderModule"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "intersect", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["intersect"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Marks", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["Marks"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "boundClip", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["boundClip"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "boundContext", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["boundContext"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "boundStroke", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["boundStroke"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "boundItem", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["boundItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "boundMark", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["boundMark"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pathCurves", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["pathCurves"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pathSymbols", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["pathSymbols"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pathRectangle", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["pathRectangle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pathTrail", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["pathTrail"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pathParse", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["pathParse"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pathRender", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["pathRender"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "point", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["point"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "domCreate", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["domCreate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "domFind", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["domFind"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "domChild", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["domChild"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "domClear", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["domClear"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "openTag", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["openTag"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "closeTag", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["closeTag"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "font", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["font"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "fontFamily", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["fontFamily"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "fontSize", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["fontSize"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "textMetrics", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["textMetrics"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "resetSVGClipId", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["resetSVGClipId"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sceneEqual", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["sceneEqual"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pathEqual", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["pathEqual"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sceneToJSON", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["sceneToJSON"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sceneFromJSON", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["sceneFromJSON"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "intersectPath", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["intersectPath"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "intersectPoint", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["intersectPoint"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "intersectRule", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["intersectRule"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "intersectBoxLine", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["intersectBoxLine"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sceneZOrder", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["sceneZOrder"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sceneVisit", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["sceneVisit"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scenePickVisit", function() { return vega_scenegraph__WEBPACK_IMPORTED_MODULE_14__["scenePickVisit"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Dataflow", function() { return vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Dataflow"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EventStream", function() { return vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["EventStream"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Parameters", function() { return vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Parameters"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Pulse", function() { return vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Pulse"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MultiPulse", function() { return vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["MultiPulse"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Operator", function() { return vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Operator"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Transform", function() { return vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["Transform"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "changeset", function() { return vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["changeset"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ingest", function() { return vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["ingest"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isTuple", function() { return vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["isTuple"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "definition", function() { return vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["definition"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "transform", function() { return vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["transform"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "transforms", function() { return vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["transforms"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tupleid", function() { return vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["tupleid"]; });

/* harmony import */ var vega_scale__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! vega-scale */ "./node_modules/vega-scale/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scale", function() { return vega_scale__WEBPACK_IMPORTED_MODULE_15__["scale"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return vega_scale__WEBPACK_IMPORTED_MODULE_15__["scheme"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolate", function() { return vega_scale__WEBPACK_IMPORTED_MODULE_15__["interpolate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateColors", function() { return vega_scale__WEBPACK_IMPORTED_MODULE_15__["interpolateColors"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateRange", function() { return vega_scale__WEBPACK_IMPORTED_MODULE_15__["interpolateRange"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeInterval", function() { return vega_scale__WEBPACK_IMPORTED_MODULE_15__["timeInterval"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "quantizeInterpolator", function() { return vega_scale__WEBPACK_IMPORTED_MODULE_15__["quantizeInterpolator"]; });

/* harmony import */ var vega_projection__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! vega-projection */ "./node_modules/vega-projection/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "projection", function() { return vega_projection__WEBPACK_IMPORTED_MODULE_16__["projection"]; });

/* harmony import */ var vega_view__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! vega-view */ "./node_modules/vega-view/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "View", function() { return vega_view__WEBPACK_IMPORTED_MODULE_17__["View"]; });

/* harmony import */ var vega_functions__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! vega-functions */ "./node_modules/vega-functions/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "expressionFunction", function() { return vega_functions__WEBPACK_IMPORTED_MODULE_18__["expressionFunction"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "formatLocale", function() { return vega_functions__WEBPACK_IMPORTED_MODULE_18__["formatLocale"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeFormatLocale", function() { return vega_functions__WEBPACK_IMPORTED_MODULE_18__["timeFormatLocale"]; });

/* harmony import */ var vega_parser__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! vega-parser */ "./node_modules/vega-parser/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "parse", function() { return vega_parser__WEBPACK_IMPORTED_MODULE_19__["parse"]; });

/* harmony import */ var vega_runtime__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! vega-runtime */ "./node_modules/vega-runtime/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "runtime", function() { return vega_runtime__WEBPACK_IMPORTED_MODULE_20__["parse"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "runtimeContext", function() { return vega_runtime__WEBPACK_IMPORTED_MODULE_20__["context"]; });

// -- Transforms -----












Object(vega_util__WEBPACK_IMPORTED_MODULE_0__["extend"])(vega_dataflow__WEBPACK_IMPORTED_MODULE_1__["transforms"], vega_transforms__WEBPACK_IMPORTED_MODULE_2__, vega_view_transforms__WEBPACK_IMPORTED_MODULE_3__, vega_encode__WEBPACK_IMPORTED_MODULE_4__, vega_geo__WEBPACK_IMPORTED_MODULE_5__, vega_force__WEBPACK_IMPORTED_MODULE_6__, vega_hierarchy__WEBPACK_IMPORTED_MODULE_7__, vega_voronoi__WEBPACK_IMPORTED_MODULE_8__, vega_wordcloud__WEBPACK_IMPORTED_MODULE_9__, vega_crossfilter__WEBPACK_IMPORTED_MODULE_10__);


// -- Exports -----


























/***/ }),

/***/ "./node_modules/vega/package.json":
/*!****************************************!*\
  !*** ./node_modules/vega/package.json ***!
  \****************************************/
/*! exports provided: _args, _from, _id, _inBundle, _integrity, _location, _phantomChildren, _requested, _requiredBy, _resolved, _spec, _where, author, bugs, dependencies, description, devDependencies, gitHead, homepage, jsdelivr, keywords, license, main, module, name, repository, scripts, types, unpkg, version, default */
/***/ (function(module) {

module.exports = JSON.parse("{\"_args\":[[\"vega@5.3.2\",\"C:\\\\Users\\\\au629923\\\\Repositories\\\\colorbrewer-fork\"]],\"_from\":\"vega@5.3.2\",\"_id\":\"vega@5.3.2\",\"_inBundle\":false,\"_integrity\":\"sha512-dmY7hHQDlBSqiQKmcAvUe56bD+MuwGLGkFw2tLLNjBe5c2Hl8oZt/DFzyyIizvS+IC2wqlBnIYSwhrVK3bRXwQ==\",\"_location\":\"/vega\",\"_phantomChildren\":{},\"_requested\":{\"type\":\"version\",\"registry\":true,\"raw\":\"vega@5.3.2\",\"name\":\"vega\",\"escapedName\":\"vega\",\"rawSpec\":\"5.3.2\",\"saveSpec\":null,\"fetchSpec\":\"5.3.2\"},\"_requiredBy\":[\"/remodel-vis\"],\"_resolved\":\"https://registry.npmjs.org/vega/-/vega-5.3.2.tgz\",\"_spec\":\"5.3.2\",\"_where\":\"C:\\\\Users\\\\au629923\\\\Repositories\\\\colorbrewer-fork\",\"author\":{\"name\":\"UW Interactive Data Lab\",\"url\":\"http://idl.cs.washington.edu\"},\"bugs\":{\"url\":\"https://github.com/vega/vega/issues\"},\"dependencies\":{\"vega-crossfilter\":\"^4.0.1\",\"vega-dataflow\":\"^5.2.1\",\"vega-encode\":\"^4.2.1\",\"vega-event-selector\":\"^2.0.0\",\"vega-expression\":\"^2.6.0\",\"vega-force\":\"^4.0.1\",\"vega-functions\":\"^5.2.0\",\"vega-geo\":\"^4.0.1\",\"vega-hierarchy\":\"^4.0.1\",\"vega-loader\":\"^4.0.0\",\"vega-parser\":\"^5.6.2\",\"vega-projection\":\"^1.2.1\",\"vega-runtime\":\"^5.0.1\",\"vega-scale\":\"^4.1.1\",\"vega-scenegraph\":\"^4.1.0\",\"vega-statistics\":\"^1.3.1\",\"vega-transforms\":\"^4.0.2\",\"vega-typings\":\"^0.6.2\",\"vega-util\":\"^1.10.0\",\"vega-view\":\"^5.2.1\",\"vega-view-transforms\":\"^4.3.0\",\"vega-voronoi\":\"^4.0.1\",\"vega-wordcloud\":\"^4.0.2\"},\"description\":\"The Vega visualization grammar.\",\"devDependencies\":{\"vega-schema\":\"*\"},\"gitHead\":\"bcea8011b193cfed59e5fa45cc2c00fd8cb9f588\",\"homepage\":\"https://github.com/vega/vega#readme\",\"jsdelivr\":\"build/vega.min.js\",\"keywords\":[\"vega\",\"visualization\",\"interaction\",\"dataflow\",\"library\",\"data\",\"d3\"],\"license\":\"BSD-3-Clause\",\"main\":\"build/vega-node.js\",\"module\":\"index\",\"name\":\"vega\",\"repository\":{\"type\":\"git\",\"url\":\"git+https://github.com/vega/vega.git\"},\"scripts\":{\"build\":\"yarn rollup && node rollup -e && node rollup -m\",\"postbuild\":\"terser build/vega.js -c -m -o build/vega.min.js && terser build/vega-core.js -c -m -o build/vega-core.min.js\",\"postpublish\":\"git push && git push --tags && ./schema-deploy.sh\",\"prebuild\":\"rimraf build && mkdirp build\",\"prepublishOnly\":\"yarn test && yarn build\",\"pretest\":\"yarn prebuild && yarn rollup\",\"rollup\":\"node rollup-node && node rollup && node schema-copy\",\"test\":\"TZ=America/Los_Angeles tape 'test/**/*-test.js' && eslint index.js test\"},\"types\":\"index.d.ts\",\"unpkg\":\"build/vega.min.js\",\"version\":\"5.3.2\"}");

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ })

/******/ });
//# sourceMappingURL=bundle.js.map